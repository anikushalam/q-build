import{r as u,aR as v,aS as w,aT as R,aU as U,g as V,c as A,aV as N,aW as C,h as E,A as I}from"./index-0ca76035.js";const M=()=>{const[t,o]=u.useState({email:"",username:""}),[d,c]=u.useState({username:"",email:""}),[g]=v(),[f]=w(),[h]=R(),[y]=U(),m=V(),P=A(),{exitsingUsernameVerify:a,exitsingUsernameVerifyRefetch:p}=N({username:t.username,skip:!t.username}),{exitsingEmailVerify:i,exitsingEmailVerifyRefetch:b}=C({email:t.email,skip:!t.email});return u.useEffect(()=>{t.email&&b(),t.username&&p()},[t.email,t.username]),u.useEffect(()=>{a&&c(s=>{var e;return{...s,username:(e=a==null?void 0:a.username)!=null&&e._id?"invalid":"valid"}}),i&&c(s=>{var e;return{...s,email:(e=i==null?void 0:i.valid_flag)!=null&&e.emailId?"invalid":"valid"}})},[a,i]),{mobileRegister:async s=>{try{const{data:e}=await g({userPhoneNumber:s.insPhoneNumber,status:s.status});if(e.message)return{phoneNumber:e==null?void 0:e.userPhoneNumber}}catch{return{msg:"Time out of request..."}}},numberVerification:async s=>{try{const{data:e}=await f({userOtpCode:s.otpCode,userPhoneNumber:s.phoneNumber});if(e.message==="Invalid OTP")return{msg:"Invalid OTP",run:!0};if(e!=null&&e.userStatus)return{mobileStatus:e==null?void 0:e.userStatus,data:e}}catch{return{msg:"Time out of request..."}}},registerAccount:async s=>{var e;try{const n=new FormData;for(let l in s)n.append(l,s[l]);const{data:r}=await h({userPhoneNumber:s.id,profileCreation:n});if(r.message==="Username already exists")return{msg:"Username already exists",notify:!0};if(r.user)return{_id:(e=r.user)==null?void 0:e._id}}catch{return{msg:"Time out of request..."}}},createPassword:async s=>{var e,n;try{const{data:r}=await y({id:s.id,password:{userPassword:s.insPassword,userRePassword:s.insRePassword}});r.login&&(m(E.loginQuery({login:!0,token:r.token,id:(e=r.user)==null?void 0:e._id,status:!0,loggedinAs:"user",username:r.user.username})),m(I.addInstituteId({id:r.user?(n=r.user)==null?void 0:n._id:"",loggedinAs:"user"})),P(`/q/${r.user.username}/feed`))}catch{return{msg:"Time out or wrong request..."}}},verifyUsername:async s=>{o(()=>({email:"",username:s}))},verifyEmail:async s=>{o(()=>({email:s,username:""}))},validInput:d}};export{M as u};
