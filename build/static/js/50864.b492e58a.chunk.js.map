{"version":3,"file":"static/js/50864.b492e58a.chunk.js","mappings":"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","sources":["Loader/QvipleLoading.jsx","webpack://mithkal-qviple/./src/Notification/InsNotification/Components/Stats/GrQuery/GrQuery.module.css?81c2","Notification/InsNotification/Components/Stats/GrQuery/StudentQueryCard.jsx","Notification/InsNotification/Components/Stats/GrQuery/GrQuery.jsx","StaffTab/components/DividerTab/MainContent/StaffAProfile/BorderBottom.jsx","services/staff_department/activity_query_mutation_function.js","services/staff_department/activityApi.js","hooks/member_tab/activity-api.js","webpack://mithkal-qviple/./src/StaffTab/components/DividerTab/MainContent/StaffAProfile/StaffProfile.module.css?3b3d","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\nconst QvipleLoading = ({ status }) => {\n  return (\n    <div className={styles.loaderGif}>\n      <img\n        src={\n          status === \"white\"\n            ? \"/images/loader/loader-bg-white.gif\"\n            : \"/images/loader/loader.gif\"\n        }\n        alt=\"for load an items\"\n      />\n    </div>\n  );\n};\n\nexport default QvipleLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"grquery_container\":\"GrQuery_grquery_container__OxXAR\",\"with_search\":\"GrQuery_with_search__GL3dh\",\"query_card\":\"GrQuery_query_card__mD8nJ\",\"query_card_head\":\"GrQuery_query_card_head__1Zhr8\",\"query_card_text\":\"GrQuery_query_card_text__xOfj5\",\"query_card_content\":\"GrQuery_query_card_content__SpWhF\",\"button_container\":\"GrQuery_button_container__dlxWH\",\"reject_btn\":\"GrQuery_reject_btn__tiUEx\",\"approve_btn\":\"GrQuery_approve_btn__GMn3H\",\"query_date\":\"GrQuery_query_date__bWPkc\"};","import React, { useState } from \"react\";\nimport style from \"./GrQuery.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { imageShowUrl } from \"../../../../../services/BaseUrl\";\nimport moment from \"moment\";\nimport { useInstituteGRNotificationAction } from \"../../../../../hooks/member_tab/activity-api\";\nimport QLoader from \"../../../../../Loader/QLoader\";\nconst StudentQueryCard = ({ query, onRefetch }) => {\n  const { t } = useTranslation();\n  const [disabled, setDisabled] = useState(false);\n\n  const [instituteGRNotificationAction] = useInstituteGRNotificationAction();\n\n  const onAction = (type) => {\n    if (query?._id && type) {\n      setDisabled((pre) => !pre);\n      instituteGRNotificationAction({\n        qid: query?._id,\n        status: `${type}`,\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n        })\n        .catch({});\n    }\n  };\n  return (\n    <>\n      <div className={style.query_card}>\n        <div className={style.query_card_head}>\n          <img\n            src={\n              query?.query_by_student?.studentProfilePhoto\n                ? `${imageShowUrl}/${query?.query_by_student?.studentProfilePhoto}`\n                : \"/images/member_tab/class/default_avatar.svg\"\n            }\n            alt=\"\"\n          />\n          <div className={style.query_card_text}>\n            <h6>{`${query?.query_by_student?.studentFirstName ?? \"\"} ${\n              query?.query_by_student?.studentMiddleName ?? \"\"\n            } ${query?.query_by_student?.studentLastName ?? \"\"}`}</h6>\n            <h6>\n              <span\n                style={{\n                  fontWeight: \"400\",\n                }}\n              >\n                {t(\"gr_number\")}\n              </span>{\" \"}\n              {query?.query_gr ?? \"\"}\n            </h6>\n          </div>\n        </div>\n        <p className={style.query_card_content}>{query?.query_content ?? \"\"}</p>\n\n        {query?.query_status === \"Pending\" ? (\n          <div className={style.button_container}>\n            <button\n              className={style.reject_btn}\n              onClick={() => onAction(\"Rejected\")}\n            >\n              {t(\"reject\")}\n            </button>\n            <button\n              className={style.approve_btn}\n              onClick={() => onAction(\"Approved\")}\n            >\n              {t(\"approve\")}\n            </button>\n          </div>\n        ) : null}\n\n        <div className={style.query_date}>\n          <p>{moment(query?.created_at).format(\"DD MMMM, yyyy\")}</p>\n          <p>{moment(query?.created_at).format(\"LT\")}</p>\n        </div>\n      </div>\n      {disabled && <QLoader />}\n    </>\n  );\n};\n\nexport default StudentQueryCard;\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./GrQuery.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useInstituteAllGRNotification } from \"../../../../../hooks/member_tab/activity-api\";\nimport { useSelector } from \"react-redux\";\nimport QvipleLoading from \"../../../../../Loader/QvipleLoading\";\nimport BorderBottom from \"../../../../../StaffTab/components/DividerTab/MainContent/StaffAProfile/BorderBottom\";\nimport StudentQueryCard from \"./StudentQueryCard\";\nconst GrQuery = () => {\n  const { t } = useTranslation();\n  const id = useSelector((state) => state.idChange.id);\n  const [ref, inView] = useInView();\n  const [page, setPage] = useState(1);\n  const [state, setState] = useState(true);\n  const [showingDataLoading, setShowingDataLoading] = useState(true);\n  const [grList, setGrList] = useState([]);\n  const [refetchStatus, setRefetchStatus] = useState(false);\n  const { instituteAllGRNotification, instituteAllGRNotificationRefetch } =\n    useInstituteAllGRNotification({\n      data: {\n        id: id,\n        page: page,\n        limit: 10,\n      },\n      skip: !id,\n    });\n  useEffect(() => {\n    if (id) {\n      setShowingDataLoading(true);\n      instituteAllGRNotificationRefetch();\n    }\n  }, [id, page, instituteAllGRNotificationRefetch]);\n\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  useEffect(() => {\n    if (refetchStatus) {\n      setGrList(instituteAllGRNotification?.all_query);\n      setShowingDataLoading(false);\n      setRefetchStatus(false);\n    } else {\n      if (instituteAllGRNotification?.all_query) {\n        setGrList((prevState) =>\n          [\n            ...new Set(\n              [...prevState, ...instituteAllGRNotification?.all_query]?.map(\n                JSON.stringify\n              )\n            ),\n          ]?.map(JSON.parse)\n        );\n        setShowingDataLoading(false);\n      } else if (instituteAllGRNotification?.all_query?.length === 0)\n        setShowingDataLoading(false);\n      else {\n      }\n    }\n    if (instituteAllGRNotification?.all_query?.length === 10) setState(true);\n    else setState(false);\n  }, [instituteAllGRNotification?.all_query]);\n\n  const onRefetchWhenCreate = () => {\n    setPage(1);\n    setRefetchStatus(true);\n    setShowingDataLoading(true);\n    instituteAllGRNotificationRefetch();\n  };\n\n  return (\n    <div className={style.grquery_container}>\n      <div className={style.with_search}>\n        <h6>{t(\"gr_internal_query\")}</h6>\n      </div>\n\n      <BorderBottom\n        customStyle={{\n          marginTop: \"0.5rem\",\n          marginBottom: \"0.6rem\",\n          width: \"100%\",\n        }}\n      />\n      {grList?.map((query, index) =>\n        grList?.length === index + 1 ? (\n          <div ref={ref} key={query?._id}>\n            <StudentQueryCard query={query} onRefetch={onRefetchWhenCreate} />\n          </div>\n        ) : (\n          <StudentQueryCard\n            query={query}\n            key={query?._id}\n            onRefetch={onRefetchWhenCreate}\n          />\n        )\n      )}\n      {showingDataLoading && <QvipleLoading status=\"white\" />}\n    </div>\n  );\n};\n\nexport default GrQuery;\n","import React from \"react\";\nimport style from \"./StaffProfile.module.css\";\n\nconst BorderBottom = ({ customStyle }) => {\n  return <hr className={style.universal_hr} style={{ ...customStyle }} />;\n};\n\nexport default BorderBottom;\n","const baseUrl = \"/api/v1\";\nconst activityUrl = \"/api/v1/user\";\nconst electionUrl = \"/api/v1/election/event\";\n\nexport const instituteAllNotificationFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${baseUrl}/ins/dashboard/${data.id}/notify?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const userAllNotificationFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${baseUrl}/user/dashboard/${data.id}/notify?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const activityFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${activityUrl}/${data.id}/activity?page=${data.page}&limit=${\n        data.limit\n      }&category=${data?.category ?? \"\"}`,\n  });\n};\n\nexport const activityNotifiationCountFunction = (builder) => {\n  return builder.query({\n    query: (id) => `${activityUrl}/${id}/activity/total/notify`,\n  });\n};\n\nexport const activityMarkViewFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${activityUrl}/${data.id}/mark/viewed?type=${data.type}`,\n      method: method,\n    }),\n  });\n};\n\nexport const activityMarkAsReadFunction = (builder, method) => {\n  return builder.mutation({\n    query: (nid) => ({\n      url: `${activityUrl}/read/notify/user/${nid}`,\n      method: method,\n    }),\n  });\n};\n\nexport const activityAppliedFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${electionUrl}/${data.eid}/apply/${data.sid}`,\n      method: `${method}`,\n      body: data.appliedElection,\n    }),\n  });\n};\n\nexport const activityElectionVoteFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${electionUrl}/${data.eid}/status/${data.apid}/candidate/${data.sid}/vote/${data.aid}`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const activitySupportMemberFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${electionUrl}/${data.did}/one/institute?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n  });\n};\n\n// == for gr number edit\nexport const instituteAllGRNotificationFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${baseUrl}/extra/all/${data.id}/query?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const instituteGRNotificationActionFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${baseUrl}/extra/status/${data.qid}/query?status=${data.status}`,\n      method: `${method}`,\n    }),\n  });\n};\n\n// for student message\n\nexport const getNotificationAllStudentMessageFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${baseUrl}/user/${data.uid}/student/message?page=${data.page}&limit=${data.limit}`,\n  });\n};\n","import { patchMethod, postMethod } from \"../BaseUrl\";\nimport {\n  instituteAllNotificationFunction,\n  userAllNotificationFunction,\n  activityFunction,\n  activityAppliedFunction,\n  activityElectionVoteFunction,\n  activitySupportMemberFunction,\n  activityNotifiationCountFunction,\n  activityMarkViewFunction,\n  activityMarkAsReadFunction,\n  instituteAllGRNotificationFunction,\n  instituteGRNotificationActionFunction,\n  getNotificationAllStudentMessageFunction,\n} from \"./activity_query_mutation_function\";\nimport { activityDynamicApi } from \"./activityDynamicApi\";\n\nexport const activityApi = activityDynamicApi.injectEndpoints({\n  endpoints: (builder) => ({\n    instituteAllNotification: instituteAllNotificationFunction(builder),\n    userAllNotification: userAllNotificationFunction(builder),\n    allActivity: activityFunction(builder),\n    activityNotifiationCount: activityNotifiationCountFunction(builder),\n    activityMarkView: activityMarkViewFunction(builder, patchMethod),\n    activityMarkAsRead: activityMarkAsReadFunction(builder, patchMethod),\n    activityElectionApplied: activityAppliedFunction(builder, postMethod),\n    activityElectionVote: activityElectionVoteFunction(builder, patchMethod),\n    activitySupportMember: activitySupportMemberFunction(builder),\n    instituteAllGRNotification: instituteAllGRNotificationFunction(builder),\n    instituteGRNotificationAction: instituteGRNotificationActionFunction(\n      builder,\n      patchMethod\n    ),\n    getNotificationAllStudentMessage:\n      getNotificationAllStudentMessageFunction(builder),\n  }),\n});\n\nexport const {\n  useInstituteAllNotificationQuery,\n  useUserAllNotificationQuery,\n  useAllActivityQuery,\n  useActivityNotifiationCountQuery,\n  useActivityMarkViewMutation,\n  useActivityMarkAsReadMutation,\n  useActivityElectionAppliedMutation,\n  useActivityElectionVoteMutation,\n  useActivitySupportMemberQuery,\n  useInstituteAllGRNotificationQuery,\n  useInstituteGRNotificationActionMutation,\n  useGetNotificationAllStudentMessageQuery,\n} = activityApi;\n","import {\n  useInstituteAllNotificationQuery,\n  useUserAllNotificationQuery,\n  useAllActivityQuery,\n  useActivityNotifiationCountQuery,\n  useActivityMarkViewMutation,\n  useActivityMarkAsReadMutation,\n  useActivityElectionAppliedMutation,\n  useActivityElectionVoteMutation,\n  useActivitySupportMemberQuery,\n  useInstituteAllGRNotificationQuery,\n  useInstituteGRNotificationActionMutation,\n  useGetNotificationAllStudentMessageQuery,\n} from \"../../services/staff_department/activityApi\";\n\nexport const useInstituteAllNotification = (args) => {\n  const {\n    data: instituteAllNotification,\n    refetch: instituteAllNotificationRefetch,\n  } = useInstituteAllNotificationQuery(args.data, { skip: args.skip });\n  return { instituteAllNotification, instituteAllNotificationRefetch };\n};\n\nexport const useUserAllNotification = (args) => {\n  const { data: userAllNotification, refetch: userAllNotificationRefetch } =\n    useUserAllNotificationQuery(args.data, { skip: args.skip });\n  return { userAllNotification, userAllNotificationRefetch };\n};\n\nexport const useAllActivityList = (args) => {\n  const { data: allActivityList, refetch: allActivityListRefetch } =\n    useAllActivityQuery(args.data, { skip: args.skip });\n  return { allActivityList, allActivityListRefetch };\n};\n\nexport const useActivityNotifiationCount = (args) => {\n  const {\n    data: activityNotifiationCount,\n    refetch: activityNotifiationCountRefetch,\n  } = useActivityNotifiationCountQuery(args.id, { skip: args.skip });\n  return { activityNotifiationCount, activityNotifiationCountRefetch };\n};\n\nexport const useActivityMarkView = () => {\n  const [activityMarkView] = useActivityMarkViewMutation();\n  return [activityMarkView];\n};\n\nexport const useActivityMarkAsRead = () => {\n  const [activityMarkAsRead] = useActivityMarkAsReadMutation();\n  return [activityMarkAsRead];\n};\n\nexport const useActivityAppliedElection = () => {\n  const [activityAppliedElection] = useActivityElectionAppliedMutation();\n  return [activityAppliedElection];\n};\n\nexport const useActivityElectionVote = () => {\n  const [activityElectionVote] = useActivityElectionVoteMutation();\n  return [activityElectionVote];\n};\n\nexport const useActivitySupportMember = (args) => {\n  const { data: activitySupportMember, refetch: activitySupportMemberRefetch } =\n    useActivitySupportMemberQuery(args.data, { skip: args.skip });\n  return { activitySupportMember, activitySupportMemberRefetch };\n};\n\nexport const useInstituteAllGRNotification = (args) => {\n  const {\n    data: instituteAllGRNotification,\n    refetch: instituteAllGRNotificationRefetch,\n  } = useInstituteAllGRNotificationQuery(args.data, { skip: args.skip });\n  return { instituteAllGRNotification, instituteAllGRNotificationRefetch };\n};\n\nexport const useInstituteGRNotificationAction = () => {\n  const [instituteGRNotificationAction] =\n    useInstituteGRNotificationActionMutation();\n  return [instituteGRNotificationAction];\n};\nexport const useGetNotificationAllStudentMessage = (args) => {\n  const {\n    data: getNotificationAllStudentMessage,\n    refetch: getNotificationAllStudentMessageRefetch,\n  } = useGetNotificationAllStudentMessageQuery(args.data, { skip: args.skip });\n  return {\n    getNotificationAllStudentMessage,\n    getNotificationAllStudentMessageRefetch,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"staff_profile_container\":\"StaffProfile_staff_profile_container__GG5AM\",\"staff_header_container\":\"StaffProfile_staff_header_container__avRlK\",\"staff_header_function\":\"StaffProfile_staff_header_function__l9cDM\",\"staff_header_text\":\"StaffProfile_staff_header_text__XX8rQ\",\"staff_header_prev\":\"StaffProfile_staff_header_prev__ImXKU\",\"staff_header_next\":\"StaffProfile_staff_header_next__jjoJr\",\"staff_header_close\":\"StaffProfile_staff_header_close__wXG-N\",\"staff_profile_photo_name\":\"StaffProfile_staff_profile_photo_name__WWUV4\",\"staff_profile_photo_index\":\"StaffProfile_staff_profile_photo_index__-yyx9\",\"each_info_container\":\"StaffProfile_each_info_container__Mo3TB\",\"each_field_text\":\"StaffProfile_each_field_text__vvAvg\",\"each_field_text_value\":\"StaffProfile_each_field_text_value__k1OsE\",\"universal_hr\":\"StaffProfile_universal_hr__w130J\",\"staff_profile_photo_container\":\"StaffProfile_staff_profile_photo_container__rFPEV\",\"staff_profile_photo_info\":\"StaffProfile_staff_profile_photo_info__CxVDi\",\"staff_profile_photo_image\":\"StaffProfile_staff_profile_photo_image__5f2cC\",\"staff_profile_photo_edit\":\"StaffProfile_staff_profile_photo_edit__y03dk\",\"each_field_container\":\"StaffProfile_each_field_container__0qKjw\",\"each_field\":\"StaffProfile_each_field__18G-9\",\"student_attendane_container\":\"StaffProfile_student_attendane_container__64BII\",\"student_attendance_heading\":\"StaffProfile_student_attendance_heading__0hW2K\",\"colours\":\"StaffProfile_colours__-7mIV\",\"monthColours\":\"StaffProfile_monthColours__A3asC\",\"percentage\":\"StaffProfile_percentage__GO1RT\",\"presentcount\":\"StaffProfile_presentcount__u30HH\",\"absentcount\":\"StaffProfile_absentcount__d+utq\",\"link_hold_container\":\"StaffProfile_link_hold_container__0dRjX\",\"link_hold_container_hostel\":\"StaffProfile_link_hold_container_hostel__LcldT\",\"card_hold_container\":\"StaffProfile_card_hold_container__HQQcE\",\"admission_fees\":\"StaffProfile_admission_fees__MoZHM\",\"certificate_btn_container\":\"StaffProfile_certificate_btn_container__jui9m\",\"admission_actions\":\"StaffProfile_admission_actions__ayyJD\",\"staff_designation_btn\":\"StaffProfile_staff_designation_btn__4C3h7\",\"ospp_header\":\"StaffProfile_ospp_header__oteF5\",\"ospph_img\":\"StaffProfile_ospph_img__gPivu\",\"cbc_row\":\"StaffProfile_cbc_row__rm60T\",\"certificate_btn\":\"StaffProfile_certificate_btn__3NWfg\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","status","_jsx","className","styles","loaderGif","children","src","alt","_query$query_by_stude","_query$query_by_stude2","_query$query_by_stude3","_query$query_by_stude4","_query$query_by_stude5","_query$query_by_stude6","_query$query_by_stude7","_query$query_by_stude8","_query$query_gr","_query$query_content","query","onRefetch","t","useTranslation","disabled","setDisabled","useState","instituteGRNotificationAction","useInstituteGRNotificationAction","onAction","type","_id","pre","qid","concat","then","catch","_jsxs","_Fragment","style","query_by_student","studentProfilePhoto","imageShowUrl","studentFirstName","studentMiddleName","studentLastName","fontWeight","query_gr","query_content","query_status","onClick","moment","created_at","format","QLoader","GrQuery","id","useSelector","state","idChange","ref","inView","useInView","page","setPage","setState","showingDataLoading","setShowingDataLoading","grList","setGrList","refetchStatus","setRefetchStatus","instituteAllGRNotification","instituteAllGRNotificationRefetch","useInstituteAllGRNotification","data","limit","skip","useEffect","_instituteAllGRNotifi2","_instituteAllGRNotifi","all_query","prevState","_ref2","Set","map","JSON","stringify","parse","length","onRefetchWhenCreate","BorderBottom","customStyle","marginTop","marginBottom","width","index","StudentQueryCard","QvipleLoading","universal_hr","baseUrl","activityUrl","electionUrl","instituteAllNotificationFunction","builder","userAllNotificationFunction","activityFunction","_data$category","category","activityNotifiationCountFunction","activityMarkViewFunction","method","mutation","url","activityMarkAsReadFunction","nid","activityAppliedFunction","eid","sid","body","appliedElection","activityElectionVoteFunction","apid","aid","activitySupportMemberFunction","did","search","instituteAllGRNotificationFunction","instituteGRNotificationActionFunction","getNotificationAllStudentMessageFunction","uid","activityApi","activityDynamicApi","injectEndpoints","endpoints","instituteAllNotification","userAllNotification","allActivity","activityNotifiationCount","activityMarkView","patchMethod","activityMarkAsRead","activityElectionApplied","postMethod","activityElectionVote","activitySupportMember","getNotificationAllStudentMessage","useInstituteAllNotificationQuery","useUserAllNotificationQuery","useAllActivityQuery","useActivityNotifiationCountQuery","useActivityMarkViewMutation","useActivityMarkAsReadMutation","useActivityElectionAppliedMutation","useActivityElectionVoteMutation","useActivitySupportMemberQuery","useInstituteAllGRNotificationQuery","useInstituteGRNotificationActionMutation","useGetNotificationAllStudentMessageQuery","useInstituteAllNotification","args","refetch","instituteAllNotificationRefetch","useUserAllNotification","userAllNotificationRefetch","useAllActivityList","allActivityList","allActivityListRefetch","useActivityNotifiationCount","activityNotifiationCountRefetch","useActivityMarkView","useActivityAppliedElection","activityAppliedElection","useActivityElectionVote","useActivitySupportMember","activitySupportMemberRefetch","useGetNotificationAllStudentMessage","getNotificationAllStudentMessageRefetch","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","delay","rootMargin","triggerOnce","initialInView","onChange","setRef","React2","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}