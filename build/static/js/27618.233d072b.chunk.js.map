{"version":3,"file":"static/js/27618.233d072b.chunk.js","mappings":"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","sources":["optimized/Constant/Admission/admission_constant.js","optimized/Services/InstituteStudent/institute_student_query_mutation_function.js","optimized/Services/InstituteStudent/instituteStudentApiDynamic.js","optimized/Hooks/ApiHooks/InstituteStudent/institute-student-api.js","optimized/Ui/CustomCheckbox/GroupCustomCheckbox.jsx","optimized/Ui/CustomCheckbox/GroupCustomCheckboxItem.jsx"],"sourcesContent":["export const admissionModeratorAccess = {\n  ALL_FEE_ACCESS: [\"students\", \"message\", \"fund\", \"verification\"],\n  MULTI_APP_ACCESS: [\n    \"students\",\n    \"message\",\n    \"ongoing\",\n    \"ongoing-detail\",\n    \"complete\",\n  ],\n  INQUIRY_ACCESS: [\"students\", \"message\"],\n  REFUND_ACCESS: [\"students\", \"message\", \"excess\"],\n  PENDING_FEE_ACCESS: [\"students\", \"message\", \"pending\", \"reminder-message\"],\n  ONE_TAB_ACCESS: [\"students\", \"message\", \"ongoing\", \"ongoing-detail\"],\n  DATA_EXPORT_ACCESS: [\"students\", \"message\", \"export\"],\n  ONGOING_ACCESS: [\"ongoing\", \"ongoing-detail\"],\n};\n\nexport const admissionOneTabAccess = {\n  Application: \"Application\",\n  Selected: \"Selected\",\n  \"FEE COLLECTION TAB\": \"FEE COLLECTION TAB\",\n  Confirmed: \"Confirmed\",\n  \"REVIEW TAB\": \"REVIEW TAB\",\n  Allotted: \"Allotted\",\n  Cancelled: \"Cancelled\",\n};\nexport const admissionTabAccessList = {\n  Application: [\n    {\n      label: \"application\",\n      id: \"application\",\n      urlKey: \"\",\n      groupIs: [\"\", null],\n    },\n  ],\n  Selected: [\n    {\n      label: \"docs_collection\",\n      id: \"document\",\n      urlKey: \"&n=document\",\n      groupIs: [\"document\"],\n    },\n  ],\n  \"FEE COLLECTION TAB\": [\n    {\n      label: \"fees_collection\",\n      id: \"fees\",\n      urlKey: \"&n=fees\",\n      groupIs: [\"fees\"],\n    },\n  ],\n  Confirmed: [\n    {\n      label: \"confirmed\",\n      id: \"confirmed\",\n      urlKey: \"&n=confirmed\",\n      groupIs: [\"confirmed\", \"confirmed-multi\"],\n    },\n  ],\n  \"REVIEW TAB\": [\n    {\n      label: \"review\",\n      id: \"review\",\n      urlKey: \"&n=review\",\n      groupIs: [\"review\", \"review-multi\"],\n    },\n  ],\n  Allotted: [\n    {\n      label: \"allottment\",\n      id: \"allottment\",\n      urlKey: \"&n=allottment\",\n      groupIs: [\"allottment\"],\n    },\n  ],\n  Cancelled: [\n    {\n      label: \"cancelled\",\n      id: \"cancelled\",\n      urlKey: \"&n=cancelled\",\n      groupIs: [\"cancelled\"],\n    },\n  ],\n};\nexport const optionalSubjectCombineWithName = (val) => {\n  let ft = \"\";\n  for (let dt of val) {\n    ft = ft ? `${ft} or ${dt?.subjectName}` : `${dt?.subjectName}`;\n  }\n  return ft;\n};\nexport const admissionModeratorUrlRedirect = {\n  DATA_EXPORT_ACCESS: {\n    subUrl: \"export\",\n    authorizedKey: \"data_export\",\n  },\n  INQUIRY_ACCESS: {\n    subUrl: \"enq-application\",\n    authorizedKey: \"admission_enquiry\",\n  },\n  ONE_TAB_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  MULTI_APP_ACCESS: {\n    subUrl: \"ongoing\",\n    nestedUrl: \"ongoing-detail\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  ONGOING_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  ONGOING_VIEW_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  COMBINED_APP_ACCESS: {\n    subUrl: \"combine-application\",\n    authorizedKey: \"ongoing_admission\",\n  },\n};\n\nexport const admissionIntakeType = [\n  {\n    key: \"CAP\",\n    name: \"intake_type1\",\n  },\n  {\n    key: \"AGAINST_CAP\",\n    name: \"intake_type2\",\n  },\n  {\n    key: \"IL\",\n    name: \"intake_type3\",\n  },\n  {\n    key: \"EWS\",\n    name: \"intake_type4\",\n  },\n  {\n    key: \"TFWS\",\n    name: \"intake_type5\",\n  },\n];\n","import { PATCH, POST } from \"../UrlConfig/MethodType\";\n\nexport const instituteStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/ins/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const instituteStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/ins/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const instituteStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/ins/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const instituteStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/ins/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const instituteStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v1/ins/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const instituteStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/ins/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const formAddRaggingUndertakingFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/add/textarea/query?section_stats=${data?.section_stats}`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const formAddFormImageFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/add/form/image/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n// for department form setting\n\nexport const departmentStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const departmentStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const departmentStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const departmentStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const departmentStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v1/department/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const departmentStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// for showing field in student side\n\nexport const studentApplyFormFieldDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v1/department/dynamic/form/details/query?flow=${data?.flow}&did=${data?.flowId}&apk=${data?.apk}&aid=${data?.aid}`,\n    transformResponse: (response) =>\n      response?.ins_form\n        ? response?.ins_form\n        : response?.app_form\n        ? response?.app_form\n        : response?.depart_form,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n//for student profile detail\n\nexport const studentProfileAboutDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v1/department/${data.sid}/dynamic/form/query`,\n    // keepUnusedDataFor: 0,\n    transformResponse: (response) => response?.result,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n//for student edit profile detail\n\nexport const studentEditProfileAboutDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v1/department/${data.sid}/dynamic/form/query/photo`,\n    // keepUnusedDataFor: 0,\n    transformResponse: (response) => response?.result,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n","import { instituteStudentApi } from \"./instituteStudentApi\";\nimport {\n  instituteStudentAddSectionFunction,\n  instituteStudentFormDetailFunction,\n  instituteStudentRearrangeSectionFunction,\n  instituteStudentSectionAddChecklistFunction,\n  instituteStudentUpdateSectionChecklistFunction,\n  instituteStudentToggleChecklistFunction,\n  formAddRaggingUndertakingFunction,\n  formAddFormImageFunction,\n  //\n  departmentStudentAddSectionFunction,\n  departmentStudentFormDetailFunction,\n  departmentStudentRearrangeSectionFunction,\n  departmentStudentSectionAddChecklistFunction,\n  departmentStudentUpdateSectionChecklistFunction,\n  departmentStudentToggleChecklistFunction,\n\n  //\n  studentProfileAboutDetailFunction,\n  studentApplyFormFieldDetailFunction,\n  studentEditProfileAboutDetailFunction,\n} from \"./institute_student_query_mutation_function\";\n\nconst instituteStudentApiDynamic = instituteStudentApi.injectEndpoints({\n  endpoints: (builder) => ({\n    instituteStudentAddSection: instituteStudentAddSectionFunction(builder),\n    instituteStudentSectionAddChecklist:\n      instituteStudentSectionAddChecklistFunction(builder),\n    instituteStudentRearrangeSection:\n      instituteStudentRearrangeSectionFunction(builder),\n    instituteStudentUpdateSectionChecklist:\n      instituteStudentUpdateSectionChecklistFunction(builder),\n    instituteStudentFormDetail: instituteStudentFormDetailFunction(builder),\n    instituteStudentToggleChecklist:\n      instituteStudentToggleChecklistFunction(builder),\n    formAddRaggingUndertaking: formAddRaggingUndertakingFunction(builder),\n    formAddFormImage: formAddFormImageFunction(builder),\n    //\n    departmentStudentAddSection: departmentStudentAddSectionFunction(builder),\n    departmentStudentSectionAddChecklist:\n      departmentStudentSectionAddChecklistFunction(builder),\n    departmentStudentRearrangeSection:\n      departmentStudentRearrangeSectionFunction(builder),\n    departmentStudentUpdateSectionChecklist:\n      departmentStudentUpdateSectionChecklistFunction(builder),\n    departmentStudentFormDetail: departmentStudentFormDetailFunction(builder),\n    departmentStudentToggleChecklist:\n      departmentStudentToggleChecklistFunction(builder),\n\n    //\n    studentProfileAboutDetail: studentProfileAboutDetailFunction(builder),\n    studentApplyFormFieldDetail: studentApplyFormFieldDetailFunction(builder),\n    studentEditProfileAboutDetail:\n      studentEditProfileAboutDetailFunction(builder),\n  }),\n});\n\nexport const {\n  useInstituteStudentAddSectionMutation,\n  useInstituteStudentSectionAddChecklistMutation,\n  useInstituteStudentRearrangeSectionMutation,\n  useInstituteStudentUpdateSectionChecklistMutation,\n  useInstituteStudentFormDetailQuery,\n  useInstituteStudentToggleChecklistMutation,\n  useFormAddRaggingUndertakingMutation,\n  useFormAddFormImageMutation,\n  //\n  useDepartmentStudentAddSectionMutation,\n  useDepartmentStudentSectionAddChecklistMutation,\n  useDepartmentStudentRearrangeSectionMutation,\n  useDepartmentStudentUpdateSectionChecklistMutation,\n  useDepartmentStudentFormDetailQuery,\n  useDepartmentStudentToggleChecklistMutation,\n  //\n  useStudentProfileAboutDetailQuery,\n  useStudentApplyFormFieldDetailQuery,\n  useStudentEditProfileAboutDetailQuery,\n} = instituteStudentApiDynamic;\n","import {\n  useInstituteStudentAddSectionMutation,\n  useInstituteStudentFormDetailQuery,\n  useInstituteStudentRearrangeSectionMutation,\n  useInstituteStudentSectionAddChecklistMutation,\n  useInstituteStudentUpdateSectionChecklistMutation,\n  useInstituteStudentToggleChecklistMutation,\n  useFormAddRaggingUndertakingMutation,\n  useFormAddFormImageMutation,\n  //\n  useDepartmentStudentAddSectionMutation,\n  useDepartmentStudentFormDetailQuery,\n  useDepartmentStudentRearrangeSectionMutation,\n  useDepartmentStudentSectionAddChecklistMutation,\n  useDepartmentStudentUpdateSectionChecklistMutation,\n  useDepartmentStudentToggleChecklistMutation,\n\n  //\n  useStudentProfileAboutDetailQuery,\n  useStudentApplyFormFieldDetailQuery,\n  useStudentEditProfileAboutDetailQuery,\n} from \"../../../Services/InstituteStudent/instituteStudentApiDynamic\";\n\nexport const useInstituteStudentAddSection = () => {\n  const [instituteStudentAddSection] = useInstituteStudentAddSectionMutation();\n  return [instituteStudentAddSection];\n};\nexport const useInstituteStudentSectionAddChecklist = () => {\n  const [instituteStudentSectionAddChecklist] =\n    useInstituteStudentSectionAddChecklistMutation();\n  return [instituteStudentSectionAddChecklist];\n};\nexport const useInstituteStudentRearrangeSection = () => {\n  const [instituteStudentRearrangeSection] =\n    useInstituteStudentRearrangeSectionMutation();\n  return [instituteStudentRearrangeSection];\n};\nexport const useInstituteStudentUpdateSectionChecklist = () => {\n  const [instituteStudentUpdateSectionChecklist] =\n    useInstituteStudentUpdateSectionChecklistMutation();\n  return [instituteStudentUpdateSectionChecklist];\n};\n\nexport const useInstituteStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useInstituteStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    instituteStudentFormDetail: data,\n    instituteStudentFormDetailRefetch: refetch,\n    instituteStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useInstituteStudentToggleChecklist = () => {\n  const [instituteStudentToggleChecklist] =\n    useInstituteStudentToggleChecklistMutation();\n  return [instituteStudentToggleChecklist];\n};\nexport const useFormAddRaggingUndertaking = () => {\n  const [formAddRaggingUndertaking] = useFormAddRaggingUndertakingMutation();\n  return [formAddRaggingUndertaking];\n};\n\nexport const useFormAddFormImage = () => {\n  const [formAddFormImage] = useFormAddFormImageMutation();\n  return [formAddFormImage];\n};\n// for department\n\nexport const useDepartmentStudentAddSection = () => {\n  const [departmentStudentAddSection] =\n    useDepartmentStudentAddSectionMutation();\n  return [departmentStudentAddSection];\n};\nexport const useDepartmentStudentSectionAddChecklist = () => {\n  const [departmentStudentSectionAddChecklist] =\n    useDepartmentStudentSectionAddChecklistMutation();\n  return [departmentStudentSectionAddChecklist];\n};\nexport const useDepartmentStudentRearrangeSection = () => {\n  const [departmentStudentRearrangeSection] =\n    useDepartmentStudentRearrangeSectionMutation();\n  return [departmentStudentRearrangeSection];\n};\nexport const useDepartmentStudentUpdateSectionChecklist = () => {\n  const [departmentStudentUpdateSectionChecklist] =\n    useDepartmentStudentUpdateSectionChecklistMutation();\n  return [departmentStudentUpdateSectionChecklist];\n};\n\nexport const useDepartmentStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useDepartmentStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    departmentStudentFormDetail: data,\n    departmentStudentFormDetailRefetch: refetch,\n    departmentStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useDepartmentStudentToggleChecklist = () => {\n  const [departmentStudentToggleChecklist] =\n    useDepartmentStudentToggleChecklistMutation();\n  return [departmentStudentToggleChecklist];\n};\n//\nexport const useStudentProfileAboutDetail = (args) => {\n  const { data, refetch, isFetching } = useStudentProfileAboutDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    studentProfileAboutDetail: data,\n    studentProfileAboutDetailRefetch: refetch,\n    studentProfileAboutDetailLoading: isFetching,\n  };\n};\nexport const useStudentApplyFormFieldDetail = (args) => {\n  const { data, refetch, isFetching } = useStudentApplyFormFieldDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    studentApplyFormFieldDetail: data,\n    studentApplyFormFieldDetailRefetch: refetch,\n    studentApplyFormFieldDetailLoading: isFetching,\n  };\n};\n\nexport const useStudentEditProfileAboutDetail = (args) => {\n  const { data, refetch, isFetching } = useStudentEditProfileAboutDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    studentEditProfileAboutDetail: data,\n    studentEditProfileAboutDetailRefetch: refetch,\n    studentEditProfileAboutDetailLoading: isFetching,\n  };\n};\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./CustomCheckbox.module.css\";\nconst GroupCustomCheckbox = ({\n  label,\n  options,\n  onChange,\n  defaultValue,\n  customFormInputContainer,\n  customFormInputLabel,\n  errorShow,\n  msg,\n  disabled,\n  isCheck,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <div\n        className={style.form_input_container}\n        style={customFormInputContainer}\n      >\n        <label className={style.form_input_label} style={customFormInputLabel}>\n          {label}\n          {errorShow ? (\n            <span className={style.form_input_label_error}>\n              * {t(\"form_require_label\")}\n            </span>\n          ) : null}\n          {children}\n        </label>\n        {options?.map((ch) => (\n          <label className={style.ccc} key={ch}>\n            <span\n              className={style.form_input}\n              style={{\n                fontWeight: \"500\",\n              }}\n            >\n              {ch}\n              {msg ? (\n                <span\n                  style={{\n                    color: \"red\",\n                    marginLeft: \"15px\",\n                    fontSize: \"13px\",\n                  }}\n                >\n                  {`*`} {msg}\n                </span>\n              ) : null}\n            </span>\n            {isCheck ? (\n              <input\n                type=\"checkbox\"\n                checked={isCheck ? defaultValue : false}\n                onChange={onChange}\n                disabled={disabled}\n              />\n            ) : (\n              <input\n                type=\"checkbox\"\n                checked={defaultValue?.includes(ch) ? true : false}\n                onChange={onChange}\n                disabled={disabled}\n              />\n            )}\n\n            <span className={style.checkmark}></span>\n          </label>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GroupCustomCheckbox;\n","// import { useTranslation } from \"react-i18next\";\n// import style from \"./CustomCheckbox.module.css\";\n// import { optionalSubjectCombineWithName } from \"../../Constant/Admission/admission_constant\";\n// const GroupCustomCheckboxItem = ({\n//   options,\n//   onChange,\n//   defaultValue,\n//   customFormInputContainer,\n//   disabled,\n//   isCheck,\n//   parentKey,\n//   errorShow,\n//   errorShowKey,\n//   children,\n// }) => {\n//   const { t } = useTranslation();\n//   return (\n//     <>\n//       <div\n//         className={style.form_input_container}\n//         style={customFormInputContainer}\n//       >\n//         {options?.map((ch, index) =>\n//           ch?.form_checklist_typo === \"TEXT\" ? (\n//             <label\n//               className={style.ccc}\n//               key={`${ch?.form_checklist_name}${index}`}\n//             >\n//               <span className={style.form_input}>\n//                 {index + 1}). {ch?.form_checklist_name ?? \"\"}\n//               </span>\n//               <input type=\"checkbox\" checked disabled />\n//               <span className={style.checkmark}></span>\n//             </label>\n//           ) : ch?.form_checklist_typo === \"SELECT_GROUP\" ? (\n//             <label\n//               className={style.ccc}\n//               key={`${ch?.form_checklist_name}${index}`}\n//             >\n//               <span className={style.form_input}>\n//                 {index + 1}). {ch?.form_checklist_name ?? \"\"}\n//               </span>\n//               <br />\n//               <div\n//                 style={{\n//                   display: \"block\",\n//                   marginBottom: \"0.4rem\",\n//                 }}\n//               ></div>\n//               {ch?.form_checklist_typo_option_pl?.map((ft, ft_index) => (\n//                 <label\n//                   className={style.ccc}\n//                   key={`${ft?.subjectNam}${ft_index}`}\n//                   style={{\n//                     display: \"block\",\n//                   }}\n//                 >\n//                   <span className={style.form_input}>\n//                     {ft_index + 1}). {ft?.subjectName ?? \"\"}\n//                   </span>\n//                 </label>\n//               ))}\n//               <input\n//                 type=\"checkbox\"\n//                 checked={\n//                   isCheck\n//                     ? defaultValue &&\n//                       defaultValue[index] &&\n//                       defaultValue[index][\"selected\"]\n//                     : false\n//                 }\n//                 onChange={(e) =>\n//                   onChange(e, parentKey, index, \"dummy\", {\n//                     min: ch?.form_checklist_rule,\n//                     max: ch?.form_checklist_rule_max,\n//                     or_subject: \"FIXED\",\n//                     fixedSubject: ch?.form_checklist_typo_option_pl,\n//                   })\n//                 }\n//                 disabled={disabled}\n//               />\n//               <span className={style.checkmark}></span>\n//             </label>\n//           ) : (\n//             <label\n//               className={style.ccc}\n//               key={`${ch?.form_checklist_name}${index}`}\n//             >\n//               <span className={style.form_input}>\n//                 {index + 1}). {ch?.form_checklist_name ?? \"\"}\n//                 {errorShow && errorShow[`${errorShowKey}${index}`] ? (\n//                   <span\n//                     style={{\n//                       color: \"red\",\n//                       marginLeft: \"15px\",\n//                     }}\n//                   >\n//                     * {errorShow[`${errorShowKey}${index}`]}\n//                   </span>\n//                 ) : null}\n//               </span>\n//               <br />\n//               <div\n//                 style={{\n//                   display: \"block\",\n//                   marginBottom: \"0.4rem\",\n//                 }}\n//               ></div>\n//               {ch?.form_checklist_typo_option_pl?.map((ft, ft_index) => (\n//                 <label\n//                   className={style.ccc}\n//                   key={`${ft?.subjectNam}${ft_index}`}\n//                   style={{\n//                     display: \"block\",\n//                     marginLeft: \"2rem\",\n//                   }}\n//                 >\n//                   <span className={style.form_input}>\n//                     {ft_index + 1}). {ft?.subjectName ?? \"\"}\n//                   </span>\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={\n//                       isCheck\n//                         ? defaultValue &&\n//                           defaultValue[index] &&\n//                           defaultValue[index][ft_index] &&\n//                           defaultValue[index][ft_index][\"selected\"]\n//                         : false\n//                     }\n//                     onChange={(e) =>\n//                       onChange(e, parentKey, index, ft_index, {\n//                         min: ch?.form_checklist_rule,\n//                         max: ch?.form_checklist_rule_max,\n//                         masterId: ft?._id,\n//                       })\n//                     }\n//                     disabled={disabled}\n//                   />\n//                   <span className={style.checkmark}></span>\n//                 </label>\n//               ))}\n//               {ch?.form_checklist_typo_option_pl_optional?.length > 0 ? (\n//                 <label\n//                   className={style.ccc}\n//                   style={{\n//                     display: \"block\",\n//                     marginLeft: \"2rem\",\n//                   }}\n//                 >\n//                   <span className={style.form_input}>\n//                     {ch?.form_checklist_typo_option_pl?.length + 1}).\n//                     {optionalSubjectCombineWithName(\n//                       ch?.form_checklist_typo_option_pl_optional\n//                     )}\n//                     {errorShow &&\n//                     errorShow[\n//                       `${errorShowKey}${index}${ch?.form_checklist_typo_option_pl?.length}OR`\n//                     ] ? (\n//                       <span\n//                         style={{\n//                           color: \"red\",\n//                           marginLeft: \"15px\",\n//                         }}\n//                       >\n//                         *{\" \"}\n//                         {\n//                           errorShow[\n//                             `${errorShowKey}${index}${ch?.form_checklist_typo_option_pl?.length}OR`\n//                           ]\n//                         }\n//                       </span>\n//                     ) : null}\n//                   </span>\n\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={\n//                       isCheck\n//                         ? defaultValue &&\n//                           defaultValue[index] &&\n//                           defaultValue[index][\n//                             `${ch?.form_checklist_typo_option_pl?.length}OR`\n//                           ] &&\n//                           defaultValue[index][\n//                             `${ch?.form_checklist_typo_option_pl?.length}OR`\n//                           ][\"selected\"]\n//                         : false\n//                     }\n//                     onChange={(e) =>\n//                       onChange(\n//                         e,\n//                         parentKey,\n//                         index,\n//                         `${ch?.form_checklist_typo_option_pl?.length}OR`,\n//                         {\n//                           min: ch?.form_checklist_rule,\n//                           max: ch?.form_checklist_rule_max,\n//                           masterId: \"\",\n//                         }\n//                       )\n//                     }\n//                     disabled={disabled}\n//                   />\n//                   <span className={style.checkmark}></span>\n//                 </label>\n//               ) : null}\n\n//               {defaultValue &&\n//               defaultValue[index] &&\n//               defaultValue[index][\n//                 `${ch?.form_checklist_typo_option_pl?.length}OR`\n//               ] &&\n//               defaultValue[index][\n//                 `${ch?.form_checklist_typo_option_pl?.length}OR`\n//               ][\"selected\"] ? (\n//                 <>\n//                   {ch?.form_checklist_typo_option_pl_optional?.map(\n//                     (ft, ft_index) => (\n//                       <label\n//                         className={style.ccc}\n//                         key={`${ft?.subjectNam}${ft_index}`}\n//                         style={{\n//                           display: \"block\",\n//                           marginLeft: \"4.3rem\",\n//                         }}\n//                       >\n//                         <span className={style.form_input}>\n//                           {ft_index + 1}). {ft?.subjectName ?? \"\"}\n//                         </span>\n//                         <input\n//                           type=\"checkbox\"\n//                           checked={\n//                             isCheck\n//                               ? defaultValue &&\n//                                 defaultValue[index] &&\n//                                 defaultValue[index][\n//                                   ft_index +\n//                                     ch?.form_checklist_typo_option_pl?.length\n//                                 ] &&\n//                                 defaultValue[index][\n//                                   ft_index +\n//                                     ch?.form_checklist_typo_option_pl?.length\n//                                 ][\"selected\"]\n//                               : false\n//                           }\n//                           onChange={(e) =>\n//                             onChange(\n//                               e,\n//                               parentKey,\n//                               index,\n//                               ft_index +\n//                                 ch?.form_checklist_typo_option_pl?.length,\n//                               {\n//                                 min: ch?.form_checklist_rule,\n//                                 max: ch?.form_checklist_rule_max,\n//                                 masterId: ft?._id,\n//                                 or_subject: \"YES\",\n//                               }\n//                             )\n//                           }\n//                           disabled={disabled}\n//                         />\n//                         <span className={style.checkmark}></span>\n//                       </label>\n//                     )\n//                   )}\n//                 </>\n//               ) : null}\n//             </label>\n//           )\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default GroupCustomCheckboxItem;\n\nimport { useTranslation } from \"react-i18next\";\nimport style from \"./CustomCheckbox.module.css\";\nimport { optionalSubjectCombineWithName } from \"../../Constant/Admission/admission_constant\";\nimport { Fragment } from \"react\";\nimport CreateButton from \"../Button/CreateButton\";\nconst GroupCustomCheckboxItem = ({\n  options,\n  onChange,\n  defaultValue,\n  customFormInputContainer,\n  disabled,\n  isCheck,\n  parentKey,\n  errorShow,\n  errorShowKey,\n  onMajorSubject,\n  onNestedSubject,\n  isGroupSelected,\n  children,\n}) => {\n  const { t } = useTranslation();\n  // console.info(\"this is defaul\", defaultValue);\n  return (\n    <>\n      <div\n        className={style.form_input_container}\n        style={customFormInputContainer}\n      >\n        {options?.map((ch, index) =>\n          ch?.form_checklist_typo === \"TEXT\" ? (\n            <div\n              className={style.gcci_container}\n              key={`${ch?.form_checklist_name}${index}`}\n            >\n              <label className={style.ccc}>\n                <span className={style.form_input}>\n                  {index + 1}). {ch?.form_checklist_name ?? \"\"}\n                </span>\n                <input type=\"checkbox\" checked disabled />\n                <span className={style.checkmark}></span>\n              </label>\n              {/* {defaultValue?.major_subject?.includes(\n                ch?.form_checklist_subjectId\n              ) ? (\n                <CreateButton\n                  label=\"dse\"\n                  onAction={() =>\n                    onMajorSubject(parentKey, ch?.form_checklist_subjectId)\n                  }\n                  customStyle={{\n                    margin: \"0\",\n                    marginTop: \"-9px\",\n                    padding: \"0 0.8rem\",\n                    width: \"fit-content\",\n                    backgroundColor: \"#001a72\",\n                    color: \"#ffffff\",\n                  }}\n                />\n              ) : defaultValue &&\n                defaultValue[\"max_major_subject\"] > 0 &&\n                isGroupSelected ? (\n                <CreateButton\n                  label=\"dse\"\n                  onAction={() =>\n                    onMajorSubject(parentKey, ch?.form_checklist_subjectId)\n                  }\n                  customStyle={{\n                    margin: \"0\",\n                    marginTop: \"-9px\",\n                    padding: \"0 0.8rem\",\n                    width: \"fit-content\",\n                  }}\n                />\n              ) : null} */}\n            </div>\n          ) : ch?.form_checklist_typo === \"SELECT_GROUP\" ? (\n            <Fragment key={`${ch?.form_checklist_name}${index}`}>\n              {\" \"}\n              <label className={style.ccc}>\n                <span className={style.form_input}>\n                  {index + 1}). {ch?.form_checklist_name ?? \"\"}\n                  {errorShow && errorShow[`${errorShowKey}${index}`] ? (\n                    <span\n                      style={{\n                        color: \"red\",\n                        marginLeft: \"15px\",\n                      }}\n                    >\n                      * {errorShow[`${errorShowKey}${index}`]}\n                    </span>\n                  ) : null}\n                </span>\n                <br />\n                <div\n                  style={{\n                    display: \"block\",\n                    marginBottom: \"0.4rem\",\n                  }}\n                ></div>\n\n                <input\n                  type=\"checkbox\"\n                  checked={\n                    isCheck\n                      ? defaultValue &&\n                        defaultValue[index] &&\n                        defaultValue[index][\"selected\"]\n                      : false\n                  }\n                  onChange={(e) =>\n                    onChange(e, parentKey, index, \"dummy\", {\n                      min: ch?.form_checklist_rule,\n                      max: ch?.form_checklist_rule_max,\n                      or_subject: \"FIXED\",\n                      fixedSubject: ch?.form_checklist_typo_option_pl,\n                      maxCount: ch?.form_checklist_major_select_max,\n                      nestedMaxCount: ch?.form_checklist_nested_select_min,\n                    })\n                  }\n                  disabled={disabled}\n                />\n                <span className={style.checkmark}></span>\n              </label>\n              {ch?.form_checklist_typo_option_pl?.map((ft, ft_index) => (\n                <div\n                  className={style.gcci_container}\n                  key={`${ft?.subjectNam}${ft_index}`}\n                  style={{\n                    marginLeft: \"1.4rem\",\n                  }}\n                >\n                  <label\n                    className={style.ccc}\n                    style={{\n                      display: \"block\",\n                    }}\n                  >\n                    <span className={style.form_input}>\n                      {ft_index + 1}). {ft?.subjectName ?? \"\"}\n                    </span>\n                  </label>\n                  {defaultValue &&\n                  defaultValue[index] &&\n                  defaultValue[index]?.major_subject?.includes(ft?._id) ? (\n                    <CreateButton\n                      label=\"dse\"\n                      onAction={() => onMajorSubject(parentKey, index, ft?._id)}\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                        backgroundColor: \"#001a72\",\n                        color: \"#ffffff\",\n                      }}\n                    />\n                  ) : isGroupSelected &&\n                    defaultValue &&\n                    defaultValue[index] &&\n                    defaultValue[index][\"max_major_subject\"] > 0 &&\n                    defaultValue[index][\"selected\"] ? (\n                    <CreateButton\n                      label=\"dse\"\n                      onAction={() => onMajorSubject(parentKey, index, ft?._id)}\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                      }}\n                    />\n                  ) : null}\n\n                  {defaultValue &&\n                  defaultValue[index] &&\n                  defaultValue[index]?.nested_subject?.includes(ft?._id) ? (\n                    <CreateButton\n                      label={ch?.form_checklist_nested_select_name ?? \"\"}\n                      onAction={() =>\n                        onNestedSubject(parentKey, index, {\n                          sub_id: ft?._id,\n                        })\n                      }\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                        backgroundColor: \"#001a72\",\n                        color: \"#ffffff\",\n                      }}\n                    />\n                  ) : isGroupSelected &&\n                    defaultValue &&\n                    defaultValue[index] &&\n                    defaultValue[index][\"nested_select_min\"] > 0 &&\n                    defaultValue[index][\"selected\"] ? (\n                    <CreateButton\n                      label={ch?.form_checklist_nested_select_name ?? \"\"}\n                      onAction={() =>\n                        onNestedSubject(parentKey, index, {\n                          sub_id: ft?._id,\n                        })\n                      }\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                      }}\n                    />\n                  ) : null}\n                </div>\n              ))}\n            </Fragment>\n          ) : (\n            <Fragment key={`${ch?.form_checklist_name}${index}`}>\n              <label className={style.ccc}>\n                <span className={style.form_input}>\n                  {index + 1}). {ch?.form_checklist_name ?? \"\"}\n                  {errorShow && errorShow[`${errorShowKey}${index}`] ? (\n                    <span\n                      style={{\n                        color: \"red\",\n                        marginLeft: \"15px\",\n                      }}\n                    >\n                      * {errorShow[`${errorShowKey}${index}`]}\n                    </span>\n                  ) : null}\n                </span>\n                <br />\n                <div\n                  style={{\n                    display: \"block\",\n                    marginBottom: \"0.4rem\",\n                  }}\n                ></div>\n              </label>\n              {ch?.form_checklist_typo_option_pl?.map((ft, ft_index) => (\n                <div\n                  className={style.gcci_container}\n                  key={`${ft?.subjectNam}${ft_index}`}\n                >\n                  <label\n                    className={style.ccc}\n                    style={{\n                      display: \"block\",\n                      marginLeft: \"3.6rem\",\n                    }}\n                  >\n                    <span className={style.form_input}>\n                      {ft_index + 1}). {ft?.subjectName ?? \"\"}\n                    </span>\n                    <input\n                      type=\"checkbox\"\n                      checked={\n                        isCheck\n                          ? defaultValue &&\n                            defaultValue[index] &&\n                            defaultValue[index][ft_index] &&\n                            defaultValue[index][ft_index][\"selected\"]\n                          : false\n                      }\n                      onChange={(e) =>\n                        onChange(e, parentKey, index, ft_index, {\n                          min: ch?.form_checklist_rule,\n                          max: ch?.form_checklist_rule_max,\n                          masterId: ft?._id,\n                          maxCount: ch?.form_checklist_major_select_max,\n                          nestedMaxCount: ch?.form_checklist_nested_select_min,\n                        })\n                      }\n                      disabled={disabled}\n                    />\n                    <span className={style.checkmark}></span>\n                  </label>\n                  {defaultValue &&\n                  defaultValue[index] &&\n                  defaultValue[index]?.major_subject?.includes(ft?._id) ? (\n                    <CreateButton\n                      label=\"dse\"\n                      onAction={() => onMajorSubject(parentKey, index, ft?._id)}\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                        backgroundColor: \"#001a72\",\n                        color: \"#ffffff\",\n                      }}\n                    />\n                  ) : isGroupSelected &&\n                    defaultValue &&\n                    defaultValue[index] &&\n                    defaultValue[index][\"max_major_subject\"] > 0 &&\n                    defaultValue[index][ft_index] &&\n                    defaultValue[index][ft_index][\"selected\"] ? (\n                    <CreateButton\n                      label=\"dse\"\n                      onAction={() => onMajorSubject(parentKey, index, ft?._id)}\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                      }}\n                    />\n                  ) : null}\n                  {defaultValue &&\n                  defaultValue[index] &&\n                  defaultValue[index]?.nested_subject?.includes(ft?._id) ? (\n                    <CreateButton\n                      label={ch?.form_checklist_nested_select_name ?? \"\"}\n                      onAction={() =>\n                        onNestedSubject(parentKey, index, {\n                          sub_id: ft?._id,\n                        })\n                      }\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                        backgroundColor: \"#001a72\",\n                        color: \"#ffffff\",\n                      }}\n                    />\n                  ) : isGroupSelected &&\n                    defaultValue &&\n                    defaultValue[index] &&\n                    defaultValue[index][\"nested_select_min\"] > 0 &&\n                    defaultValue[index][ft_index] &&\n                    defaultValue[index][ft_index][\"selected\"] ? (\n                    <CreateButton\n                      label={ch?.form_checklist_nested_select_name ?? \"\"}\n                      onAction={() =>\n                        onNestedSubject(parentKey, index, {\n                          sub_id: ft?._id,\n                        })\n                      }\n                      customStyle={{\n                        margin: \"0\",\n                        marginTop: \"-9px\",\n                        padding: \"0 0.8rem\",\n                        width: \"fit-content\",\n                      }}\n                    />\n                  ) : null}\n                </div>\n              ))}\n              {ch?.form_checklist_typo_option_pl_optional?.length > 0 ? (\n                <>\n                  {ch?.form_checklist_typo_option_pl_optional?.map(\n                    (rft, r_index) => (\n                      <Fragment key={`rft${r_index}`}>\n                        <label\n                          className={style.ccc}\n                          style={{\n                            display: \"block\",\n                            marginLeft: \"3.6rem\",\n                          }}\n                        >\n                          <span className={style.form_input}>\n                            {ch?.form_checklist_typo_option_pl?.length +\n                              1 +\n                              r_index}\n                            ).\n                            {optionalSubjectCombineWithName(rft?.options)}\n                            {errorShow &&\n                            errorShow[\n                              `${errorShowKey}${index}${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                            ] ? (\n                              <span\n                                style={{\n                                  color: \"red\",\n                                  marginLeft: \"15px\",\n                                }}\n                              >\n                                *{\" \"}\n                                {\n                                  errorShow[\n                                    `${errorShowKey}${index}${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                                  ]\n                                }\n                              </span>\n                            ) : null}\n                          </span>\n\n                          <input\n                            type=\"checkbox\"\n                            checked={\n                              isCheck\n                                ? defaultValue &&\n                                  defaultValue[index] &&\n                                  defaultValue[index][\n                                    `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                                  ] &&\n                                  defaultValue[index][\n                                    `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                                  ][\"selected\"]\n                                : false\n                            }\n                            onChange={(e) =>\n                              onChange(\n                                e,\n                                parentKey,\n                                index,\n                                `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`,\n                                {\n                                  min: ch?.form_checklist_rule,\n                                  max: ch?.form_checklist_rule_max,\n                                  masterId: \"\",\n                                  maxCount: ch?.form_checklist_major_select_max,\n                                  nestedMaxCount:\n                                    ch?.form_checklist_nested_select_min,\n                                }\n                              )\n                            }\n                            disabled={disabled}\n                          />\n                          <span className={style.checkmark}></span>\n                        </label>\n\n                        {defaultValue &&\n                        defaultValue[index] &&\n                        defaultValue[index][\n                          `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                        ] &&\n                        defaultValue[index][\n                          `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`\n                        ][\"selected\"] ? (\n                          <>\n                            {rft?.options?.map((ft, ft_index) => (\n                              <div\n                                className={style.gcci_container}\n                                key={`${ft?.subjectNam}${ft_index}`}\n                              >\n                                <label\n                                  className={style.ccc}\n                                  style={{\n                                    display: \"block\",\n                                    marginLeft: \"5.9rem\",\n                                  }}\n                                >\n                                  <span className={style.form_input}>\n                                    {ft_index + 1}). {ft?.subjectName ?? \"\"}\n                                  </span>\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={\n                                      isCheck\n                                        ? // ? defaultValue &&\n                                          //   defaultValue[index] &&\n                                          //   defaultValue[index][\n                                          //     ft_index +\n                                          //       ch?.form_checklist_typo_option_pl\n                                          //         ?.length\n                                          //   ] &&\n                                          //   defaultValue &&\n                                          //   defaultValue[index][\n                                          //     ft_index +\n                                          //       ch?.form_checklist_typo_option_pl\n                                          //         ?.length\n                                          //   ][\"parentIndex\"] === r_index &&\n                                          //   defaultValue &&\n                                          //   defaultValue[index][\n                                          //     ft_index +\n                                          //       ch?.form_checklist_typo_option_pl\n                                          //         ?.length\n                                          //   ][\"selected\"]\n\n                                          defaultValue &&\n                                          defaultValue[index] &&\n                                          defaultValue[index][\n                                            `${r_index}${\n                                              ft_index +\n                                              ch?.form_checklist_typo_option_pl\n                                                ?.length\n                                            }`\n                                          ] &&\n                                          defaultValue[index][\n                                            `${r_index}${\n                                              ft_index +\n                                              ch?.form_checklist_typo_option_pl\n                                                ?.length\n                                            }`\n                                          ][\"selected\"]\n                                        : false\n                                    }\n                                    onChange={(e) =>\n                                      onChange(\n                                        e,\n                                        parentKey,\n                                        index,\n                                        `${r_index}${\n                                          ft_index +\n                                          ch?.form_checklist_typo_option_pl\n                                            ?.length\n                                        }`,\n                                        {\n                                          min: ch?.form_checklist_rule,\n                                          max: ch?.form_checklist_rule_max,\n                                          masterId: ft?._id,\n                                          or_subject: \"YES\",\n                                          parentIndex: r_index,\n                                          parentWholeKey: `${r_index}${ch?.form_checklist_typo_option_pl?.length}OR`,\n                                          maxCount:\n                                            ch?.form_checklist_major_select_max,\n                                          nestedMaxCount:\n                                            ch?.form_checklist_nested_select_min,\n                                        }\n                                      )\n                                    }\n                                    disabled={disabled}\n                                  />\n                                  <span className={style.checkmark}></span>\n                                </label>\n                                {defaultValue &&\n                                defaultValue[index] &&\n                                defaultValue[index]?.major_subject?.includes(\n                                  ft?._id\n                                ) ? (\n                                  <CreateButton\n                                    label=\"dse\"\n                                    onAction={() =>\n                                      onMajorSubject(parentKey, index, ft?._id)\n                                    }\n                                    customStyle={{\n                                      margin: \"0\",\n                                      marginTop: \"-9px\",\n                                      padding: \"0 0.8rem\",\n                                      width: \"fit-content\",\n                                      backgroundColor: \"#001a72\",\n                                      color: \"#ffffff\",\n                                    }}\n                                  />\n                                ) : isGroupSelected &&\n                                  defaultValue &&\n                                  defaultValue[index] &&\n                                  defaultValue[index][\n                                    `${r_index}${\n                                      ft_index +\n                                      ch?.form_checklist_typo_option_pl?.length\n                                    }`\n                                  ] &&\n                                  defaultValue[index][\n                                    `${r_index}${\n                                      ft_index +\n                                      ch?.form_checklist_typo_option_pl?.length\n                                    }`\n                                  ][\"selected\"] &&\n                                  defaultValue[index][\"max_major_subject\"] >\n                                    0 ? (\n                                  <CreateButton\n                                    label=\"dse\"\n                                    onAction={() =>\n                                      onMajorSubject(parentKey, index, ft?._id)\n                                    }\n                                    customStyle={{\n                                      margin: \"0\",\n                                      marginTop: \"-9px\",\n                                      padding: \"0 0.8rem\",\n                                      width: \"fit-content\",\n                                    }}\n                                  />\n                                ) : null}\n                                {defaultValue &&\n                                defaultValue[index] &&\n                                defaultValue[index]?.nested_subject?.includes(\n                                  ft?._id\n                                ) ? (\n                                  <CreateButton\n                                    label={\n                                      ch?.form_checklist_nested_select_name ??\n                                      \"\"\n                                    }\n                                    onAction={() =>\n                                      onNestedSubject(parentKey, index, {\n                                        sub_id: ft?._id,\n                                      })\n                                    }\n                                    customStyle={{\n                                      margin: \"0\",\n                                      marginTop: \"-9px\",\n                                      padding: \"0 0.8rem\",\n                                      width: \"fit-content\",\n                                      backgroundColor: \"#001a72\",\n                                      color: \"#ffffff\",\n                                    }}\n                                  />\n                                ) : isGroupSelected &&\n                                  defaultValue &&\n                                  defaultValue[index] &&\n                                  defaultValue[index][\n                                    `${r_index}${\n                                      ft_index +\n                                      ch?.form_checklist_typo_option_pl?.length\n                                    }`\n                                  ] &&\n                                  defaultValue[index][\n                                    `${r_index}${\n                                      ft_index +\n                                      ch?.form_checklist_typo_option_pl?.length\n                                    }`\n                                  ][\"selected\"] &&\n                                  defaultValue[index][\"nested_select_min\"] >\n                                    0 ? (\n                                  <CreateButton\n                                    label={\n                                      ch?.form_checklist_nested_select_name ??\n                                      \"\"\n                                    }\n                                    onAction={() =>\n                                      onNestedSubject(parentKey, index, {\n                                        sub_id: ft?._id,\n                                      })\n                                    }\n                                    customStyle={{\n                                      margin: \"0\",\n                                      marginTop: \"-9px\",\n                                      padding: \"0 0.8rem\",\n                                      width: \"fit-content\",\n                                    }}\n                                  />\n                                ) : null}\n                              </div>\n                            ))}\n                          </>\n                        ) : null}\n                      </Fragment>\n                    )\n                  )}\n                </>\n              ) : null}\n            </Fragment>\n          )\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default GroupCustomCheckboxItem;\n"],"names":["admissionModeratorAccess","ALL_FEE_ACCESS","MULTI_APP_ACCESS","INQUIRY_ACCESS","REFUND_ACCESS","PENDING_FEE_ACCESS","ONE_TAB_ACCESS","DATA_EXPORT_ACCESS","ONGOING_ACCESS","admissionOneTabAccess","Application","Selected","Confirmed","Allotted","Cancelled","admissionTabAccessList","label","id","urlKey","groupIs","optionalSubjectCombineWithName","val","ft","dt","concat","subjectName","admissionModeratorUrlRedirect","subUrl","authorizedKey","nestedUrl","ONGOING_VIEW_ACCESS","COMBINED_APP_ACCESS","admissionIntakeType","key","name","instituteStudentAddSectionFunction","builder","mutation","query","data","url","formId","method","POST","body","bodyParameter","instituteStudentSectionAddChecklistFunction","instituteStudentRearrangeSectionFunction","PATCH","instituteStudentUpdateSectionChecklistFunction","instituteStudentFormDetailFunction","transformResponse","response","section","serializeQueryArgs","_ref","endpointName","forceRefetch","_ref2","currentArg","previousArg","instituteStudentToggleChecklistFunction","formAddRaggingUndertakingFunction","section_stats","formAddFormImageFunction","departmentStudentAddSectionFunction","departmentStudentSectionAddChecklistFunction","departmentStudentRearrangeSectionFunction","departmentStudentUpdateSectionChecklistFunction","departmentStudentFormDetailFunction","_ref3","_ref4","departmentStudentToggleChecklistFunction","studentApplyFormFieldDetailFunction","flow","flowId","apk","aid","ins_form","app_form","depart_form","_ref5","_ref6","studentProfileAboutDetailFunction","sid","result","_ref7","_ref8","studentEditProfileAboutDetailFunction","_ref9","_ref10","instituteStudentApiDynamic","instituteStudentApi","injectEndpoints","endpoints","instituteStudentAddSection","instituteStudentSectionAddChecklist","instituteStudentRearrangeSection","instituteStudentUpdateSectionChecklist","instituteStudentFormDetail","instituteStudentToggleChecklist","formAddRaggingUndertaking","formAddFormImage","departmentStudentAddSection","departmentStudentSectionAddChecklist","departmentStudentRearrangeSection","departmentStudentUpdateSectionChecklist","departmentStudentFormDetail","departmentStudentToggleChecklist","studentProfileAboutDetail","studentApplyFormFieldDetail","studentEditProfileAboutDetail","useInstituteStudentAddSectionMutation","useInstituteStudentSectionAddChecklistMutation","useInstituteStudentRearrangeSectionMutation","useInstituteStudentUpdateSectionChecklistMutation","useInstituteStudentFormDetailQuery","useInstituteStudentToggleChecklistMutation","useFormAddRaggingUndertakingMutation","useFormAddFormImageMutation","useDepartmentStudentAddSectionMutation","useDepartmentStudentSectionAddChecklistMutation","useDepartmentStudentRearrangeSectionMutation","useDepartmentStudentUpdateSectionChecklistMutation","useDepartmentStudentFormDetailQuery","useDepartmentStudentToggleChecklistMutation","useStudentProfileAboutDetailQuery","useStudentApplyFormFieldDetailQuery","useStudentEditProfileAboutDetailQuery","useInstituteStudentAddSection","useInstituteStudentSectionAddChecklist","useInstituteStudentRearrangeSection","useInstituteStudentUpdateSectionChecklist","useInstituteStudentFormDetail","args","refetch","isFetching","skip","instituteStudentFormDetailRefetch","instituteStudentFormDetailLoading","useInstituteStudentToggleChecklist","useFormAddRaggingUndertaking","useFormAddFormImage","useDepartmentStudentAddSection","useDepartmentStudentSectionAddChecklist","useDepartmentStudentRearrangeSection","useDepartmentStudentUpdateSectionChecklist","useDepartmentStudentFormDetail","departmentStudentFormDetailRefetch","departmentStudentFormDetailLoading","useDepartmentStudentToggleChecklist","useStudentProfileAboutDetail","studentProfileAboutDetailRefetch","studentProfileAboutDetailLoading","useStudentApplyFormFieldDetail","studentApplyFormFieldDetailRefetch","studentApplyFormFieldDetailLoading","useStudentEditProfileAboutDetail","studentEditProfileAboutDetailRefetch","studentEditProfileAboutDetailLoading","options","onChange","defaultValue","customFormInputContainer","customFormInputLabel","errorShow","msg","disabled","isCheck","children","t","useTranslation","_jsx","_Fragment","_jsxs","className","style","form_input_container","form_input_label","form_input_label_error","map","ch","ccc","form_input","fontWeight","color","marginLeft","fontSize","type","checked","includes","checkmark","parentKey","errorShowKey","onMajorSubject","onNestedSubject","isGroupSelected","index","_ch$form_checklist_na","_ch$form_checklist_na2","_ch$form_checklist_ty","_ch$form_checklist_na3","_ch$form_checklist_ty2","_ch$form_checklist_ty3","_ch$form_checklist_ty4","form_checklist_typo","gcci_container","form_checklist_name","Fragment","display","marginBottom","e","min","form_checklist_rule","max","form_checklist_rule_max","or_subject","fixedSubject","form_checklist_typo_option_pl","maxCount","form_checklist_major_select_max","nestedMaxCount","form_checklist_nested_select_min","ft_index","_ft$subjectName","_defaultValue$index","_defaultValue$index$m","_defaultValue$index2","_defaultValue$index2$","_ch$form_checklist_ne","_ch$form_checklist_ne2","major_subject","_id","CreateButton","onAction","customStyle","margin","marginTop","padding","width","backgroundColor","nested_subject","form_checklist_nested_select_name","sub_id","subjectNam","_ft$subjectName2","_defaultValue$index3","_defaultValue$index3$","_defaultValue$index4","_defaultValue$index4$","_ch$form_checklist_ne3","_ch$form_checklist_ne4","masterId","form_checklist_typo_option_pl_optional","length","rft","r_index","_ch$form_checklist_ty5","_ch$form_checklist_ty6","_ch$form_checklist_ty7","_ch$form_checklist_ty8","_ch$form_checklist_ty9","_ch$form_checklist_ty11","_ch$form_checklist_ty12","_rft$options","_ch$form_checklist_ty10","_ft$subjectName3","_ch$form_checklist_ty13","_ch$form_checklist_ty14","_defaultValue$index5","_defaultValue$index5$","_ch$form_checklist_ty17","_ch$form_checklist_ty18","_defaultValue$index6","_defaultValue$index6$","_ch$form_checklist_ne5","_ch$form_checklist_ty19","_ch$form_checklist_ty20","_ch$form_checklist_ne6","_ch$form_checklist_ty15","_ch$form_checklist_ty16","parentIndex","parentWholeKey"],"sourceRoot":""}