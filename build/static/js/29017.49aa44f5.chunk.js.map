{"version":3,"file":"static/js/29017.49aa44f5.chunk.js","mappings":"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","sources":["hooks/member_tab/admission-api.js","services/admission/admissionApiDynamic.js"],"sourcesContent":["import {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllAppAtInstituteQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchCancelStatusModeMutation,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetAllClassesQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useGetAllDepartmentQuery,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetNewApplicationMutation,\n  useGetOneApplicationQuery,\n  useGetUserCancelMutation,\n  useGetUserConfirmMutation,\n  useNewUserApplyMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useRetrieveMarkCompleteMutation,\n  useRetrieveNewClassAllotMutation,\n  useRetrievePaidRemainFeeMutation,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n  useGetDailyCollectionByAdmissionQuery,\n  useEditStudentGrNumberMutation,\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} from \"../../services/admission/admissionApiDynamic\";\n\nexport const useAssignAdmissionHead = () => {\n  const [assignAdmissionHead] = useActivateAdmissionHeadMutation();\n  return [assignAdmissionHead];\n};\n\nexport const useEditAdmission = () => {\n  const [editAdmission] = useEditAdmissionMutation();\n  return [editAdmission];\n};\n\nexport const useGetAdmissionDetail = (args) => {\n  const { data: getAdmissionDetail, refetch: getAdmissionDetailRefetch } =\n    useFetchAdmissionDetailQuery(args.data, { skip: args.skip });\n  return { getAdmissionDetail, getAdmissionDetailRefetch };\n};\n\nexport const useAllOngoingApp = (args) => {\n  const { data: allOngoingApp, refetch: allOngoingAppRefetch } =\n    useFetchAllOngoingAppQuery(args.data, { skip: args.skip });\n  return { allOngoingApp, allOngoingAppRefetch };\n};\n\nexport const useAllCompletedApp = (args) => {\n  const { data: allCompletedApp, refetch: allCompletedAppRefetch } =\n    useFetchAllCompletedAppQuery(args.data, { skip: args.skip });\n  return { allCompletedApp, allCompletedAppRefetch };\n};\n\nexport const useAllAppAtInstitute = (args) => {\n  const { data: allAppAtInstitute, refetch: allAppAtInstituteRefetch } =\n    useFetchAllAppAtInstituteQuery(args.data, { skip: args.skip });\n  return { allAppAtInstitute, allAppAtInstituteRefetch };\n};\n\nexport const useNewUserApply = () => {\n  const [newUserApply] = useNewUserApplyMutation();\n  return [newUserApply];\n};\nexport const useCreateNewApplication = () => {\n  const [createNewApplication] = useGetNewApplicationMutation();\n  return [createNewApplication];\n};\n\nexport const useGetAllRequest = (args) => {\n  const { data: getAllRequestList, refetch: getAllRequestListRefetch } =\n    useGetAllRequestQuery(args.data, { skip: args.skip });\n  return { getAllRequestList, getAllRequestListRefetch };\n};\nexport const useGetAllSelect = (args) => {\n  const { data: getAllSelectList, refetch: getAllSelectListRefetch } =\n    useGetAllSelectQuery(args.data, { skip: args.skip });\n  return { getAllSelectList, getAllSelectListRefetch };\n};\nexport const useGetAllConfirm = (args) => {\n  const { data: getAllConfirmList, refetch: getAllConfirmListRefetch } =\n    useGetAllConfirmQuery(args.data, { skip: args.skip });\n  return { getAllConfirmList, getAllConfirmListRefetch };\n};\n\nexport const useGetAllConfirmMultiselect = (args) => {\n  const {\n    data: getAllConfirmListMulitselect,\n    refetch: getAllConfirmListMulitselectRefetch,\n  } = useGetAllConfirmMultiselectQuery(args.data, { skip: args.skip });\n  return { getAllConfirmListMulitselect, getAllConfirmListMulitselectRefetch };\n};\n\nexport const useSelectAdmissionApplicant = () => {\n  const [selectAdmissionApplicant] = useFetchUserSelectAppMutation();\n  return [selectAdmissionApplicant];\n};\nexport const useCancelAdmissionApplicant = () => {\n  const [cancelAdmissionApplicant] = useFetchUserCancelAppMutation();\n  return [cancelAdmissionApplicant];\n};\nexport const useStudentPayMode = () => {\n  const [studentPayMode] = useFetchUserSelectStatusAppMutation();\n  return [studentPayMode];\n};\nexport const useApplicantAdmissionConfirm = () => {\n  const [confirmAppliacntAdmission] = useGetUserConfirmMutation();\n  return [confirmAppliacntAdmission];\n};\nexport const useApplicantAdmissionCancel = () => {\n  const [cancelAppliacntAdmission] = useGetUserCancelMutation();\n  return [cancelAppliacntAdmission];\n};\nexport const useGetAllClasses = (args) => {\n  const { data: getAllClassesList, refetch: getAllClassesListRefetch } =\n    useGetAllClassesQuery(args.data, { skip: args.skip });\n  return { getAllClassesList, getAllClassesListRefetch };\n};\n\nexport const useApplicantAdmissionAllotSeat = () => {\n  const [applicantAllotSeat] = useRetrieveNewClassAllotMutation();\n  return [applicantAllotSeat];\n};\nexport const useApplicationComplete = () => {\n  const [completeAdmissionApplication] = useRetrieveMarkCompleteMutation();\n  return [completeAdmissionApplication];\n};\n\nexport const useApplicantAdmissionRemainingFees = () => {\n  const [applicantRemainingFees] = useRetrievePaidRemainFeeMutation();\n  return [applicantRemainingFees];\n};\n\nexport const useOneApplicationDetail = (args) => {\n  const { data: oneApplicationDetail, refetch: oneApplicationDetailRefetch } =\n    useGetOneApplicationQuery(args.apid, { skip: args.skip });\n  return { oneApplicationDetail, oneApplicationDetailRefetch };\n};\n\nexport const useGetAllDepartment = (args) => {\n  const { data: allDepartmentList, refetch: allDepartmentListRefetch } =\n    useGetAllDepartmentQuery(args.aid, { skip: args.skip });\n  return { allDepartmentList, allDepartmentListRefetch };\n};\n\nexport const useCancelStudentApplicationStatus = () => {\n  const [cancelApplication] = useFetchCancelStatusModeMutation();\n  return [cancelApplication];\n};\n\nexport const useRenderStudentAdmissionFees = (args) => {\n  const {\n    data: sudentAdmissionFeesList,\n    refetch: sudentAdmissionFeesListRefetch,\n  } = useRenderStudentAdmissionFeesQuery(args.sid, { skip: args.skip });\n  return { sudentAdmissionFeesList, sudentAdmissionFeesListRefetch };\n};\n\nexport const useCollectApplicantDocs = () => {\n  const [collectDocs] = useCollectApplicantDocsMutation();\n  return [collectDocs];\n};\nexport const useAdmissionBatchList = (args) => {\n  const { data: admissionBatchList, refetch: admissionBatchListRefetch } =\n    useAdmissionBatchListQuery(args.aid, { skip: args.skip });\n  return { admissionBatchList, admissionBatchListRefetch };\n};\n\nexport const useAdmissionAllottedList = (args) => {\n  const { data: admissionAllottedList, refetch: admissionAllottedListRefetch } =\n    useAdmissionAllottedListQuery(args.data, { skip: args.skip });\n  return { admissionAllottedList, admissionAllottedListRefetch };\n};\nexport const useAdmissionCancelledList = (args) => {\n  const {\n    data: admissionCancelledList,\n    refetch: admissionCancelledListRefetch,\n  } = useAdmissionCancelledListQuery(args.data, { skip: args.skip });\n  return { admissionCancelledList, admissionCancelledListRefetch };\n};\nexport const useAdmissionClassMasterList = (args) => {\n  const {\n    data: admissionClassMasterList,\n    refetch: admissionClassMasterListRefetch,\n  } = useAdmissionClassMasterListQuery(args.did, { skip: args.skip });\n  return { admissionClassMasterList, admissionClassMasterListRefetch };\n};\n\nexport const useAddEnquiry = () => {\n  const [addEnquiry] = useAddEnquiryMutation();\n  return [addEnquiry];\n};\n\nexport const useGetAllEnquiryList = (args) => {\n  const { data: getAllEnquiryList, refetch: getAllEnquiryListRefetch } =\n    useGetAllEnquiryListQuery(args.data, { skip: args.skip });\n  return { getAllEnquiryList, getAllEnquiryListRefetch };\n};\nexport const useGetOneEnquiry = (args) => {\n  const { data: oneEnquiryDetail, refetch: oneEnquiryDetailRefetch } =\n    useGetOneEnquiryQuery(args.eid, { skip: args.skip });\n  return { oneEnquiryDetail, oneEnquiryDetailRefetch };\n};\n\nexport const useOneEnquiryAction = () => {\n  const [oneEnquiryAction] = useOneEnquiryActionMutation();\n  return [oneEnquiryAction];\n};\n\nexport const useDirectJoinFormAdmission = () => {\n  const [directJoinFormAdmission] = useDirectJoinFormAdmissionMutation();\n  return [directJoinFormAdmission];\n};\nexport const useSubmitAmountToFinanace = () => {\n  const [submitAmountToFinanace] = useSubmitAmountToFinanaceMutation();\n  return [submitAmountToFinanace];\n};\n\nexport const useGetAccountWithNumber = (args) => {\n  const { data: getAccountWithNumber, refetch: getAccountWithNumberRefetch } =\n    useGetAccountWithNumberQuery(args.phoneKey, { skip: args.skip });\n  return { getAccountWithNumber, getAccountWithNumberRefetch };\n};\nexport const useEditFeeStructure = () => {\n  const [editFeeStructure] = useEditFeeStructureMutation();\n  return [editFeeStructure];\n};\n\nexport const useConfirmStudentModeByAdmissionAdmin = () => {\n  const [confirmStudentModeByAdmission] =\n    useConfirmStudentModeByAdmissionAdminMutation();\n  return [confirmStudentModeByAdmission];\n};\nexport const useRejectStudentModeByAdmissionAdmin = () => {\n  const [rejectStudentModeByAdmission] =\n    useRejectStudentModeByAdmissionAdminMutation();\n  return [rejectStudentModeByAdmission];\n};\n\nexport const useGetReceiptByAdmission = (args) => {\n  const { data: getReceiptByAdmission, refetch: getReceiptByAdmissionRefetch } =\n    useGetReceiptByAdmissionQuery(args.data, { skip: args.skip });\n  return { getReceiptByAdmission, getReceiptByAdmissionRefetch };\n};\n\nexport const useReceiptActionByAdmission = () => {\n  const [receiptActionByAdmission] = useReceiptActionByAdmissionMutation();\n  return [receiptActionByAdmission];\n};\nexport const useReApplyReceiptByStudent = () => {\n  const [reApplyReceiptByStudent] = useReApplyReceiptByStudentMutation();\n  return [reApplyReceiptByStudent];\n};\n\nexport const useGetFeeReceiptDetail = (args) => {\n  const { data: getFeeReceiptDetail, refetch: getFeeReceiptDetailRefetch } =\n    useGetFeeReceiptDetailQuery(args.rid, { skip: args.skip });\n  return { getFeeReceiptDetail, getFeeReceiptDetailRefetch };\n};\n\nexport const useGetDocumentByAdmission = (args) => {\n  const {\n    data: getDocumentByAdmission,\n    refetch: getDocumentByAdmissionRefetch,\n  } = useGetDocumentByAdmissionQuery(args.data, { skip: args.skip });\n  return { getDocumentByAdmission, getDocumentByAdmissionRefetch };\n};\n\nexport const useAddDocumentByAdmission = () => {\n  const [addDocumentByAdmission] = useAddDocumentByAdmissionMutation();\n  return [addDocumentByAdmission];\n};\nexport const useUpdateDocumentByAdmission = () => {\n  const [updateDocumentByAdmission] = useUpdateDocumentByAdmissionMutation();\n  return [updateDocumentByAdmission];\n};\n\nexport const useDeleteDocumentByAdmission = () => {\n  const [deleteDocumentByAdmission] = useDeleteDocumentByAdmissionMutation();\n  return [deleteDocumentByAdmission];\n};\n\nexport const useRefundAmountByAdmissionAdmin = () => {\n  const [refundAmountByAdmissionAdmin] =\n    useRefundAmountByAdmissionAdminMutation();\n  return [refundAmountByAdmissionAdmin];\n};\n\nexport const useGetRefundByAdmission = (args) => {\n  const { data: getRefundByAdmission, refetch: getRefundByAdmissionRefetch } =\n    useGetRefundByAdmissionQuery(args.data, { skip: args.skip });\n  return { getRefundByAdmission, getRefundByAdmissionRefetch };\n};\n\nexport const useUpdateRemarkByAdmissionAdmin = () => {\n  const [updateRemarkByAdmissionAdmin] =\n    useUpdateRemarkByAdmissionAdminMutation();\n  return [updateRemarkByAdmissionAdmin];\n};\n\nexport const useExportFilterDataByAdmission = () => {\n  const [exportFilterDataByAdmission] =\n    useExportFilterDataByAdmissionMutation();\n  return [exportFilterDataByAdmission];\n};\n\nexport const useGetAllExcelByAdmissionAdmin = (args) => {\n  const {\n    data: getAllExcelByAdmissionAdmin,\n    refetch: getAllExcelByAdmissionAdminRefetch,\n  } = useGetAllExcelByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getAllExcelByAdmissionAdmin, getAllExcelByAdmissionAdminRefetch };\n};\n\nexport const usePayAdmissionFeeByStudent = () => {\n  const [payAdmissionFeeByStudent] = usePayAdmissionFeeByStudentMutation();\n  return [payAdmissionFeeByStudent];\n};\n\nexport const useUpdateExcelByAdmissionAdmin = () => {\n  const [updateExcelByAdmissionAdmin] =\n    useUpdateExcelByAdmissionAdminMutation();\n  return [updateExcelByAdmissionAdmin];\n};\n\nexport const useDeleteExcelByAdmissionAdmin = () => {\n  const [deleteExcelByAdmissionAdmin] =\n    useDeleteExcelByAdmissionAdminMutation();\n  return [deleteExcelByAdmissionAdmin];\n};\n\nexport const useUpdateDocumentByAdmissionAdmin = () => {\n  const [updateDocumentByAdmissionAdmin] =\n    useUpdateDocumentByAdmissionAdminMutation();\n  return [updateDocumentByAdmissionAdmin];\n};\n\nexport const useDeleteDocumentByAdmissionAdmin = () => {\n  const [deleteDocumentByAdmissionAdmin] =\n    useDeleteDocumentByAdmissionAdminMutation();\n  return [deleteDocumentByAdmissionAdmin];\n};\nexport const useGetModeratorByAdmissionAdmin = (args) => {\n  const {\n    data: getModeratorByAdmissionAdmin,\n    refetch: getModeratorByAdmissionAdminRefetch,\n  } = useGetModeratorByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getModeratorByAdmissionAdmin, getModeratorByAdmissionAdminRefetch };\n};\n\nexport const useAddModeratorByAdmissionAdmin = () => {\n  const [addModeratorByAdmissionAdmin] =\n    useAddModeratorByAdmissionAdminMutation();\n  return [addModeratorByAdmissionAdmin];\n};\n\nexport const useUpdateModeratorByAdmissionAdmin = () => {\n  const [updateModeratorByAdmissionAdmin] =\n    useUpdateModeratorByAdmissionAdminMutation();\n  return [updateModeratorByAdmissionAdmin];\n};\n\nexport const useDeleteModeratorByAdmissionAdmin = () => {\n  const [deleteModeratorByAdmissionAdmin] =\n    useDeleteModeratorByAdmissionAdminMutation();\n  return [deleteModeratorByAdmissionAdmin];\n};\n\nexport const useAdmissionGetSiteInfo = (args) => {\n  const { data: admissionGetSiteInfo, refetch: admissionGetSiteInfoRefetch } =\n    useAdmissionGetSiteInfoQuery(args.aid, { skip: args.skip });\n  return { admissionGetSiteInfo, admissionGetSiteInfoRefetch };\n};\n\nexport const useAdmissionUpdateSiteInfo = () => {\n  const [admissionUpdateSiteInfo] = useAdmissionUpdateSiteInfoMutation();\n  return [admissionUpdateSiteInfo];\n};\n\n//////////////\nexport const useGetScholarshipListAdmission = (args) => {\n  const {\n    data: getScholarshipListAdmission,\n    refetch: getScholarshipListAdmissionRefetch,\n  } = useGetScholarshipListAdmissionQuery(args.data, { skip: args.skip });\n  return { getScholarshipListAdmission, getScholarshipListAdmissionRefetch };\n};\n\nexport const useAddScholarshipAdmission = () => {\n  const [addScholarshipAdmission] = useAddScholarshipAdmissionMutation();\n  return [addScholarshipAdmission];\n};\nexport const useGetOneScholarshipAdmission = (args) => {\n  const {\n    data: getOneScholarshipAdmission,\n    refetch: getOneScholarshipAdmissionRefetch,\n  } = useGetOneScholarshipAdmissionQuery(args.sid, { skip: args.skip });\n  return { getOneScholarshipAdmission, getOneScholarshipAdmissionRefetch };\n};\n\nexport const useGetOneScholarshipAllCandidateAdmission = (args) => {\n  const {\n    data: getOneScholarshipAllCandidateAdmission,\n    refetch: getOneScholarshipAllCandidateAdmissionRefetch,\n  } = useGetOneScholarshipAllCandidateAdmissionQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    getOneScholarshipAllCandidateAdmission,\n    getOneScholarshipAllCandidateAdmissionRefetch,\n  };\n};\n\nexport const useOneSchloarshipActionAdmission = () => {\n  const [oneSchloarshipActionAdmission] =\n    useOneSchloarshipActionAdmissionMutation();\n  return [oneSchloarshipActionAdmission];\n};\n\nexport const useAddScholarshipFundCorpusAdmission = () => {\n  const [addScholarshipFundCorpusAdmission] =\n    useAddScholarshipFundCorpusAdmissionMutation();\n  return [addScholarshipFundCorpusAdmission];\n};\nexport const useGetScholarshipFundCorpusAdmission = (args) => {\n  const {\n    data: getScholarshipFundCorpusAdmission,\n    refetch: getScholarshipFundCorpusAdmissionRefetch,\n  } = useGetScholarshipFundCorpusAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getScholarshipFundCorpusAdmission,\n    getScholarshipFundCorpusAdmissionRefetch,\n  };\n};\n\nexport const useAddMoreScholarshipFundCorpusAdmission = () => {\n  const [addMoreScholarshipFundCorpusAdmission] =\n    useAddMoreScholarshipFundCorpusAdmissionMutation();\n  return [addMoreScholarshipFundCorpusAdmission];\n};\n\nexport const useUpdateApplicationByAdmission = () => {\n  const [updateApplicationByAdmission] =\n    useUpdateApplicationByAdmissionMutation();\n  return [updateApplicationByAdmission];\n};\n\nexport const useDeleteApplicationByAdmission = () => {\n  const [deleteApplicationByAdmission] =\n    useDeleteApplicationByAdmissionMutation();\n  return [deleteApplicationByAdmission];\n};\nexport const useForgetPasswordProtection = () => {\n  const [forgetPasswordProtection] = useForgetPasswordProtectionMutation();\n  return [forgetPasswordProtection];\n};\nexport const usePasswordProtectionToggle = () => {\n  const [passwordProtectionToggle] = usePasswordProtectionToggleMutation();\n  return [passwordProtectionToggle];\n};\nexport const usePasswordProtectionLogin = () => {\n  const [passwordProtectionLogin] = usePasswordProtectionLoginMutation();\n  return [passwordProtectionLogin];\n};\n\nexport const useUpdateFeeStructureByAppliationWise = () => {\n  const [updateFeeStructureByAppliationWise] =\n    useUpdateFeeStructureByAppliationWiseMutation();\n  return [updateFeeStructureByAppliationWise];\n};\n\nexport const useGetRefundedListByAdmission = (args) => {\n  const {\n    data: getRefundedListByAdmission,\n    refetch: getRefundedListByAdmissionRefetch,\n  } = useGetRefundedListByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getRefundedListByAdmission,\n    getRefundedListByAdmissionRefetch,\n  };\n};\n\nexport const useDirectJoinWithPayAdmission = () => {\n  const [directJoinFormWithPayAdmission] =\n    useDirectJoinFormWithPayAdmissionMutation();\n  return [directJoinFormWithPayAdmission];\n};\n\nexport const useCollectSetOffAdmissionFees = () => {\n  const [collectSetOffAdmissionFees] = useCollectSetOffAdmissionFeesMutation();\n  return [collectSetOffAdmissionFees];\n};\nexport const useAdmissionDocsActionByStudent = () => {\n  const [admissionDocsActionByStudent] =\n    useAdmissionDocsActionByStudentMutation();\n  return [admissionDocsActionByStudent];\n};\n\nexport const useScholarShipExcelByAdmission = () => {\n  const [scholarShipExcelByAdmission] =\n    useScholarShipExcelByAdmissionMutation();\n  return [scholarShipExcelByAdmission];\n};\nexport const useScholarShipExcelByInstitute = () => {\n  const [scholarShipExcelByInstitute] =\n    useScholarShipExcelByInstituteMutation();\n  return [scholarShipExcelByInstitute];\n};\n\nexport const useAddScholarNumberAdmission = () => {\n  const [addScholarNumberAdmission] = useAddScholarNumberAdmissionMutation();\n  return [addScholarNumberAdmission];\n};\n\nexport const useStudentDepartmentFees = (args) => {\n  const { data: studentDepartmentFees, refetch: studentDepartmentFeesRefetch } =\n    useStudentDepartmentFeesQuery(args.data, { skip: args.skip });\n  return { studentDepartmentFees, studentDepartmentFeesRefetch };\n};\n\nexport const useStudentBacklogFees = (args) => {\n  const { data: studentBacklogFees, refetch: studentBacklogFeesRefetch } =\n    useStudentBacklogFeesQuery(args.data, { skip: args.skip });\n  return { studentBacklogFees, studentBacklogFeesRefetch };\n};\n\nexport const useInternalFeeReceipt = (args) => {\n  const { data: internalFeeReceipt, refetch: internalFeeReceiptRefetch } =\n    useInternalFeeReceiptQuery(args.rid, { skip: args.skip });\n  return { internalFeeReceipt, internalFeeReceiptRefetch };\n};\n\nexport const useDropAdmissionFeesCardByAdmission = () => {\n  const [dropAdmissionFeesCardByAdmission] =\n    useDropAdmissionFeesCardByAdmissionMutation();\n  return [dropAdmissionFeesCardByAdmission];\n};\n\nexport const useAllApplicationByAdmission = (args) => {\n  const {\n    data: allApplicationByAdmission,\n    refetch: allApplicationByAdmissionRefetch,\n  } = useAllApplicationByAdmissionQuery(args.data, { skip: args.skip });\n  return { allApplicationByAdmission, allApplicationByAdmissionRefetch };\n};\n\nexport const useAddNewFeesByAdmission = () => {\n  const [addNewFeesByAdmission] = useAddNewFeesByAdmissionMutation();\n  return [addNewFeesByAdmission];\n};\n\nexport const useCollectNewAddFeesByAdmission = () => {\n  const [collectNewAddFeesByAdmission] =\n    useCollectNewAddFeesByAdmissionMutation();\n  return [collectNewAddFeesByAdmission];\n};\n\nexport const useGovernmentCollectNewAddFeesByAdmission = () => {\n  const [governmentCollectNewAddFeesByAdmission] =\n    useGovernmentCollectNewAddFeesByAdmissionMutation();\n  return [governmentCollectNewAddFeesByAdmission];\n};\n\nexport const useAdmissionReminder = () => {\n  const [admissionReminder] = useAdmissionReminderMutation();\n  return [admissionReminder];\n};\nexport const useAdmissionInstallmentEditFeesByAdmission = () => {\n  const [admissionInstallmentEditFeesByAdmission] =\n    useAdmissionInstallmentEditFeesByAdmissionMutation();\n  return [admissionInstallmentEditFeesByAdmission];\n};\n\nexport const useGetPendingCustomFilterByAdmission = (args) => {\n  const {\n    data: getPendingCustomFilterByAdmission,\n    refetch: getPendingCustomFilterByAdmissionRefetch,\n  } = useGetPendingCustomFilterByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getPendingCustomFilterByAdmission,\n    getPendingCustomFilterByAdmissionRefetch,\n  };\n};\n\nexport const useGetBatchStandardWithMultipleDepartment = () => {\n  const [getBatchStandardWithMultipleDepartment] =\n    useGetBatchStandardWithMultipleDepartmentMutation();\n  return [getBatchStandardWithMultipleDepartment];\n};\n\n// with new filter type\nexport const useAllAdmissionRemaining = () => {\n  const [allAdmissionRemaining] = useFetchAdmissionRemainingArrayMutation();\n  return [allAdmissionRemaining];\n};\n\nexport const useAllRemaining = (args) => {\n  const { data: allRemainingList, refetch: allRemainingListRefetch } =\n    useFetchAllRemainingArrayQuery(args.data, { skip: args.skip });\n  return { allRemainingList, allRemainingListRefetch };\n};\n\nexport const useGetDailyCollectionByAdmission = (args) => {\n  const {\n    data: getDailyCollectionByAdmission,\n    refetch: getDailyCollectionByAdmissionRefetch,\n  } = useGetDailyCollectionByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getDailyCollectionByAdmission,\n    getDailyCollectionByAdmissionRefetch,\n  };\n};\n\n// student gr edit\nexport const useEditStudentGrNumber = () => {\n  const [editStudentGrNumber] = useEditStudentGrNumberMutation();\n  return [editStudentGrNumber];\n};\n//\nexport const useAdmissionRevertBackSelectedToApplication = () => {\n  const [admissionRevertBackSelectedToApplication] =\n    useAdmissionRevertBackSelectedToApplicationMutation();\n  return [admissionRevertBackSelectedToApplication];\n};\nexport const useAdmissionRevertBackDocsToSelected = () => {\n  const [admissionRevertBackDocsToSelected] =\n    useAdmissionRevertBackDocsToSelectedMutation();\n  return [admissionRevertBackDocsToSelected];\n};\n\nexport const useRemoveFeesInstallmentCard = () => {\n  const [removeFeesInstallmentCard] = useRemoveFeesInstallmentCardMutation();\n  return [removeFeesInstallmentCard];\n};\n\nexport const useTransferApplicatToOtherApplication = () => {\n  const [transferApplicatToOtherApplication] =\n    useTransferApplicatToOtherApplicationMutation();\n  return [transferApplicatToOtherApplication];\n};\n\nexport const useExistStudentFeesExcelByAdmission = () => {\n  const [existStudentFeesExcelByAdmission] =\n    useExistStudentFeesExcelByAdmissionMutation();\n  return [existStudentFeesExcelByAdmission];\n};\nexport const useStudentValidaForApplicationByAdmission = () => {\n  const [studentValidaForApplicationByAdmission] =\n    useStudentValidaForApplicationByAdmissionMutation();\n  return [studentValidaForApplicationByAdmission];\n};\nexport const useStudentBankValidationByAdmission = () => {\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmissionMutation();\n  return [studentBankValidationByAdmission];\n};\n\nexport const useMarkCompleteToOngoingApplication = () => {\n  const [markCompleteToOngoingApplication] =\n    useMarkCompleteToOngoingApplicationMutation();\n  return [markCompleteToOngoingApplication];\n};\n\nexport const useGetReminderHistoryByAdmission = (args) => {\n  const {\n    data: getReminderHistoryByAdmission,\n    refetch: getReminderHistoryByAdmissionRefetch,\n  } = useGetReminderHistoryByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getReminderHistoryByAdmission,\n    getReminderHistoryByAdmissionRefetch,\n  };\n};\n\nexport const useGetOsReminderStudentList = () => {\n  const [getOsReminderStudentList] = useGetOsReminderStudentListMutation();\n  return [getOsReminderStudentList];\n};\nexport const useStudentScholarshipNumberDublicate = () => {\n  const [studentScholarshipNumberDublicate] =\n    useStudentScholarshipNumberDublicateMutation();\n  return [studentScholarshipNumberDublicate];\n};\n","import {\n  activateAdmission,\n  editAdmissionFunction,\n  fetchAdmission,\n  fetchOngoing,\n  fetchCompleted,\n  fetchRemainingArray,\n  fetchAdmissionRemainingArray,\n  atInstituteSearchApplication,\n  userApply,\n  newApplication,\n  fetchRequest,\n  fetchSelect,\n  fetchConfirm,\n  fetchConfirmAll,\n  userSelect,\n  userCancelApplication,\n  userSelectStatusMode,\n  userConfirm,\n  userCancel,\n  fetchClasses,\n  newClassAllot,\n  markComplete,\n  oneStudentFee,\n  paidRemainFee,\n  oneApplication,\n  allDepartment,\n  cancelStatusMode,\n  studentAdmission,\n  collectApplicantDocsFunction,\n  admissionBatchListFunction,\n  admissionAllottedListFunction,\n  admissionCancelledListFunction,\n  admissionClassMasterListFunction,\n  addEnquiryFunction,\n  getAllEnquiryListFunction,\n  getOneEnquiryFunction,\n  oneEnquiryActionFunction,\n  directJoinFormAdmissionFunction,\n  submitAmountToFinanaceFunction,\n  getAccountWithNumberFunction,\n  editFeeStructureFunction,\n  confirmStudentModeByAdmissionAdminFunction,\n  rejectStudentModeByAdmissionAdminFunction,\n  getReceiptByAdmissionFunction,\n  receiptActionByAdmissionFunction,\n  reApplyReceiptByStudentFunction,\n  getFeeReceiptDetailFunction,\n  getDocumentByAdmissionFuction,\n  addDocumentByAdmissionFuction,\n  updateDocumentByAdmissionFuction,\n  deleteDocumentByAdmissionFuction,\n  refundAmountByAdmissionAdminFunction,\n  getRefundByAdmissionFuction,\n  updateRemarkByAdmissionAdminFunction,\n  exportFilterDataByAdmissionFuction,\n  getAllExcelByAdmissionAdminFunction,\n  payAdmissionFeeByStudentFunction,\n  updateExcelByAdmissionAdminFunction,\n  deleteExcelByAdmissionAdminFunction,\n  updateDocumentByAdmissionAdminFunction,\n  deleteDocumentByAdmissionAdminFunction,\n  addModeratorByAdmissionAdminFunction,\n  getModeratorByAdmissionAdminFunction,\n  updateModeratorByAdmissionAdminFunction,\n  deleteModeratorByAdmissionAdminFunction,\n  admissionGetSiteInfoFunction,\n  admissionUpdateSiteInfoFunction,\n  getScholarshipListAdmissionFunction,\n  addScholarshipAdmissionFunction,\n  getOneScholarshipAdmissionFunction,\n  getOneScholarshipAllCandidateAdmissionFunction,\n  oneSchloarshipActionAdmissionFunction,\n  addScholarshipFundCorpusAdmissionFunction,\n  getScholarshipFundCorpusAdmissionFunction,\n  addMoreScholarshipFundCorpusAdmissionFunction,\n  updateApplicationByAdmissionFunction,\n  deleteApplicationByAdmissionFunction,\n  forgetPasswordProtectionFunction,\n  passwordProtectionToggleFunction,\n  passwordProtectionLoginFunction,\n  updateFeeStructureByAppliationWiseFunction,\n  getRefundedListByAdmissionFunction,\n  directJoinFormWithPayAdmissionFunction,\n  collectSetOffAdmissionFeesFunction,\n  admissionDocsActionByStudentFunction,\n  scholarShipExcelByAdmissionFunction,\n  scholarShipExcelByInstituteFunction,\n  addScholarNumberAdmissionFunction,\n  studentDepartmentFeesFunction,\n  studentBacklogFeesFunction,\n  internalFeeReceiptFunction,\n  dropAdmissionFeesCardByAdmissionFunction,\n  allApplicationByAdmissionFunction,\n  addNewFeesByAdmissionFunction,\n  collectNewAddFeesByAdmissionFunction,\n  governmentCollectNewAddFeesByAdmissionFunction,\n  admissionReminderFunction,\n  admissionInstallmentEditFeesByAdmissionFunction,\n  getPendingCustomFilterByAdmissionFunction,\n  getBatchStandardWithMultipleDepartmentFunction,\n  getDailyCollectionByAdmissionFunction,\n  editStudentGrNumberFunction,\n  //\n  admissionRevertBackSelectedToApplicationFunction,\n  admissionRevertBackDocsToSelectedFunction,\n  removeFeesInstallmentCardFunction,\n  transferApplicatToOtherApplicationFunction,\n  existStudentFeesExcelByAdmissionFunction,\n  studentValidaForApplicationByAdmissionFunction,\n  studentBankValidationByAdmissionFunction,\n  markCompleteToOngoingApplicationFunction,\n  getReminderHistoryByAdmissionFunction,\n  getOsReminderStudentListFunction,\n  studentScholarshipNumberDublicateFunction,\n} from \"./admissionBuilderAPI\";\nimport { admissionNewApi } from \"./admissionNewApi\";\n\n//////////eeghfrwjeghw\nexport const admissionApiDynamic = admissionNewApi.injectEndpoints({\n  endpoints: (builder) => ({\n    activateAdmissionHead: activateAdmission(builder),\n    editAdmission: editAdmissionFunction(builder),\n    fetchAdmissionDetail: fetchAdmission(builder),\n    fetchAllOngoingApp: fetchOngoing(builder),\n    fetchAllCompletedApp: fetchCompleted(builder),\n    fetchAllRemainingArray: fetchRemainingArray(builder),\n    fetchAdmissionRemainingArray: fetchAdmissionRemainingArray(builder),\n\n    fetchAllAppAtInstitute: atInstituteSearchApplication(builder),\n    newUserApply: userApply(builder),\n    getNewApplication: newApplication(builder),\n    getAllRequest: fetchRequest(builder),\n    getAllSelect: fetchSelect(builder),\n    getAllConfirm: fetchConfirm(builder),\n    getAllConfirmMultiselect: fetchConfirmAll(builder),\n    fetchUserSelectApp: userSelect(builder),\n    fetchUserCancelApp: userCancelApplication(builder),\n    fetchUserSelectStatusApp: userSelectStatusMode(builder),\n    getUserConfirm: userConfirm(builder),\n    getUserCancel: userCancel(builder),\n    getAllClasses: fetchClasses(builder),\n    retrieveNewClassAllot: newClassAllot(builder),\n    retrieveMarkComplete: markComplete(builder),\n    getOneViewStudentFee: oneStudentFee(builder),\n    retrievePaidRemainFee: paidRemainFee(builder),\n    getOneApplication: oneApplication(builder),\n    getAllDepartment: allDepartment(builder),\n    fetchCancelStatusMode: cancelStatusMode(builder),\n    renderStudentAdmissionFees: studentAdmission(builder),\n    collectApplicantDocs: collectApplicantDocsFunction(builder),\n    admissionBatchList: admissionBatchListFunction(builder),\n    admissionAllottedList: admissionAllottedListFunction(builder),\n    admissionCancelledList: admissionCancelledListFunction(builder),\n    admissionClassMasterList: admissionClassMasterListFunction(builder),\n    addEnquiry: addEnquiryFunction(builder),\n    getAllEnquiryList: getAllEnquiryListFunction(builder),\n    getOneEnquiry: getOneEnquiryFunction(builder),\n    oneEnquiryAction: oneEnquiryActionFunction(builder),\n    directJoinFormAdmission: directJoinFormAdmissionFunction(builder),\n    submitAmountToFinanace: submitAmountToFinanaceFunction(builder),\n    getAccountWithNumber: getAccountWithNumberFunction(builder),\n    editFeeStructure: editFeeStructureFunction(builder),\n    confirmStudentModeByAdmissionAdmin:\n      confirmStudentModeByAdmissionAdminFunction(builder),\n    rejectStudentModeByAdmissionAdmin:\n      rejectStudentModeByAdmissionAdminFunction(builder),\n\n    getReceiptByAdmission: getReceiptByAdmissionFunction(builder),\n    receiptActionByAdmission: receiptActionByAdmissionFunction(builder),\n    reApplyReceiptByStudent: reApplyReceiptByStudentFunction(builder),\n    getFeeReceiptDetail: getFeeReceiptDetailFunction(builder),\n    getDocumentByAdmission: getDocumentByAdmissionFuction(builder),\n    addDocumentByAdmission: addDocumentByAdmissionFuction(builder),\n    updateDocumentByAdmission: updateDocumentByAdmissionFuction(builder),\n    deleteDocumentByAdmission: deleteDocumentByAdmissionFuction(builder),\n    refundAmountByAdmissionAdmin: refundAmountByAdmissionAdminFunction(builder),\n    getRefundByAdmission: getRefundByAdmissionFuction(builder),\n    updateRemarkByAdmissionAdmin: updateRemarkByAdmissionAdminFunction(builder),\n    exportFilterDataByAdmission: exportFilterDataByAdmissionFuction(builder),\n    getAllExcelByAdmissionAdmin: getAllExcelByAdmissionAdminFunction(builder),\n    payAdmissionFeeByStudent: payAdmissionFeeByStudentFunction(builder),\n    updateExcelByAdmissionAdmin: updateExcelByAdmissionAdminFunction(builder),\n    deleteExcelByAdmissionAdmin: deleteExcelByAdmissionAdminFunction(builder),\n    updateDocumentByAdmissionAdmin:\n      updateDocumentByAdmissionAdminFunction(builder),\n    deleteDocumentByAdmissionAdmin:\n      deleteDocumentByAdmissionAdminFunction(builder),\n    addModeratorByAdmissionAdmin: addModeratorByAdmissionAdminFunction(builder),\n    getModeratorByAdmissionAdmin: getModeratorByAdmissionAdminFunction(builder),\n    updateModeratorByAdmissionAdmin:\n      updateModeratorByAdmissionAdminFunction(builder),\n    deleteModeratorByAdmissionAdmin:\n      deleteModeratorByAdmissionAdminFunction(builder),\n    admissionGetSiteInfo: admissionGetSiteInfoFunction(builder),\n    admissionUpdateSiteInfo: admissionUpdateSiteInfoFunction(builder),\n    getScholarshipListAdmission: getScholarshipListAdmissionFunction(builder),\n    addScholarshipAdmission: addScholarshipAdmissionFunction(builder),\n    getOneScholarshipAdmission: getOneScholarshipAdmissionFunction(builder),\n    getOneScholarshipAllCandidateAdmission:\n      getOneScholarshipAllCandidateAdmissionFunction(builder),\n    oneSchloarshipActionAdmission:\n      oneSchloarshipActionAdmissionFunction(builder),\n    addScholarshipFundCorpusAdmission:\n      addScholarshipFundCorpusAdmissionFunction(builder),\n    getScholarshipFundCorpusAdmission:\n      getScholarshipFundCorpusAdmissionFunction(builder),\n    addMoreScholarshipFundCorpusAdmission:\n      addMoreScholarshipFundCorpusAdmissionFunction(builder),\n    updateApplicationByAdmission: updateApplicationByAdmissionFunction(builder),\n    deleteApplicationByAdmission: deleteApplicationByAdmissionFunction(builder),\n    forgetPasswordProtection: forgetPasswordProtectionFunction(builder),\n    passwordProtectionToggle: passwordProtectionToggleFunction(builder),\n    passwordProtectionLogin: passwordProtectionLoginFunction(builder),\n    updateFeeStructureByAppliationWise:\n      updateFeeStructureByAppliationWiseFunction(builder),\n\n    getRefundedListByAdmission: getRefundedListByAdmissionFunction(builder),\n    directJoinFormWithPayAdmission:\n      directJoinFormWithPayAdmissionFunction(builder),\n    collectSetOffAdmissionFees: collectSetOffAdmissionFeesFunction(builder),\n    admissionDocsActionByStudent: admissionDocsActionByStudentFunction(builder),\n    scholarShipExcelByAdmission: scholarShipExcelByAdmissionFunction(builder),\n    scholarShipExcelByInstitute: scholarShipExcelByInstituteFunction(builder),\n    addScholarNumberAdmission: addScholarNumberAdmissionFunction(builder),\n    studentDepartmentFees: studentDepartmentFeesFunction(builder),\n    studentBacklogFees: studentBacklogFeesFunction(builder),\n    internalFeeReceipt: internalFeeReceiptFunction(builder),\n    dropAdmissionFeesCardByAdmission:\n      dropAdmissionFeesCardByAdmissionFunction(builder),\n\n    allApplicationByAdmission: allApplicationByAdmissionFunction(builder),\n    addNewFeesByAdmission: addNewFeesByAdmissionFunction(builder),\n    collectNewAddFeesByAdmission: collectNewAddFeesByAdmissionFunction(builder),\n    governmentCollectNewAddFeesByAdmission:\n      governmentCollectNewAddFeesByAdmissionFunction(builder),\n    admissionReminder: admissionReminderFunction(builder),\n    admissionInstallmentEditFeesByAdmission:\n      admissionInstallmentEditFeesByAdmissionFunction(builder),\n    getPendingCustomFilterByAdmission:\n      getPendingCustomFilterByAdmissionFunction(builder),\n    getBatchStandardWithMultipleDepartment:\n      getBatchStandardWithMultipleDepartmentFunction(builder),\n    getDailyCollectionByAdmission:\n      getDailyCollectionByAdmissionFunction(builder),\n    editStudentGrNumber: editStudentGrNumberFunction(builder),\n    admissionRevertBackSelectedToApplication:\n      admissionRevertBackSelectedToApplicationFunction(builder),\n    admissionRevertBackDocsToSelected:\n      admissionRevertBackDocsToSelectedFunction(builder),\n    removeFeesInstallmentCard: removeFeesInstallmentCardFunction(builder),\n    transferApplicatToOtherApplication:\n      transferApplicatToOtherApplicationFunction(builder),\n    existStudentFeesExcelByAdmission:\n      existStudentFeesExcelByAdmissionFunction(builder),\n    studentValidaForApplicationByAdmission:\n      studentValidaForApplicationByAdmissionFunction(builder),\n    studentBankValidationByAdmission:\n      studentBankValidationByAdmissionFunction(builder),\n    markCompleteToOngoingApplication:\n      markCompleteToOngoingApplicationFunction(builder),\n    getReminderHistoryByAdmission:\n      getReminderHistoryByAdmissionFunction(builder),\n    getOsReminderStudentList: getOsReminderStudentListFunction(builder),\n    studentScholarshipNumberDublicate:\n      studentScholarshipNumberDublicateFunction(builder),\n  }),\n});\n\nexport const {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchAllAppAtInstituteQuery,\n  useNewUserApplyMutation,\n  useGetNewApplicationMutation,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetUserConfirmMutation,\n  useGetUserCancelMutation,\n  useGetAllClassesQuery,\n  useRetrieveNewClassAllotMutation,\n  useRetrieveMarkCompleteMutation,\n  useGetOneViewStudentFeeQuery,\n  useRetrievePaidRemainFeeMutation,\n  useGetOneApplicationQuery,\n  useGetAllDepartmentQuery,\n  useFetchCancelStatusModeMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n\n  useGetDailyCollectionByAdmissionQuery,\n\n  //\n  useEditStudentGrNumberMutation,\n\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} = admissionApiDynamic;\n"],"names":["useAssignAdmissionHead","assignAdmissionHead","useActivateAdmissionHeadMutation","useEditAdmission","editAdmission","useEditAdmissionMutation","useGetAdmissionDetail","args","data","getAdmissionDetail","refetch","getAdmissionDetailRefetch","useFetchAdmissionDetailQuery","skip","useAllOngoingApp","allOngoingApp","allOngoingAppRefetch","useFetchAllOngoingAppQuery","useAllCompletedApp","allCompletedApp","allCompletedAppRefetch","useFetchAllCompletedAppQuery","useAllAppAtInstitute","allAppAtInstitute","allAppAtInstituteRefetch","useFetchAllAppAtInstituteQuery","useNewUserApply","newUserApply","useNewUserApplyMutation","useCreateNewApplication","createNewApplication","useGetNewApplicationMutation","useGetAllRequest","getAllRequestList","getAllRequestListRefetch","useGetAllRequestQuery","useGetAllSelect","getAllSelectList","getAllSelectListRefetch","useGetAllSelectQuery","useGetAllConfirm","getAllConfirmList","getAllConfirmListRefetch","useGetAllConfirmQuery","useGetAllConfirmMultiselect","getAllConfirmListMulitselect","getAllConfirmListMulitselectRefetch","useGetAllConfirmMultiselectQuery","useSelectAdmissionApplicant","selectAdmissionApplicant","useFetchUserSelectAppMutation","useCancelAdmissionApplicant","cancelAdmissionApplicant","useFetchUserCancelAppMutation","useStudentPayMode","studentPayMode","useFetchUserSelectStatusAppMutation","useApplicantAdmissionConfirm","confirmAppliacntAdmission","useGetUserConfirmMutation","useApplicantAdmissionCancel","cancelAppliacntAdmission","useGetUserCancelMutation","useGetAllClasses","getAllClassesList","getAllClassesListRefetch","useGetAllClassesQuery","useApplicantAdmissionAllotSeat","applicantAllotSeat","useRetrieveNewClassAllotMutation","useApplicationComplete","completeAdmissionApplication","useRetrieveMarkCompleteMutation","useApplicantAdmissionRemainingFees","applicantRemainingFees","useRetrievePaidRemainFeeMutation","useOneApplicationDetail","oneApplicationDetail","oneApplicationDetailRefetch","useGetOneApplicationQuery","apid","useGetAllDepartment","allDepartmentList","allDepartmentListRefetch","useGetAllDepartmentQuery","aid","useCancelStudentApplicationStatus","cancelApplication","useFetchCancelStatusModeMutation","useRenderStudentAdmissionFees","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","useRenderStudentAdmissionFeesQuery","sid","useCollectApplicantDocs","collectDocs","useCollectApplicantDocsMutation","useAdmissionBatchList","admissionBatchList","admissionBatchListRefetch","useAdmissionBatchListQuery","useAdmissionAllottedList","admissionAllottedList","admissionAllottedListRefetch","useAdmissionAllottedListQuery","useAdmissionCancelledList","admissionCancelledList","admissionCancelledListRefetch","useAdmissionCancelledListQuery","useAdmissionClassMasterList","admissionClassMasterList","admissionClassMasterListRefetch","useAdmissionClassMasterListQuery","did","useAddEnquiry","addEnquiry","useAddEnquiryMutation","useGetAllEnquiryList","getAllEnquiryList","getAllEnquiryListRefetch","useGetAllEnquiryListQuery","useGetOneEnquiry","oneEnquiryDetail","oneEnquiryDetailRefetch","useGetOneEnquiryQuery","eid","useOneEnquiryAction","oneEnquiryAction","useOneEnquiryActionMutation","useGetAccountWithNumber","getAccountWithNumber","getAccountWithNumberRefetch","useGetAccountWithNumberQuery","phoneKey","useEditFeeStructure","editFeeStructure","useEditFeeStructureMutation","useConfirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmission","useConfirmStudentModeByAdmissionAdminMutation","useRejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmission","useRejectStudentModeByAdmissionAdminMutation","useReApplyReceiptByStudent","reApplyReceiptByStudent","useReApplyReceiptByStudentMutation","useGetFeeReceiptDetail","getFeeReceiptDetail","getFeeReceiptDetailRefetch","useGetFeeReceiptDetailQuery","rid","useGetDocumentByAdmission","getDocumentByAdmission","getDocumentByAdmissionRefetch","useGetDocumentByAdmissionQuery","useRefundAmountByAdmissionAdmin","refundAmountByAdmissionAdmin","useRefundAmountByAdmissionAdminMutation","useUpdateRemarkByAdmissionAdmin","updateRemarkByAdmissionAdmin","useUpdateRemarkByAdmissionAdminMutation","useExportFilterDataByAdmission","exportFilterDataByAdmission","useExportFilterDataByAdmissionMutation","useGetAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminRefetch","useGetAllExcelByAdmissionAdminQuery","usePayAdmissionFeeByStudent","payAdmissionFeeByStudent","usePayAdmissionFeeByStudentMutation","useUpdateExcelByAdmissionAdmin","updateExcelByAdmissionAdmin","useUpdateExcelByAdmissionAdminMutation","useDeleteExcelByAdmissionAdmin","deleteExcelByAdmissionAdmin","useDeleteExcelByAdmissionAdminMutation","useGetModeratorByAdmissionAdmin","getModeratorByAdmissionAdmin","getModeratorByAdmissionAdminRefetch","useGetModeratorByAdmissionAdminQuery","useAddModeratorByAdmissionAdmin","addModeratorByAdmissionAdmin","useAddModeratorByAdmissionAdminMutation","useUpdateModeratorByAdmissionAdmin","updateModeratorByAdmissionAdmin","useUpdateModeratorByAdmissionAdminMutation","useDeleteModeratorByAdmissionAdmin","deleteModeratorByAdmissionAdmin","useDeleteModeratorByAdmissionAdminMutation","useAdmissionGetSiteInfo","admissionGetSiteInfo","admissionGetSiteInfoRefetch","useAdmissionGetSiteInfoQuery","useAdmissionUpdateSiteInfo","admissionUpdateSiteInfo","useAdmissionUpdateSiteInfoMutation","useUpdateApplicationByAdmission","updateApplicationByAdmission","useUpdateApplicationByAdmissionMutation","useDeleteApplicationByAdmission","deleteApplicationByAdmission","useDeleteApplicationByAdmissionMutation","useUpdateFeeStructureByAppliationWise","updateFeeStructureByAppliationWise","useUpdateFeeStructureByAppliationWiseMutation","useCollectSetOffAdmissionFees","collectSetOffAdmissionFees","useCollectSetOffAdmissionFeesMutation","useAdmissionDocsActionByStudent","admissionDocsActionByStudent","useAdmissionDocsActionByStudentMutation","useScholarShipExcelByInstitute","scholarShipExcelByInstitute","useScholarShipExcelByInstituteMutation","useAddScholarNumberAdmission","addScholarNumberAdmission","useAddScholarNumberAdmissionMutation","useStudentDepartmentFees","studentDepartmentFees","studentDepartmentFeesRefetch","useStudentDepartmentFeesQuery","useInternalFeeReceipt","internalFeeReceipt","internalFeeReceiptRefetch","useInternalFeeReceiptQuery","useDropAdmissionFeesCardByAdmission","dropAdmissionFeesCardByAdmission","useDropAdmissionFeesCardByAdmissionMutation","useAllApplicationByAdmission","allApplicationByAdmission","allApplicationByAdmissionRefetch","useAllApplicationByAdmissionQuery","useAddNewFeesByAdmission","addNewFeesByAdmission","useAddNewFeesByAdmissionMutation","useCollectNewAddFeesByAdmission","collectNewAddFeesByAdmission","useCollectNewAddFeesByAdmissionMutation","useGovernmentCollectNewAddFeesByAdmission","governmentCollectNewAddFeesByAdmission","useGovernmentCollectNewAddFeesByAdmissionMutation","useAdmissionReminder","admissionReminder","useAdmissionReminderMutation","useAdmissionInstallmentEditFeesByAdmission","admissionInstallmentEditFeesByAdmission","useAdmissionInstallmentEditFeesByAdmissionMutation","useGetPendingCustomFilterByAdmission","getPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionRefetch","useGetPendingCustomFilterByAdmissionQuery","useGetBatchStandardWithMultipleDepartment","getBatchStandardWithMultipleDepartment","useGetBatchStandardWithMultipleDepartmentMutation","useAllAdmissionRemaining","allAdmissionRemaining","useFetchAdmissionRemainingArrayMutation","useAllRemaining","allRemainingList","allRemainingListRefetch","useFetchAllRemainingArrayQuery","useGetDailyCollectionByAdmission","getDailyCollectionByAdmission","getDailyCollectionByAdmissionRefetch","useGetDailyCollectionByAdmissionQuery","useEditStudentGrNumber","editStudentGrNumber","useEditStudentGrNumberMutation","useAdmissionRevertBackSelectedToApplication","admissionRevertBackSelectedToApplication","useAdmissionRevertBackSelectedToApplicationMutation","useAdmissionRevertBackDocsToSelected","admissionRevertBackDocsToSelected","useAdmissionRevertBackDocsToSelectedMutation","useRemoveFeesInstallmentCard","removeFeesInstallmentCard","useRemoveFeesInstallmentCardMutation","useTransferApplicatToOtherApplication","transferApplicatToOtherApplication","useTransferApplicatToOtherApplicationMutation","useExistStudentFeesExcelByAdmission","existStudentFeesExcelByAdmission","useExistStudentFeesExcelByAdmissionMutation","useStudentValidaForApplicationByAdmission","studentValidaForApplicationByAdmission","useStudentValidaForApplicationByAdmissionMutation","useStudentBankValidationByAdmission","studentBankValidationByAdmission","useStudentBankValidationByAdmissionMutation","useMarkCompleteToOngoingApplication","markCompleteToOngoingApplication","useMarkCompleteToOngoingApplicationMutation","useGetOsReminderStudentList","getOsReminderStudentList","useGetOsReminderStudentListMutation","useStudentScholarshipNumberDublicate","studentScholarshipNumberDublicate","useStudentScholarshipNumberDublicateMutation","admissionApiDynamic","admissionNewApi","injectEndpoints","endpoints","builder","activateAdmissionHead","activateAdmission","editAdmissionFunction","fetchAdmissionDetail","fetchAdmission","fetchAllOngoingApp","fetchOngoing","fetchAllCompletedApp","fetchCompleted","fetchAllRemainingArray","fetchRemainingArray","fetchAdmissionRemainingArray","fetchAllAppAtInstitute","atInstituteSearchApplication","userApply","getNewApplication","newApplication","getAllRequest","fetchRequest","getAllSelect","fetchSelect","getAllConfirm","fetchConfirm","getAllConfirmMultiselect","fetchConfirmAll","fetchUserSelectApp","userSelect","fetchUserCancelApp","userCancelApplication","fetchUserSelectStatusApp","userSelectStatusMode","getUserConfirm","userConfirm","getUserCancel","userCancel","getAllClasses","fetchClasses","retrieveNewClassAllot","newClassAllot","retrieveMarkComplete","markComplete","getOneViewStudentFee","oneStudentFee","retrievePaidRemainFee","paidRemainFee","getOneApplication","oneApplication","getAllDepartment","allDepartment","fetchCancelStatusMode","cancelStatusMode","renderStudentAdmissionFees","studentAdmission","collectApplicantDocs","collectApplicantDocsFunction","admissionBatchListFunction","admissionAllottedListFunction","admissionCancelledListFunction","admissionClassMasterListFunction","addEnquiryFunction","getAllEnquiryListFunction","getOneEnquiry","getOneEnquiryFunction","oneEnquiryActionFunction","directJoinFormAdmission","directJoinFormAdmissionFunction","submitAmountToFinanace","submitAmountToFinanaceFunction","getAccountWithNumberFunction","editFeeStructureFunction","confirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmissionAdminFunction","rejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmissionAdminFunction","getReceiptByAdmission","getReceiptByAdmissionFunction","receiptActionByAdmission","receiptActionByAdmissionFunction","reApplyReceiptByStudentFunction","getFeeReceiptDetailFunction","getDocumentByAdmissionFuction","addDocumentByAdmission","addDocumentByAdmissionFuction","updateDocumentByAdmission","updateDocumentByAdmissionFuction","deleteDocumentByAdmission","deleteDocumentByAdmissionFuction","refundAmountByAdmissionAdminFunction","getRefundByAdmission","getRefundByAdmissionFuction","updateRemarkByAdmissionAdminFunction","exportFilterDataByAdmissionFuction","getAllExcelByAdmissionAdminFunction","payAdmissionFeeByStudentFunction","updateExcelByAdmissionAdminFunction","deleteExcelByAdmissionAdminFunction","updateDocumentByAdmissionAdmin","updateDocumentByAdmissionAdminFunction","deleteDocumentByAdmissionAdmin","deleteDocumentByAdmissionAdminFunction","addModeratorByAdmissionAdminFunction","getModeratorByAdmissionAdminFunction","updateModeratorByAdmissionAdminFunction","deleteModeratorByAdmissionAdminFunction","admissionGetSiteInfoFunction","admissionUpdateSiteInfoFunction","getScholarshipListAdmission","getScholarshipListAdmissionFunction","addScholarshipAdmission","addScholarshipAdmissionFunction","getOneScholarshipAdmission","getOneScholarshipAdmissionFunction","getOneScholarshipAllCandidateAdmission","getOneScholarshipAllCandidateAdmissionFunction","oneSchloarshipActionAdmission","oneSchloarshipActionAdmissionFunction","addScholarshipFundCorpusAdmission","addScholarshipFundCorpusAdmissionFunction","getScholarshipFundCorpusAdmission","getScholarshipFundCorpusAdmissionFunction","addMoreScholarshipFundCorpusAdmission","addMoreScholarshipFundCorpusAdmissionFunction","updateApplicationByAdmissionFunction","deleteApplicationByAdmissionFunction","forgetPasswordProtection","forgetPasswordProtectionFunction","passwordProtectionToggle","passwordProtectionToggleFunction","passwordProtectionLogin","passwordProtectionLoginFunction","updateFeeStructureByAppliationWiseFunction","getRefundedListByAdmission","getRefundedListByAdmissionFunction","directJoinFormWithPayAdmission","directJoinFormWithPayAdmissionFunction","collectSetOffAdmissionFeesFunction","admissionDocsActionByStudentFunction","scholarShipExcelByAdmission","scholarShipExcelByAdmissionFunction","scholarShipExcelByInstituteFunction","addScholarNumberAdmissionFunction","studentDepartmentFeesFunction","studentBacklogFees","studentBacklogFeesFunction","internalFeeReceiptFunction","dropAdmissionFeesCardByAdmissionFunction","allApplicationByAdmissionFunction","addNewFeesByAdmissionFunction","collectNewAddFeesByAdmissionFunction","governmentCollectNewAddFeesByAdmissionFunction","admissionReminderFunction","admissionInstallmentEditFeesByAdmissionFunction","getPendingCustomFilterByAdmissionFunction","getBatchStandardWithMultipleDepartmentFunction","getDailyCollectionByAdmissionFunction","editStudentGrNumberFunction","admissionRevertBackSelectedToApplicationFunction","admissionRevertBackDocsToSelectedFunction","removeFeesInstallmentCardFunction","transferApplicatToOtherApplicationFunction","existStudentFeesExcelByAdmissionFunction","studentValidaForApplicationByAdmissionFunction","studentBankValidationByAdmissionFunction","markCompleteToOngoingApplicationFunction","getReminderHistoryByAdmission","getReminderHistoryByAdmissionFunction","getOsReminderStudentListFunction","studentScholarshipNumberDublicateFunction","useGetOneViewStudentFeeQuery","useDirectJoinFormAdmissionMutation","useSubmitAmountToFinanaceMutation","useGetReceiptByAdmissionQuery","useReceiptActionByAdmissionMutation","useAddDocumentByAdmissionMutation","useUpdateDocumentByAdmissionMutation","useDeleteDocumentByAdmissionMutation","useGetRefundByAdmissionQuery","useUpdateDocumentByAdmissionAdminMutation","useDeleteDocumentByAdmissionAdminMutation","useGetScholarshipListAdmissionQuery","useAddScholarshipAdmissionMutation","useGetOneScholarshipAdmissionQuery","useGetOneScholarshipAllCandidateAdmissionQuery","useOneSchloarshipActionAdmissionMutation","useAddScholarshipFundCorpusAdmissionMutation","useGetScholarshipFundCorpusAdmissionQuery","useAddMoreScholarshipFundCorpusAdmissionMutation","useForgetPasswordProtectionMutation","usePasswordProtectionToggleMutation","usePasswordProtectionLoginMutation","useGetRefundedListByAdmissionQuery","useDirectJoinFormWithPayAdmissionMutation","useScholarShipExcelByAdmissionMutation","useStudentBacklogFeesQuery","useGetReminderHistoryByAdmissionQuery"],"sourceRoot":""}