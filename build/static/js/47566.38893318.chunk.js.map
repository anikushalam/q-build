{"version":3,"file":"static/js/47566.38893318.chunk.js","mappings":"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","sources":["Loader/QvipleLoading.jsx","MembersTab/staff/Mainbody/FinanceManager/RemainingAmount/RemainingAmountWrapper.jsx","MembersTab/staff/Mainbody/FinanceManager/RemainingAmount/FinanceRemainingStudentCard.jsx","MembersTab/staff/Mainbody/FinanceManager/RemainingAmount/RemainingAmount.jsx","webpack://mithkal-qviple/./src/MembersTab/staff/Mainbody/StaffAdmisionAdmin/AdmissionApplicationRequest/AdmissionApplicationRequest.module.css?cf70","webpack://mithkal-qviple/./src/MembersTab/staff/Mainbody/StaffAdmisionAdmin/RemainingFees/RemainingFees.module.css?70e0","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\nconst QvipleLoading = ({ status }) => {\n  return (\n    <div className={styles.loaderGif}>\n      <img\n        src={\n          status === \"white\"\n            ? \"/images/loader/loader-bg-white.gif\"\n            : \"/images/loader/loader.gif\"\n        }\n        alt=\"for load an items\"\n      />\n    </div>\n  );\n};\n\nexport default QvipleLoading;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport BorderBottom from \"../../../../../StaffTab/components/DividerTab/MainContent/StaffAProfile/BorderBottom\";\nimport style from \"../../StaffAdmisionAdmin/AdmissionApplicationRequest/AdmissionApplicationRequest.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst RemainingAmountWrapper = ({ children }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const onBackWithArrowLeft = () => {\n    navigate(-1);\n  };\n  return (\n    <>\n      <section className={style.moderator_container_title}>\n        <img\n          src=\"/images/arrow-left-fees-icon.svg\"\n          onClick={onBackWithArrowLeft}\n          alt=\"go to previous tab\"\n          title=\"Go Back\"\n          style={{\n            cursor: \"pointer\",\n          }}\n        />\n        <div className={style.with_search}>\n          <h6>{t(\"pending_fees\")}</h6>\n          <div className={style.search_container_filter}>\n            <section className={style.search_container}>\n              <div className={style.search_container_input}>\n                <img\n                  className={style.searchIcon}\n                  alt=\"search icon\"\n                  src=\"/images/search-dash-icon.svg\"\n                />\n                {children}\n              </div>\n            </section>\n          </div>\n        </div>\n      </section>\n      <BorderBottom\n        customStyle={{\n          width: \"100%\",\n          marginTop: \"0.5rem\",\n          marginBottom: \"0.5rem\",\n        }}\n      />\n    </>\n  );\n};\n\nexport default RemainingAmountWrapper;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { imageShowUrl } from \"../../../../../services/BaseUrl\";\nimport style from \"../../StaffAdmisionAdmin/RemainingFees/RemainingFees.module.css\";\nconst FinanceRemainingStudentCard = ({ remainData }) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const navigate = useNavigate();\n  const onViewApplicantProfile = () => {\n    navigate(`/q/${params.username}/student/profile`, {\n      state: {\n        sid: remainData?._id,\n        viewAs: \"FINANCE_MANAGER\",\n      },\n    });\n  };\n  return (\n    <div\n      className={style.item}\n      onClick={onViewApplicantProfile}\n      title=\"View Profile\"\n    >\n      <div className={style.subItem}>\n        <img\n          alt=\"Student Avatar\"\n          src={\n            remainData?.studentProfilePhoto\n              ? `${imageShowUrl}/${remainData?.studentProfilePhoto}`\n              : \"/images/member_tab/class/default_avatar.svg\"\n          }\n          loading=\"lazy\"\n          style={{\n            height: \"4vw\",\n            width: \"4vw\",\n          }}\n        />\n        <div className={style.text}>\n          <h6>{`${remainData?.studentFirstName} ${\n            remainData?.studentMiddleName ? remainData?.studentMiddleName : \"\"\n          } ${remainData?.studentLastName}`}</h6>\n\n          <p>\n            {t(\"gr_number\")}\n            {remainData?.studentGRNO ?? \"\"} {\", \"}\n            {remainData?.department?.dName ?? \"\"}\n          </p>\n          <p>\n            {t(\"finance_classes\")}\n            {`${remainData?.studentClass?.className ?? \"\"} -  ${\n              remainData?.studentClass?.classTitle ?? \"\"\n            }`}\n          </p>\n        </div>\n      </div>\n      <div className={style.text}>\n        {/* {is_applicable ? (\n        <h6>Rs. {remainData?.applicable_fees_pending}</h6>\n      ) : ( */}\n        <h6>Rs. {remainData?.studentRemainingFeeCount}</h6>\n        {/* )} */}\n        <p>{t(\"pending_fees\")}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default FinanceRemainingStudentCard;\n","import React, { useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useRemainingStudentFeeListQuery } from \"../../../../../services/financeAPI\";\nimport style from \"../../StaffAdmisionAdmin/RemainingFees/RemainingFees.module.css\";\nimport { useTranslation } from \"react-i18next\";\n// import { useFinanceExportData } from \"../../../../../hooks/ExportData/export-data-api\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useScrollbar } from \"../../../../../Scroll/use-scroll\";\nimport RemainingAmountWrapper from \"./RemainingAmountWrapper\";\nimport { debounce } from \"lodash\";\nimport QvipleLoading from \"../../../../../Loader/QvipleLoading\";\nimport FinanceRemainingStudentCard from \"./FinanceRemainingStudentCard\";\n\nfunction RemainingAmount({ fId }) {\n  const { t } = useTranslation();\n  const financeAuthor = useSelector((state) => state.financeChange);\n  // const { financeExportData } = useFinanceExportData(financeAuthor?.fid);\n  const [allRemaining, setAllRemaining] = React.useState([]);\n  const [ref, inView] = useInView();\n  const [state, setState] = React.useState(true);\n  const [page, setPage] = React.useState(1);\n  const [showingDataLoading, setShowingDataLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n\n  const { data: remainList, refetch: remainListRefetch } =\n    useRemainingStudentFeeListQuery(\n      {\n        finance: `${financeAuthor?.fid ? financeAuthor?.fid : fId}`,\n        page: page,\n        limit: 10,\n        search: search,\n      },\n      {\n        skip: !financeAuthor?.fid ? !fId : !financeAuthor?.fid,\n      }\n    );\n  const { scrollToTop } = useScrollbar();\n  React.useEffect(() => {\n    scrollToTop();\n  }, []);\n  React.useEffect(() => {\n    if (financeAuthor?.fid || fId) {\n      setShowingDataLoading(true);\n      remainListRefetch();\n    }\n  }, [financeAuthor?.fid, fId, page, search, remainListRefetch]);\n\n  React.useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  React.useEffect(() => {\n    if (search) {\n      setAllRemaining(remainList?.list);\n      setShowingDataLoading(false);\n    } else {\n      if (remainList?.list) {\n        setAllRemaining((prev) =>\n          [...new Set([...prev, ...remainList?.list].map(JSON.stringify))].map(\n            JSON.parse\n          )\n        );\n        setShowingDataLoading(false);\n      } else if (remainList?.list?.length === 0) {\n        setShowingDataLoading(false);\n      } else {\n      }\n    }\n    //for next api is call or not dashboard\n    if (remainList?.list.length === 10) setState(true);\n    else setState(false);\n  }, [remainList?.list]);\n\n  const onDebounce = useCallback(\n    debounce((val) => setSearch(val), 500),\n    []\n  );\n\n  const onSearchEvent = (e) => {\n    onDebounce(e.target.value);\n  };\n  return (\n    <>\n      <div className={style.remainingFees}>\n        <RemainingAmountWrapper>\n          <input\n            type=\"text\"\n            placeholder={t(\"search-label\")}\n            onChange={onSearchEvent}\n          />\n        </RemainingAmountWrapper>\n        {allRemaining?.map((rem, index) =>\n          allRemaining?.length === index + 1 ? (\n            <div key={index} ref={ref}>\n              <FinanceRemainingStudentCard remainData={rem} />\n            </div>\n          ) : (\n            <FinanceRemainingStudentCard key={index} remainData={rem} />\n          )\n        )}\n        {showingDataLoading && <QvipleLoading status=\"white\" />}\n      </div>\n    </>\n  );\n}\n\nexport default RemainingAmount;\n","// extracted by mini-css-extract-plugin\nexport default {\"admission_application_container\":\"AdmissionApplicationRequest_admission_application_container__iMsyZ\",\"moderator_container_title\":\"AdmissionApplicationRequest_moderator_container_title__5WiPB\",\"with_search\":\"AdmissionApplicationRequest_with_search__mm0Q+\",\"search_container\":\"AdmissionApplicationRequest_search_container__3swMB\",\"search_container_input\":\"AdmissionApplicationRequest_search_container_input__InEPj\",\"searchIcon\":\"AdmissionApplicationRequest_searchIcon__RdABM\",\"search_container_filter\":\"AdmissionApplicationRequest_search_container_filter__fEHEF\",\"remainingFees\":\"AdmissionApplicationRequest_remainingFees__X9g5z\",\"ongoing_card\":\"AdmissionApplicationRequest_ongoing_card__1TVLc\",\"ongoing_card_inner\":\"AdmissionApplicationRequest_ongoing_card_inner__1Gato\",\"ongoing_card_text\":\"AdmissionApplicationRequest_ongoing_card_text__AKxnS\",\"menu_icon\":\"AdmissionApplicationRequest_menu_icon__F3nQo\",\"add_new_category\":\"AdmissionApplicationRequest_add_new_category__ZTInw\",\"applicant_card_container\":\"AdmissionApplicationRequest_applicant_card_container__7UN2C\",\"applicant_card_container_hover\":\"AdmissionApplicationRequest_applicant_card_container_hover__mP-Wa\",\"applicant_card_container_active\":\"AdmissionApplicationRequest_applicant_card_container_active__5VW5x\",\"applicant_card_inner\":\"AdmissionApplicationRequest_applicant_card_inner__kSbmI\",\"applicant_card_inner_info\":\"AdmissionApplicationRequest_applicant_card_inner_info__8POe8\",\"applicant_card_contact\":\"AdmissionApplicationRequest_applicant_card_contact__Ipapl\",\"applicant_card_contact_inner\":\"AdmissionApplicationRequest_applicant_card_contact_inner__dDeFH\",\"application_button\":\"AdmissionApplicationRequest_application_button__a2s6z\",\"selectAppBtnContainer\":\"AdmissionApplicationRequest_selectAppBtnContainer__d0wD6\",\"selectBtnContainer\":\"AdmissionApplicationRequest_selectBtnContainer__Si3QU\",\"selectBtn\":\"AdmissionApplicationRequest_selectBtn__A0SVG\",\"cancelledBtn\":\"AdmissionApplicationRequest_cancelledBtn__wEX7V\",\"notConfirmedBtn\":\"AdmissionApplicationRequest_notConfirmedBtn__wZb02\",\"onlineBtn\":\"AdmissionApplicationRequest_onlineBtn__v+gwq\",\"cancelStatus\":\"AdmissionApplicationRequest_cancelStatus__qYDFg\",\"checkbox\":\"AdmissionApplicationRequest_checkbox__tlbdN\",\"back_icon\":\"AdmissionApplicationRequest_back_icon__gIdbd\",\"receipt_requested_btn\":\"AdmissionApplicationRequest_receipt_requested_btn__stgcE\",\"not_confirm_container\":\"AdmissionApplicationRequest_not_confirm_container__+r4pJ\",\"applicant_profile\":\"AdmissionApplicationRequest_applicant_profile__kHoFd\",\"applicant_profile_text\":\"AdmissionApplicationRequest_applicant_profile_text__wgySz\",\"button_group\":\"AdmissionApplicationRequest_button_group__LKrUN\",\"admission_collect_docs\":\"AdmissionApplicationRequest_admission_collect_docs__+-jUT\",\"confirm_btn\":\"AdmissionApplicationRequest_confirm_btn__njvM8\",\"admission_modal\":\"AdmissionApplicationRequest_admission_modal__a3Dx6\",\"admission_modal_heading\":\"AdmissionApplicationRequest_admission_modal_heading__7i6gM\",\"admission_fees_row\":\"AdmissionApplicationRequest_admission_fees_row__Ykj39\",\"admission_confirm_class_card\":\"AdmissionApplicationRequest_admission_confirm_class_card__Ytr77\",\"admission_confirm_batch_card\":\"AdmissionApplicationRequest_admission_confirm_batch_card__Cuven\",\"admission_confirm_class_count\":\"AdmissionApplicationRequest_admission_confirm_class_count__P-bt1\",\"admission_class_confirm\":\"AdmissionApplicationRequest_admission_class_confirm__SMLDh\",\"mulitple_select_btn\":\"AdmissionApplicationRequest_mulitple_select_btn__WOWDd\",\"end_btn\":\"AdmissionApplicationRequest_end_btn__vgxwG\",\"admission_mulit_select\":\"AdmissionApplicationRequest_admission_mulit_select__ggFWa\",\"admission_mulit_select_right\":\"AdmissionApplicationRequest_admission_mulit_select_right__K51Rw\",\"os_reminder\":\"AdmissionApplicationRequest_os_reminder__AHp8F\",\"os_filter_container\":\"AdmissionApplicationRequest_os_filter_container__Ck0gz\",\"ongoing_card_count_date\":\"AdmissionApplicationRequest_ongoing_card_count_date__xi1+1\",\"ongoing_card_count_container\":\"AdmissionApplicationRequest_ongoing_card_count_container__af9uG\",\"applicant_card_reciept\":\"AdmissionApplicationRequest_applicant_card_reciept__QR+Ho\",\"transfer_container\":\"AdmissionApplicationRequest_transfer_container__y5X5q\",\"transfer_select_btn\":\"AdmissionApplicationRequest_transfer_select_btn__u8NkN\",\"remove_btn\":\"AdmissionApplicationRequest_remove_btn__Lmhuv\"};","// extracted by mini-css-extract-plugin\nexport default {\"remainingFees\":\"RemainingFees_remainingFees__G74JQ\",\"subItem\":\"RemainingFees_subItem__maJF6\",\"item\":\"RemainingFees_item__2o1X9\",\"text\":\"RemainingFees_text__JnUvj\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","status","_jsx","className","styles","loaderGif","children","src","alt","t","useTranslation","navigate","useNavigate","_jsxs","_Fragment","style","moderator_container_title","onClick","onBackWithArrowLeft","title","cursor","with_search","search_container_filter","search_container","search_container_input","searchIcon","BorderBottom","customStyle","width","marginTop","marginBottom","_remainData$studentGR","_remainData$departmen","_remainData$departmen2","_remainData$studentCl","_remainData$studentCl2","_remainData$studentCl3","_remainData$studentCl4","remainData","params","useParams","item","onViewApplicantProfile","concat","username","state","sid","_id","viewAs","subItem","studentProfilePhoto","imageShowUrl","loading","height","text","studentFirstName","studentMiddleName","studentLastName","studentGRNO","department","dName","studentClass","classTitle","studentRemainingFeeCount","fId","financeAuthor","useSelector","financeChange","allRemaining","setAllRemaining","React","ref","inView","useInView","setState","page","setPage","showingDataLoading","setShowingDataLoading","useState","search","setSearch","data","remainList","refetch","remainListRefetch","useRemainingStudentFeeListQuery","finance","fid","limit","skip","scrollToTop","useScrollbar","_remainList$list","list","prev","Set","map","JSON","stringify","parse","length","onDebounce","useCallback","debounce","val","remainingFees","RemainingAmountWrapper","type","placeholder","onChange","e","target","value","rem","index","FinanceRemainingStudentCard","QvipleLoading","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","delay","rootMargin","triggerOnce","initialInView","setRef","React2","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}