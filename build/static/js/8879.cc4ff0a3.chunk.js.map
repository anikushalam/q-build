{"version":3,"file":"static/js/8879.cc4ff0a3.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/UserForgetVerify.jsx","optimized/Auth/Verification/OtpResendTimer.jsx","optimized/Validation/Auth/invalidateAuthUsername.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport {\n  useAuthUserForgetOtp,\n  useAuthUserNumber,\n} from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport OtpResendTimer from \"../Verification/OtpResendTimer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { invalidateAuthEmailOrMobile } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst UserForgetVerify = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [state, setState] = useState({\n    userOtpCode: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForgetOtp] = useAuthUserForgetOtp();\n  const [authUserNumber] = useAuthUserNumber();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, userOtpCode: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation) && getQuery.state?.uid) {\n      setDisabled((pre) => !pre);\n      authUserForgetOtp({\n        uid: getQuery.state?.uid,\n        otp: state,\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.user?._id) {\n            navigate(\"/user/forget/password\", {\n              state: {\n                uid: response?.user?._id,\n              },\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid Otp\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onOtpResend = () => {\n    if (getQuery?.state?.phoneNumber) {\n      authUserNumber({\n        userPhoneNumber: `${getQuery?.state?.phoneNumber}`,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(`${getQuery?.state?.phoneNumber}`),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            setSnackbar({\n              open: true,\n              msg: `Code will be resent to xxxx- ${`${getQuery?.state?.phoneNumber}`?.substring(\n                `${getQuery?.state?.phoneNumber}`?.length - 4\n              )}`,\n              variant: \"success\",\n            });\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forget_password_verification_code\"\n        subTitle={`${t(\"verification_code_note\")}${\n          getQuery.state?.type ?? \"\"\n        }${t(\"ending\")} ${`${getQuery?.state?.phoneNumber}`?.substring(\n          `${getQuery?.state?.phoneNumber}`?.length - 4\n        )}`}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            placeholder={t(\"verification_code\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-otp.svg`}\n            maxLength=\"4\"\n            validate={errorField[\"userOtpCode\"]}\n            name=\"userOtpCode\"\n            value={state.userOtpCode}\n            onChange={onChangeHandler}\n          />\n          <div className={style.auth_footer_container}>\n            <p className={style.auth_otp_text}>\n              {t(\"if_you_did_not_recieve_otp\")}\n              <OtpResendTimer onOtpResend={onOtpResend} />\n            </p>\n          </div>\n\n          <ButtonWithTypeSubmit type=\"submit\" buttonText={t(\"verify\")} />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default UserForgetVerify;\n","import React, { memo, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\n\nconst OtpResendTimer = ({ onOtpResend }) => {\n  const { t } = useTranslation();\n  const [timer, setTimer] = useState(\"\");\n  const Ref = useRef(null);\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    return {\n      total,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(seconds);\n    }\n  };\n\n  const clearTimer = (e) => {\n    setTimer(\"40\");\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 40);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickResetTimer = () => {\n    clearTimer(getDeadTime());\n  };\n  const ResendOtpHandler = () => {\n    if (!timer) {\n      onOtpResend();\n      onClickResetTimer();\n    }\n  };\n  return (\n    <>\n      <span className={style.auth_otp_resend} onClick={ResendOtpHandler}>\n        {\" \"}\n        {t(\"resend\")}{\" \"}\n      </span>\n      <span className={style.auth_otp_resend}>{timer}</span>\n    </>\n  );\n};\n\nexport default memo(OtpResendTimer);\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","_getQuery$state$type","_getQuery$state8","_ref3","_getQuery$state9","_ref4","_getQuery$state10","navigate","useNavigate","getQuery","useLocation","_useState","useState","userOtpCode","_useState2","_slicedToArray","state","setState","_useState3","_useState4","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","_useAuthUserForgetOtp","useAuthUserForgetOtp","authUserForgetOtp","_useAuthUserNumber","useAuthUserNumber","authUserNumber","GetStarted","concat","type","phoneNumber","substring","length","fontSize","onSubmit","e","_getQuery$state","preventDefault","_getQuery$state2","validation","requiredField","existingRequiredField","uid","pre","otp","then","res","_res$data","_response$user","_response$user2","response","decryption","data","encrypt","user","_id","catch","err","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","maxLength","validate","name","value","onChange","prev","_objectSpread","target","auth_footer_container","auth_otp_text","OtpResendTimer","onOtpResend","_getQuery$state3","_getQuery$state4","_getQuery$state5","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","_res$data2","_getQuery$state6","_ref2","_getQuery$state7","ButtonWithTypeSubmit","buttonText","NotifyEvent","eventState","eventStateHandler","timer","setTimer","Ref","useRef","startTimer","_getTimeRemaining","total","Date","parse","seconds","Math","floor","getTimeRemaining","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","auth_otp_resend","onClick","specailSymbol","invalidateAuthUsername","username","includes","typeOfAuth"],"sourceRoot":""}