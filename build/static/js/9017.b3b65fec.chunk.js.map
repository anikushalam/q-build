{"version":3,"file":"static/js/9017.b3b65fec.chunk.js","mappings":"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","sources":["hooks/member_tab/admission-api.js","services/admission/admissionApiDynamic.js"],"sourcesContent":["import {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllAppAtInstituteQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchCancelStatusModeMutation,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetAllClassesQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useGetAllDepartmentQuery,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetNewApplicationMutation,\n  useGetOneApplicationQuery,\n  useGetUserCancelMutation,\n  useGetUserConfirmMutation,\n  useNewUserApplyMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useRetrieveMarkCompleteMutation,\n  useRetrieveNewClassAllotMutation,\n  useRetrievePaidRemainFeeMutation,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n  useGetDailyCollectionByAdmissionQuery,\n  useEditStudentGrNumberMutation,\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} from \"../../services/admission/admissionApiDynamic\";\n\nexport const useAssignAdmissionHead = () => {\n  const [assignAdmissionHead] = useActivateAdmissionHeadMutation();\n  return [assignAdmissionHead];\n};\n\nexport const useEditAdmission = () => {\n  const [editAdmission] = useEditAdmissionMutation();\n  return [editAdmission];\n};\n\nexport const useGetAdmissionDetail = (args) => {\n  const { data: getAdmissionDetail, refetch: getAdmissionDetailRefetch } =\n    useFetchAdmissionDetailQuery(args.data, { skip: args.skip });\n  return { getAdmissionDetail, getAdmissionDetailRefetch };\n};\n\nexport const useAllOngoingApp = (args) => {\n  const { data: allOngoingApp, refetch: allOngoingAppRefetch } =\n    useFetchAllOngoingAppQuery(args.data, { skip: args.skip });\n  return { allOngoingApp, allOngoingAppRefetch };\n};\n\nexport const useAllCompletedApp = (args) => {\n  const { data: allCompletedApp, refetch: allCompletedAppRefetch } =\n    useFetchAllCompletedAppQuery(args.data, { skip: args.skip });\n  return { allCompletedApp, allCompletedAppRefetch };\n};\n\nexport const useAllAppAtInstitute = (args) => {\n  const { data: allAppAtInstitute, refetch: allAppAtInstituteRefetch } =\n    useFetchAllAppAtInstituteQuery(args.data, { skip: args.skip });\n  return { allAppAtInstitute, allAppAtInstituteRefetch };\n};\n\nexport const useNewUserApply = () => {\n  const [newUserApply] = useNewUserApplyMutation();\n  return [newUserApply];\n};\nexport const useCreateNewApplication = () => {\n  const [createNewApplication] = useGetNewApplicationMutation();\n  return [createNewApplication];\n};\n\nexport const useGetAllRequest = (args) => {\n  const { data: getAllRequestList, refetch: getAllRequestListRefetch } =\n    useGetAllRequestQuery(args.data, { skip: args.skip });\n  return { getAllRequestList, getAllRequestListRefetch };\n};\nexport const useGetAllSelect = (args) => {\n  const { data: getAllSelectList, refetch: getAllSelectListRefetch } =\n    useGetAllSelectQuery(args.data, { skip: args.skip });\n  return { getAllSelectList, getAllSelectListRefetch };\n};\nexport const useGetAllConfirm = (args) => {\n  const { data: getAllConfirmList, refetch: getAllConfirmListRefetch } =\n    useGetAllConfirmQuery(args.data, { skip: args.skip });\n  return { getAllConfirmList, getAllConfirmListRefetch };\n};\n\nexport const useGetAllConfirmMultiselect = (args) => {\n  const {\n    data: getAllConfirmListMulitselect,\n    refetch: getAllConfirmListMulitselectRefetch,\n  } = useGetAllConfirmMultiselectQuery(args.data, { skip: args.skip });\n  return { getAllConfirmListMulitselect, getAllConfirmListMulitselectRefetch };\n};\n\nexport const useSelectAdmissionApplicant = () => {\n  const [selectAdmissionApplicant] = useFetchUserSelectAppMutation();\n  return [selectAdmissionApplicant];\n};\nexport const useCancelAdmissionApplicant = () => {\n  const [cancelAdmissionApplicant] = useFetchUserCancelAppMutation();\n  return [cancelAdmissionApplicant];\n};\nexport const useStudentPayMode = () => {\n  const [studentPayMode] = useFetchUserSelectStatusAppMutation();\n  return [studentPayMode];\n};\nexport const useApplicantAdmissionConfirm = () => {\n  const [confirmAppliacntAdmission] = useGetUserConfirmMutation();\n  return [confirmAppliacntAdmission];\n};\nexport const useApplicantAdmissionCancel = () => {\n  const [cancelAppliacntAdmission] = useGetUserCancelMutation();\n  return [cancelAppliacntAdmission];\n};\nexport const useGetAllClasses = (args) => {\n  const { data: getAllClassesList, refetch: getAllClassesListRefetch } =\n    useGetAllClassesQuery(args.data, { skip: args.skip });\n  return { getAllClassesList, getAllClassesListRefetch };\n};\n\nexport const useApplicantAdmissionAllotSeat = () => {\n  const [applicantAllotSeat] = useRetrieveNewClassAllotMutation();\n  return [applicantAllotSeat];\n};\nexport const useApplicationComplete = () => {\n  const [completeAdmissionApplication] = useRetrieveMarkCompleteMutation();\n  return [completeAdmissionApplication];\n};\n\nexport const useApplicantAdmissionRemainingFees = () => {\n  const [applicantRemainingFees] = useRetrievePaidRemainFeeMutation();\n  return [applicantRemainingFees];\n};\n\nexport const useOneApplicationDetail = (args) => {\n  const { data: oneApplicationDetail, refetch: oneApplicationDetailRefetch } =\n    useGetOneApplicationQuery(args.apid, { skip: args.skip });\n  return { oneApplicationDetail, oneApplicationDetailRefetch };\n};\n\nexport const useGetAllDepartment = (args) => {\n  const { data: allDepartmentList, refetch: allDepartmentListRefetch } =\n    useGetAllDepartmentQuery(args.aid, { skip: args.skip });\n  return { allDepartmentList, allDepartmentListRefetch };\n};\n\nexport const useCancelStudentApplicationStatus = () => {\n  const [cancelApplication] = useFetchCancelStatusModeMutation();\n  return [cancelApplication];\n};\n\nexport const useRenderStudentAdmissionFees = (args) => {\n  const {\n    data: sudentAdmissionFeesList,\n    refetch: sudentAdmissionFeesListRefetch,\n  } = useRenderStudentAdmissionFeesQuery(args.sid, { skip: args.skip });\n  return { sudentAdmissionFeesList, sudentAdmissionFeesListRefetch };\n};\n\nexport const useCollectApplicantDocs = () => {\n  const [collectDocs] = useCollectApplicantDocsMutation();\n  return [collectDocs];\n};\nexport const useAdmissionBatchList = (args) => {\n  const { data: admissionBatchList, refetch: admissionBatchListRefetch } =\n    useAdmissionBatchListQuery(args.aid, { skip: args.skip });\n  return { admissionBatchList, admissionBatchListRefetch };\n};\n\nexport const useAdmissionAllottedList = (args) => {\n  const { data: admissionAllottedList, refetch: admissionAllottedListRefetch } =\n    useAdmissionAllottedListQuery(args.data, { skip: args.skip });\n  return { admissionAllottedList, admissionAllottedListRefetch };\n};\nexport const useAdmissionCancelledList = (args) => {\n  const {\n    data: admissionCancelledList,\n    refetch: admissionCancelledListRefetch,\n  } = useAdmissionCancelledListQuery(args.data, { skip: args.skip });\n  return { admissionCancelledList, admissionCancelledListRefetch };\n};\nexport const useAdmissionClassMasterList = (args) => {\n  const {\n    data: admissionClassMasterList,\n    refetch: admissionClassMasterListRefetch,\n  } = useAdmissionClassMasterListQuery(args.did, { skip: args.skip });\n  return { admissionClassMasterList, admissionClassMasterListRefetch };\n};\n\nexport const useAddEnquiry = () => {\n  const [addEnquiry] = useAddEnquiryMutation();\n  return [addEnquiry];\n};\n\nexport const useGetAllEnquiryList = (args) => {\n  const { data: getAllEnquiryList, refetch: getAllEnquiryListRefetch } =\n    useGetAllEnquiryListQuery(args.data, { skip: args.skip });\n  return { getAllEnquiryList, getAllEnquiryListRefetch };\n};\nexport const useGetOneEnquiry = (args) => {\n  const { data: oneEnquiryDetail, refetch: oneEnquiryDetailRefetch } =\n    useGetOneEnquiryQuery(args.eid, { skip: args.skip });\n  return { oneEnquiryDetail, oneEnquiryDetailRefetch };\n};\n\nexport const useOneEnquiryAction = () => {\n  const [oneEnquiryAction] = useOneEnquiryActionMutation();\n  return [oneEnquiryAction];\n};\n\nexport const useDirectJoinFormAdmission = () => {\n  const [directJoinFormAdmission] = useDirectJoinFormAdmissionMutation();\n  return [directJoinFormAdmission];\n};\nexport const useSubmitAmountToFinanace = () => {\n  const [submitAmountToFinanace] = useSubmitAmountToFinanaceMutation();\n  return [submitAmountToFinanace];\n};\n\nexport const useGetAccountWithNumber = (args) => {\n  const { data: getAccountWithNumber, refetch: getAccountWithNumberRefetch } =\n    useGetAccountWithNumberQuery(args.phoneKey, { skip: args.skip });\n  return { getAccountWithNumber, getAccountWithNumberRefetch };\n};\nexport const useEditFeeStructure = () => {\n  const [editFeeStructure] = useEditFeeStructureMutation();\n  return [editFeeStructure];\n};\n\nexport const useConfirmStudentModeByAdmissionAdmin = () => {\n  const [confirmStudentModeByAdmission] =\n    useConfirmStudentModeByAdmissionAdminMutation();\n  return [confirmStudentModeByAdmission];\n};\nexport const useRejectStudentModeByAdmissionAdmin = () => {\n  const [rejectStudentModeByAdmission] =\n    useRejectStudentModeByAdmissionAdminMutation();\n  return [rejectStudentModeByAdmission];\n};\n\nexport const useGetReceiptByAdmission = (args) => {\n  const { data: getReceiptByAdmission, refetch: getReceiptByAdmissionRefetch } =\n    useGetReceiptByAdmissionQuery(args.data, { skip: args.skip });\n  return { getReceiptByAdmission, getReceiptByAdmissionRefetch };\n};\n\nexport const useReceiptActionByAdmission = () => {\n  const [receiptActionByAdmission] = useReceiptActionByAdmissionMutation();\n  return [receiptActionByAdmission];\n};\nexport const useReApplyReceiptByStudent = () => {\n  const [reApplyReceiptByStudent] = useReApplyReceiptByStudentMutation();\n  return [reApplyReceiptByStudent];\n};\n\nexport const useGetFeeReceiptDetail = (args) => {\n  const { data: getFeeReceiptDetail, refetch: getFeeReceiptDetailRefetch } =\n    useGetFeeReceiptDetailQuery(args.rid, { skip: args.skip });\n  return { getFeeReceiptDetail, getFeeReceiptDetailRefetch };\n};\n\nexport const useGetDocumentByAdmission = (args) => {\n  const {\n    data: getDocumentByAdmission,\n    refetch: getDocumentByAdmissionRefetch,\n  } = useGetDocumentByAdmissionQuery(args.data, { skip: args.skip });\n  return { getDocumentByAdmission, getDocumentByAdmissionRefetch };\n};\n\nexport const useAddDocumentByAdmission = () => {\n  const [addDocumentByAdmission] = useAddDocumentByAdmissionMutation();\n  return [addDocumentByAdmission];\n};\nexport const useUpdateDocumentByAdmission = () => {\n  const [updateDocumentByAdmission] = useUpdateDocumentByAdmissionMutation();\n  return [updateDocumentByAdmission];\n};\n\nexport const useDeleteDocumentByAdmission = () => {\n  const [deleteDocumentByAdmission] = useDeleteDocumentByAdmissionMutation();\n  return [deleteDocumentByAdmission];\n};\n\nexport const useRefundAmountByAdmissionAdmin = () => {\n  const [refundAmountByAdmissionAdmin] =\n    useRefundAmountByAdmissionAdminMutation();\n  return [refundAmountByAdmissionAdmin];\n};\n\nexport const useGetRefundByAdmission = (args) => {\n  const { data: getRefundByAdmission, refetch: getRefundByAdmissionRefetch } =\n    useGetRefundByAdmissionQuery(args.data, { skip: args.skip });\n  return { getRefundByAdmission, getRefundByAdmissionRefetch };\n};\n\nexport const useUpdateRemarkByAdmissionAdmin = () => {\n  const [updateRemarkByAdmissionAdmin] =\n    useUpdateRemarkByAdmissionAdminMutation();\n  return [updateRemarkByAdmissionAdmin];\n};\n\nexport const useExportFilterDataByAdmission = () => {\n  const [exportFilterDataByAdmission] =\n    useExportFilterDataByAdmissionMutation();\n  return [exportFilterDataByAdmission];\n};\n\nexport const useGetAllExcelByAdmissionAdmin = (args) => {\n  const {\n    data: getAllExcelByAdmissionAdmin,\n    refetch: getAllExcelByAdmissionAdminRefetch,\n  } = useGetAllExcelByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getAllExcelByAdmissionAdmin, getAllExcelByAdmissionAdminRefetch };\n};\n\nexport const usePayAdmissionFeeByStudent = () => {\n  const [payAdmissionFeeByStudent] = usePayAdmissionFeeByStudentMutation();\n  return [payAdmissionFeeByStudent];\n};\n\nexport const useUpdateExcelByAdmissionAdmin = () => {\n  const [updateExcelByAdmissionAdmin] =\n    useUpdateExcelByAdmissionAdminMutation();\n  return [updateExcelByAdmissionAdmin];\n};\n\nexport const useDeleteExcelByAdmissionAdmin = () => {\n  const [deleteExcelByAdmissionAdmin] =\n    useDeleteExcelByAdmissionAdminMutation();\n  return [deleteExcelByAdmissionAdmin];\n};\n\nexport const useUpdateDocumentByAdmissionAdmin = () => {\n  const [updateDocumentByAdmissionAdmin] =\n    useUpdateDocumentByAdmissionAdminMutation();\n  return [updateDocumentByAdmissionAdmin];\n};\n\nexport const useDeleteDocumentByAdmissionAdmin = () => {\n  const [deleteDocumentByAdmissionAdmin] =\n    useDeleteDocumentByAdmissionAdminMutation();\n  return [deleteDocumentByAdmissionAdmin];\n};\nexport const useGetModeratorByAdmissionAdmin = (args) => {\n  const {\n    data: getModeratorByAdmissionAdmin,\n    refetch: getModeratorByAdmissionAdminRefetch,\n  } = useGetModeratorByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getModeratorByAdmissionAdmin, getModeratorByAdmissionAdminRefetch };\n};\n\nexport const useAddModeratorByAdmissionAdmin = () => {\n  const [addModeratorByAdmissionAdmin] =\n    useAddModeratorByAdmissionAdminMutation();\n  return [addModeratorByAdmissionAdmin];\n};\n\nexport const useUpdateModeratorByAdmissionAdmin = () => {\n  const [updateModeratorByAdmissionAdmin] =\n    useUpdateModeratorByAdmissionAdminMutation();\n  return [updateModeratorByAdmissionAdmin];\n};\n\nexport const useDeleteModeratorByAdmissionAdmin = () => {\n  const [deleteModeratorByAdmissionAdmin] =\n    useDeleteModeratorByAdmissionAdminMutation();\n  return [deleteModeratorByAdmissionAdmin];\n};\n\nexport const useAdmissionGetSiteInfo = (args) => {\n  const { data: admissionGetSiteInfo, refetch: admissionGetSiteInfoRefetch } =\n    useAdmissionGetSiteInfoQuery(args.aid, { skip: args.skip });\n  return { admissionGetSiteInfo, admissionGetSiteInfoRefetch };\n};\n\nexport const useAdmissionUpdateSiteInfo = () => {\n  const [admissionUpdateSiteInfo] = useAdmissionUpdateSiteInfoMutation();\n  return [admissionUpdateSiteInfo];\n};\n\n//////////////\nexport const useGetScholarshipListAdmission = (args) => {\n  const {\n    data: getScholarshipListAdmission,\n    refetch: getScholarshipListAdmissionRefetch,\n  } = useGetScholarshipListAdmissionQuery(args.data, { skip: args.skip });\n  return { getScholarshipListAdmission, getScholarshipListAdmissionRefetch };\n};\n\nexport const useAddScholarshipAdmission = () => {\n  const [addScholarshipAdmission] = useAddScholarshipAdmissionMutation();\n  return [addScholarshipAdmission];\n};\nexport const useGetOneScholarshipAdmission = (args) => {\n  const {\n    data: getOneScholarshipAdmission,\n    refetch: getOneScholarshipAdmissionRefetch,\n  } = useGetOneScholarshipAdmissionQuery(args.sid, { skip: args.skip });\n  return { getOneScholarshipAdmission, getOneScholarshipAdmissionRefetch };\n};\n\nexport const useGetOneScholarshipAllCandidateAdmission = (args) => {\n  const {\n    data: getOneScholarshipAllCandidateAdmission,\n    refetch: getOneScholarshipAllCandidateAdmissionRefetch,\n  } = useGetOneScholarshipAllCandidateAdmissionQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    getOneScholarshipAllCandidateAdmission,\n    getOneScholarshipAllCandidateAdmissionRefetch,\n  };\n};\n\nexport const useOneSchloarshipActionAdmission = () => {\n  const [oneSchloarshipActionAdmission] =\n    useOneSchloarshipActionAdmissionMutation();\n  return [oneSchloarshipActionAdmission];\n};\n\nexport const useAddScholarshipFundCorpusAdmission = () => {\n  const [addScholarshipFundCorpusAdmission] =\n    useAddScholarshipFundCorpusAdmissionMutation();\n  return [addScholarshipFundCorpusAdmission];\n};\nexport const useGetScholarshipFundCorpusAdmission = (args) => {\n  const {\n    data: getScholarshipFundCorpusAdmission,\n    refetch: getScholarshipFundCorpusAdmissionRefetch,\n  } = useGetScholarshipFundCorpusAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getScholarshipFundCorpusAdmission,\n    getScholarshipFundCorpusAdmissionRefetch,\n  };\n};\n\nexport const useAddMoreScholarshipFundCorpusAdmission = () => {\n  const [addMoreScholarshipFundCorpusAdmission] =\n    useAddMoreScholarshipFundCorpusAdmissionMutation();\n  return [addMoreScholarshipFundCorpusAdmission];\n};\n\nexport const useUpdateApplicationByAdmission = () => {\n  const [updateApplicationByAdmission] =\n    useUpdateApplicationByAdmissionMutation();\n  return [updateApplicationByAdmission];\n};\n\nexport const useDeleteApplicationByAdmission = () => {\n  const [deleteApplicationByAdmission] =\n    useDeleteApplicationByAdmissionMutation();\n  return [deleteApplicationByAdmission];\n};\nexport const useForgetPasswordProtection = () => {\n  const [forgetPasswordProtection] = useForgetPasswordProtectionMutation();\n  return [forgetPasswordProtection];\n};\nexport const usePasswordProtectionToggle = () => {\n  const [passwordProtectionToggle] = usePasswordProtectionToggleMutation();\n  return [passwordProtectionToggle];\n};\nexport const usePasswordProtectionLogin = () => {\n  const [passwordProtectionLogin] = usePasswordProtectionLoginMutation();\n  return [passwordProtectionLogin];\n};\n\nexport const useUpdateFeeStructureByAppliationWise = () => {\n  const [updateFeeStructureByAppliationWise] =\n    useUpdateFeeStructureByAppliationWiseMutation();\n  return [updateFeeStructureByAppliationWise];\n};\n\nexport const useGetRefundedListByAdmission = (args) => {\n  const {\n    data: getRefundedListByAdmission,\n    refetch: getRefundedListByAdmissionRefetch,\n  } = useGetRefundedListByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getRefundedListByAdmission,\n    getRefundedListByAdmissionRefetch,\n  };\n};\n\nexport const useDirectJoinWithPayAdmission = () => {\n  const [directJoinFormWithPayAdmission] =\n    useDirectJoinFormWithPayAdmissionMutation();\n  return [directJoinFormWithPayAdmission];\n};\n\nexport const useCollectSetOffAdmissionFees = () => {\n  const [collectSetOffAdmissionFees] = useCollectSetOffAdmissionFeesMutation();\n  return [collectSetOffAdmissionFees];\n};\nexport const useAdmissionDocsActionByStudent = () => {\n  const [admissionDocsActionByStudent] =\n    useAdmissionDocsActionByStudentMutation();\n  return [admissionDocsActionByStudent];\n};\n\nexport const useScholarShipExcelByAdmission = () => {\n  const [scholarShipExcelByAdmission] =\n    useScholarShipExcelByAdmissionMutation();\n  return [scholarShipExcelByAdmission];\n};\nexport const useScholarShipExcelByInstitute = () => {\n  const [scholarShipExcelByInstitute] =\n    useScholarShipExcelByInstituteMutation();\n  return [scholarShipExcelByInstitute];\n};\n\nexport const useAddScholarNumberAdmission = () => {\n  const [addScholarNumberAdmission] = useAddScholarNumberAdmissionMutation();\n  return [addScholarNumberAdmission];\n};\n\nexport const useStudentDepartmentFees = (args) => {\n  const { data: studentDepartmentFees, refetch: studentDepartmentFeesRefetch } =\n    useStudentDepartmentFeesQuery(args.data, { skip: args.skip });\n  return { studentDepartmentFees, studentDepartmentFeesRefetch };\n};\n\nexport const useStudentBacklogFees = (args) => {\n  const { data: studentBacklogFees, refetch: studentBacklogFeesRefetch } =\n    useStudentBacklogFeesQuery(args.data, { skip: args.skip });\n  return { studentBacklogFees, studentBacklogFeesRefetch };\n};\n\nexport const useInternalFeeReceipt = (args) => {\n  const { data: internalFeeReceipt, refetch: internalFeeReceiptRefetch } =\n    useInternalFeeReceiptQuery(args.rid, { skip: args.skip });\n  return { internalFeeReceipt, internalFeeReceiptRefetch };\n};\n\nexport const useDropAdmissionFeesCardByAdmission = () => {\n  const [dropAdmissionFeesCardByAdmission] =\n    useDropAdmissionFeesCardByAdmissionMutation();\n  return [dropAdmissionFeesCardByAdmission];\n};\n\nexport const useAllApplicationByAdmission = (args) => {\n  const {\n    data: allApplicationByAdmission,\n    refetch: allApplicationByAdmissionRefetch,\n  } = useAllApplicationByAdmissionQuery(args.data, { skip: args.skip });\n  return { allApplicationByAdmission, allApplicationByAdmissionRefetch };\n};\n\nexport const useAddNewFeesByAdmission = () => {\n  const [addNewFeesByAdmission] = useAddNewFeesByAdmissionMutation();\n  return [addNewFeesByAdmission];\n};\n\nexport const useCollectNewAddFeesByAdmission = () => {\n  const [collectNewAddFeesByAdmission] =\n    useCollectNewAddFeesByAdmissionMutation();\n  return [collectNewAddFeesByAdmission];\n};\n\nexport const useGovernmentCollectNewAddFeesByAdmission = () => {\n  const [governmentCollectNewAddFeesByAdmission] =\n    useGovernmentCollectNewAddFeesByAdmissionMutation();\n  return [governmentCollectNewAddFeesByAdmission];\n};\n\nexport const useAdmissionReminder = () => {\n  const [admissionReminder] = useAdmissionReminderMutation();\n  return [admissionReminder];\n};\nexport const useAdmissionInstallmentEditFeesByAdmission = () => {\n  const [admissionInstallmentEditFeesByAdmission] =\n    useAdmissionInstallmentEditFeesByAdmissionMutation();\n  return [admissionInstallmentEditFeesByAdmission];\n};\n\nexport const useGetPendingCustomFilterByAdmission = (args) => {\n  const {\n    data: getPendingCustomFilterByAdmission,\n    refetch: getPendingCustomFilterByAdmissionRefetch,\n  } = useGetPendingCustomFilterByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getPendingCustomFilterByAdmission,\n    getPendingCustomFilterByAdmissionRefetch,\n  };\n};\n\nexport const useGetBatchStandardWithMultipleDepartment = () => {\n  const [getBatchStandardWithMultipleDepartment] =\n    useGetBatchStandardWithMultipleDepartmentMutation();\n  return [getBatchStandardWithMultipleDepartment];\n};\n\n// with new filter type\nexport const useAllAdmissionRemaining = () => {\n  const [allAdmissionRemaining] = useFetchAdmissionRemainingArrayMutation();\n  return [allAdmissionRemaining];\n};\n\nexport const useAllRemaining = (args) => {\n  const { data: allRemainingList, refetch: allRemainingListRefetch } =\n    useFetchAllRemainingArrayQuery(args.data, { skip: args.skip });\n  return { allRemainingList, allRemainingListRefetch };\n};\n\nexport const useGetDailyCollectionByAdmission = (args) => {\n  const {\n    data: getDailyCollectionByAdmission,\n    refetch: getDailyCollectionByAdmissionRefetch,\n  } = useGetDailyCollectionByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getDailyCollectionByAdmission,\n    getDailyCollectionByAdmissionRefetch,\n  };\n};\n\n// student gr edit\nexport const useEditStudentGrNumber = () => {\n  const [editStudentGrNumber] = useEditStudentGrNumberMutation();\n  return [editStudentGrNumber];\n};\n//\nexport const useAdmissionRevertBackSelectedToApplication = () => {\n  const [admissionRevertBackSelectedToApplication] =\n    useAdmissionRevertBackSelectedToApplicationMutation();\n  return [admissionRevertBackSelectedToApplication];\n};\nexport const useAdmissionRevertBackDocsToSelected = () => {\n  const [admissionRevertBackDocsToSelected] =\n    useAdmissionRevertBackDocsToSelectedMutation();\n  return [admissionRevertBackDocsToSelected];\n};\n\nexport const useRemoveFeesInstallmentCard = () => {\n  const [removeFeesInstallmentCard] = useRemoveFeesInstallmentCardMutation();\n  return [removeFeesInstallmentCard];\n};\n\nexport const useTransferApplicatToOtherApplication = () => {\n  const [transferApplicatToOtherApplication] =\n    useTransferApplicatToOtherApplicationMutation();\n  return [transferApplicatToOtherApplication];\n};\n\nexport const useExistStudentFeesExcelByAdmission = () => {\n  const [existStudentFeesExcelByAdmission] =\n    useExistStudentFeesExcelByAdmissionMutation();\n  return [existStudentFeesExcelByAdmission];\n};\nexport const useStudentValidaForApplicationByAdmission = () => {\n  const [studentValidaForApplicationByAdmission] =\n    useStudentValidaForApplicationByAdmissionMutation();\n  return [studentValidaForApplicationByAdmission];\n};\nexport const useStudentBankValidationByAdmission = () => {\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmissionMutation();\n  return [studentBankValidationByAdmission];\n};\n\nexport const useMarkCompleteToOngoingApplication = () => {\n  const [markCompleteToOngoingApplication] =\n    useMarkCompleteToOngoingApplicationMutation();\n  return [markCompleteToOngoingApplication];\n};\n\nexport const useGetReminderHistoryByAdmission = (args) => {\n  const {\n    data: getReminderHistoryByAdmission,\n    refetch: getReminderHistoryByAdmissionRefetch,\n  } = useGetReminderHistoryByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getReminderHistoryByAdmission,\n    getReminderHistoryByAdmissionRefetch,\n  };\n};\n\nexport const useGetOsReminderStudentList = () => {\n  const [getOsReminderStudentList] = useGetOsReminderStudentListMutation();\n  return [getOsReminderStudentList];\n};\nexport const useStudentScholarshipNumberDublicate = () => {\n  const [studentScholarshipNumberDublicate] =\n    useStudentScholarshipNumberDublicateMutation();\n  return [studentScholarshipNumberDublicate];\n};\n","import {\n  activateAdmission,\n  editAdmissionFunction,\n  fetchAdmission,\n  fetchOngoing,\n  fetchCompleted,\n  fetchRemainingArray,\n  fetchAdmissionRemainingArray,\n  atInstituteSearchApplication,\n  userApply,\n  newApplication,\n  fetchRequest,\n  fetchSelect,\n  fetchConfirm,\n  fetchConfirmAll,\n  userSelect,\n  userCancelApplication,\n  userSelectStatusMode,\n  userConfirm,\n  userCancel,\n  fetchClasses,\n  newClassAllot,\n  markComplete,\n  oneStudentFee,\n  paidRemainFee,\n  oneApplication,\n  allDepartment,\n  cancelStatusMode,\n  studentAdmission,\n  collectApplicantDocsFunction,\n  admissionBatchListFunction,\n  admissionAllottedListFunction,\n  admissionCancelledListFunction,\n  admissionClassMasterListFunction,\n  addEnquiryFunction,\n  getAllEnquiryListFunction,\n  getOneEnquiryFunction,\n  oneEnquiryActionFunction,\n  directJoinFormAdmissionFunction,\n  submitAmountToFinanaceFunction,\n  getAccountWithNumberFunction,\n  editFeeStructureFunction,\n  confirmStudentModeByAdmissionAdminFunction,\n  rejectStudentModeByAdmissionAdminFunction,\n  getReceiptByAdmissionFunction,\n  receiptActionByAdmissionFunction,\n  reApplyReceiptByStudentFunction,\n  getFeeReceiptDetailFunction,\n  getDocumentByAdmissionFuction,\n  addDocumentByAdmissionFuction,\n  updateDocumentByAdmissionFuction,\n  deleteDocumentByAdmissionFuction,\n  refundAmountByAdmissionAdminFunction,\n  getRefundByAdmissionFuction,\n  updateRemarkByAdmissionAdminFunction,\n  exportFilterDataByAdmissionFuction,\n  getAllExcelByAdmissionAdminFunction,\n  payAdmissionFeeByStudentFunction,\n  updateExcelByAdmissionAdminFunction,\n  deleteExcelByAdmissionAdminFunction,\n  updateDocumentByAdmissionAdminFunction,\n  deleteDocumentByAdmissionAdminFunction,\n  addModeratorByAdmissionAdminFunction,\n  getModeratorByAdmissionAdminFunction,\n  updateModeratorByAdmissionAdminFunction,\n  deleteModeratorByAdmissionAdminFunction,\n  admissionGetSiteInfoFunction,\n  admissionUpdateSiteInfoFunction,\n  getScholarshipListAdmissionFunction,\n  addScholarshipAdmissionFunction,\n  getOneScholarshipAdmissionFunction,\n  getOneScholarshipAllCandidateAdmissionFunction,\n  oneSchloarshipActionAdmissionFunction,\n  addScholarshipFundCorpusAdmissionFunction,\n  getScholarshipFundCorpusAdmissionFunction,\n  addMoreScholarshipFundCorpusAdmissionFunction,\n  updateApplicationByAdmissionFunction,\n  deleteApplicationByAdmissionFunction,\n  forgetPasswordProtectionFunction,\n  passwordProtectionToggleFunction,\n  passwordProtectionLoginFunction,\n  updateFeeStructureByAppliationWiseFunction,\n  getRefundedListByAdmissionFunction,\n  directJoinFormWithPayAdmissionFunction,\n  collectSetOffAdmissionFeesFunction,\n  admissionDocsActionByStudentFunction,\n  scholarShipExcelByAdmissionFunction,\n  scholarShipExcelByInstituteFunction,\n  addScholarNumberAdmissionFunction,\n  studentDepartmentFeesFunction,\n  studentBacklogFeesFunction,\n  internalFeeReceiptFunction,\n  dropAdmissionFeesCardByAdmissionFunction,\n  allApplicationByAdmissionFunction,\n  addNewFeesByAdmissionFunction,\n  collectNewAddFeesByAdmissionFunction,\n  governmentCollectNewAddFeesByAdmissionFunction,\n  admissionReminderFunction,\n  admissionInstallmentEditFeesByAdmissionFunction,\n  getPendingCustomFilterByAdmissionFunction,\n  getBatchStandardWithMultipleDepartmentFunction,\n  getDailyCollectionByAdmissionFunction,\n  editStudentGrNumberFunction,\n  //\n  admissionRevertBackSelectedToApplicationFunction,\n  admissionRevertBackDocsToSelectedFunction,\n  removeFeesInstallmentCardFunction,\n  transferApplicatToOtherApplicationFunction,\n  existStudentFeesExcelByAdmissionFunction,\n  studentValidaForApplicationByAdmissionFunction,\n  studentBankValidationByAdmissionFunction,\n  markCompleteToOngoingApplicationFunction,\n  getReminderHistoryByAdmissionFunction,\n  getOsReminderStudentListFunction,\n  studentScholarshipNumberDublicateFunction,\n} from \"./admissionBuilderAPI\";\nimport { admissionNewApi } from \"./admissionNewApi\";\n\n//////////eeghfrwjeghw\nexport const admissionApiDynamic = admissionNewApi.injectEndpoints({\n  endpoints: (builder) => ({\n    activateAdmissionHead: activateAdmission(builder),\n    editAdmission: editAdmissionFunction(builder),\n    fetchAdmissionDetail: fetchAdmission(builder),\n    fetchAllOngoingApp: fetchOngoing(builder),\n    fetchAllCompletedApp: fetchCompleted(builder),\n    fetchAllRemainingArray: fetchRemainingArray(builder),\n    fetchAdmissionRemainingArray: fetchAdmissionRemainingArray(builder),\n\n    fetchAllAppAtInstitute: atInstituteSearchApplication(builder),\n    newUserApply: userApply(builder),\n    getNewApplication: newApplication(builder),\n    getAllRequest: fetchRequest(builder),\n    getAllSelect: fetchSelect(builder),\n    getAllConfirm: fetchConfirm(builder),\n    getAllConfirmMultiselect: fetchConfirmAll(builder),\n    fetchUserSelectApp: userSelect(builder),\n    fetchUserCancelApp: userCancelApplication(builder),\n    fetchUserSelectStatusApp: userSelectStatusMode(builder),\n    getUserConfirm: userConfirm(builder),\n    getUserCancel: userCancel(builder),\n    getAllClasses: fetchClasses(builder),\n    retrieveNewClassAllot: newClassAllot(builder),\n    retrieveMarkComplete: markComplete(builder),\n    getOneViewStudentFee: oneStudentFee(builder),\n    retrievePaidRemainFee: paidRemainFee(builder),\n    getOneApplication: oneApplication(builder),\n    getAllDepartment: allDepartment(builder),\n    fetchCancelStatusMode: cancelStatusMode(builder),\n    renderStudentAdmissionFees: studentAdmission(builder),\n    collectApplicantDocs: collectApplicantDocsFunction(builder),\n    admissionBatchList: admissionBatchListFunction(builder),\n    admissionAllottedList: admissionAllottedListFunction(builder),\n    admissionCancelledList: admissionCancelledListFunction(builder),\n    admissionClassMasterList: admissionClassMasterListFunction(builder),\n    addEnquiry: addEnquiryFunction(builder),\n    getAllEnquiryList: getAllEnquiryListFunction(builder),\n    getOneEnquiry: getOneEnquiryFunction(builder),\n    oneEnquiryAction: oneEnquiryActionFunction(builder),\n    directJoinFormAdmission: directJoinFormAdmissionFunction(builder),\n    submitAmountToFinanace: submitAmountToFinanaceFunction(builder),\n    getAccountWithNumber: getAccountWithNumberFunction(builder),\n    editFeeStructure: editFeeStructureFunction(builder),\n    confirmStudentModeByAdmissionAdmin:\n      confirmStudentModeByAdmissionAdminFunction(builder),\n    rejectStudentModeByAdmissionAdmin:\n      rejectStudentModeByAdmissionAdminFunction(builder),\n\n    getReceiptByAdmission: getReceiptByAdmissionFunction(builder),\n    receiptActionByAdmission: receiptActionByAdmissionFunction(builder),\n    reApplyReceiptByStudent: reApplyReceiptByStudentFunction(builder),\n    getFeeReceiptDetail: getFeeReceiptDetailFunction(builder),\n    getDocumentByAdmission: getDocumentByAdmissionFuction(builder),\n    addDocumentByAdmission: addDocumentByAdmissionFuction(builder),\n    updateDocumentByAdmission: updateDocumentByAdmissionFuction(builder),\n    deleteDocumentByAdmission: deleteDocumentByAdmissionFuction(builder),\n    refundAmountByAdmissionAdmin: refundAmountByAdmissionAdminFunction(builder),\n    getRefundByAdmission: getRefundByAdmissionFuction(builder),\n    updateRemarkByAdmissionAdmin: updateRemarkByAdmissionAdminFunction(builder),\n    exportFilterDataByAdmission: exportFilterDataByAdmissionFuction(builder),\n    getAllExcelByAdmissionAdmin: getAllExcelByAdmissionAdminFunction(builder),\n    payAdmissionFeeByStudent: payAdmissionFeeByStudentFunction(builder),\n    updateExcelByAdmissionAdmin: updateExcelByAdmissionAdminFunction(builder),\n    deleteExcelByAdmissionAdmin: deleteExcelByAdmissionAdminFunction(builder),\n    updateDocumentByAdmissionAdmin:\n      updateDocumentByAdmissionAdminFunction(builder),\n    deleteDocumentByAdmissionAdmin:\n      deleteDocumentByAdmissionAdminFunction(builder),\n    addModeratorByAdmissionAdmin: addModeratorByAdmissionAdminFunction(builder),\n    getModeratorByAdmissionAdmin: getModeratorByAdmissionAdminFunction(builder),\n    updateModeratorByAdmissionAdmin:\n      updateModeratorByAdmissionAdminFunction(builder),\n    deleteModeratorByAdmissionAdmin:\n      deleteModeratorByAdmissionAdminFunction(builder),\n    admissionGetSiteInfo: admissionGetSiteInfoFunction(builder),\n    admissionUpdateSiteInfo: admissionUpdateSiteInfoFunction(builder),\n    getScholarshipListAdmission: getScholarshipListAdmissionFunction(builder),\n    addScholarshipAdmission: addScholarshipAdmissionFunction(builder),\n    getOneScholarshipAdmission: getOneScholarshipAdmissionFunction(builder),\n    getOneScholarshipAllCandidateAdmission:\n      getOneScholarshipAllCandidateAdmissionFunction(builder),\n    oneSchloarshipActionAdmission:\n      oneSchloarshipActionAdmissionFunction(builder),\n    addScholarshipFundCorpusAdmission:\n      addScholarshipFundCorpusAdmissionFunction(builder),\n    getScholarshipFundCorpusAdmission:\n      getScholarshipFundCorpusAdmissionFunction(builder),\n    addMoreScholarshipFundCorpusAdmission:\n      addMoreScholarshipFundCorpusAdmissionFunction(builder),\n    updateApplicationByAdmission: updateApplicationByAdmissionFunction(builder),\n    deleteApplicationByAdmission: deleteApplicationByAdmissionFunction(builder),\n    forgetPasswordProtection: forgetPasswordProtectionFunction(builder),\n    passwordProtectionToggle: passwordProtectionToggleFunction(builder),\n    passwordProtectionLogin: passwordProtectionLoginFunction(builder),\n    updateFeeStructureByAppliationWise:\n      updateFeeStructureByAppliationWiseFunction(builder),\n\n    getRefundedListByAdmission: getRefundedListByAdmissionFunction(builder),\n    directJoinFormWithPayAdmission:\n      directJoinFormWithPayAdmissionFunction(builder),\n    collectSetOffAdmissionFees: collectSetOffAdmissionFeesFunction(builder),\n    admissionDocsActionByStudent: admissionDocsActionByStudentFunction(builder),\n    scholarShipExcelByAdmission: scholarShipExcelByAdmissionFunction(builder),\n    scholarShipExcelByInstitute: scholarShipExcelByInstituteFunction(builder),\n    addScholarNumberAdmission: addScholarNumberAdmissionFunction(builder),\n    studentDepartmentFees: studentDepartmentFeesFunction(builder),\n    studentBacklogFees: studentBacklogFeesFunction(builder),\n    internalFeeReceipt: internalFeeReceiptFunction(builder),\n    dropAdmissionFeesCardByAdmission:\n      dropAdmissionFeesCardByAdmissionFunction(builder),\n\n    allApplicationByAdmission: allApplicationByAdmissionFunction(builder),\n    addNewFeesByAdmission: addNewFeesByAdmissionFunction(builder),\n    collectNewAddFeesByAdmission: collectNewAddFeesByAdmissionFunction(builder),\n    governmentCollectNewAddFeesByAdmission:\n      governmentCollectNewAddFeesByAdmissionFunction(builder),\n    admissionReminder: admissionReminderFunction(builder),\n    admissionInstallmentEditFeesByAdmission:\n      admissionInstallmentEditFeesByAdmissionFunction(builder),\n    getPendingCustomFilterByAdmission:\n      getPendingCustomFilterByAdmissionFunction(builder),\n    getBatchStandardWithMultipleDepartment:\n      getBatchStandardWithMultipleDepartmentFunction(builder),\n    getDailyCollectionByAdmission:\n      getDailyCollectionByAdmissionFunction(builder),\n    editStudentGrNumber: editStudentGrNumberFunction(builder),\n    admissionRevertBackSelectedToApplication:\n      admissionRevertBackSelectedToApplicationFunction(builder),\n    admissionRevertBackDocsToSelected:\n      admissionRevertBackDocsToSelectedFunction(builder),\n    removeFeesInstallmentCard: removeFeesInstallmentCardFunction(builder),\n    transferApplicatToOtherApplication:\n      transferApplicatToOtherApplicationFunction(builder),\n    existStudentFeesExcelByAdmission:\n      existStudentFeesExcelByAdmissionFunction(builder),\n    studentValidaForApplicationByAdmission:\n      studentValidaForApplicationByAdmissionFunction(builder),\n    studentBankValidationByAdmission:\n      studentBankValidationByAdmissionFunction(builder),\n    markCompleteToOngoingApplication:\n      markCompleteToOngoingApplicationFunction(builder),\n    getReminderHistoryByAdmission:\n      getReminderHistoryByAdmissionFunction(builder),\n    getOsReminderStudentList: getOsReminderStudentListFunction(builder),\n    studentScholarshipNumberDublicate:\n      studentScholarshipNumberDublicateFunction(builder),\n  }),\n});\n\nexport const {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchAllAppAtInstituteQuery,\n  useNewUserApplyMutation,\n  useGetNewApplicationMutation,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetUserConfirmMutation,\n  useGetUserCancelMutation,\n  useGetAllClassesQuery,\n  useRetrieveNewClassAllotMutation,\n  useRetrieveMarkCompleteMutation,\n  useGetOneViewStudentFeeQuery,\n  useRetrievePaidRemainFeeMutation,\n  useGetOneApplicationQuery,\n  useGetAllDepartmentQuery,\n  useFetchCancelStatusModeMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n\n  useGetDailyCollectionByAdmissionQuery,\n\n  //\n  useEditStudentGrNumberMutation,\n\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} = admissionApiDynamic;\n"],"names":["useAssignAdmissionHead","_useActivateAdmission","useActivateAdmissionHeadMutation","_slicedToArray","useEditAdmission","_useEditAdmissionMuta","useEditAdmissionMutation","useGetAdmissionDetail","args","_useFetchAdmissionDet","useFetchAdmissionDetailQuery","data","skip","getAdmissionDetail","getAdmissionDetailRefetch","refetch","useAllOngoingApp","_useFetchAllOngoingAp","useFetchAllOngoingAppQuery","allOngoingApp","allOngoingAppRefetch","useAllCompletedApp","_useFetchAllCompleted","useFetchAllCompletedAppQuery","allCompletedApp","allCompletedAppRefetch","useAllAppAtInstitute","_useFetchAllAppAtInst","useFetchAllAppAtInstituteQuery","allAppAtInstitute","allAppAtInstituteRefetch","useNewUserApply","_useNewUserApplyMutat","useNewUserApplyMutation","useCreateNewApplication","_useGetNewApplication","useGetNewApplicationMutation","useGetAllRequest","_useGetAllRequestQuer","useGetAllRequestQuery","getAllRequestList","getAllRequestListRefetch","useGetAllSelect","_useGetAllSelectQuery","useGetAllSelectQuery","getAllSelectList","getAllSelectListRefetch","useGetAllConfirm","_useGetAllConfirmQuer","useGetAllConfirmQuery","getAllConfirmList","getAllConfirmListRefetch","useGetAllConfirmMultiselect","_useGetAllConfirmMult","useGetAllConfirmMultiselectQuery","getAllConfirmListMulitselect","getAllConfirmListMulitselectRefetch","useSelectAdmissionApplicant","_useFetchUserSelectAp","useFetchUserSelectAppMutation","useCancelAdmissionApplicant","_useFetchUserCancelAp","useFetchUserCancelAppMutation","useStudentPayMode","_useFetchUserSelectSt","useFetchUserSelectStatusAppMutation","useApplicantAdmissionConfirm","_useGetUserConfirmMut","useGetUserConfirmMutation","useApplicantAdmissionCancel","_useGetUserCancelMuta","useGetUserCancelMutation","useGetAllClasses","_useGetAllClassesQuer","useGetAllClassesQuery","getAllClassesList","getAllClassesListRefetch","useApplicantAdmissionAllotSeat","_useRetrieveNewClassA","useRetrieveNewClassAllotMutation","useApplicationComplete","_useRetrieveMarkCompl","useRetrieveMarkCompleteMutation","useApplicantAdmissionRemainingFees","_useRetrievePaidRemai","useRetrievePaidRemainFeeMutation","useOneApplicationDetail","_useGetOneApplication","useGetOneApplicationQuery","apid","oneApplicationDetail","oneApplicationDetailRefetch","useGetAllDepartment","_useGetAllDepartmentQ","useGetAllDepartmentQuery","aid","allDepartmentList","allDepartmentListRefetch","useCancelStudentApplicationStatus","_useFetchCancelStatus","useFetchCancelStatusModeMutation","useRenderStudentAdmissionFees","_useRenderStudentAdmi","useRenderStudentAdmissionFeesQuery","sid","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","useCollectApplicantDocs","_useCollectApplicantD","useCollectApplicantDocsMutation","useAdmissionBatchList","_useAdmissionBatchLis","useAdmissionBatchListQuery","admissionBatchList","admissionBatchListRefetch","useAdmissionAllottedList","_useAdmissionAllotted","useAdmissionAllottedListQuery","admissionAllottedList","admissionAllottedListRefetch","useAdmissionCancelledList","_useAdmissionCancelle","useAdmissionCancelledListQuery","admissionCancelledList","admissionCancelledListRefetch","useAdmissionClassMasterList","_useAdmissionClassMas","useAdmissionClassMasterListQuery","did","admissionClassMasterList","admissionClassMasterListRefetch","useAddEnquiry","_useAddEnquiryMutatio","useAddEnquiryMutation","useGetAllEnquiryList","_useGetAllEnquiryList","useGetAllEnquiryListQuery","getAllEnquiryList","getAllEnquiryListRefetch","useGetOneEnquiry","_useGetOneEnquiryQuer","useGetOneEnquiryQuery","eid","oneEnquiryDetail","oneEnquiryDetailRefetch","useOneEnquiryAction","_useOneEnquiryActionM","useOneEnquiryActionMutation","useGetAccountWithNumber","_useGetAccountWithNum","useGetAccountWithNumberQuery","phoneKey","getAccountWithNumber","getAccountWithNumberRefetch","useEditFeeStructure","_useEditFeeStructureM","useEditFeeStructureMutation","useConfirmStudentModeByAdmissionAdmin","_useConfirmStudentMod","useConfirmStudentModeByAdmissionAdminMutation","useRejectStudentModeByAdmissionAdmin","_useRejectStudentMode","useRejectStudentModeByAdmissionAdminMutation","useReApplyReceiptByStudent","_useReApplyReceiptByS","useReApplyReceiptByStudentMutation","useGetFeeReceiptDetail","_useGetFeeReceiptDeta","useGetFeeReceiptDetailQuery","rid","getFeeReceiptDetail","getFeeReceiptDetailRefetch","useGetDocumentByAdmission","_useGetDocumentByAdmi","useGetDocumentByAdmissionQuery","getDocumentByAdmission","getDocumentByAdmissionRefetch","useRefundAmountByAdmissionAdmin","_useRefundAmountByAdm","useRefundAmountByAdmissionAdminMutation","useUpdateRemarkByAdmissionAdmin","_useUpdateRemarkByAdm","useUpdateRemarkByAdmissionAdminMutation","useExportFilterDataByAdmission","_useExportFilterDataB","useExportFilterDataByAdmissionMutation","useGetAllExcelByAdmissionAdmin","_useGetAllExcelByAdmi","useGetAllExcelByAdmissionAdminQuery","getAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminRefetch","usePayAdmissionFeeByStudent","_usePayAdmissionFeeBy","usePayAdmissionFeeByStudentMutation","useUpdateExcelByAdmissionAdmin","_useUpdateExcelByAdmi","useUpdateExcelByAdmissionAdminMutation","useDeleteExcelByAdmissionAdmin","_useDeleteExcelByAdmi","useDeleteExcelByAdmissionAdminMutation","useGetModeratorByAdmissionAdmin","_useGetModeratorByAdm","useGetModeratorByAdmissionAdminQuery","getModeratorByAdmissionAdmin","getModeratorByAdmissionAdminRefetch","useAddModeratorByAdmissionAdmin","_useAddModeratorByAdm","useAddModeratorByAdmissionAdminMutation","useUpdateModeratorByAdmissionAdmin","_useUpdateModeratorBy","useUpdateModeratorByAdmissionAdminMutation","useDeleteModeratorByAdmissionAdmin","_useDeleteModeratorBy","useDeleteModeratorByAdmissionAdminMutation","useAdmissionGetSiteInfo","_useAdmissionGetSiteI","useAdmissionGetSiteInfoQuery","admissionGetSiteInfo","admissionGetSiteInfoRefetch","useAdmissionUpdateSiteInfo","_useAdmissionUpdateSi","useAdmissionUpdateSiteInfoMutation","useUpdateApplicationByAdmission","_useUpdateApplication","useUpdateApplicationByAdmissionMutation","useDeleteApplicationByAdmission","_useDeleteApplication","useDeleteApplicationByAdmissionMutation","useUpdateFeeStructureByAppliationWise","_useUpdateFeeStructur","useUpdateFeeStructureByAppliationWiseMutation","useCollectSetOffAdmissionFees","_useCollectSetOffAdmi","useCollectSetOffAdmissionFeesMutation","useAdmissionDocsActionByStudent","_useAdmissionDocsActi","useAdmissionDocsActionByStudentMutation","useScholarShipExcelByInstitute","_useScholarShipExcelB3","useScholarShipExcelByInstituteMutation","useAddScholarNumberAdmission","_useAddScholarNumberA","useAddScholarNumberAdmissionMutation","useStudentDepartmentFees","_useStudentDepartment","useStudentDepartmentFeesQuery","studentDepartmentFees","studentDepartmentFeesRefetch","useInternalFeeReceipt","_useInternalFeeReceip","useInternalFeeReceiptQuery","internalFeeReceipt","internalFeeReceiptRefetch","useDropAdmissionFeesCardByAdmission","_useDropAdmissionFees","useDropAdmissionFeesCardByAdmissionMutation","useAllApplicationByAdmission","_useAllApplicationByA","useAllApplicationByAdmissionQuery","allApplicationByAdmission","allApplicationByAdmissionRefetch","useAddNewFeesByAdmission","_useAddNewFeesByAdmis","useAddNewFeesByAdmissionMutation","useCollectNewAddFeesByAdmission","_useCollectNewAddFees","useCollectNewAddFeesByAdmissionMutation","useGovernmentCollectNewAddFeesByAdmission","_useGovernmentCollect","useGovernmentCollectNewAddFeesByAdmissionMutation","useAdmissionReminder","_useAdmissionReminder","useAdmissionReminderMutation","useAdmissionInstallmentEditFeesByAdmission","_useAdmissionInstallm","useAdmissionInstallmentEditFeesByAdmissionMutation","useGetPendingCustomFilterByAdmission","_useGetPendingCustomF","useGetPendingCustomFilterByAdmissionQuery","getPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionRefetch","useGetBatchStandardWithMultipleDepartment","_useGetBatchStandardW","useGetBatchStandardWithMultipleDepartmentMutation","useAllAdmissionRemaining","_useFetchAdmissionRem","useFetchAdmissionRemainingArrayMutation","useAllRemaining","_useFetchAllRemaining","useFetchAllRemainingArrayQuery","allRemainingList","allRemainingListRefetch","useGetDailyCollectionByAdmission","_useGetDailyCollectio","useGetDailyCollectionByAdmissionQuery","getDailyCollectionByAdmission","getDailyCollectionByAdmissionRefetch","useEditStudentGrNumber","_useEditStudentGrNumb","useEditStudentGrNumberMutation","useAdmissionRevertBackSelectedToApplication","_useAdmissionRevertBa","useAdmissionRevertBackSelectedToApplicationMutation","useAdmissionRevertBackDocsToSelected","_useAdmissionRevertBa3","useAdmissionRevertBackDocsToSelectedMutation","useRemoveFeesInstallmentCard","_useRemoveFeesInstall","useRemoveFeesInstallmentCardMutation","useTransferApplicatToOtherApplication","_useTransferApplicatT","useTransferApplicatToOtherApplicationMutation","useExistStudentFeesExcelByAdmission","_useExistStudentFeesE","useExistStudentFeesExcelByAdmissionMutation","useStudentValidaForApplicationByAdmission","_useStudentValidaForA","useStudentValidaForApplicationByAdmissionMutation","useStudentBankValidationByAdmission","_useStudentBankValida","useStudentBankValidationByAdmissionMutation","useMarkCompleteToOngoingApplication","_useMarkCompleteToOng","useMarkCompleteToOngoingApplicationMutation","useGetOsReminderStudentList","_useGetOsReminderStud","useGetOsReminderStudentListMutation","useStudentScholarshipNumberDublicate","_useStudentScholarshi","useStudentScholarshipNumberDublicateMutation","admissionApiDynamic","admissionNewApi","injectEndpoints","endpoints","builder","activateAdmissionHead","activateAdmission","editAdmission","editAdmissionFunction","fetchAdmissionDetail","fetchAdmission","fetchAllOngoingApp","fetchOngoing","fetchAllCompletedApp","fetchCompleted","fetchAllRemainingArray","fetchRemainingArray","fetchAdmissionRemainingArray","fetchAllAppAtInstitute","atInstituteSearchApplication","newUserApply","userApply","getNewApplication","newApplication","getAllRequest","fetchRequest","getAllSelect","fetchSelect","getAllConfirm","fetchConfirm","getAllConfirmMultiselect","fetchConfirmAll","fetchUserSelectApp","userSelect","fetchUserCancelApp","userCancelApplication","fetchUserSelectStatusApp","userSelectStatusMode","getUserConfirm","userConfirm","getUserCancel","userCancel","getAllClasses","fetchClasses","retrieveNewClassAllot","newClassAllot","retrieveMarkComplete","markComplete","getOneViewStudentFee","oneStudentFee","retrievePaidRemainFee","paidRemainFee","getOneApplication","oneApplication","getAllDepartment","allDepartment","fetchCancelStatusMode","cancelStatusMode","renderStudentAdmissionFees","studentAdmission","collectApplicantDocs","collectApplicantDocsFunction","admissionBatchListFunction","admissionAllottedListFunction","admissionCancelledListFunction","admissionClassMasterListFunction","addEnquiry","addEnquiryFunction","getAllEnquiryListFunction","getOneEnquiry","getOneEnquiryFunction","oneEnquiryAction","oneEnquiryActionFunction","directJoinFormAdmission","directJoinFormAdmissionFunction","submitAmountToFinanace","submitAmountToFinanaceFunction","getAccountWithNumberFunction","editFeeStructure","editFeeStructureFunction","confirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmissionAdminFunction","rejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmissionAdminFunction","getReceiptByAdmission","getReceiptByAdmissionFunction","receiptActionByAdmission","receiptActionByAdmissionFunction","reApplyReceiptByStudent","reApplyReceiptByStudentFunction","getFeeReceiptDetailFunction","getDocumentByAdmissionFuction","addDocumentByAdmission","addDocumentByAdmissionFuction","updateDocumentByAdmission","updateDocumentByAdmissionFuction","deleteDocumentByAdmission","deleteDocumentByAdmissionFuction","refundAmountByAdmissionAdmin","refundAmountByAdmissionAdminFunction","getRefundByAdmission","getRefundByAdmissionFuction","updateRemarkByAdmissionAdmin","updateRemarkByAdmissionAdminFunction","exportFilterDataByAdmission","exportFilterDataByAdmissionFuction","getAllExcelByAdmissionAdminFunction","payAdmissionFeeByStudent","payAdmissionFeeByStudentFunction","updateExcelByAdmissionAdmin","updateExcelByAdmissionAdminFunction","deleteExcelByAdmissionAdmin","deleteExcelByAdmissionAdminFunction","updateDocumentByAdmissionAdmin","updateDocumentByAdmissionAdminFunction","deleteDocumentByAdmissionAdmin","deleteDocumentByAdmissionAdminFunction","addModeratorByAdmissionAdmin","addModeratorByAdmissionAdminFunction","getModeratorByAdmissionAdminFunction","updateModeratorByAdmissionAdmin","updateModeratorByAdmissionAdminFunction","deleteModeratorByAdmissionAdmin","deleteModeratorByAdmissionAdminFunction","admissionGetSiteInfoFunction","admissionUpdateSiteInfo","admissionUpdateSiteInfoFunction","getScholarshipListAdmission","getScholarshipListAdmissionFunction","addScholarshipAdmission","addScholarshipAdmissionFunction","getOneScholarshipAdmission","getOneScholarshipAdmissionFunction","getOneScholarshipAllCandidateAdmission","getOneScholarshipAllCandidateAdmissionFunction","oneSchloarshipActionAdmission","oneSchloarshipActionAdmissionFunction","addScholarshipFundCorpusAdmission","addScholarshipFundCorpusAdmissionFunction","getScholarshipFundCorpusAdmission","getScholarshipFundCorpusAdmissionFunction","addMoreScholarshipFundCorpusAdmission","addMoreScholarshipFundCorpusAdmissionFunction","updateApplicationByAdmission","updateApplicationByAdmissionFunction","deleteApplicationByAdmission","deleteApplicationByAdmissionFunction","forgetPasswordProtection","forgetPasswordProtectionFunction","passwordProtectionToggle","passwordProtectionToggleFunction","passwordProtectionLogin","passwordProtectionLoginFunction","updateFeeStructureByAppliationWise","updateFeeStructureByAppliationWiseFunction","getRefundedListByAdmission","getRefundedListByAdmissionFunction","directJoinFormWithPayAdmission","directJoinFormWithPayAdmissionFunction","collectSetOffAdmissionFees","collectSetOffAdmissionFeesFunction","admissionDocsActionByStudent","admissionDocsActionByStudentFunction","scholarShipExcelByAdmission","scholarShipExcelByAdmissionFunction","scholarShipExcelByInstitute","scholarShipExcelByInstituteFunction","addScholarNumberAdmission","addScholarNumberAdmissionFunction","studentDepartmentFeesFunction","studentBacklogFees","studentBacklogFeesFunction","internalFeeReceiptFunction","dropAdmissionFeesCardByAdmission","dropAdmissionFeesCardByAdmissionFunction","allApplicationByAdmissionFunction","addNewFeesByAdmission","addNewFeesByAdmissionFunction","collectNewAddFeesByAdmission","collectNewAddFeesByAdmissionFunction","governmentCollectNewAddFeesByAdmission","governmentCollectNewAddFeesByAdmissionFunction","admissionReminder","admissionReminderFunction","admissionInstallmentEditFeesByAdmission","admissionInstallmentEditFeesByAdmissionFunction","getPendingCustomFilterByAdmissionFunction","getBatchStandardWithMultipleDepartment","getBatchStandardWithMultipleDepartmentFunction","getDailyCollectionByAdmissionFunction","editStudentGrNumber","editStudentGrNumberFunction","admissionRevertBackSelectedToApplication","admissionRevertBackSelectedToApplicationFunction","admissionRevertBackDocsToSelected","admissionRevertBackDocsToSelectedFunction","removeFeesInstallmentCard","removeFeesInstallmentCardFunction","transferApplicatToOtherApplication","transferApplicatToOtherApplicationFunction","existStudentFeesExcelByAdmission","existStudentFeesExcelByAdmissionFunction","studentValidaForApplicationByAdmission","studentValidaForApplicationByAdmissionFunction","studentBankValidationByAdmission","studentBankValidationByAdmissionFunction","markCompleteToOngoingApplication","markCompleteToOngoingApplicationFunction","getReminderHistoryByAdmission","getReminderHistoryByAdmissionFunction","getOsReminderStudentList","getOsReminderStudentListFunction","studentScholarshipNumberDublicate","studentScholarshipNumberDublicateFunction","useGetOneViewStudentFeeQuery","useDirectJoinFormAdmissionMutation","useSubmitAmountToFinanaceMutation","useGetReceiptByAdmissionQuery","useReceiptActionByAdmissionMutation","useAddDocumentByAdmissionMutation","useUpdateDocumentByAdmissionMutation","useDeleteDocumentByAdmissionMutation","useGetRefundByAdmissionQuery","useUpdateDocumentByAdmissionAdminMutation","useDeleteDocumentByAdmissionAdminMutation","useGetScholarshipListAdmissionQuery","useAddScholarshipAdmissionMutation","useGetOneScholarshipAdmissionQuery","useGetOneScholarshipAllCandidateAdmissionQuery","useOneSchloarshipActionAdmissionMutation","useAddScholarshipFundCorpusAdmissionMutation","useGetScholarshipFundCorpusAdmissionQuery","useAddMoreScholarshipFundCorpusAdmissionMutation","useForgetPasswordProtectionMutation","usePasswordProtectionToggleMutation","usePasswordProtectionLoginMutation","useGetRefundedListByAdmissionQuery","useDirectJoinFormWithPayAdmissionMutation","useScholarShipExcelByAdmissionMutation","useStudentBacklogFeesQuery","useGetReminderHistoryByAdmissionQuery"],"sourceRoot":""}