{"version":3,"file":"static/js/30549.0490f06b.chunk.js","mappings":"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","sources":["optimized/Ui/UserMember/UserMemberContainerWrapper.jsx","optimized/UserStaffMember/AdmissionManager/AdmissionOngoingApplication/AdmissionOngoingApplicationCard.jsx","optimized/UserStaffMember/AdmissionManager/AdmissionOngoingApplication/AdmissionOngoingApplication.jsx","optimized/Utils/EmptyMessage/EmptyMessage.jsx","optimized/Utils/Functions/debounce.js","optimized/Utils/Functions/nextPage.js","webpack://mithkal-qviple/./src/optimized/UserStaffMember/AdmissionManager/OngoingAdmission/OngoingAdmission.module.css?0fce","webpack://mithkal-qviple/./src/optimized/Utils/Utils.module.css?d850","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import style from \"./UserMember.module.css\";\n\nconst UserMemberContainerWrapper = ({ customStyle, children }) => {\n  return (\n    <div className={style.user_member_container_wrapper} style={customStyle}>\n      {children}\n    </div>\n  );\n};\n\nexport default UserMemberContainerWrapper;\n","import style from \"../OngoingAdmission/OngoingAdmission.module.css\";\nimport { assestsUserAdmissionUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\n\nconst AdmissionOngoingApplicationCard = ({ application }) => {\n  const params = useParams();\n  const getQuery = useLocation();\n  //\n  return (\n    <>\n      <Link\n        to={\n          getQuery.state?.urlOffSet === \"Institute\"\n            ? `/q/${params.username}/institute/member/admission?type=enquiries`\n            : `/q/${params.username}/member/staff/admission?type=enquiries`\n        }\n        state={{\n          ...getQuery.state,\n          appId: application?._id,\n        }}\n      >\n        <div className={style.ongoing_card}>\n          <div className={style.ongoing_card_inner}>\n            <img\n              alt=\"Ongoing App\"\n              src={`${assestsUserAdmissionUrl}/application.svg`}\n            />\n            <div className={style.ongoing_card_text}>\n              <h6>{application?.applicationName ?? \"\"}</h6>\n              <p>{application?.applicationDepartment?.dName ?? \"\"}</p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </>\n  );\n};\n\nexport default AdmissionOngoingApplicationCard;\n","import { useCallback, useEffect, useState } from \"react\";\nimport Loading from \"../../../Loader/Loading\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport {\n  assestsNavbarUrl,\n  assestsUtilityUrl,\n} from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport UserMemberContainerWrapper from \"../../../Ui/UserMember/UserMemberContainerWrapper\";\nimport UserMemberContentWrapper from \"../../../Ui/UserMember/UserMemberContentWrapper\";\nimport EmptyMessage from \"../../../Utils/EmptyMessage/EmptyMessage\";\nimport style from \"../../FinanceManager/FinanceManager.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useInView } from \"react-intersection-observer\";\nimport { nextPage } from \"../../../Utils/Functions/nextPage\";\nimport { customDebounce } from \"../../../Utils/Functions/debounce\";\nimport BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport { useAdmissionOngoingApplication } from \"../../../Hooks/ApiHooks/AdmissionManager/admission-manager-api\";\nimport AdmissionOngoingApplicationCard from \"./AdmissionOngoingApplicationCard\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst AdmissionOngoingApplication = ({ aid, instituteId }) => {\n  const { t } = useTranslation();\n  const getQuery = useLocation();\n  const params = useParams();\n  const navigate = useNavigate();\n  const [search, setSearch] = useState(\"\");\n  const [searchCopy, setSearchCopy] = useState(\"\");\n\n  const [page, setPage] = useState(1);\n  const [state, setState] = useState(true);\n  const [ref, inView] = useInView({ skip: search });\n\n  const { admissionOngoingApplication, admissionOngoingApplicationLoading } =\n    useAdmissionOngoingApplication({\n      data: {\n        aid: aid,\n        page: page,\n        limit: 10,\n        search: search,\n      },\n      skip: !aid,\n    });\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n  useEffect(() => {\n    if (admissionOngoingApplication?.list?.length) {\n      let obj = nextPage(admissionOngoingApplication?.list?.length);\n      setState(() => obj);\n    }\n  }, [admissionOngoingApplication?.list?.length]);\n\n  const onDebounce = useCallback(\n    customDebounce((val) => {\n      setPage(() => 1);\n      setSearch(val);\n    }, 1500),\n    []\n  );\n\n  const onSearchEvent = (e) => {\n    if (\n      !admissionOngoingApplicationLoading &&\n      admissionOngoingApplication?.list?.length >= 0\n    ) {\n      // if (e.target.value) {\n      setSearchCopy(e.target.value);\n      // } else {\n      //   setSearchCopy(\"\");\n      //   setSearch(\"\");\n      // }\n    }\n    // if (e.target.value) onDebounce(e.target.value);\n    // else {\n    //   setPage(() => 1);\n    //   setSearch(\"\");\n    // }\n  };\n  const onCallBindSearch = (e) => {\n    if (e.key === \"Enter\") {\n      setPage(() => 1);\n      setSearch(searchCopy);\n    }\n  };\n  const onNavigate = useCallback(() => {\n    let url =\n      getQuery.state?.urlOffSet === \"Institute\"\n        ? `/q/${params.username}/institute/member/admission`\n        : `/q/${params.username}/member/staff/admission`;\n    navigate(url, {\n      state: getQuery.state,\n    });\n  }, [navigate, getQuery.state, params.username]);\n  return (\n    <>\n      <UserMemberContainerWrapper>\n        <UserMemberContentWrapper>\n          <div className={style.fm_header_container}>\n            <div className={style.fm_header_start_container}>\n              <img\n                alt=\"search icon\"\n                src={`${assestsUtilityUrl}/back.svg`}\n                style={{\n                  height: \"2rem\",\n                  width: \"2rem\",\n                }}\n                onClick={onNavigate}\n              />\n              <h6>{t(\"ongoing_applications\")}</h6>\n            </div>\n\n            <div className={style.fm_search}>\n              <section className={style.fm_search_container}>\n                <div className={style.fm_search_container_inner}>\n                  <img\n                    className={style.fm_search_icon}\n                    alt=\"search icon\"\n                    src={`${assestsNavbarUrl}/navbar-search.svg`}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"search\")}\n                    onChange={onSearchEvent}\n                    style={{\n                      minWidth: \"220px\",\n                    }}\n                    onKeyUp={onCallBindSearch}\n                    value={searchCopy}\n                  />\n                </div>\n              </section>\n            </div>\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n\n        <UserMemberContentWrapper\n          customStyle={{\n            paddingTop: \"0.2rem\",\n            position: \"relative\",\n          }}\n        >\n          {admissionOngoingApplication?.list?.map((application, index) =>\n            admissionOngoingApplication?.list?.length === index + 1 ? (\n              <div key={application?._id} ref={ref}>\n                <AdmissionOngoingApplicationCard application={application} />\n              </div>\n            ) : (\n              <AdmissionOngoingApplicationCard\n                application={application}\n                key={application?._id}\n              />\n            )\n          )}\n          {admissionOngoingApplicationLoading ? (\n            search ? (\n              <QvipleLoader />\n            ) : (\n              <>{page === 1 ? <QvipleLoader /> : <Loading />}</>\n            )\n          ) : search ? (\n            admissionOngoingApplication?.list?.length === 0 && (\n              <EmptyMessage\n                customStyleContainer={{\n                  marginTop: \"1.5rem\",\n                }}\n                title=\"No ongoing application found related this search.\"\n              />\n            )\n          ) : (\n            admissionOngoingApplication?.list?.length === 0 && (\n              <EmptyMessage\n                customStyleContainer={{\n                  marginTop: \"1.5rem\",\n                }}\n                title=\"No application created.\"\n              />\n            )\n          )}\n        </UserMemberContentWrapper>\n      </UserMemberContainerWrapper>\n    </>\n  );\n};\n\nexport default AdmissionOngoingApplication;\n","import style from \"../Utils.module.css\";\nconst EmptyMessage = ({\n  title,\n  subtitle,\n  customStyleContainer,\n  costomTextTitleStyle,\n  costomTextSubtitleStyle,\n}) => {\n  return (\n    <div className={style.empty_container} style={customStyleContainer}>\n      {title && <h6 style={costomTextTitleStyle}>{title}</h6>}\n      {subtitle && <p style={costomTextSubtitleStyle}>{subtitle}</p>}\n    </div>\n  );\n};\n\nexport default EmptyMessage;\n","export const customDebounce = (func, delay) => {\n  let timer;\n  return function () {\n    let self = this;\n    let args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(self, args);\n    }, delay);\n  };\n};\n","export const nextPage = (args) => {\n  if (args % 10 === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ongoing_card\":\"OngoingAdmission_ongoing_card__5LO6X\",\"ongoing_card_active\":\"OngoingAdmission_ongoing_card_active__eu1jj\",\"ongoing_card_inner\":\"OngoingAdmission_ongoing_card_inner__DTYKz\",\"ongoing_card_text\":\"OngoingAdmission_ongoing_card_text__cj0Qv\",\"menu_icon\":\"OngoingAdmission_menu_icon__SwfUu\",\"ongoing_card_count_date\":\"OngoingAdmission_ongoing_card_count_date__Tzlwe\",\"ongoing_card_count_container\":\"OngoingAdmission_ongoing_card_count_container__Rj5uD\",\"ongoing_card_count_container_inner\":\"OngoingAdmission_ongoing_card_count_container_inner__vc5ZE\",\"application_card\":\"OngoingAdmission_application_card__C2AOm\",\"application_card_title\":\"OngoingAdmission_application_card_title__r3bxG\",\"application_card_info\":\"OngoingAdmission_application_card_info__uq+PO\",\"admission_confirm_class_card\":\"OngoingAdmission_admission_confirm_class_card__aRvXU\",\"admission_confirm_class_card_active\":\"OngoingAdmission_admission_confirm_class_card_active__LHjy3\",\"application_card_active\":\"OngoingAdmission_application_card_active__EcEKc\",\"admission_collect_docs\":\"OngoingAdmission_admission_collect_docs__MmjG7\",\"admission_confirm_class_count\":\"OngoingAdmission_admission_confirm_class_count__IsGih\"};","// extracted by mini-css-extract-plugin\nexport default {\"notify_backdrop\":\"Utils_notify_backdrop__saL0O\",\"notify_overlay\":\"Utils_notify_overlay__GtPc5\",\"notify_hide_overlay\":\"Utils_notify_hide_overlay__MYvkC\",\"notify_overlay_animation\":\"Utils_notify_overlay_animation__pcASm\",\"notify_hide_overlay_animation\":\"Utils_notify_hide_overlay_animation__UKRcG\",\"notify_container\":\"Utils_notify_container__O8DBA\",\"notify_message\":\"Utils_notify_message__PHwKo\",\"notify_close\":\"Utils_notify_close__IwjyA\",\"modal_backdrop\":\"Utils_modal_backdrop__WBquw\",\"modal_overlay\":\"Utils_modal_overlay__Yy-AV\",\"modal_hide_overlay\":\"Utils_modal_hide_overlay__elt3A\",\"navbar_modal_hide_overlay\":\"Utils_navbar_modal_hide_overlay__yqj5q\",\"navbar_modal_overlay\":\"Utils_navbar_modal_overlay__6ub8g\",\"modal_hide_overlay_animation\":\"Utils_modal_hide_overlay_animation__d3TNp\",\"navbar_modal_overlay_animation\":\"Utils_navbar_modal_overlay_animation__Ypk9u\",\"navbar_modal_hide_overlay_animation\":\"Utils_navbar_modal_hide_overlay_animation__QLEse\",\"empty_container\":\"Utils_empty_container__-VyCI\",\"modal_overlay_animation\":\"Utils_modal_overlay_animation__zkjsk\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","customStyle","children","_jsx","className","style","user_member_container_wrapper","_getQuery$state","_application$applicat","_application$applicat2","_application$applicat3","application","params","useParams","getQuery","useLocation","_Fragment","Link","to","state","urlOffSet","concat","username","appId","_id","ongoing_card","_jsxs","ongoing_card_inner","alt","src","assestsUserAdmissionUrl","ongoing_card_text","applicationName","applicationDepartment","dName","_admissionOngoingAppl3","_admissionOngoingAppl5","_admissionOngoingAppl7","_admissionOngoingAppl8","aid","instituteId","t","useTranslation","navigate","useNavigate","search","setSearch","useState","searchCopy","setSearchCopy","page","setPage","setState","ref","inView","useInView","skip","admissionOngoingApplication","admissionOngoingApplicationLoading","useAdmissionOngoingApplication","data","limit","useEffect","_admissionOngoingAppl","list","length","_admissionOngoingAppl2","obj","nextPage","useCallback","customDebounce","val","onNavigate","url","UserMemberContainerWrapper","UserMemberContentWrapper","fm_header_container","fm_header_start_container","assestsUtilityUrl","height","width","onClick","fm_search","fm_search_container","fm_search_container_inner","fm_search_icon","assestsNavbarUrl","type","placeholder","onChange","e","_admissionOngoingAppl4","target","value","minWidth","onKeyUp","key","BorderBottom","paddingTop","position","map","index","_admissionOngoingAppl6","AdmissionOngoingApplicationCard","QvipleLoader","Loading","EmptyMessage","customStyleContainer","marginTop","title","subtitle","costomTextTitleStyle","costomTextSubtitleStyle","empty_container","func","delay","timer","self","this","args","arguments","clearTimeout","setTimeout","apply","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","root","has","set","toString","get","observe","element","callback","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","rootMargin","triggerOnce","initialInView","setRef","React2","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}