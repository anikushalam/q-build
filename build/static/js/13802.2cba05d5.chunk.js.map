{"version":3,"file":"static/js/13802.2cba05d5.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/InstituteForgetVerify.jsx","optimized/Auth/Verification/OtpResendTimer.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Ui/Button/CreateButton.jsx","optimized/Utils/Snackbar/NotifyOverlay.jsx","optimized/Utils/Snackbar/NotifyEvent.jsx","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/optimized/Ui/Button/Button.module.css?2226","webpack://mithkal-qviple/./src/optimized/Utils/Utils.module.css?d850"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport {\n  useAuthUserForget,\n  useAuthUserForgetOtp,\n} from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport OtpResendTimer from \"../Verification/OtpResendTimer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst InstituteForgetVerify = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [state, setState] = useState({\n    userOtpCode: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForgetOtp] = useAuthUserForgetOtp();\n  const [authUserForget] = useAuthUserForget();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, userOtpCode: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation) && getQuery.state?.uid) {\n      setDisabled((pre) => !pre);\n      authUserForgetOtp({\n        uid: getQuery.state?.uid,\n        otp: state,\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute) {\n            navigate(\"/institute/forget/password\", {\n              state: {\n                uid: response?.institute,\n              },\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid Otp\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onOtpResend = () => {\n    if (getQuery?.state?.phoneNumber) {\n      authUserForget({\n        forgot: {\n          username: getQuery?.state?.phoneNumber,\n        },\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute?._id) {\n            setSnackbar({\n              open: true,\n              msg: `Code will be resent on mobile number`,\n              variant: \"success\",\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid username\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forget_password_verification_code\"\n        subTitle={`${t(\"verification_code_note\")} mobile number`}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            placeholder={t(\"verification_code\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-otp.svg`}\n            maxLength=\"4\"\n            validate={errorField[\"userOtpCode\"]}\n            name=\"userOtpCode\"\n            value={state.userOtpCode}\n            onChange={onChangeHandler}\n          />\n          <div className={style.auth_footer_container}>\n            <p className={style.auth_otp_text}>\n              {t(\"if_you_did_not_recieve_otp\")}\n              <OtpResendTimer onOtpResend={onOtpResend} />\n            </p>\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"verify\")}\n            disabled={disabled}\n          />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default InstituteForgetVerify;\n","import React, { memo, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\n\nconst OtpResendTimer = ({ onOtpResend }) => {\n  const { t } = useTranslation();\n  const [timer, setTimer] = useState(\"\");\n  const Ref = useRef(null);\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    return {\n      total,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(seconds);\n    }\n  };\n\n  const clearTimer = (e) => {\n    setTimer(\"40\");\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 40);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickResetTimer = () => {\n    clearTimer(getDeadTime());\n  };\n  const ResendOtpHandler = () => {\n    if (!timer) {\n      onOtpResend();\n      onClickResetTimer();\n    }\n  };\n  return (\n    <>\n      <span className={style.auth_otp_resend} onClick={ResendOtpHandler}>\n        {\" \"}\n        {t(\"resend\")}{\" \"}\n      </span>\n      <span className={style.auth_otp_resend}>{timer}</span>\n    </>\n  );\n};\n\nexport default memo(OtpResendTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./Button.module.css\";\nconst CreateButton = ({ label, count, onAction, customStyle, isTranslate }) => {\n  const { t } = useTranslation();\n\n  return isTranslate ? (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {label}\n    </div>\n  ) : (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {t(label)}\n    </div>\n  );\n};\n\nexport default CreateButton;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport style from \"../Utils.module.css\";\nimport { assestsUtilityUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\n\nconst NotifyOverlay = ({ onClose, isVariant, isHide, children }) => {\n  // console.info(\"isHide\", isHide);\n  return ReactDOM.createPortal(\n    <div>\n      {/* <div className={style.notify_backdrop} onClick={onClose} /> */}\n      <div\n        className={isHide ? style.notify_hide_overlay : style.notify_overlay}\n      >\n        <div\n          className={style.notify_container}\n          style={{\n            \"--notify-bg-color\": isVariant,\n          }}\n        >\n          {children}\n          <img\n            src={`${assestsUtilityUrl}/close-white.svg`}\n            alt=\"close icon\"\n            onClick={onClose}\n            className={style.notify_close}\n          />\n          {/* <img src={`${assestsUtilsUrl}/close.svg`} alt=\"close icon\" /> */}\n        </div>\n      </div>\n    </div>,\n    document.getElementById(\"notify-alert\")\n  );\n};\n\nexport default NotifyOverlay;\n","import { useEffect, useState } from \"react\";\nimport NotifyOverlay from \"./NotifyOverlay\";\nimport style from \"../Utils.module.css\";\n\nconst variantType = {\n  success: \"green\",\n  error: \"#ed4a4a\",\n  warning: \"orange\",\n};\nconst NotifyEvent = ({ eventState, eventStateHandler }) => {\n  const [isHide, setIsHide] = useState(false);\n  const onClose = () => {\n    setIsHide(true);\n    let animationTimeout = setTimeout(() => {\n      eventStateHandler((prev) => ({\n        ...prev,\n        open: false,\n        msg: \"\",\n        variant: \"success\",\n      }));\n      setIsHide(false);\n    }, 500);\n    return () => clearTimeout(animationTimeout);\n  };\n\n  // useEffect(() => {\n  //   let identifire = setTimeout(() => {\n  //     onClose();\n  //   }, 3000);\n  //   return () => clearTimeout(identifire);\n  // }, []);\n\n  if (!eventState?.open) return null;\n  // console.info(\"dsbfsk,m,lk.,as\", isHide);\n  return (\n    <NotifyOverlay\n      onClose={onClose}\n      isVariant={variantType[eventState?.variant]}\n      isHide={isHide}\n    >\n      <h6 className={style.notify_message}>{eventState?.msg ?? \"\"}</h6>\n    </NotifyOverlay>\n  );\n};\n\nexport default NotifyEvent;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrapper\":\"Button_btn_wrapper__ihT7O\",\"btn_container\":\"Button_btn_container__OaH2t\",\"create_btn_container\":\"Button_create_btn_container__JuZrx\",\"upload_excel_file\":\"Button_upload_excel_file__a7d0K\",\"set_btn_container\":\"Button_set_btn_container__RvfRG\",\"ccb_button\":\"Button_ccb_button__Mjv4T\"};","// extracted by mini-css-extract-plugin\nexport default {\"notify_backdrop\":\"Utils_notify_backdrop__saL0O\",\"notify_overlay\":\"Utils_notify_overlay__GtPc5\",\"notify_hide_overlay\":\"Utils_notify_hide_overlay__MYvkC\",\"notify_overlay_animation\":\"Utils_notify_overlay_animation__pcASm\",\"notify_hide_overlay_animation\":\"Utils_notify_hide_overlay_animation__UKRcG\",\"notify_container\":\"Utils_notify_container__O8DBA\",\"notify_message\":\"Utils_notify_message__PHwKo\",\"notify_close\":\"Utils_notify_close__IwjyA\",\"modal_backdrop\":\"Utils_modal_backdrop__WBquw\",\"modal_overlay\":\"Utils_modal_overlay__Yy-AV\",\"modal_hide_overlay\":\"Utils_modal_hide_overlay__elt3A\",\"navbar_modal_hide_overlay\":\"Utils_navbar_modal_hide_overlay__yqj5q\",\"navbar_modal_overlay\":\"Utils_navbar_modal_overlay__6ub8g\",\"modal_hide_overlay_animation\":\"Utils_modal_hide_overlay_animation__d3TNp\",\"navbar_modal_overlay_animation\":\"Utils_navbar_modal_overlay_animation__Ypk9u\",\"navbar_modal_hide_overlay_animation\":\"Utils_navbar_modal_hide_overlay_animation__QLEse\",\"empty_container\":\"Utils_empty_container__-VyCI\",\"modal_overlay_animation\":\"Utils_modal_overlay_animation__zkjsk\"};"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","InstituteForgetVerify","navigate","useNavigate","getQuery","useLocation","state","setState","useState","userOtpCode","disabled","setDisabled","errorField","setErrorField","snackbar","setSnackbar","open","msg","variant","authUserForgetOtp","useAuthUserForgetOtp","authUserForget","useAuthUserForget","GetStarted","concat","fontSize","onSubmit","e","_getQuery$state","preventDefault","validation","requiredField","_getQuery$state2","existingRequiredField","uid","pre","otp","then","res","_res$data","response","decryption","data","encrypt","institute","catch","err","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","maxLength","validate","name","value","onChange","prev","target","auth_footer_container","auth_otp_text","OtpResendTimer","onOtpResend","_getQuery$state3","_getQuery$state4","phoneNumber","forgot","username","_res$data2","_response$institute","_id","ButtonWithTypeSubmit","type","buttonText","NotifyEvent","eventState","eventStateHandler","timer","setTimer","Ref","useRef","startTimer","total","seconds","Date","parse","Math","floor","getTimeRemaining","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","auth_otp_resend","onClick","ResendOtpHandler","minLength","isPassword","passwordVisible","setPasswordVisible","htmlFor","src","alt","onToggle","count","isTranslate","create_btn_container","onClose","isVariant","isHide","ReactDOM","notify_hide_overlay","notify_overlay","notify_container","assestsUtilityUrl","notify_close","document","getElementById","variantType","success","error","warning","_eventState$msg","setIsHide","NotifyOverlay","animationTimeout","setTimeout","clearTimeout","notify_message","optional","arguments","length","undefined","obj","includes","required","req"],"sourceRoot":""}