{"version":3,"file":"static/js/33752.25b0fb23.chunk.js","mappings":"gSA2EA,EAtE8B,SAAHA,GAAiD,IAA3CC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SACtCC,GAD0DJ,EAAVK,YAC1CC,EAAAA,EAAAA,MAANF,GAER,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,kBAAkBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMI,sBAAsBF,UAC1CJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMK,gBACjBL,MAAO,CACLM,SAAU,QACVJ,SAEDP,EAAE,kBAELQ,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMO,mBACjBP,MAAO,CACLM,SAAU,UACVJ,SAEDP,EAAE,yBAITQ,EAAAA,EAAAA,KAAA,OACEJ,UAAWC,EAAAA,EAAMQ,gBACjBR,MAAO,CACLS,UAAW,KACXP,UAEFJ,EAAAA,EAAAA,MAAA,QAAMJ,SAAUA,EAASQ,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMU,yBAAyBR,SAChC,OAAZS,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAI,SAACC,GAAM,OACxBf,EAAAA,EAAAA,MAAA,OACEgB,QAAS,kBAAMrB,EAAOoB,EAAOE,IAAI,EACjChB,UAAWC,EAAAA,EAAMgB,oBAAoBd,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OACEc,IACEzB,IAAUqB,EAAOE,IAAG,GAAAG,OACbC,EAAAA,GAAc,KAAAD,OAAIL,EAAOO,YAAU,GAAAF,OACnCC,EAAAA,GAAc,KAAAD,OAAIL,EAAOQ,UAElCC,IAAI,eAENnB,EAAAA,EAAAA,KAAA,KACEH,MAAO,CACLuB,MAAO/B,IAAUqB,EAAOE,IAAM,UAAY,WAC1Cb,SAEDP,EAAEkB,EAAOW,UAER,OAIVrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAoB,CACnBC,KAAK,SACLC,WAAYhC,EAAE,QACdiC,kBAAmB,CACjBnB,UAAW,mBAOzB,EAIME,EAAe,CACnB,CACEa,KAAM,sBACNT,IAAK,sBACLM,SAAU,sBACVD,WAAY,4BAEd,CACEI,KAAM,aACNT,IAAK,SACLM,SAAU,aACVD,WAAY,mBAEd,CACEI,KAAM,WACNT,IAAK,mBACLM,SAAU,eACVD,WAAY,qBAEd,CACEI,KAAM,eACNT,IAAK,6BACLM,SAAU,yBACVD,WAAY,+BAEd,CACEI,KAAM,sBACNT,IAAK,kBACLM,SAAU,uBACVD,WAAY,4BAEd,CACEI,KAAM,gBACNT,IAAK,QACLM,SAAU,kBACVD,WAAY,yBCtChB,EArE8B,SAAH7B,GAAiD,IAA3CC,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SACtCC,GAD0DJ,EAAVK,YAC1CC,EAAAA,EAAAA,MAANF,GACR,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,kBAAkBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMI,sBAAsBF,UAC1CJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMK,gBACjBL,MAAO,CACLM,SAAU,QACVJ,SAEDP,EAAE,kBAELQ,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMO,mBACjBP,MAAO,CACLM,SAAU,UACVJ,SAEDP,EAAE,yBAITQ,EAAAA,EAAAA,KAAA,OACEJ,UAAWC,EAAAA,EAAMQ,gBACjBR,MAAO,CACLS,UAAW,KACXP,UAEFJ,EAAAA,EAAAA,MAAA,QAAMJ,SAAUA,EAASQ,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMU,yBAAyBR,SACpC,OAAR2B,QAAQ,IAARA,OAAQ,EAARA,EAAUjB,KAAI,SAACC,GAAM,OACpBf,EAAAA,EAAAA,MAAA,OACEgB,QAAS,kBAAMrB,EAAOoB,EAAOE,IAAI,EACjChB,UAAWC,EAAAA,EAAMgB,oBAAoBd,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OACEc,IACEzB,IAAUqB,EAAOE,IAAG,GAAAG,OACbC,EAAAA,GAAc,KAAAD,OAAIL,EAAOO,YAAU,GAAAF,OACnCC,EAAAA,GAAc,KAAAD,OAAIL,EAAOQ,UAElCC,IAAI,eAENnB,EAAAA,EAAAA,KAAA,KACEH,MAAO,CACLuB,MAAO/B,IAAUqB,EAAOE,IAAM,UAAY,WAC1Cb,SAEDP,EAAEkB,EAAOW,UAER,OAIVrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAoB,CACnBC,KAAK,SACLC,WAAYhC,EAAE,QACdiC,kBAAmB,CACjBnB,UAAW,mBAOzB,EAIMoB,EAAW,CACf,CACEL,KAAM,SACNT,IAAK,SACLM,SAAU,aACVD,WAAY,mBAEd,CACEI,KAAM,UACNT,IAAK,UACLM,SAAU,cACVD,WAAY,oBAEd,CACEI,KAAM,OACNT,IAAK,OACLM,SAAU,WACVD,WAAY,kB,WCchB,EArG8B,SAAH7B,GAMpB,IALLuC,EAAevC,EAAfuC,gBACAtC,EAAKD,EAALC,MACAE,EAAQH,EAARG,SACAE,EAAUL,EAAVK,WACAmC,EAAQxC,EAARwC,SAEQpC,GAAME,EAAAA,EAAAA,MAANF,EACR,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,kBAAkBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMI,sBAAsBF,UAC1CJ,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMK,gBACjBL,MAAO,CACLM,SAAU,QACVJ,SAEDP,EAAE,yBAELQ,EAAAA,EAAAA,KAAA,MACEJ,UAAWC,EAAAA,EAAMO,mBACjBP,MAAO,CACLM,SAAU,UACVJ,SAEDP,EAAE,6BAKTQ,EAAAA,EAAAA,KAAA,OACEJ,UAAWC,EAAAA,EAAMQ,gBACjBR,MAAO,CACLS,UAAW,KACXP,UAEFJ,EAAAA,EAAAA,MAAA,QAAMJ,SAAUA,EAASQ,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAqB,CACpBC,MAAOtC,EAAE,kBACTuC,YAAavC,EAAE,8BACfwC,aAAY,GAAAjB,OAAKC,EAAAA,GAAc,aAC/BiB,SAAUxC,EAAoB,QAC9B4B,KAAK,UACLa,MAAO7C,EAAM8C,QACbC,SAAUT,KAEZ3B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAqB,CACpBC,MAAOtC,EAAE,YACTuC,YAAavC,EAAE,kCACfwC,aAAY,GAAAjB,OAAKC,EAAAA,GAAc,kBAC/BiB,SAAUxC,EAAiB,KAC3B4B,KAAK,OACLa,MAAO7C,EAAMgC,KACbe,SAAUT,KAEZ3B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAqB,CACpBC,MAAOtC,EAAE,SACTuC,YAAavC,EAAE,SACfwC,aAAY,GAAAjB,OAAKC,EAAAA,GAAc,aAC/BiB,SAAUxC,EAAqB,SAC/B4B,KAAK,WACLa,MAAO7C,EAAMgD,SACbD,SAAUT,EACVJ,KAAK,WAEPvB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAqB,CACpBC,MAAOtC,EAAE,WACTuC,YAAavC,EAAE,uBACfwC,aAAY,GAAAjB,OAAKC,EAAAA,GAAc,iBAC/BiB,SAAUxC,EAAuB,WACjC4B,KAAK,aACLa,MAAO7C,EAAMiD,WACbF,SAAUT,KAEZ3B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAqB,CACpBC,MAAOtC,EAAE,WACTuC,YAAavC,EAAE,uBACfwC,aAAY,GAAAjB,OAAKC,EAAAA,GAAc,gBAE/BK,KAAK,UACLa,MAAO7C,EAAMkD,QACbH,SAAUT,EACVa,UAAU,IACVC,UAAU,OAGZzC,EAAAA,EAAAA,KAACsB,EAAAA,EAAoB,CACnBC,KAAK,SACLC,WAAYhC,EAAE,uBACdoC,SAAUA,EACVH,kBAAmB,CACjBnB,UAAW,mBAOzB,E,iCCyBA,EArH+B,WAC7B,IAAMoC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCxB,EAAQyB,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,GAAoCR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAzC9D,EAAU+D,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAA0BX,EAAAA,EAAAA,UAAS,CACjCZ,QAAS,GACTd,KAAM,GACNgB,SAAU,GACVC,WAAY,GACZqB,WAAY,GACZC,QAAS,GACTC,QAAS,KACTC,GAAAb,EAAAA,EAAAA,GAAAS,EAAA,GARKrE,EAAKyE,EAAA,GAAEC,EAAQD,EAAA,GAUtBE,GAAqCC,EAAAA,EAAAA,MAA9BC,GAA6DjB,EAAAA,EAAAA,GAAAe,EAAA,GAAnC,GAsEjC,OACEhE,EAAAA,EAAAA,KAAAmE,EAAAA,SAAA,CAAApE,UACEC,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,CAAArE,SACPmD,EAOW,SAATA,GACFlD,EAAAA,EAAAA,KAACqE,EAAqB,CACpB/E,OAjEa,SAACgF,GACtBP,GAAS,SAACQ,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACPX,QAASU,GAAG,GAEhB,EA6DUjF,MAAOA,EAAMuE,QACbrE,SA5DmB,SAACkF,GAC5BA,EAAEC,iBACF,IAAIC,GAAaC,EAAAA,EAAAA,GAAc,CAAEhB,QAASvE,EAAMuE,WAC5CiB,EAAAA,EAAAA,GAAsBF,GACxBxB,EAAQ,cAERM,EAAckB,EAElB,EAqDUlF,WAAYA,KAGdO,EAAAA,EAAAA,KAAC8E,EAAqB,CACpBnD,gBAvDc,SAAC8C,GACvBV,GAAS,SAACQ,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IAAAQ,EAAAA,EAAAA,GAAA,GACNN,EAAEO,OAAO3D,KAAOoD,EAAEO,OAAO9C,OAAK,GAEnC,EAmDU7C,MAAOA,EACPE,SAlDc,SAACkF,GACvBA,EAAEC,iBACFpB,GAAY,SAAC2B,GAAG,OAAMA,CAAG,IACzB,IACuCC,EAAAC,EADnCR,GAAaC,EAAAA,EAAAA,GAAcvF,EAAO,CAAC,gBACnCwF,EAAAA,EAAAA,GAAsBF,IACxBrB,GAAY,SAAC2B,GAAG,OAAMA,CAAG,IACzBf,EAA2B,CACzBkB,iBAAeZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVnF,GAAK,IACRgG,eAAwB,OAARzC,QAAQ,IAARA,GAAe,QAAPsC,EAARtC,EAAUvD,aAAK,IAAA6F,OAAP,EAARA,EAAiBI,YACjCC,gBAAyB,OAAR3C,QAAQ,IAARA,GAAe,QAAPuC,EAARvC,EAAUvD,aAAK,IAAA8F,OAAP,EAARA,EAAiBI,oBAGnCC,MAAK,SAACC,GAAS,IAADC,EAAAC,EAEiBC,EAD1BC,GAAWC,EAAAA,EAAAA,IAAc,OAAHL,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKM,YAAI,IAAAL,OAAN,EAAHA,EAAWM,SACzB,OAARH,QAAQ,IAARA,GAAmB,QAAXF,EAARE,EAAUI,iBAAS,IAAAN,GAAnBA,EAAqBO,KACvBxD,EAAS,qCAAsC,CAC7CrD,MAAO,CACL8G,GAAY,OAARN,QAAQ,IAARA,GAAmB,QAAXD,EAARC,EAAUI,iBAAS,IAAAL,OAAX,EAARA,EAAqBM,MAIjC,IACCE,MAAM,CAAC,KAEV3C,EAAckB,GACdrB,GAAY,SAAC2B,GAAG,OAAMA,CAAG,IAE7B,EAuBUxF,WAAYA,EACZmC,SAAUA,KAnBZ5B,EAAAA,EAAAA,KAACqG,EAAqB,CACpB/G,OA1Ea,SAACgF,GACtBP,GAAS,SAACQ,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACPV,QAASS,GAAG,GAEhB,EAsEUjF,MAAOA,EAAMwE,QACbtE,SArEmB,SAACkF,GAC5BA,EAAEC,iBACF,IAAIC,GAAaC,EAAAA,EAAAA,GAAc,CAAEf,QAASxE,EAAMwE,WAC5CgB,EAAAA,EAAAA,GAAsBF,GACxBxB,EAAQ,QAERM,EAAckB,EAElB,EA8DUlF,WAAYA,OAqBxB,C,kFC/HA,EAAuC,4CAAvC,EAAgH,kDAAhH,EAA+L,kDAA/L,EAA8Q,kDAA9Q,EAAmV,wCAAnV,EAA8Y,wCAA9Y,EAAyc,wCAAzc,EAAsgB,0C,sBCiFtgB,EA/E8B,SAAHL,GAYpB,IAXL0C,EAAK1C,EAAL0C,MACAP,EAAInC,EAAJmC,KACAF,EAAIjC,EAAJiC,KACAU,EAAW3C,EAAX2C,YACAG,EAAK9C,EAAL8C,MACAE,EAAQhD,EAARgD,SACAK,EAASrD,EAATqD,UACAD,EAASpD,EAAToD,UACAP,EAAQ7C,EAAR6C,SACAD,EAAY5C,EAAZ4C,aACAsE,EAAUlH,EAAVkH,WAEAxD,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDyD,EAAevD,EAAA,GAAEwD,EAAkBxD,EAAA,GAK1C,OACErD,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAApE,SAAA,CACG+B,GACCnC,EAAAA,EAAAA,MAAA,SAAO8G,QAASpF,EAAMzB,UAAWC,EAAuBE,SAAA,CACrD+B,EACAG,GAAWjC,EAAAA,EAAAA,KAAA,QAAMJ,UAAWC,EAAuBE,SAAC,OAAY,QAEjE,MACJC,EAAAA,EAAAA,KAAA,OACEJ,UACEqC,EACIpC,EACAA,EACLE,UAEDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiCE,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAiCE,UAC/CC,EAAAA,EAAAA,KAAA,OAAKc,IAAKkB,EAAcb,IAAI,iBAEpB,aAATI,GACCvB,EAAAA,EAAAA,KAAA,SACEJ,UAAWC,EACX0B,KAAMgF,EAAkB,OAAS,WACjClF,KAAMA,EACNmB,UAAWA,EACXC,UAAWA,EACXV,YAAaA,EACbG,MAAOA,EACPE,SAAUA,KAGZpC,EAAAA,EAAAA,KAAA,SACEJ,UAAWC,EACX0B,KAAU,OAAJA,QAAI,IAAJA,EAAAA,EAAQ,OACdF,KAAMA,EACNmB,UAAWA,EACXC,UAAWA,EACXV,YAAaA,EACbG,MAAOA,EACPE,SAAUA,IAIbkE,GACCtG,EAAAA,EAAAA,KAAA,OACEmB,IAAI,gBACJvB,UAAWC,EACXiB,IACiB,GAAAC,OACRC,EAAAA,GADPuF,EACqB,2BACA,2BAEvB5F,QAvDK,WACf6F,GAAmB,SAACjC,GAAI,OAAMA,CAAI,GACpC,IAuDY,YAKd,C,+EChFO,IAAMK,EAAgB,SAACmB,GAAyB,IAAnBW,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACzCG,EAAQ,CAAC,EACb,IAAK,IAAIC,KAAOhB,EACF,OAARW,QAAQ,IAARA,GAAAA,EAAUM,SAASD,IAEhBhB,EAAKgB,KAAMD,EAAMC,GAAO,cAGjC,OAAOD,CACT,EAEajC,EAAwB,WAAoB,IAAnBoC,EAAQN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChD,IAAK,IAAIO,KAAOD,EACd,OAAO,EAET,OAAO,CACT,C","sources":["optimized/Auth/CreateAccount/Institute/InstituteRegisterType.jsx","optimized/Auth/CreateAccount/Institute/InstituteRegisterMode.jsx","optimized/Auth/CreateAccount/Institute/InstituteRegisterForm.jsx","optimized/Auth/CreateAccount/Institute/InstituteCreateAccount.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Validation/functions/checkingRequiredField.js"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\n\nconst InstituteRegisterType = ({ state, onGrab, onSubmit, errorField }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"type_of_ins\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"choose_others\")}\n          </h6>\n        </div>\n      </div>\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <div className={style.institute_type_container}>\n            {registerType?.map((rgtype) => (\n              <div\n                onClick={() => onGrab(rgtype.key)}\n                className={style.institute_type_card}\n              >\n                <img\n                  src={\n                    state === rgtype.key\n                      ? `${assestsAuthUrl}/${rgtype.activeIcon}`\n                      : `${assestsAuthUrl}/${rgtype.greyIcon}`\n                  }\n                  alt=\"type icon\"\n                />\n                <p\n                  style={{\n                    color: state === rgtype.key ? \"#34495e\" : \"#95a5a6\",\n                  }}\n                >\n                  {t(rgtype.name)}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"next\")}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterType;\n\nconst registerType = [\n  {\n    name: \"college_polytechnic\",\n    key: \"College/Polytechnic\",\n    greyIcon: \"clg-polytechnic.svg\",\n    activeIcon: \"clg-polytechnic-dark.svg\",\n  },\n  {\n    name: \"school_ecc\",\n    key: \"School\",\n    greyIcon: \"school.svg\",\n    activeIcon: \"school-dark.svg\",\n  },\n  {\n    name: \"coaching\",\n    key: \"Coaching/Tuition\",\n    greyIcon: \"coaching.svg\",\n    activeIcon: \"coaching-dark.svg\",\n  },\n  {\n    name: \"Computer_ins\",\n    key: \"Online Educating Institute\",\n    greyIcon: \"computer-institute.svg\",\n    activeIcon: \"computer-institute-dark.svg\",\n  },\n  {\n    name: \"educational_content\",\n    key: \"Content Creator\",\n    greyIcon: \"content-creator2.svg\",\n    activeIcon: \"content-creator-dark.svg\",\n  },\n  {\n    name: \"music_academy\",\n    key: \"Other\",\n    greyIcon: \"music-dance.svg\",\n    activeIcon: \"music-dance-dark.svg\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\n\nconst InstituteRegisterMode = ({ state, onGrab, onSubmit, errorField }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"type_of_ins\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"choose_others\")}\n          </h6>\n        </div>\n      </div>\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <div className={style.institute_type_container}>\n            {modeType?.map((rgtype) => (\n              <div\n                onClick={() => onGrab(rgtype.key)}\n                className={style.institute_type_card}\n              >\n                <img\n                  src={\n                    state === rgtype.key\n                      ? `${assestsAuthUrl}/${rgtype.activeIcon}`\n                      : `${assestsAuthUrl}/${rgtype.greyIcon}`\n                  }\n                  alt=\"type icon\"\n                />\n                <p\n                  style={{\n                    color: state === rgtype.key ? \"#34495e\" : \"#95a5a6\",\n                  }}\n                >\n                  {t(rgtype.name)}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"next\")}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterMode;\n\nconst modeType = [\n  {\n    name: \"online\",\n    key: \"Online\",\n    greyIcon: \"online.svg\",\n    activeIcon: \"online-dark.svg\",\n  },\n  {\n    name: \"offline\",\n    key: \"Offline\",\n    greyIcon: \"offline.svg\",\n    activeIcon: \"offline-dark.svg\",\n  },\n  {\n    name: \"both\",\n    key: \"Both\",\n    greyIcon: \"both.svg\",\n    activeIcon: \"both-dark.svg\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\nimport AuthFormFieldWithIcon from \"../../../Ui/Auth/AuthFormFieldWithIcon\";\n\nconst InstituteRegisterForm = ({\n  onChangeHandler,\n  state,\n  onSubmit,\n  errorField,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"register-institute\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"enter_ins_details\")}\n          </h6>\n        </div>\n      </div>\n\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <AuthFormFieldWithIcon\n            label={t(\"institute_name\")}\n            placeholder={t(\"institute_name_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/name.svg`}\n            validate={errorField[\"insName\"]}\n            name=\"insName\"\n            value={state.insName}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"username\")}\n            placeholder={t(\"username_institute_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n            validate={errorField[\"name\"]}\n            name=\"name\"\n            value={state.name}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"email\")}\n            placeholder={t(\"email\")}\n            fieldIconUrl={`${assestsAuthUrl}/mail.svg`}\n            validate={errorField[\"insEmail\"]}\n            name=\"insEmail\"\n            value={state.insEmail}\n            onChange={onChangeHandler}\n            type=\"email\"\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"address\")}\n            placeholder={t(\"address_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/location.svg`}\n            validate={errorField[\"insAddress\"]}\n            name=\"insAddress\"\n            value={state.insAddress}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"pincode\")}\n            placeholder={t(\"pincode_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/pincode.svg`}\n            // validate={errorField[\"pincode\"]}\n            name=\"pincode\"\n            value={state.pincode}\n            onChange={onChangeHandler}\n            maxLength=\"6\"\n            minLength=\"6\"\n          />\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"continue_to_proceed\")}\n            disabled={disabled}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterForm;\n","import GetStarted from \"../../GetStarted\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport InstituteRegisterType from \"./InstituteRegisterType\";\nimport InstituteRegisterMode from \"./InstituteRegisterMode\";\nimport InstituteRegisterForm from \"./InstituteRegisterForm\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../Validation/functions/checkingRequiredField\";\nimport { useAuthInstituteCreateAccount } from \"../../../Hooks/ApiHooks/Auth/auth-api\";\nimport { decryption } from \"../../../Services/Encryption/decrypt\";\n\nconst InstituteCreateAccount = () => {\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [step, setStep] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [state, setState] = useState({\n    insName: \"\",\n    name: \"\",\n    insEmail: \"\",\n    insAddress: \"\",\n    insPincode: \"\",\n    insMode: \"\",\n    insType: \"\",\n  });\n\n  const [authInstituteCreateAccount] = useAuthInstituteCreateAccount();\n  const onRegisterType = (val) => {\n    setState((prev) => ({\n      ...prev,\n      insType: val,\n    }));\n  };\n\n  const onSubmitRegisterType = (e) => {\n    e.preventDefault();\n    let validation = requiredField({ insType: state.insType });\n    if (existingRequiredField(validation)) {\n      setStep(\"MODE\");\n    } else {\n      setErrorField(validation);\n    }\n  };\n  const onRegisterMode = (val) => {\n    setState((prev) => ({\n      ...prev,\n      insMode: val,\n    }));\n  };\n\n  const onSubmitRegisterMode = (e) => {\n    e.preventDefault();\n    let validation = requiredField({ insMode: state.insMode });\n    if (existingRequiredField(validation)) {\n      setStep(\"FORM_FIELD\");\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onCreateAccount = (e) => {\n    e.preventDefault();\n    setDisabled((pre) => !pre);\n    let validation = requiredField(state, [\"insPincode\"]);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      authInstituteCreateAccount({\n        profileCreation: {\n          ...state,\n          insPhoneNumber: getQuery?.state?.phoneNumber,\n          insMobileStatus: getQuery?.state?.insMobileStatus,\n        },\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute?._id) {\n            navigate(\"/institute/create/account/password\", {\n              state: {\n                id: response?.institute?._id,\n              },\n            });\n          }\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n      setDisabled((pre) => !pre);\n    }\n  };\n  return (\n    <>\n      <GetStarted>\n        {!step ? (\n          <InstituteRegisterType\n            onGrab={onRegisterType}\n            state={state.insType}\n            onSubmit={onSubmitRegisterType}\n            errorField={errorField}\n          />\n        ) : step === \"MODE\" ? (\n          <InstituteRegisterMode\n            onGrab={onRegisterMode}\n            state={state.insMode}\n            onSubmit={onSubmitRegisterMode}\n            errorField={errorField}\n          />\n        ) : (\n          <InstituteRegisterForm\n            onChangeHandler={onChangeHandler}\n            state={state}\n            onSubmit={onCreateAccount}\n            errorField={errorField}\n            disabled={disabled}\n          />\n        )}\n      </GetStarted>\n    </>\n  );\n};\n\nexport default InstituteCreateAccount;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n"],"names":["_ref","state","onGrab","onSubmit","t","errorField","useTranslation","_jsxs","className","style","auth_card_wrapper","children","_jsx","auth_create_container","auth_card_title","fontSize","auth_card_subtitle","auth_login_form","marginTop","institute_type_container","registerType","map","rgtype","onClick","key","institute_type_card","src","concat","assestsAuthUrl","activeIcon","greyIcon","alt","color","name","ButtonWithTypeSubmit","type","buttonText","customStyleButton","modeType","onChangeHandler","disabled","AuthFormFieldWithIcon","label","placeholder","fieldIconUrl","validate","value","insName","onChange","insEmail","insAddress","pincode","maxLength","minLength","navigate","useNavigate","getQuery","useLocation","_useState","useState","_useState2","_slicedToArray","step","setStep","_useState3","_useState4","setDisabled","_useState5","_useState6","setErrorField","_useState7","insPincode","insMode","insType","_useState8","setState","_useAuthInstituteCrea","useAuthInstituteCreateAccount","authInstituteCreateAccount","_Fragment","GetStarted","InstituteRegisterMode","val","prev","_objectSpread","e","preventDefault","validation","requiredField","existingRequiredField","InstituteRegisterForm","_defineProperty","target","pre","_getQuery$state","_getQuery$state2","profileCreation","insPhoneNumber","phoneNumber","insMobileStatus","then","res","_res$data","_response$institute","_response$institute2","response","decryption","data","encrypt","institute","_id","id","catch","InstituteRegisterType","isPassword","passwordVisible","setPasswordVisible","htmlFor","optional","arguments","length","undefined","error","obj","includes","required","req"],"sourceRoot":""}