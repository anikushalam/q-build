{"version":3,"file":"static/js/4409.c75e0405.chunk.js","mappings":"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","sources":["optimized/Auth/Login/Login.jsx","optimized/Auth/Auth.jsx","optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Login/LoginFormWithMobile.jsx","optimized/Auth/Login/LoginFormWithUserName.jsx","optimized/Validation/Auth/invalidateAuthUsername.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\nimport LoginFormWithUserName from \"./LoginFormWithUserName\";\nimport LoginFormWithMobile from \"./LoginFormWithMobile\";\n\nconst userMobile = \"USER_MOBILE\";\nconst userName = \"USER_NAME\";\nconst instituteUserName = \"INSTITUTE_USER_NAME\";\nconst userLogin = [userMobile, userName];\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const [state, setState] = useState(\"USER_MOBILE\");\n  const onUser = () => {\n    setState(userMobile);\n  };\n  const onUserName = () => {\n    setState(userName);\n  };\n  const onInstitute = () => {\n    setState(instituteUserName);\n  };\n\n  return (\n    <>\n      <div className={style.auth_login_tab_container}>\n        <div\n          className={\n            userLogin?.includes(state)\n              ? style.auth_login_tab_active\n              : style.auth_login_tab\n          }\n          onClick={onUser}\n        >\n          {t(\"user_staff_student\")}\n        </div>\n        <div\n          className={\n            state === instituteUserName\n              ? style.auth_login_tab_active\n              : style.auth_login_tab\n          }\n          onClick={onInstitute}\n        >\n          {t(\"institute\")}\n        </div>\n      </div>\n      {state === userMobile ? (\n        <LoginFormWithMobile onUserName={onUserName} />\n      ) : state === userName ? (\n        <LoginFormWithUserName isUser onUserMobile={onUser} />\n      ) : (\n        <LoginFormWithUserName />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport GetStarted from \"./GetStarted\";\nimport AuthCardWrapper from \"./AuthCardWrapper\";\nimport Login from \"../Auth/Login/Login\";\nimport { useRedirectLogin } from \"../../oneTimeLogin/one-time-login\";\n\nconst Auth = () => {\n  const { autoLogin } = useRedirectLogin();\n  useEffect(() => {\n    autoLogin();\n  }, []);\n  return (\n    <GetStarted>\n      <AuthCardWrapper>\n        <Login />\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default Auth;\n","import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthUserNumber } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  invalidateAuthEmailOrMobile,\n  typeOfAuth,\n} from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nconst LoginFormWithMobile = ({ onUserName, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [authUserNumber] = useAuthUserNumber();\n  const [state, setState] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n\n  const onChangeHandler = (e) => {\n    setState(e.target.value);\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (state) {\n      setDisabled((pre) => !pre);\n      authUserNumber({\n        userPhoneNumber: state,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(state),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            navigate(\"/verify\", {\n              state: {\n                phoneNumber: response?.ePhone,\n                type:\n                  typeOfAuth(state) === \"qviple id\"\n                    ? \"mobile number\"\n                    : typeOfAuth(state),\n                accessFrom: accessFrom,\n              },\n            });\n            setDisabled((pre) => !pre);\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    } else {\n      setErrorField({\n        state: \"* required\",\n      });\n    }\n  };\n  return (\n    <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n      <AuthFormFieldWithIcon\n        label={t(\"user_email_number_qviple_id\")}\n        placeholder={t(\"user_email_number_qviple_id_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-flag.svg`}\n        validate={errorField[\"state\"]}\n        name=\"mobile_number\"\n        value={state}\n        onChange={onChangeHandler}\n      />\n      <p className={style.auth_privacy_and_policy}>\n        {t(\"mobile_login_note\")}{\" \"}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/terms/condition\">{t(\"terms_condition\")}</a>\n        </span>{\" \"}\n        {t(\"and\")}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/privacy/policy\">{t(\"privacy_policy\")}</a>\n        </span>\n      </p>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"send_otp\")}\n        disabled={disabled}\n      />\n      <div className={style.auth_footer_container}>\n        <p className={style.auth_forget_text} onClick={onUserName}>\n          {t(\"login_with_user_name\")}\n        </p>\n      </div>\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithMobile;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthLogin } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useLogin } from \"../hooks/use-login\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nimport { useNavigate } from \"react-router-dom\";\nconst LoginFormWithUserName = ({ isUser, onUserMobile, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    insUserName: \"\",\n    insPassword: \"\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authLogin] = useAuthLogin();\n  const { userDispatchAction, instituteDispatchAction } = useLogin();\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.insUserName))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authLogin({\n          login: state,\n        })\n          .then((res) => {\n            const response = decryption(res?.data?.encrypt);\n            // console.info(\"response\", response);\n\n            if (response?.login) {\n              if (response?.user)\n                userDispatchAction({\n                  token: response?.token,\n                  user: response?.user,\n                  isUniversal: response?.user?.is_universal,\n                  phoneNumber: response?.user?.code_arr,\n                  u_name:\n                    response?.user?.userPhoneNumber ||\n                    response?.user?.userEmail,\n                  accessFrom: accessFrom,\n                });\n              else\n                instituteDispatchAction({\n                  token: response?.token,\n                  institute: response?.institute,\n                  isUniversal: response?.institute?.is_universal,\n                  main_role: response?.main_role,\n                });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Credentials\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onForgetHandler = () => {\n    let url = \"\";\n    if (isUser) url = \"/user/forget\";\n    else url = \"/institute/forget\";\n    navigate(url);\n  };\n  const onInstituteAccount = () => {\n    navigate(\"/institute\");\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <AuthFormFieldWithIcon\n        label={t(\"username\")}\n        placeholder={t(\"username_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n        validate={errorField[\"insUserName\"]}\n        name=\"insUserName\"\n        value={state.insUserName}\n        onChange={onChangeHandler}\n      />\n      <AuthFormFieldWithIcon\n        label={t(\"password\")}\n        placeholder={t(\"password_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-password.svg`}\n        validate={errorField[\"insPassword\"]}\n        name=\"insPassword\"\n        value={state.insPassword}\n        onChange={onChangeHandler}\n        type=\"password\"\n        isPassword\n      />\n\n      <div className={style.auth_forget_container}>\n        <p className={style.auth_forget_text} onClick={onForgetHandler}>\n          {t(\"forgot_password\")}\n        </p>\n      </div>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"login\")}\n        disabled={disabled}\n      />\n      {isUser ? (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onUserMobile}>\n            {t(\"continue_with_mobile_no\")}\n          </p>\n        </div>\n      ) : (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onInstituteAccount}>\n            {t(\"new_to_qviple\")} {t(\"signup\")}\n          </p>\n        </div>\n      )}\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithUserName;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n"],"names":["userMobile","userName","instituteUserName","userLogin","t","useTranslation","_useState","useState","_useState2","_slicedToArray","state","setState","onUser","_jsxs","_Fragment","children","className","style","auth_login_tab_container","_jsx","includes","auth_login_tab_active","auth_login_tab","onClick","LoginFormWithMobile","onUserName","LoginFormWithUserName","isUser","onUserMobile","autoLogin","useRedirectLogin","useEffect","GetStarted","AuthCardWrapper","Login","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","auth_card_wrapper","auth_create_container","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","memo","accessFrom","navigate","useNavigate","_useAuthUserNumber","useAuthUserNumber","authUserNumber","_useState3","_useState4","disabled","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","onSubmit","e","preventDefault","pre","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","then","res","_res$data","response","decryption","data","encrypt","phoneNumber","ePhone","type","typeOfAuth","catch","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","concat","assestsAuthUrl","validate","name","value","onChange","target","auth_privacy_and_policy","auth_privacy_and_policy_link","href","ButtonWithTypeSubmit","buttonText","auth_footer_container","auth_forget_text","NotifyEvent","eventState","eventStateHandler","insUserName","insPassword","_useAuthLogin","useAuthLogin","authLogin","_useLogin","useLogin","userDispatchAction","instituteDispatchAction","onChangeHandler","prev","_objectSpread","_defineProperty","validation","requiredField","existingRequiredField","invalidateAuthUsername","login","_response$user","_response$user2","_response$user3","_response$user4","_response$institute","user","token","isUniversal","is_universal","code_arr","u_name","userEmail","institute","main_role","err","isPassword","auth_forget_container","specailSymbol","username","length"],"sourceRoot":""}