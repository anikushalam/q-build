{"version":3,"file":"static/js/4203.8942c581.chunk.js","mappings":"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","sources":["Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/PostTypeConfiguration.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/SearchPost.jsx","Loader/QvipleLoaderGif.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nconst EachPost = React.lazy(() => import(\"./EachPost/EachPost\"));\nconst EachPoll = React.lazy(() => import(\"./EachPoll/EachPoll\"));\nconst EachQuestion = React.lazy(() => import(\"./EachQuestion/EachQuestion\"));\nconst EachPostAnnouncement = React.lazy(() =>\n  import(\"./EachPost/EachPostAnnouncement\")\n);\nconst PostTypeConfiguration = ({ post, profilePost, allPosts }) => {\n  const ids = useSelector((state) => state.idChange);\n  const [selectOptions, setSelectOptions] = useState(\n    !profilePost\n      ? [\"post_unfollow\"]\n      : ids?.id === post?.author\n      ? post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? [\"post_delete\", \"turn_off_comment\"]\n        : [\"post_visibility\", \"post_delete\", \"turn_off_comment\"]\n      : [\"post_unfollow\"]\n  );\n\n  useEffect(() => {\n    if (ids?.id === post?.author) {\n      post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? setSelectOptions([\"post_delete\", \"turn_off_comment\"])\n        : setSelectOptions([\n            \"post_visibility\",\n            \"post_delete\",\n            \"turn_off_comment\",\n          ]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post?.author, ids?.id, post?.postType]);\n\n  return (\n    <React.Suspense fallback={<QvipeLoaderGif />}>\n      {post?.postType === \"Post\" && (\n        <EachPost\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Poll\" && (\n        <EachPoll\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Question\" && (\n        <EachQuestion\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Announcement\" && (\n        <EachPostAnnouncement\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n    </React.Suspense>\n  );\n};\n\nexport default PostTypeConfiguration;\n","import React from \"react\";\nimport { useProfileAllPost } from \"../../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState, useEffect } from \"react\";\nimport { postChangeAction } from \"../../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../../constant/constant_value\";\nimport PostTypeConfiguration from \"./PostTypeConfiguration\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\n\nfunction SearchPost({ profilePost }) {\n  //for The redux storage and actions\n  const ids = useSelector((state) => state.idChange);\n  const allPosts = useSelector((state) => state.postChange);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(true);\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n  const [profileState, setProfileState] = useState(true);\n  const [profilePage, setProfilePage] = useState(1);\n\n  const { allProfilePost, allProfilePostRefetch } = useProfileAllPost({\n    data: {\n      id: ids?.searchProfile?.id,\n      page: profilePage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !profilePost ? true : !ids?.searchProfile?.id,\n  });\n\n  //for the remove old search\n  useEffect(() => {\n    if (ids?.searchProfile?.id) {\n      dispatch(\n        postChangeAction.removeSearchPost({\n          search: [],\n        })\n      );\n      setProfilePage(1);\n      setProfileState(true);\n    }\n  }, [dispatch, ids?.searchProfile?.id]);\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && profileState && profilePost)\n      setProfilePage((profilePage) => profilePage + 1);\n    else {\n    }\n  }, [inView, profilePost, profileState]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    if (ids?.searchProfile?.id) allProfilePostRefetch();\n  }, [profilePage, ids?.searchProfile?.id, profilePost, allProfilePostRefetch]);\n\n  //for the action pperform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    dispatch(\n      postChangeAction.addPost({\n        post: !profilePost\n          ? []\n          : allProfilePost?.post?.[0]?.author === ids?.searchProfile.id\n          ? allProfilePost?.post\n          : [],\n        profilePost: !profilePost ? \"dash\" : \"search\",\n      })\n    );\n\n    //for next api is call or not profile\n    if (allProfilePost?.post.length === 10) setProfileState(true);\n    else setProfileState(false);\n  }, [allProfilePost?.post, dispatch, profilePost, ids?.searchProfile?.id]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(false);\n    }, 3000);\n  }, []);\n\n  return (\n    <div>\n      {!allPosts?.searchPosts?.length && profilePost && load ? (\n        <QvipeLoaderGif />\n      ) : (\n        allPosts?.searchPosts?.map((data, index) =>\n          allPosts?.searchPosts?.length === index + 1 ? (\n            <div ref={ref} key={index}>\n              <PostTypeConfiguration\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            </div>\n          ) : (\n            <PostTypeConfiguration\n              key={index}\n              post={data}\n              profilePost={profilePost}\n              allPosts={[]}\n            />\n          )\n        )\n      )}\n    </div>\n  );\n}\n\nexport default SearchPost;\n","import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\n\nconst QvipeLoaderGif = () => {\n  return (\n    <div className={styles.loaderGif}>\n      <img src=\"/images/loader/loader.gif\" alt=\"for load an items\" />\n    </div>\n  );\n};\n\nexport default QvipeLoaderGif;\n"],"names":["EachPost","React","EachPoll","EachQuestion","EachPostAnnouncement","_ref","post","profilePost","allPosts","ids","useSelector","state","idChange","selectOptions","setSelectOptions","useState","id","author","postType","useEffect","_jsxs","fallback","_jsx","QvipeLoaderGif","children","_ids$searchProfile","_ids$searchProfile2","_ids$searchProfile4","_ids$searchProfile6","_ids$searchProfile7","_allPosts$searchPosts","_allPosts$searchPosts2","postChange","dispatch","useDispatch","load","setLoad","ref","inView","useInView","profileState","setProfileState","profilePage","setProfilePage","allProfilePost","allProfilePostRefetch","useProfileAllPost","data","searchProfile","page","limit","viewAs","instituteAs","skip","_ids$searchProfile3","postChangeAction","removeSearchPost","search","_ids$searchProfile5","_allProfilePost$post","_allProfilePost$post$","addPost","length","setTimeout","searchPosts","map","index","_allPosts$searchPosts3","PostTypeConfiguration","className","styles","loaderGif","src","alt"],"sourceRoot":""}