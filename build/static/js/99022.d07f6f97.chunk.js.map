{"version":3,"file":"static/js/99022.d07f6f97.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/InstituteForget.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Ui/Button/CreateButton.jsx","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/optimized/Ui/Button/Button.module.css?2226"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useAuthUserForget } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst InstituteForget = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const [state, setState] = useState({\n    username: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForget] = useAuthUserForget();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, username: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.username))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authUserForget({\n          forgot: state,\n        })\n          .then((res) => {\n            let response = decryption(res?.data?.encrypt);\n            if (response?.institute?._id) {\n              navigate(\"/institute/forget/verify\", {\n                state: {\n                  uid: response?.institute?._id,\n                  phoneNumber: state.username,\n                },\n              });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Username\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forgot_password_heading\"\n        subTitle={t(\"forgot_passowrd_note\")}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            label={t(\"username\")}\n            placeholder={t(\"username_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n            validate={errorField[\"username\"]}\n            name=\"username\"\n            value={state.username}\n            onChange={onChangeHandler}\n          />\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"find_account\")}\n            customStyleButton={{\n              marginTop: \"4rem\",\n            }}\n            disabled={disabled}\n          />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default InstituteForget;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./Button.module.css\";\nconst CreateButton = ({ label, count, onAction, customStyle, isTranslate }) => {\n  const { t } = useTranslation();\n\n  return isTranslate ? (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {label}\n    </div>\n  ) : (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {t(label)}\n    </div>\n  );\n};\n\nexport default CreateButton;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrapper\":\"Button_btn_wrapper__ihT7O\",\"btn_container\":\"Button_btn_container__OaH2t\",\"create_btn_container\":\"Button_create_btn_container__JuZrx\",\"upload_excel_file\":\"Button_upload_excel_file__a7d0K\",\"set_btn_container\":\"Button_set_btn_container__RvfRG\",\"ccb_button\":\"Button_ccb_button__Mjv4T\"};"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","InstituteForget","navigate","useNavigate","state","setState","useState","username","disabled","setDisabled","errorField","setErrorField","snackbar","setSnackbar","open","msg","variant","authUserForget","useAuthUserForget","GetStarted","fontSize","onSubmit","e","preventDefault","validation","requiredField","existingRequiredField","pre","invalidateAuthUsername","forgot","then","res","_res$data","_response$institute","response","decryption","data","encrypt","_response$institute2","institute","_id","uid","phoneNumber","catch","err","concat","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","value","onChange","prev","target","ButtonWithTypeSubmit","type","buttonText","customStyleButton","marginTop","NotifyEvent","eventState","eventStateHandler","minLength","maxLength","isPassword","passwordVisible","setPasswordVisible","htmlFor","src","alt","onClick","onToggle","count","isTranslate","create_btn_container","optional","arguments","length","undefined","error","obj","includes","required","req"],"sourceRoot":""}