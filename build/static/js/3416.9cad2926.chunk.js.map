{"version":3,"file":"static/js/3416.9cad2926.chunk.js","mappings":"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","sources":["Authentication/Auth_New_Flow/ForgetPassword/ChangePassword.jsx"],"sourcesContent":["import React from \"react\";\nimport style from \"../../../Home/components/Header/NewHeader/HeaderIns.module.css\";\nimport { PasswordInput } from \"../InputWithIcon/InputWithIcon\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForgetNewPassword } from \"../../../hooks/authentication-api\";\nimport ButtonWithTypeSubmit from \"../../../Custom/Button/ButtonWithTypeSubmit\";\nimport { Notfication } from \"../../../validation/Snackbar\";\n\nfunction ChangePassword({ userId, setIndex, setStatus }) {\n  const { t } = useTranslation();\n  const [password, setPassword] = useState({\n    userPassword: \"\",\n    userRePassword: \"\",\n  });\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [forgetNewPassword] = useForgetNewPassword();\n\n  const NewPasswordHandler = (e) => {\n    e.preventDefault();\n    setDisabled((pre) => !pre);\n    if (password.userPassword && password.userRePassword) {\n      if (password.userPassword === password.userRePassword) {\n        forgetNewPassword({\n          rid: userId,\n          password: password,\n        })\n          .then(() => {\n            setStatus(\"\");\n            setIndex(2);\n          })\n          .catch({});\n      } else {\n        setNotificationState({\n          msg: t(\"please_match\"),\n          run: true,\n        });\n        setDisabled((pre) => !pre);\n      }\n    } else {\n      setNotificationState({\n        msg: t(\"please_enter\"),\n        run: true,\n      });\n      setDisabled((pre) => !pre);\n    }\n  };\n  return (\n    <form onSubmit={NewPasswordHandler}>\n      <div className={style.card}>\n        <h6 className={style.cardhdark}>{t(\"changr_pass\")}</h6>\n        <p className={`${style.pusername} ${style.ptoc}`}>{t(\"pass_length\")}</p>\n        <div className={style.change_pass_input}>\n          <PasswordInput\n            icon=\"/images/password-icon.svg\"\n            placeholder={t(\"create_pass\")}\n            name=\"userPassword\"\n            value={password.userPassword}\n            onChange={(e) =>\n              setPassword({\n                ...password,\n                userPassword: e.target.value,\n              })\n            }\n          />\n        </div>\n\n        <div className={style.re_pass_input}>\n          <PasswordInput\n            icon=\"/images/password-icon.svg\"\n            placeholder={t(\"re_enter_pass\")}\n            name=\"userRePassword\"\n            value={password.userRePassword}\n            onChange={(e) =>\n              setPassword({\n                ...password,\n                userRePassword: e.target.value,\n              })\n            }\n          />\n        </div>\n\n        <div className={style.re_enter_btn_container}>\n          <ButtonWithTypeSubmit\n            disabled={disabled}\n            buttonText={t(\"submit\")}\n            customStyleButton={{\n              minHeight: \"2.3rem\",\n              marginTop: \"4rem\",\n            }}\n            customStyleButtonText={{\n              fontSize: \"1rem\",\n            }}\n          />\n        </div>\n      </div>\n      <Notfication\n        msg={notificationState.msg}\n        run={notificationState.run}\n        setRun={() => setNotificationState({ msg: \"\", run: false })}\n        postiton=\"bottom\"\n        type=\"error\"\n      />\n    </form>\n  );\n}\n\nexport default ChangePassword;\n"],"names":["_ref","userId","setIndex","setStatus","t","useTranslation","_useState","useState","userPassword","userRePassword","_useState2","_slicedToArray","password","setPassword","_useState3","msg","run","_useState4","notificationState","setNotificationState","_useState5","_useState6","disabled","setDisabled","_useForgetNewPassword","useForgetNewPassword","forgetNewPassword","_jsxs","onSubmit","e","preventDefault","pre","rid","then","catch","children","className","style","card","_jsx","cardhdark","concat","pusername","ptoc","change_pass_input","PasswordInput","icon","placeholder","name","value","onChange","_objectSpread","target","re_pass_input","re_enter_btn_container","ButtonWithTypeSubmit","buttonText","customStyleButton","minHeight","marginTop","customStyleButtonText","fontSize","Notfication","setRun","postiton","type"],"sourceRoot":""}