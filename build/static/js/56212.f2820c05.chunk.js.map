{"version":3,"file":"static/js/56212.f2820c05.chunk.js","mappings":"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","sources":["optimized/UserStaffMember/AdmissionManager/AdmissionCancelled/AdmissionProfileCardCancel.jsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport Modal from \"../../../Ui/Modal/Modal\";\nimport UserMemberContentWrapper from \"../../../Ui/UserMember/UserMemberContentWrapper\";\nimport style from \"../../FinanceManager/Income/Income.module.css\";\nimport BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport { useEffect, useState } from \"react\";\nimport { assestsUserFinanceUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport CreateButton from \"../../../Ui/Button/CreateButton\";\nimport FormInput from \"../../../Ui/Input/FormInput\";\nimport FormCalendarInput from \"../../../Ui/Input/FormCalendarInput\";\nimport {\n  slashDateFormat,\n  yearMonthDay,\n} from \"../../../Utils/Functions/dateUtility\";\nimport PaymentModeType from \"../../PaymentModeType/PaymentModeType\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../Validation/functions/checkingRequiredField\";\nimport { useStudentAdmissionFeeCardAdmissionCancelled } from \"../../../Hooks/ApiHooks/StudentProfile/student-manager-api\";\nconst AdmissionProfileCardCancel = ({\n  onClose,\n  applicant,\n  admission,\n  onParentClose,\n}) => {\n  const { t } = useTranslation();\n  const [disabled, setDisabled] = useState(false);\n  const [state, setState] = useState({\n    amount: \"\",\n    mode: \"\",\n    fee_payment_mode: \"\",\n    fee_payment_amount: \"\",\n    transaction_date: \"\",\n    fee_bank_name: \"\",\n    fee_bank_holder: \"\",\n    fee_utr_reference: \"\",\n  });\n  const [errorField, setErrorField] = useState(\"\");\n\n  const [totalPayAmount, setTotalPayAmount] = useState(0);\n\n  const [studentAdmissionFeeCardAdmissionCancelled] =\n    useStudentAdmissionFeeCardAdmissionCancelled();\n\n  useEffect(() => {\n    if (admission?.applicable_card?.remaining_array?.length > 0) {\n      let amount = 0;\n      for (let rt of admission?.applicable_card?.remaining_array) {\n        if (rt?.status === \"Paid\") {\n          amount += rt?.remainAmount;\n        }\n      }\n      setTotalPayAmount(amount ?? 0);\n    }\n  }, [admission?.applicable_card?.remaining_array]);\n  const onInputAmount = (e) => {\n    setState((pre) => ({\n      ...pre,\n      amount: +e.target.value,\n      fee_payment_amount: +e.target.value,\n    }));\n  };\n\n  const onInputChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onTransactionDate = (val) => {\n    setState((prev) => ({\n      ...prev,\n      transaction_date: slashDateFormat(val),\n    }));\n  };\n\n  const onModeChange = (val) => {\n    setState((prev) => ({\n      ...prev,\n      mode: val === \"Cash\" ? \"Offline\" : \"Online\",\n      fee_payment_mode: val,\n    }));\n  };\n\n  const onCancelReview = () => {\n    let validation = requiredField(state, [\n      \"mode\",\n      \"fee_payment_amount\",\n      \"fee_bank_name\",\n      \"fee_bank_holder\",\n      \"fee_utr_reference\",\n    ]);\n    if (existingRequiredField(validation)) {\n      if (\n        admission?.student?._id &&\n        admission?.appId?._id &&\n        admission?.fee_structure?._id\n      ) {\n        setDisabled((pre) => !pre);\n        studentAdmissionFeeCardAdmissionCancelled({\n          sid: admission?.student?._id,\n          appId: admission?.appId?._id,\n          payment: {\n            struct: admission?.fee_structure?._id,\n            amount: state?.amount ?? \"\",\n            mode: state?.mode ?? \"\",\n            fee_payment_mode: state?.fee_payment_mode ?? \"\",\n            fee_payment_amount: state?.fee_payment_amount ?? \"\",\n            transaction_date: yearMonthDay(state.transaction_date) ?? \"\",\n            fee_bank_name: state?.fee_bank_name ?? \"\",\n            fee_bank_holder: state?.fee_bank_holder ?? \"\",\n            fee_utr_reference: state?.fee_utr_reference ?? \"\",\n            remainAmount: admission?.applicable_fee - totalPayAmount ?? 0,\n            classId: admission?.student?.studentClass?._id ?? null,\n          },\n        })\n          .then(() => {\n            setDisabled((pre) => !pre);\n            onParentClose();\n          })\n          .catch({});\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  console.info(\"applicant\", admission);\n  return (\n    <>\n      <Modal onClose={onClose}>\n        <div className={style.modal_container}>\n          <UserMemberContentWrapper>\n            <div className={style.modal_container_outer_header}>\n              <div className={style.modal_container_header}>\n                <h6>{t(\"cancel_addmission\")}</h6>\n              </div>\n              <img\n                src={`${assestsUserFinanceUrl}/close.svg`}\n                alt=\"close icon\"\n                onClick={onClose}\n              />\n            </div>\n          </UserMemberContentWrapper>\n          <BorderBottom />\n          <UserMemberContentWrapper\n            customStyle={{\n              paddingTop: \"0\",\n            }}\n          >\n            <div className={style.admission_fees_row}>\n              <h6>{t(\"fees_paid\")} :</h6>\n              <h6>\n                {t(\"rs_only\")} {totalPayAmount}\n              </h6>\n            </div>\n\n            <FormInput\n              label={`${t(\"refund_amount\")}`}\n              placeholder={t(\"please_enter_refund_amount\")}\n              name={\"amount\"}\n              value={state.amount}\n              type={\"tel\"}\n              onChange={onInputAmount}\n              errorShow={errorField[\"amount\"]}\n            />\n            <PaymentModeType\n              paymentHeading={t(\"refund_payment_type_mode\")}\n              selectLabel={t(\"mode_placeholder\")}\n              onClick={onModeChange}\n              errorShow={errorField[\"fee_payment_mode\"]}\n              defalutValue={state.fee_payment_mode}\n              selectedValue={t(\"please_select_payment_mode\")}\n              isAuthority=\"admissionCollectMode\"\n            />\n            <FormCalendarInput\n              label={t(\"select_date_of_transaction\")}\n              placeholder={t(\"please_select_date\")}\n              name={\"transaction_date\"}\n              value={state.transaction_date}\n              onChange={onTransactionDate}\n              errorShow={errorField[\"transaction_date\"]}\n            />\n\n            {state.fee_payment_mode === \"Cash\" ? null : (\n              <>\n                <div\n                  className={style.admission_fees_row}\n                  style={{\n                    margin: 0,\n                  }}\n                >\n                  <h6\n                    style={{\n                      margin: 0,\n                      marginTop: \"1rem\",\n                    }}\n                  >\n                    {t(\"paid_to\")}\n                  </h6>\n                </div>\n                <FormInput\n                  label={t(\"bank_name_collect\")}\n                  placeholder={t(\"please_enter_bank_name\")}\n                  name={\"fee_bank_name\"}\n                  value={state.fee_bank_name}\n                  type={\"text\"}\n                  onChange={onInputChange}\n                />\n                <FormInput\n                  label={t(\"banke_holder_name\")}\n                  placeholder={t(\"please_enter_name_of_bank_holder\")}\n                  name={\"fee_bank_holder\"}\n                  value={state.fee_bank_holder}\n                  type={\"text\"}\n                  onChange={onInputChange}\n                />\n                <FormInput\n                  label={t(\"cheque_dd_neft\")}\n                  placeholder={t(\"please_enter_utr_ref_number\")}\n                  name={\"fee_utr_reference\"}\n                  value={state.fee_utr_reference}\n                  type={\"text\"}\n                  onChange={onInputChange}\n                />\n              </>\n            )}\n            <CreateButton label=\"confirm\" onAction={onCancelReview} />\n          </UserMemberContentWrapper>\n        </div>\n      </Modal>\n      {disabled && <QvipleLoader />}\n    </>\n  );\n};\n\nexport default AdmissionProfileCardCancel;\n"],"names":["_ref","_admission$applicable4","onClose","admission","applicant","onParentClose","t","useTranslation","_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","_useState3","amount","mode","fee_payment_mode","fee_payment_amount","transaction_date","fee_bank_name","fee_bank_holder","fee_utr_reference","_useState4","state","setState","_useState5","_useState6","errorField","setErrorField","_useState7","_useState8","totalPayAmount","setTotalPayAmount","_useStudentAdmissionF","useStudentAdmissionFeeCardAdmissionCancelled","studentAdmissionFeeCardAdmissionCancelled","useEffect","_admission$applicable","_admission$applicable2","applicable_card","remaining_array","length","_amount","_admission$applicable3","_step","_iterator","_createForOfIteratorHelper","s","n","done","rt","value","status","remainAmount","err","e","f","onInputChange","prev","_objectSpread","_defineProperty","target","name","console","info","_jsxs","_Fragment","children","_jsx","Modal","className","style","modal_container","UserMemberContentWrapper","modal_container_outer_header","modal_container_header","src","concat","assestsUserFinanceUrl","alt","onClick","BorderBottom","customStyle","paddingTop","admission_fees_row","FormInput","label","placeholder","type","onChange","pre","errorShow","PaymentModeType","paymentHeading","selectLabel","val","defalutValue","selectedValue","isAuthority","FormCalendarInput","slashDateFormat","margin","marginTop","CreateButton","onAction","_admission$student","_admission$appId","_admission$fee_struct","_admission$student2","_admission$appId2","_admission$fee_struct2","_state$amount","_state$mode","_state$fee_payment_mo","_state$fee_payment_am","_yearMonthDay","_state$fee_bank_name","_state$fee_bank_holde","_state$fee_utr_refere","_ref2","_admission$student$st","_admission$student3","_admission$student3$s","validation","requiredField","existingRequiredField","student","_id","appId","fee_structure","sid","payment","struct","yearMonthDay","applicable_fee","classId","studentClass","then","catch","QvipleLoader"],"sourceRoot":""}