{"version":3,"file":"static/js/3058.dbc0c7dc.chunk.js","mappings":"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","sources":["Custom/Avatar/Avatar.jsx","Custom/SuspenseLoading/CustomSuspenseGif.jsx","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/AllComments.module.css?ad97","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/EachComment/EachComment.module.css?4526","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/EachComment/EachComment.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/AllComments.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Comment.jsx","webpack://mithkal-qviple/./src/Custom/Avatar/Avatar.module.css?c0f7"],"sourcesContent":["import React from \"react\";\nimport style from \"./Avatar.module.css\";\n\nconst Avatar = ({ dynamicImage, customStyle }) => {\n  return (\n    <img\n      src={dynamicImage}\n      alt=\"Avatar icon\"\n      style={{ ...customStyle }}\n      className={style.avatar_image}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport QvipleLoading from \"../../Loader/QvipleLoading\";\n\nconst CustomSuspenseGif = ({ children }) => {\n  return (\n    <React.Suspense fallback={<QvipleLoading />}>{children}</React.Suspense>\n  );\n};\n\nexport default CustomSuspenseGif;\n","// extracted by mini-css-extract-plugin\nexport default {\"addComment\":\"AllComments_addComment__rGs-z\",\"imgcontainer\":\"AllComments_imgcontainer__Klc4u\",\"inputContainer\":\"AllComments_inputContainer__kbuUj\",\"hr\":\"AllComments_hr__lGcA1\",\"icons\":\"AllComments_icons__LaS0W\",\"btn\":\"AllComments_btn__6H38+\",\"comment_not_open\":\"AllComments_comment_not_open__EwMnj\"};","// extracted by mini-css-extract-plugin\nexport default {\"eachComment\":\"EachComment_eachComment__tPduK\",\"imgcontainer\":\"EachComment_imgcontainer__FiCLj\",\"commentText\":\"EachComment_commentText__p-lso\",\"likeReply\":\"EachComment_likeReply__yBW6e\",\"eachCommentContainer\":\"EachComment_eachCommentContainer__Ed4yT\",\"dots\":\"EachComment_dots__rL2SC\",\"time\":\"EachComment_time__jOd3S\"};","import React, { useState } from \"react\";\nimport { imageShowUrl } from \"../../../../../../../../services/BaseUrl\";\nimport style from \"./EachComment.module.css\";\nimport { format } from \"timeago.js\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCommentLike } from \"../../../../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postChangeAction } from \"../../../../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../../../../constant/constant_value\";\nimport CustomSuspenseGif from \"../../../../../../../../Custom/SuspenseLoading/CustomSuspenseGif\";\nconst NestedComments = React.lazy(() =>\n  import(\"../Nested_Comments/NestedComments\")\n);\nfunction EachComment({ comment, pid }) {\n  const [nestedComment, setNestedComment] = useState(false);\n  const [skip, setSkip] = React.useState(true);\n  const { t } = useTranslation();\n  const ids = useSelector((state) => state.idChange);\n  const dispatch = useDispatch();\n  const { commentLike, commentLikeRefetch } = useCommentLike({\n    ids: { cid: comment?._id, id: ids?.id, viewAs: instituteAs },\n    skip,\n  });\n\n  React.useEffect(() => {\n    if (commentLike) {\n      setSkip(true);\n      dispatch(\n        postChangeAction.addCommentLike({\n          postId: pid,\n          commentId: comment?._id,\n          like: commentLike.allLikeCount,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [commentLike]);\n\n  const likeHandler = () => {\n    setSkip(false);\n    commentLikeRefetch();\n  };\n\n  return (\n    <div className={style.eachCommentContainer}>\n      <div className={style.eachComment}>\n        <div className={style.imgcontainer}>\n          <img\n            src={\n              comment?.authorPhotoId !== \"1\"\n                ? `${imageShowUrl}/${comment.authorProfilePhoto}`\n                : \"/images/member_tab/class/default_avatar.svg\"\n            }\n            alt=\"\"\n          />\n        </div>\n\n        <div className={style.commentText}>\n          <h6>{comment?.authorUserName}</h6>\n          <p>{comment?.commentDescription}</p>\n        </div>\n      </div>\n\n      <div className={style.likeReply}>\n        <p onClick={likeHandler}>\n          {t(\"Like\")} <span>{comment?.allLikeCount}</span>\n        </p>\n        <p onClick={() => setNestedComment(!nestedComment)}>\n          {t(\"reply\")} <span>{comment?.allChildCommentCount}</span>{\" \"}\n        </p>\n      </div>\n\n      <div className={style.nested}>\n        <CustomSuspenseGif>\n          {nestedComment && comment?._id && (\n            <NestedComments\n              pcid={comment?._id}\n              pid={pid}\n              allChildCommentCount={comment?.allChildCommentCount}\n            />\n          )}\n        </CustomSuspenseGif>\n      </div>\n      <div className={style.dots}>\n        <p className={style.time}>{format(comment?.createdAt)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EachComment;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport {\n  useOnePostAllComment,\n  usePostComment,\n} from \"../../../../../../../Post/Institute/Components/post-api\";\nimport { postChangeAction } from \"../../../../../../../redux/store/post-slice\";\nimport style from \"./AllComments.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport EachComment from \"./EachComment/EachComment\";\nimport { instituteAs } from \"../../../../../../../constant/constant_value\";\nimport Avatar from \"../../../../../../../Custom/Avatar/Avatar\";\nimport { useOneInstituteDashboard } from \"../../../../../../../hooks/dashboard/dashboard-api\";\nimport { imageShowUrl } from \"../../../../../../../services/BaseUrl\";\n\nconst AllComments = ({ pid, commentCount, commentCountIncrement }) => {\n  //for setting the next page to fetch data\n  const [page, setPage] = useState(1);\n  const { t } = useTranslation();\n  const commentRef = useRef(\"\");\n\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n\n  //for the fetch more or not after seeing all post\n  const [state, setState] = useState(true);\n\n  const dispatch = useDispatch();\n  const allComment = useSelector((state) => state.postChange.comments);\n  const id = useSelector((state) => state.idChange.id);\n\n  const { allPostComment, allPostCommentRefetch } = useOnePostAllComment({\n    data: { pid: pid ? pid : \"\", viewAs: instituteAs, page: page, limit: 10 },\n    skip: false,\n  });\n  const [postComment] = usePostComment();\n\n  const { oneInstituteDashboard, oneInstituteDashboardRefetch } =\n    useOneInstituteDashboard({\n      id: id,\n      skip: !id,\n    });\n  useEffect(() => {\n    if (id) oneInstituteDashboardRefetch();\n  }, [id, oneInstituteDashboardRefetch]);\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    allPostCommentRefetch();\n  }, [page, allPostCommentRefetch]);\n\n  //for the action perform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    if (allPostComment?.comment) {\n      dispatch(\n        postChangeAction.addComment({\n          postId: pid,\n          comment: allPostComment?.comment,\n        })\n      );\n    }\n\n    //for next api is call or not dashboard\n    if (allPostComment?.comment.length === 10) setState(true);\n    else setState(false);\n  }, [allPostComment?.comment, dispatch, pid]);\n\n  const commentSubmitHandler = () => {\n    commentCountIncrement(++commentCount);\n    postComment({\n      comment: {\n        commentDescription: commentRef.current.value,\n      },\n      pid: pid,\n      viewAs: instituteAs,\n    })\n      .then((res) => {\n        dispatch(\n          postChangeAction.addCreatedComment({\n            postId: pid,\n            comment: {\n              allChildCommentCount: res.data?.comment.allChildCommentCount,\n              allLikeCount: res.data?.comment.allLikeCount,\n              author: res.data?.comment.author,\n              authorName: res.data?.comment.authorName,\n              authorPhotoId: res.data?.comment.authorPhotoId,\n              authorProfilePhoto: res.data?.comment.authorProfilePhoto,\n              authorUserName: res.data?.comment.authorUserName,\n              commentDescription: res.data?.comment.commentDescription,\n              createdAt: res.data?.comment.createdAt,\n              _id: res.data?.comment._id,\n            },\n          })\n        );\n      })\n      .catch({});\n    commentRef.current.value = \"\";\n  };\n\n  // console.log(\"THis is comment posy\", allComment);\n  return (\n    <>\n      <div className={style.addComment}>\n        <div className={style.imgcontainer}>\n          <Avatar\n            dynamicImage={\n              oneInstituteDashboard?.institute?.photoId !== \"1\"\n                ? `${imageShowUrl}/${oneInstituteDashboard?.institute?.insProfilePhoto}`\n                : \"/images/ins_default_profile.svg\"\n            }\n          />\n        </div>\n\n        <div className={style.inputContainer}>\n          <input\n            type=\"text\"\n            ref={commentRef}\n            placeholder={t(\"all_comment\")}\n            className={`form-control ${style.searchinput}`}\n          />\n          <div className={style.icons}>\n            <img src=\"/images/img-icon.svg\" alt=\"\" />\n            <img src=\"/images/emoji-icon.svg\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n      <div className={style.btn} onClick={commentSubmitHandler}>\n        {t(\"post\")}\n      </div>\n\n      {allComment?.map((com) =>\n        com.postId === pid\n          ? com?.comment?.map((comment, index) =>\n              com?.comment?.length === index + 1 ? (\n                <div className={style.eachComment} key={index} ref={ref}>\n                  <EachComment comment={comment} pid={pid} />\n                  <hr />\n                </div>\n              ) : (\n                <div className={style.eachComment} key={index}>\n                  <EachComment comment={comment} pid={pid} />\n                  <hr />\n                </div>\n              )\n            )\n          : \"\"\n      )}\n    </>\n  );\n};\n\nexport default AllComments;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AllComments from \"./AllComments\";\nimport style from \"./AllComments.module.css\";\n\nfunction Comment({ pid, commentCount, commentOpen, comment_turned }) {\n  const [count, setCount] = useState(commentCount);\n  const { t } = useTranslation();\n  const commentCountIncrement = (value) => {\n    setCount(value);\n  };\n\n  return (\n    <>\n      {commentOpen &&\n        (comment_turned !== \"On\" ? (\n          <section className={style.comment_not_open}>\n            {t(\"comment_is_not_open_for_this_post\")}\n          </section>\n        ) : (\n          <div style={{ padding: \"1vw\" }}>\n            <AllComments\n              pid={pid}\n              commentCount={count}\n              commentCountIncrement={commentCountIncrement}\n            />\n          </div>\n        ))}\n    </>\n  );\n}\n\nexport default Comment;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar_image\":\"Avatar_avatar_image__orRwR\",\"custom_avatar_container\":\"Avatar_custom_avatar_container__f4BAI\",\"custom_avatar_one\":\"Avatar_custom_avatar_one__XYFtg\",\"custom_avatar_content\":\"Avatar_custom_avatar_content__E1nUO\"};"],"names":["_ref","dynamicImage","customStyle","_jsx","src","alt","style","_objectSpread","className","avatar_image","children","React","fallback","QvipleLoading","NestedComments","comment","pid","_useState","useState","_useState2","_slicedToArray","nestedComment","setNestedComment","_React$useState","_React$useState2","skip","setSkip","t","useTranslation","ids","useSelector","state","idChange","dispatch","useDispatch","_useCommentLike","useCommentLike","cid","_id","id","viewAs","instituteAs","commentLike","commentLikeRefetch","postChangeAction","addCommentLike","postId","commentId","like","allLikeCount","_jsxs","eachCommentContainer","eachComment","imgcontainer","authorPhotoId","concat","imageShowUrl","authorProfilePhoto","commentText","authorUserName","commentDescription","likeReply","onClick","allChildCommentCount","nested","CustomSuspenseGif","pcid","dots","time","format","createdAt","_oneInstituteDashboar","_oneInstituteDashboar2","commentCount","commentCountIncrement","page","setPage","commentRef","useRef","_useInView","useInView","_useInView2","ref","inView","_useState3","_useState4","setState","allComment","postChange","comments","_useOnePostAllComment","useOnePostAllComment","data","limit","allPostComment","allPostCommentRefetch","_usePostComment","usePostComment","postComment","_useOneInstituteDashb","useOneInstituteDashboard","oneInstituteDashboard","oneInstituteDashboardRefetch","useEffect","addComment","length","_Fragment","Avatar","institute","photoId","insProfilePhoto","inputContainer","type","placeholder","searchinput","icons","btn","current","value","then","res","_res$data","_res$data2","_res$data3","_res$data4","_res$data5","_res$data6","_res$data7","_res$data8","_res$data9","_res$data10","addCreatedComment","author","authorName","catch","map","com","_com$comment","index","_com$comment2","EachComment","commentOpen","comment_turned","count","setCount","comment_not_open","padding","AllComments"],"sourceRoot":""}