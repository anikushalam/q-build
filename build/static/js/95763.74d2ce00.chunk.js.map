{"version":3,"file":"static/js/95763.74d2ce00.chunk.js","mappings":"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","sources":["optimized/Services/PayrollManager/payroll_manager_query_mutation_function.js","optimized/Services/PayrollManager/payrollManagerApiDynamic.js","optimized/Hooks/ApiHooks/PayrollManager/payroll-manager-api.js","optimized/Loader/QvipleLoader.jsx","webpack://mithkal-qviple/./src/optimized/Loader/Loader.module.css?eebd"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\n// all of encrypted api only==========\nexport const payrollActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/ins/${data.instituteId}/payroll/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/payroll/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Payroll_Module\"],\n  });\n};\n\nexport const payrollDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/${data.pid}/dashboard?mod_id=${data?.mid}`,\n    transformResponse: (response) => {\n      let dt = decryption(response?.encrypt);\n      return dt?.payroll;\n    },\n    providesTags: [\"Payroll_Module\"],\n  });\n};\n\nexport const payrollUpdateEmployerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/payroll/employer/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Payroll_Module\"],\n  });\n};\n\n//\n\nexport const payrollAddSalaryHeadFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/new/salary/heads/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollAllSalaryHeadFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/${data?.pid}/all/salary/heads/query?page=${data.page}&limit=${data.limit}&search=${data.search}&type=${data.type}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_heads,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_heads,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryHeadFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/one/${data?.shid}/salary/heads/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryHeadAllStaffFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/staff/fund/heads/query?page=${data.page}&limit=${data.limit}&search=${data.search}&key=${data.key}&pid=${data.pid}&month=${data.month}&year=${data.year}&section=${data.section}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_staff,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_staff,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const payrollAddSalaryStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/new/salary/structure/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollAllSalaryStructureFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/${data?.pid}/all/salary/structure/query?page=${data.page}&limit=${data.limit}&search=${data.search}&type=${data.type}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_structure,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_structure,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryStructureFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/one/${data?.ssid}/salary/structure/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.struct,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollStaffEditSalaryStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/one/${data?.sid}/salary/structure/edit/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollOneStaffSalaryDaysFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/one/${data?.sid}/salary/days/query?month=${data.month}&year=${data.year}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.salary_days,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneStaffAttendanceSheetFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/one/${data?.sid}/attendance/sheet/query?month=${data.month}&year=${data.year}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.salary_days,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollAlocationMonthListFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/${data?.pid}/monthly/funds/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.monthly,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const payrollStaffSalaryFinalizeFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/one/${data?.sid}/salary/compute/finalize/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollStaffSalaryComputeFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/one/${data?.sid}/salary/compute/query?month=${data.month}&year=${data.year}`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollAllSalarySlipFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/${data?.pid}/salary/slip/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_structure,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_structure,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollStaffTdsProfileUpdateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.sid}/tds/form`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollStaffTdsComputeFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/one/${data?.sid}/tds/calculate/compute/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollStaffUploadForm16Function = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.sid}/form/16/update`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const payrollAllocationFundExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data?.pid}/all/slip/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n","import { payrollManagerApi } from \"./payrollManagerApi\";\nimport {\n  payrollActivateModuleFunction,\n  payrollDashboardMasterFunction,\n  payrollUpdateEmployerFunction,\n  payrollUpdateModuleFunction,\n  payrollAddSalaryHeadFunction,\n  payrollAllSalaryHeadFunction,\n  payrollOneSalaryHeadFunction,\n  payrollAddSalaryStructureFunction,\n  payrollAllSalaryStructureFunction,\n  payrollOneSalaryStructureFunction,\n  payrollStaffEditSalaryStructureFunction,\n  payrollOneSalaryHeadAllStaffFunction,\n  payrollOneStaffSalaryDaysFunction,\n  payrollOneStaffAttendanceSheetFunction,\n  payrollAlocationMonthListFunction,\n  payrollStaffSalaryFinalizeFunction,\n  payrollAllSalarySlipFunction,\n  payrollStaffTdsProfileUpdateFunction,\n  payrollStaffSalaryComputeFunction,\n  payrollStaffTdsComputeFunction,\n  payrollStaffUploadForm16Function,\n  payrollAllocationFundExportExcelFunction,\n} from \"./payroll_manager_query_mutation_function\";\n\nconst payrollManagerApiDynamic = payrollManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    payrollActivateModule: payrollActivateModuleFunction(builder),\n    payrollUpdateModule: payrollUpdateModuleFunction(builder),\n    payrollDashboardMaster: payrollDashboardMasterFunction(builder),\n    payrollUpdateEmployer: payrollUpdateEmployerFunction(builder),\n\n    payrollAddSalaryHead: payrollAddSalaryHeadFunction(builder),\n    payrollAllSalaryHead: payrollAllSalaryHeadFunction(builder),\n    payrollOneSalaryHead: payrollOneSalaryHeadFunction(builder),\n    payrollAddSalaryStructure: payrollAddSalaryStructureFunction(builder),\n    payrollAllSalaryStructure: payrollAllSalaryStructureFunction(builder),\n    payrollOneSalaryStructure: payrollOneSalaryStructureFunction(builder),\n    payrollStaffEditSalaryStructure:\n      payrollStaffEditSalaryStructureFunction(builder),\n\n    payrollOneSalaryHeadAllStaff: payrollOneSalaryHeadAllStaffFunction(builder),\n    payrollOneStaffSalaryDays: payrollOneStaffSalaryDaysFunction(builder),\n    payrollOneStaffAttendanceSheet:\n      payrollOneStaffAttendanceSheetFunction(builder),\n    payrollAlocationMonthList: payrollAlocationMonthListFunction(builder),\n    payrollStaffSalaryFinalize: payrollStaffSalaryFinalizeFunction(builder),\n    payrollAllSalarySlip: payrollAllSalarySlipFunction(builder),\n    payrollStaffTdsProfileUpdate: payrollStaffTdsProfileUpdateFunction(builder),\n    payrollStaffSalaryCompute: payrollStaffSalaryComputeFunction(builder),\n    payrollStaffTdsCompute: payrollStaffTdsComputeFunction(builder),\n    payrollStaffUploadForm16: payrollStaffUploadForm16Function(builder),\n    payrollAllocationFundExportExcel:\n      payrollAllocationFundExportExcelFunction(builder),\n  }),\n});\n\nexport const {\n  usePayrollActivateModuleMutation,\n  usePayrollUpdateModuleMutation,\n  usePayrollDashboardMasterQuery,\n  usePayrollUpdateEmployerMutation,\n\n  usePayrollAddSalaryHeadMutation,\n  usePayrollAllSalaryHeadQuery,\n  usePayrollOneSalaryHeadQuery,\n  usePayrollAddSalaryStructureMutation,\n  usePayrollAllSalaryStructureQuery,\n  usePayrollOneSalaryStructureQuery,\n  usePayrollStaffEditSalaryStructureMutation,\n  usePayrollOneSalaryHeadAllStaffQuery,\n  usePayrollOneStaffSalaryDaysQuery,\n  usePayrollOneStaffAttendanceSheetQuery,\n  usePayrollAlocationMonthListQuery,\n  usePayrollStaffSalaryFinalizeMutation,\n  usePayrollAllSalarySlipQuery,\n  usePayrollStaffTdsProfileUpdateMutation,\n  usePayrollStaffSalaryComputeMutation,\n  usePayrollStaffTdsComputeMutation,\n  usePayrollStaffUploadForm16Mutation,\n  usePayrollAllocationFundExportExcelMutation,\n} = payrollManagerApiDynamic;\n","import {\n  usePayrollActivateModuleMutation,\n  usePayrollDashboardMasterQuery,\n  usePayrollUpdateEmployerMutation,\n  usePayrollUpdateModuleMutation,\n  usePayrollAddSalaryHeadMutation,\n  usePayrollAllSalaryHeadQuery,\n  usePayrollOneSalaryHeadQuery,\n  usePayrollAddSalaryStructureMutation,\n  usePayrollAllSalaryStructureQuery,\n  usePayrollOneSalaryStructureQuery,\n  usePayrollStaffEditSalaryStructureMutation,\n  usePayrollOneSalaryHeadAllStaffQuery,\n  usePayrollOneStaffSalaryDaysQuery,\n  usePayrollOneStaffAttendanceSheetQuery,\n  usePayrollAlocationMonthListQuery,\n  usePayrollStaffSalaryFinalizeMutation,\n  usePayrollAllSalarySlipQuery,\n  usePayrollStaffTdsProfileUpdateMutation,\n  usePayrollStaffSalaryComputeMutation,\n  usePayrollStaffTdsComputeMutation,\n  usePayrollStaffUploadForm16Mutation,\n  usePayrollAllocationFundExportExcelMutation,\n} from \"../../../Services/PayrollManager/payrollManagerApiDynamic\";\n\nexport const usePayrollActivateModule = () => {\n  const [payrollActivateModule] = usePayrollActivateModuleMutation();\n  return [payrollActivateModule];\n};\nexport const usePayrollUpdateModule = () => {\n  const [payrollUpdateModule] = usePayrollUpdateModuleMutation();\n  return [payrollUpdateModule];\n};\n\nexport const usePayrollDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = usePayrollDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollDashboardMaster: data,\n    payrollDashboardMasterRefetch: refetch,\n    payrollDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const usePayrollUpdateEmployer = () => {\n  const [payrollUpdateEmployer] = usePayrollUpdateEmployerMutation();\n  return [payrollUpdateEmployer];\n};\n//\n\nexport const usePayrollAddSalaryHead = () => {\n  const [payrollAddSalaryHead] = usePayrollAddSalaryHeadMutation();\n  return [payrollAddSalaryHead];\n};\nexport const usePayrollAllSalaryHead = (args) => {\n  const { data, refetch, isFetching } = usePayrollAllSalaryHeadQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAllSalaryHead: data,\n    payrollAllSalaryHeadRefetch: refetch,\n    payrollAllSalaryHeadLoading: isFetching,\n  };\n};\nexport const usePayrollOneSalaryHead = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryHeadQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryHead: data,\n    payrollOneSalaryHeadRefetch: refetch,\n    payrollOneSalaryHeadLoading: isFetching,\n  };\n};\nexport const usePayrollAddSalaryStructure = () => {\n  const [payrollAddSalaryStructure] = usePayrollAddSalaryStructureMutation();\n  return [payrollAddSalaryStructure];\n};\nexport const usePayrollAllSalaryStructure = (args) => {\n  const { data, refetch, isFetching } = usePayrollAllSalaryStructureQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAllSalaryStructure: data,\n    payrollAllSalaryStructureRefetch: refetch,\n    payrollAllSalaryStructureLoading: isFetching,\n  };\n};\nexport const usePayrollOneSalaryStructure = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryStructureQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryStructure: data,\n    payrollOneSalaryStructureRefetch: refetch,\n    payrollOneSalaryStructureLoading: isFetching,\n  };\n};\nexport const usePayrollStaffEditSalaryStructure = () => {\n  const [payrollStaffEditSalaryStructure] =\n    usePayrollStaffEditSalaryStructureMutation();\n  return [payrollStaffEditSalaryStructure];\n};\n\nexport const usePayrollOneSalaryHeadAllStaff = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryHeadAllStaffQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryHeadAllStaff: data,\n    payrollOneSalaryHeadAllStaffRefetch: refetch,\n    payrollOneSalaryHeadAllStaffLoading: isFetching,\n  };\n};\n\nexport const usePayrollOneStaffSalaryDays = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneStaffSalaryDaysQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneStaffSalaryDays: data,\n    payrollOneStaffSalaryDaysRefetch: refetch,\n    payrollOneStaffSalaryDaysLoading: isFetching,\n  };\n};\n\nexport const usePayrollOneStaffAttendanceSheet = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneStaffAttendanceSheetQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneStaffAttendanceSheet: data,\n    payrollOneStaffAttendanceSheetRefetch: refetch,\n    payrollOneStaffAttendanceSheetLoading: isFetching,\n  };\n};\nexport const usePayrollAlocationMonthList = (args) => {\n  const { data, refetch, isFetching } = usePayrollAlocationMonthListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAlocationMonthList: data,\n    payrollAlocationMonthListRefetch: refetch,\n    payrollAlocationMonthListLoading: isFetching,\n  };\n};\n\nexport const usePayrollStaffSalaryFinalize = () => {\n  const [payrollStaffSalaryFinalize] = usePayrollStaffSalaryFinalizeMutation();\n  return [payrollStaffSalaryFinalize];\n};\nexport const usePayrollAllSalarySlip = (args) => {\n  const { data, refetch, isFetching } = usePayrollAllSalarySlipQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAllSalarySlip: data,\n    payrollAllSalarySlipRefetch: refetch,\n    payrollAllSalarySlipLoading: isFetching,\n  };\n};\nexport const usePayrollStaffTdsProfileUpdate = () => {\n  const [payrollStaffTdsProfileUpdate] =\n    usePayrollStaffTdsProfileUpdateMutation();\n  return [payrollStaffTdsProfileUpdate];\n};\nexport const usePayrollStaffSalaryCompute = () => {\n  const [payrollStaffSalaryCompute] = usePayrollStaffSalaryComputeMutation();\n  return [payrollStaffSalaryCompute];\n};\n\nexport const usePayrollStaffTdsCompute = () => {\n  const [payrollStaffTdsCompute] = usePayrollStaffTdsComputeMutation();\n  return [payrollStaffTdsCompute];\n};\nexport const usePayrollStaffUploadForm16 = () => {\n  const [payrollStaffUploadForm16] = usePayrollStaffUploadForm16Mutation();\n  return [payrollStaffUploadForm16];\n};\nexport const usePayrollAllocationFundExportExcel = () => {\n  const [payrollAllocationFundExportExcel] =\n    usePayrollAllocationFundExportExcelMutation();\n  return [payrollAllocationFundExportExcel];\n};\n","import style from \"./Loader.module.css\";\n\nconst QvipleLoader = () => {\n  return (\n    <div className={style.qviple_loader_backdrop}>\n      <div className={style.qviple_loader_container}>\n        <div className={style.qviple_loader_rotation} />\n      </div>\n    </div>\n  );\n};\n\nexport default QvipleLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"qviple_loader_backdrop\":\"Loader_qviple_loader_backdrop__ScdYl\",\"qviple_loader_container\":\"Loader_qviple_loader_container__SXQ9Y\",\"qviple_loader_rotation\":\"Loader_qviple_loader_rotation__ltsgT\",\"qviple_loader_rotation_animation\":\"Loader_qviple_loader_rotation_animation__gy3+j\",\"q_loading\":\"Loader_q_loading__bwe2c\",\"circle_loading\":\"Loader_circle_loading__m+ptB\",\"rotate_animation\":\"Loader_rotate_animation__IV2sY\"};"],"names":["payrollActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","bodyParameter","payrollUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","payrollDashboardMasterFunction","pid","mid","transformResponse","response","dt","decryption","encrypt","payroll","providesTags","payrollUpdateEmployerFunction","payrollAddSalaryHeadFunction","payrollAllSalaryHeadFunction","page","limit","search","type","serializeQueryArgs","_ref","endpointName","meta","arg","list","all_heads","merge","currentCache","incomingData","_currentCache$list","push","forceRefetch","_ref2","currentArg","previousArg","payrollOneSalaryHeadFunction","shid","_ref3","_ref4","payrollOneSalaryHeadAllStaffFunction","key","month","year","section","_ref5","all_staff","_currentCache$list2","_ref6","payrollAddSalaryStructureFunction","payrollAllSalaryStructureFunction","_ref7","all_structure","_currentCache$list3","_ref8","payrollOneSalaryStructureFunction","ssid","_ref9","struct","_ref10","payrollStaffEditSalaryStructureFunction","sid","payrollOneStaffSalaryDaysFunction","_ref11","salary_days","_ref12","payrollOneStaffAttendanceSheetFunction","_ref13","_ref14","payrollAlocationMonthListFunction","_ref15","monthly","_ref16","payrollStaffSalaryFinalizeFunction","payrollStaffSalaryComputeFunction","payrollAllSalarySlipFunction","_ref17","_currentCache$list4","_ref18","payrollStaffTdsProfileUpdateFunction","payrollStaffTdsComputeFunction","payrollStaffUploadForm16Function","payrollAllocationFundExportExcelFunction","payrollManagerApiDynamic","payrollManagerApi","injectEndpoints","endpoints","payrollActivateModule","payrollUpdateModule","payrollDashboardMaster","payrollUpdateEmployer","payrollAddSalaryHead","payrollAllSalaryHead","payrollOneSalaryHead","payrollAddSalaryStructure","payrollAllSalaryStructure","payrollOneSalaryStructure","payrollStaffEditSalaryStructure","payrollOneSalaryHeadAllStaff","payrollOneStaffSalaryDays","payrollOneStaffAttendanceSheet","payrollAlocationMonthList","payrollStaffSalaryFinalize","payrollAllSalarySlip","payrollStaffTdsProfileUpdate","payrollStaffSalaryCompute","payrollStaffTdsCompute","payrollStaffUploadForm16","payrollAllocationFundExportExcel","usePayrollActivateModuleMutation","usePayrollUpdateModuleMutation","usePayrollDashboardMasterQuery","usePayrollUpdateEmployerMutation","usePayrollAddSalaryHeadMutation","usePayrollAllSalaryHeadQuery","usePayrollOneSalaryHeadQuery","usePayrollAddSalaryStructureMutation","usePayrollAllSalaryStructureQuery","usePayrollOneSalaryStructureQuery","usePayrollStaffEditSalaryStructureMutation","usePayrollOneSalaryHeadAllStaffQuery","usePayrollOneStaffSalaryDaysQuery","usePayrollOneStaffAttendanceSheetQuery","usePayrollAlocationMonthListQuery","usePayrollStaffSalaryFinalizeMutation","usePayrollAllSalarySlipQuery","usePayrollStaffTdsProfileUpdateMutation","usePayrollStaffSalaryComputeMutation","usePayrollStaffTdsComputeMutation","usePayrollStaffUploadForm16Mutation","usePayrollAllocationFundExportExcelMutation","usePayrollActivateModule","usePayrollDashboardMaster","args","refetch","isFetching","skip","payrollDashboardMasterRefetch","payrollDashboardMasterLoading","usePayrollUpdateEmployer","usePayrollAddSalaryHead","usePayrollAllSalaryHead","payrollAllSalaryHeadRefetch","payrollAllSalaryHeadLoading","usePayrollOneSalaryHead","payrollOneSalaryHeadRefetch","payrollOneSalaryHeadLoading","usePayrollAddSalaryStructure","usePayrollAllSalaryStructure","payrollAllSalaryStructureRefetch","payrollAllSalaryStructureLoading","usePayrollOneSalaryStructure","payrollOneSalaryStructureRefetch","payrollOneSalaryStructureLoading","usePayrollStaffEditSalaryStructure","usePayrollOneSalaryHeadAllStaff","payrollOneSalaryHeadAllStaffRefetch","payrollOneSalaryHeadAllStaffLoading","usePayrollOneStaffSalaryDays","payrollOneStaffSalaryDaysRefetch","payrollOneStaffSalaryDaysLoading","usePayrollOneStaffAttendanceSheet","payrollOneStaffAttendanceSheetRefetch","payrollOneStaffAttendanceSheetLoading","usePayrollAlocationMonthList","payrollAlocationMonthListRefetch","payrollAlocationMonthListLoading","usePayrollStaffSalaryFinalize","usePayrollStaffTdsProfileUpdate","usePayrollStaffSalaryCompute","usePayrollStaffTdsCompute","usePayrollStaffUploadForm16","usePayrollAllocationFundExportExcel","QvipleLoader","_jsx","className","style","qviple_loader_backdrop","children","qviple_loader_container","qviple_loader_rotation"],"sourceRoot":""}