{"version":3,"file":"static/js/43317.cff887f0.chunk.js","mappings":"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","sources":["optimized/Services/AdmissionManager/admission_manager_query_mutation_function.js","optimized/Services/AdmissionManager/admissionManagerApiDynamic.js","optimized/Hooks/ApiHooks/AdmissionManager/admission-manager-api.js"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\nexport const admissionActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/ins/${data.instituteId}/admission/query`,\n      method: POST,\n      body: data.activateModule,\n    }),\n  });\n};\n\nexport const admissionUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/edit/staff/admission/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// dashboard\nexport const admissionDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/dashboard/query?mod_id=${data.mod_id}`,\n    providesTags: [\"Cash_finance\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.admission;\n    },\n  });\n};\n\n// admission fund tab\nexport const admissionCashToFinanceFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/finance/${data.aid}/admission/request`,\n      method: POST,\n      body: data.submitAmount,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// offline payment verification\nexport const admissionPaymentVerifyListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/receipts/by?page=${data.page}&limit=${data.limit}&filter_by=${data.filterBy}&over_filter=${data.over_filter}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_requests,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_requests,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPaymentVerifyActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/one/receipts/${data.rid}/status/decheque/query?reqId=${data.reqId}&status=${data.status}`,\n      method: PATCH,\n      body: data.receiptAction,\n    }),\n  });\n};\n\n// admission required document\nexport const admissionDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/document/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_docs,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_docs,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/document/flow`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionUpdateDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/edit/document/flow`,\n      method: PATCH,\n      body: data.editDocument,\n    }),\n  });\n};\nexport const admissionRemoveDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/document/${data.did}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission excel export\nexport const admissionExportExcelListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/export/excel/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_excel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_excel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionEditExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/edit`,\n      method: PATCH,\n      body: data.excelUpdate,\n    }),\n  });\n};\nexport const admissionRemoveExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/destroy/query`,\n      method: DELETE,\n    }),\n  });\n};\nexport const admissionExportFilterExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/pending/fee/${data.aid}?gender=${data.gender}&category=${data.caste}&is_all=${data.is_all}&all_depart=${data.all_depart}&batch_status=${data.batch_status}`,\n      method: PATCH,\n      body: data.exportData,\n    }),\n  });\n};\n// admission moderator\nexport const admissionModeratorListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/role/permission/${data.aid}/all/moderator?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_mods,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_mods,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/new/app/mod?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: POST,\n      body: data.addModerator,\n    }),\n  });\n};\n\nexport const admissionUpdateModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/update/app/mod/${data.modId}?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: PATCH,\n      body: data.updateModerator,\n    }),\n  });\n};\n\nexport const admissionRemoveModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/destroy/app/mod/${data.modId}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission pending fees\nexport const admissionPendingFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/remaining/applicable/array?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search}&flow=${\n        data.flow ?? \"Applicable_Fees_Query\"\n      }`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.remain,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.remain,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionPendingFeesReminderHistoryFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/extra/all/filtered/alarm/${data.id}/query?page=${data.page}&limit=${\n        data.limit\n      }&search=${data.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_message,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_message,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPendingFeesOsStudentListFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/all/outstanding/query`,\n      method: PATCH,\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const admissionPendingFeesReminderFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/trigger/alarm?alarm_mode=${data.alarm_mode}`,\n      method: POST,\n      body: data.reminderData,\n    }),\n  });\n};\n\n// admission excess fees\nexport const admissionExcessFeeNotRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/refund/array?page=${data.page}&limit=${\n        data.limit\n      }&search=${data?.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refund_list,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refund_list,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/refunded/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refunded,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refunded,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeNotRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/excess/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionExcessFeeRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/refund/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission tab controller\nexport const admissionTabControllerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/manage/tab/${data?.aid}`,\n      method: PATCH,\n      body: data.tabManage,\n    }),\n  });\n};\n\n// admission completed application\nexport const admissionCompletedApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/completed/application/detail?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.completed,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.completed,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionCompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/complete`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionIncompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/incomplete`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission ongoing admission\nexport const admissionOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/v2/admission/${ad.aid}/all/ongoing/application?page=${ad.page}&limit=${ad.limit}&search=${ad.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let res = decryption(response?.encrypt);\n\n      if (arg?.search)\n        return {\n          search: true,\n          list: res?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: res?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCreateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/new/application`,\n      method: POST,\n      body: data.application,\n    }),\n  });\n};\n\nexport const admissionUpdateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/${data.appId}`,\n      method: PATCH,\n      body: data.updateApplication,\n    }),\n  });\n};\nexport const admissionRemoveApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/destroy/${data.appId}`,\n      method: DELETE,\n    }),\n  });\n};\n// admission one application\nexport const admissionOneOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/query`,\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.oneApply;\n    },\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationRequestFunction = (builder) => {\n  return builder.query({\n    query: (req) =>\n      `/v2/admission/${req.appId}/request/application?page=${req.page}&limit=${req.limit}&search=${req.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.request,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.request,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationSelectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/select`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationRejectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionOngoingApplicationFormUpdateRejectFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app/form/modify`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentSubjectListExportFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/allotted/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/selected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationDocumentCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/docs`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/revert/back/select/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentEditStructureFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/student/${data.sid}/edit/structure`,\n      method: PATCH,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/fee/collected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationFeesCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${\n        data.appId\n      }/pay/offline/confirm?receipt_status=${data?.receipt_status ?? \"\"}`,\n      method: POST,\n      body: data.collect,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/revert/back/docs/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationConfirmFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllConfirmListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.confirm,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationConfirmReviewFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/student/review/query`,\n      method: PATCH,\n      body: data.review,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.review,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.review,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllReviewListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.review,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewSortFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/review/array/${data.appId}?sort_query=${data.sort_query}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionOngoingApplicationReviewBatchFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/batch`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.batch,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationReviewClassesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/application/class/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.classes,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.classes,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewAllotFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/student/${data.appId}/allot/class/${data.cid}`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewCancelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/allotted/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.allot,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.allot,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentCancelFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/allotted/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentRevertFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/reverse/student/${data.appId}/allot/class`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionOngoingApplicationCancelledFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/cancelled/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionTransferApplicatToOtherApplicationFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/transfer/apps/query`,\n      method: PATCH,\n      body: data.transferApplicantData,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDailyCollectFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/by/date/collection/${data?.appId}/query?valid_date=${data.valid_date}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.day_wise;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionApplicantCancelledListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/cancel/app/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCancelledListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.aid}/cancel/export/query?all_depart=${data.all_depart}&batch_status=${data.batch_status}&timeline=${data.timeline}&timeline_content=${data.timeline_content}&from=${data.from}&to=${data.to}&bank=${data.bank}`,\n      method: \"PATCH\",\n      body: data?.pendingData,\n    }),\n  });\n};\n\n// for admission readmission related\nexport const admissionReadmissionListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/confirmed/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionCollectFeesFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/fees/student/${data.sid}/re/admission`,\n      method: PATCH,\n      body: data.collect,\n    }),\n  });\n};\n\n//  for one application form setting///\n\nexport const admissionStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// for optional subject\nexport const admissionAddOuterGorupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/subject/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOuterGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// DO NOT USE\nexport const admissionSubjectGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.osid}/one/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/add/subject/group/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionSubGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.sgid}/all/subject/group/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group_select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group_select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOneSubGroupDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.osid}/one/subject/group/query`,\n    providesTags: [\"Nested_Criteria_Detail\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.group,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionSubGroupAddSubjectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.ssid}/add/subject/group/select/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Nested_Criteria_Detail\"],\n  });\n};\n\nexport const admissionInstituteAllSubjectListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/subject/list/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_subjects,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_subjects,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionRemoveOuterGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/subject/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionRemoveSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/delete/subject/group/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// add to pin in single landing page\nexport const institutePinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const instituteUnPinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/un/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// all application\nexport const instituteAllApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/ongoing/application/pinned?page=${data.page}&limit=${data.limit}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      // console.info(\"sjhdfvsdfvbsd\", dect?.ongoing);\n      // let arr = [];\n      // let arr = [...dect?.depend, ...dect?.independ];\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// admission merged docs and collect fees list\n\nexport const admissionMergedApplicationTotalCountFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.aid}/all/merged/ongoing/application`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.ads_obj,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionMergedApplicationDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/docs/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationFeesListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/fees/collect/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/confirm/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingDirectApplicationExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/extra/excel/to/json/${data.aid}/exist/application/student`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationSubjectCountListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/select?search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.subject,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.smid}/one/subject/all/${data?.aid}/student?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.smid}/subject/${data?.aid}/application/export`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationStudentFormGenerateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/extra/generate/custom/oneapplication/${data?.aid}/student/form`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationIntakeUpdateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/app/intake/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationIntakeExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data?.aid}/intake/record/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationStaffActionShowFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.sid}/staff/name/only`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.only,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationUpdateDocumentSettingFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/docs/collect/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionIntakeRecordListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/${data.aid}/all/admission/intake?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.admission_intake_set,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.admission_intake_set,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const ongoingAdmissionTotalCardExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/combined/application/export/${data?.aid}?flow=${data?.flow}`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionFormPrintCaseFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/form/${data?.aid}/print/case`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationAllotToReveiwStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/reverse/student/${data?.appId}/llot/class`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// ============AFTER MOVE =================\n// this api that move, when their part is optimzed.\nexport const departmentBatchAllClassFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/ins/batch-detail/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.batch?.classroom,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.batch?.classroom,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n","import { admissionManagerApi } from \"./admissionManagerApi\";\nimport {\n  admissionActivateModuleFunction,\n  admissionUpdateModuleFunction,\n  admissionAddDocumentFunction,\n  admissionAddModeratorFunction,\n  admissionCompleteApplicationFunction,\n  admissionCompletedApplicationListFunction,\n  admissionDashboardMasterFunction,\n  admissionDocumentListFunction,\n  admissionEditExportExcelFunction,\n  admissionExcessFeeNotRefundedListFunction,\n  admissionExcessFeeRefundedListFunction,\n  admissionExportExcelListFunction,\n  admissionIncompleteApplicationFunction,\n  admissionModeratorListFunction,\n  admissionPaymentVerifyActionFunction,\n  admissionPaymentVerifyListFunction,\n  admissionPendingFeesOsStudentListFunction,\n  admissionPendingFeesReminderFunction,\n  admissionPendingFeesReminderHistoryFunction,\n  admissionRemoveDocumentFunction,\n  admissionRemoveExportExcelFunction,\n  admissionRemoveModeratorFunction,\n  admissionUpdateDocumentFunction,\n  admissionUpdateModeratorFunction,\n  admissionCashToFinanceFunction,\n  admissionExcessFeeNotRefundedListExportFunction,\n  admissionExcessFeeRefundedListExportFunction,\n  admissionTabControllerFunction,\n  admissionExportFilterExcelFunction,\n  admissionOngoingApplicationFunction,\n  admissionCreateApplicationFunction,\n  admissionUpdateApplicationFunction,\n  admissionRemoveApplicationFunction,\n  admissionOneOngoingApplicationFunction,\n  admissionOngoingApplicationRequestFunction,\n  admissionOngoingApplicationSelectFunction,\n  admissionOngoingApplicationRejectFunction,\n  admissionOngoingApplicationFormUpdateRejectFunction,\n  admissionOngoingApplicationExportFunction,\n  admissionOngoingApplicationAllottmentSubjectListExportFunction,\n  admissionOngoingApplicationDocumentFunction,\n  admissionOngoingApplicationDocumentCollectFunction,\n  admissionOngoingApplicationDocumentRevertFunction,\n  admissionOngoingApplicationDocumentEditStructureFunction,\n  admissionOngoingApplicationFeesFunction,\n  admissionOngoingApplicationFeesCollectFunction,\n  admissionOngoingApplicationFeesRevertFunction,\n  admissionOngoingApplicationConfirmFunction,\n  admissionOngoingApplicationAllConfirmListFunction,\n  admissionOngoingApplicationConfirmReviewFunction,\n  admissionOngoingApplicationReviewFunction,\n  admissionOngoingApplicationAllReviewListFunction,\n  admissionOngoingApplicationReviewSortFunction,\n  admissionOngoingApplicationReviewBatchFunction,\n  admissionOngoingApplicationReviewClassesFunction,\n  admissionOngoingApplicationReviewAllotFunction,\n  admissionOngoingApplicationReviewCancelFunction,\n  admissionOngoingApplicationAllottmentFunction,\n  admissionOngoingApplicationAllottmentCancelFunction,\n  admissionOngoingApplicationAllottmentRevertFunction,\n  admissionOngoingApplicationCancelledFunction,\n  admissionTransferApplicatToOtherApplicationFunction,\n  admissionOngoingApplicationDailyCollectFunction,\n  admissionApplicantCancelledListFunction,\n  admissionCancelledListExportFunction,\n  admissionPendingFeesFunction,\n  departmentBatchAllClassFunction,\n  admissionReadmissionListFunction,\n  admissionReadmissionConfirmedListFunction,\n  admissionReadmissionCollectFeesFunction,\n  admissionStudentAddSectionFunction,\n  admissionStudentFormDetailFunction,\n  admissionStudentRearrangeSectionFunction,\n  admissionStudentSectionAddChecklistFunction,\n  admissionStudentUpdateSectionChecklistFunction,\n  admissionStudentToggleChecklistFunction,\n  admissionAddOuterGorupFunction,\n  admissionOuterGroupListFunction,\n  admissionSubjectGroupListFunction,\n  admissionAddSubjectGroupFunction,\n  admissionSubGroupListFunction,\n  admissionOneSubGroupDetailFunction,\n  admissionSubGroupAddSubjectFunction,\n  admissionInstituteAllSubjectListFunction,\n  admissionRemoveOuterGroupFunction,\n  admissionRemoveSubjectGroupFunction,\n  institutePinApplicationFunction,\n  instituteUnPinApplicationFunction,\n  instituteAllApplicationListFunction,\n  admissionMergedApplicationDocumentListFunction,\n  admissionMergedApplicationFeesListFunction,\n  admissionMergedApplicationConfirmedListFunction,\n  admissionOngoingDirectApplicationExcelFunction,\n  oneApplicationSubjectCountListFunction,\n  oneApplicationOneSubjectStudentListFunction,\n  oneApplicationOneSubjectStudentListExportFunction,\n  admissionMergedApplicationTotalCountFunction,\n  oneApplicationStudentFormGenerateFunction,\n  oneApplicationIntakeUpdateFunction,\n  oneApplicationIntakeExportFunction,\n  oneApplicationStaffActionShowFunction,\n  oneApplicationUpdateDocumentSettingFunction,\n  admissionIntakeRecordListFunction,\n  ongoingAdmissionTotalCardExportFunction,\n  admissionFormPrintCaseFunction,\n  oneApplicationAllotToReveiwStudentFunction,\n} from \"./admission_manager_query_mutation_function\";\n\nconst admissionManagerApiDynamic = admissionManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    admissionActivateModule: admissionActivateModuleFunction(builder),\n    admissionUpdateModule: admissionUpdateModuleFunction(builder),\n    admissionDashboardMaster: admissionDashboardMasterFunction(builder),\n    admissionCashToFinance: admissionCashToFinanceFunction(builder),\n    admissionPaymentVerifyList: admissionPaymentVerifyListFunction(builder),\n    admissionPaymentVerifyAction: admissionPaymentVerifyActionFunction(builder),\n    admissionDocumentList: admissionDocumentListFunction(builder),\n    admissionAddDocument: admissionAddDocumentFunction(builder),\n    admissionUpdateDocument: admissionUpdateDocumentFunction(builder),\n    admissionRemoveDocument: admissionRemoveDocumentFunction(builder),\n    admissionExportExcelList: admissionExportExcelListFunction(builder),\n    admissionEditExportExcel: admissionEditExportExcelFunction(builder),\n    admissionRemoveExportExcel: admissionRemoveExportExcelFunction(builder),\n    admissionModeratorList: admissionModeratorListFunction(builder),\n    admissionAddModerator: admissionAddModeratorFunction(builder),\n    admissionUpdateModerator: admissionUpdateModeratorFunction(builder),\n    admissionRemoveModerator: admissionRemoveModeratorFunction(builder),\n    admissionPendingFeesReminderHistory:\n      admissionPendingFeesReminderHistoryFunction(builder),\n    admissionPendingFeesOsStudentList:\n      admissionPendingFeesOsStudentListFunction(builder),\n    admissionPendingFeesReminder: admissionPendingFeesReminderFunction(builder),\n\n    admissionExcessFeeNotRefundedList:\n      admissionExcessFeeNotRefundedListFunction(builder),\n    admissionExcessFeeRefundedList:\n      admissionExcessFeeRefundedListFunction(builder),\n    admissionCompletedApplicationList:\n      admissionCompletedApplicationListFunction(builder),\n    admissionCompleteApplication: admissionCompleteApplicationFunction(builder),\n    admissionIncompleteApplication:\n      admissionIncompleteApplicationFunction(builder),\n\n    admissionExcessFeeNotRefundedListExport:\n      admissionExcessFeeNotRefundedListExportFunction(builder),\n    admissionExcessFeeRefundedListExport:\n      admissionExcessFeeRefundedListExportFunction(builder),\n    admissionTabController: admissionTabControllerFunction(builder),\n    admissionExportFilterExcel: admissionExportFilterExcelFunction(builder),\n    admissionOngoingApplication: admissionOngoingApplicationFunction(builder),\n    admissionCreateApplication: admissionCreateApplicationFunction(builder),\n    admissionUpdateApplication: admissionUpdateApplicationFunction(builder),\n    admissionRemoveApplication: admissionRemoveApplicationFunction(builder),\n    admissionOneOngoingApplication:\n      admissionOneOngoingApplicationFunction(builder),\n    admissionOngoingApplicationRequest:\n      admissionOngoingApplicationRequestFunction(builder),\n    admissionOngoingApplicationSelect:\n      admissionOngoingApplicationSelectFunction(builder),\n    admissionOngoingApplicationReject:\n      admissionOngoingApplicationRejectFunction(builder),\n    admissionOngoingApplicationFormUpdateReject:\n      admissionOngoingApplicationFormUpdateRejectFunction(builder),\n    admissionOngoingApplicationExport:\n      admissionOngoingApplicationExportFunction(builder),\n    admissionOngoingApplicationAllottmentSubjectListExport:\n      admissionOngoingApplicationAllottmentSubjectListExportFunction(builder),\n\n    admissionOngoingApplicationDocument:\n      admissionOngoingApplicationDocumentFunction(builder),\n    admissionOngoingApplicationDocumentCollect:\n      admissionOngoingApplicationDocumentCollectFunction(builder),\n    admissionOngoingApplicationDocumentRevert:\n      admissionOngoingApplicationDocumentRevertFunction(builder),\n    admissionOngoingApplicationDocumentEditStructure:\n      admissionOngoingApplicationDocumentEditStructureFunction(builder),\n    admissionOngoingApplicationFees:\n      admissionOngoingApplicationFeesFunction(builder),\n    admissionOngoingApplicationFeesCollect:\n      admissionOngoingApplicationFeesCollectFunction(builder),\n    admissionOngoingApplicationFeesRevert:\n      admissionOngoingApplicationFeesRevertFunction(builder),\n    admissionOngoingApplicationConfirm:\n      admissionOngoingApplicationConfirmFunction(builder),\n    admissionOngoingApplicationAllConfirmList:\n      admissionOngoingApplicationAllConfirmListFunction(builder),\n    admissionOngoingApplicationConfirmReview:\n      admissionOngoingApplicationConfirmReviewFunction(builder),\n    admissionOngoingApplicationReview:\n      admissionOngoingApplicationReviewFunction(builder),\n    admissionOngoingApplicationAllReviewList:\n      admissionOngoingApplicationAllReviewListFunction(builder),\n    admissionOngoingApplicationReviewSort:\n      admissionOngoingApplicationReviewSortFunction(builder),\n    admissionOngoingApplicationReviewBatch:\n      admissionOngoingApplicationReviewBatchFunction(builder),\n    admissionOngoingApplicationReviewClasses:\n      admissionOngoingApplicationReviewClassesFunction(builder),\n    admissionOngoingApplicationReviewAllot:\n      admissionOngoingApplicationReviewAllotFunction(builder),\n    admissionOngoingApplicationReviewCancel:\n      admissionOngoingApplicationReviewCancelFunction(builder),\n    admissionOngoingApplicationAllottment:\n      admissionOngoingApplicationAllottmentFunction(builder),\n    admissionOngoingApplicationAllottmentCancel:\n      admissionOngoingApplicationAllottmentCancelFunction(builder),\n    admissionOngoingApplicationAllottmentRevert:\n      admissionOngoingApplicationAllottmentRevertFunction(builder),\n    admissionOngoingApplicationCancelled:\n      admissionOngoingApplicationCancelledFunction(builder),\n\n    admissionTransferApplicatToOtherApplication:\n      admissionTransferApplicatToOtherApplicationFunction(builder),\n    admissionOngoingApplicationDailyCollect:\n      admissionOngoingApplicationDailyCollectFunction(builder),\n    admissionPendingFees: admissionPendingFeesFunction(builder),\n    admissionApplicantCancelledList:\n      admissionApplicantCancelledListFunction(builder),\n    admissionCancelledListExport: admissionCancelledListExportFunction(builder),\n\n    admissionReadmissionList: admissionReadmissionListFunction(builder),\n    admissionReadmissionConfirmedList:\n      admissionReadmissionConfirmedListFunction(builder),\n    admissionReadmissionCollectFees:\n      admissionReadmissionCollectFeesFunction(builder),\n\n    admissionStudentAddSection: admissionStudentAddSectionFunction(builder),\n    admissionStudentSectionAddChecklist:\n      admissionStudentSectionAddChecklistFunction(builder),\n    admissionStudentRearrangeSection:\n      admissionStudentRearrangeSectionFunction(builder),\n    admissionStudentUpdateSectionChecklist:\n      admissionStudentUpdateSectionChecklistFunction(builder),\n    admissionStudentFormDetail: admissionStudentFormDetailFunction(builder),\n    admissionStudentToggleChecklist:\n      admissionStudentToggleChecklistFunction(builder),\n\n    admissionAddOuterGorup: admissionAddOuterGorupFunction(builder),\n    admissionOuterGroupList: admissionOuterGroupListFunction(builder),\n    admissionSubjectGroupList: admissionSubjectGroupListFunction(builder),\n    admissionAddSubjectGroup: admissionAddSubjectGroupFunction(builder),\n    admissionSubGroupList: admissionSubGroupListFunction(builder),\n    admissionOneSubGroupDetail: admissionOneSubGroupDetailFunction(builder),\n    admissionSubGroupAddSubject: admissionSubGroupAddSubjectFunction(builder),\n    admissionInstituteAllSubjectList:\n      admissionInstituteAllSubjectListFunction(builder),\n\n    admissionRemoveOuterGroup: admissionRemoveOuterGroupFunction(builder),\n    admissionRemoveSubjectGroup: admissionRemoveSubjectGroupFunction(builder),\n    institutePinApplication: institutePinApplicationFunction(builder),\n    instituteUnPinApplication: instituteUnPinApplicationFunction(builder),\n    instituteAllApplicationList: instituteAllApplicationListFunction(builder),\n    admissionMergedApplicationFeesList:\n      admissionMergedApplicationFeesListFunction(builder),\n    admissionMergedApplicationDocumentList:\n      admissionMergedApplicationDocumentListFunction(builder),\n    admissionMergedApplicationConfirmedList:\n      admissionMergedApplicationConfirmedListFunction(builder),\n    admissionOngoingDirectApplicationExcel:\n      admissionOngoingDirectApplicationExcelFunction(builder),\n    oneApplicationSubjectCountList:\n      oneApplicationSubjectCountListFunction(builder),\n    oneApplicationOneSubjectStudentList:\n      oneApplicationOneSubjectStudentListFunction(builder),\n    oneApplicationOneSubjectStudentListExport:\n      oneApplicationOneSubjectStudentListExportFunction(builder),\n    admissionMergedApplicationTotalCount:\n      admissionMergedApplicationTotalCountFunction(builder),\n    oneApplicationStudentFormGenerate:\n      oneApplicationStudentFormGenerateFunction(builder),\n\n    oneApplicationIntakeUpdate: oneApplicationIntakeUpdateFunction(builder),\n    oneApplicationIntakeExport: oneApplicationIntakeExportFunction(builder),\n    oneApplicationStaffActionShow:\n      oneApplicationStaffActionShowFunction(builder),\n    oneApplicationUpdateDocumentSetting:\n      oneApplicationUpdateDocumentSettingFunction(builder),\n    admissionIntakeRecordList: admissionIntakeRecordListFunction(builder),\n    ongoingAdmissionTotalCardExport:\n      ongoingAdmissionTotalCardExportFunction(builder),\n    admissionFormPrintCase: admissionFormPrintCaseFunction(builder),\n    oneApplicationAllotToReveiwStudent:\n      oneApplicationAllotToReveiwStudentFunction(builder),\n    //\n    departmentBatchAllClass: departmentBatchAllClassFunction(builder),\n  }),\n});\n\nexport const {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationAllottmentSubjectListExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationAllottmentRevertMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useOneApplicationOneSubjectStudentListExportMutation,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  useOneApplicationIntakeUpdateMutation,\n  useOneApplicationIntakeExportMutation,\n  useOneApplicationStaffActionShowQuery,\n  useOneApplicationUpdateDocumentSettingMutation,\n  useAdmissionIntakeRecordListQuery,\n  useOngoingAdmissionTotalCardExportMutation,\n  useAdmissionFormPrintCaseMutation,\n  useOneApplicationAllotToReveiwStudentMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n} = admissionManagerApiDynamic;\n","import {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationAllottmentSubjectListExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationAllottmentRevertMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  useOneApplicationIntakeUpdateMutation,\n  useOneApplicationIntakeExportMutation,\n  useOneApplicationStaffActionShowQuery,\n  useAdmissionIntakeRecordListQuery,\n  useOngoingAdmissionTotalCardExportMutation,\n  useAdmissionFormPrintCaseMutation,\n  useOneApplicationAllotToReveiwStudentMutation,\n  useOneApplicationOneSubjectStudentListExportMutation,\n  useOneApplicationUpdateDocumentSettingMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n} from \"../../../Services/AdmissionManager/admissionManagerApiDynamic\";\n\nexport const useAdmissionActivateModule = () => {\n  const [admissionActivateModule] = useAdmissionActivateModuleMutation();\n  return [admissionActivateModule];\n};\nexport const useAdmissionUpdateModule = () => {\n  const [admissionUpdateModule] = useAdmissionUpdateModuleMutation();\n  return [admissionUpdateModule];\n};\nexport const useAdmissionDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDashboardMaster: data,\n    admissionDashboardMasterRefetch: refetch,\n    admissionDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCashToFinance = () => {\n  const [admissionCashToFinance] = useAdmissionCashToFinanceMutation();\n  return [admissionCashToFinance];\n};\nexport const useAdmissionPaymentVerifyList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPaymentVerifyListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPaymentVerifyList: data,\n    admissionPaymentVerifyListRefetch: refetch,\n    admissionPaymentVerifyListLoading: isFetching,\n  };\n};\nexport const useAdmissionPaymentVerifyAction = () => {\n  const [admissionPaymentVerifyAction] =\n    useAdmissionPaymentVerifyActionMutation();\n  return [admissionPaymentVerifyAction];\n};\nexport const useAdmissionDocumentList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDocumentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDocumentList: data,\n    admissionDocumentListRefetch: refetch,\n    admissionDocumentListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddDocument = () => {\n  const [admissionAddDocument] = useAdmissionAddDocumentMutation();\n  return [admissionAddDocument];\n};\nexport const useAdmissionUpdateDocument = () => {\n  const [admissionUpdateDocument] = useAdmissionUpdateDocumentMutation();\n  return [admissionUpdateDocument];\n};\nexport const useAdmissionRemoveDocument = () => {\n  const [admissionRemoveDocument] = useAdmissionRemoveDocumentMutation();\n  return [admissionRemoveDocument];\n};\nexport const useAdmissionExportExcelList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExportExcelListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExportExcelList: data,\n    admissionExportExcelListRefetch: refetch,\n    admissionExportExcelListLoading: isFetching,\n  };\n};\nexport const useAdmissionEditExportExcel = () => {\n  const [admissionEditExportExcel] = useAdmissionEditExportExcelMutation();\n  return [admissionEditExportExcel];\n};\nexport const useAdmissionRemoveExportExcel = () => {\n  const [admissionRemoveExportExcel] = useAdmissionRemoveExportExcelMutation();\n  return [admissionRemoveExportExcel];\n};\nexport const useAdmissionModeratorList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionModeratorListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionModeratorList: data,\n    admissionModeratorListRefetch: refetch,\n    admissionModeratorListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddModerator = () => {\n  const [admissionAddModerator] = useAdmissionAddModeratorMutation();\n  return [admissionAddModerator];\n};\nexport const useAdmissionUpdateModerator = () => {\n  const [admissionUpdateModerator] = useAdmissionUpdateModeratorMutation();\n  return [admissionUpdateModerator];\n};\nexport const useAdmissionRemoveModerator = () => {\n  const [admissionRemoveModerator] = useAdmissionRemoveModeratorMutation();\n  return [admissionRemoveModerator];\n};\n\nexport const useAdmissionPendingFeesReminderHistory = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionPendingFeesReminderHistoryQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionPendingFeesReminderHistory: data,\n    admissionPendingFeesReminderHistoryRefetch: refetch,\n    admissionPendingFeesReminderHistoryLoading: isFetching,\n  };\n};\nexport const useAdmissionPendingFeesOsStudentList = () => {\n  const [admissionPendingFeesOsStudentList] =\n    useAdmissionPendingFeesOsStudentListMutation();\n  return [admissionPendingFeesOsStudentList];\n};\nexport const useAdmissionPendingFeesReminder = () => {\n  const [admissionPendingFeesReminder] =\n    useAdmissionPendingFeesReminderMutation();\n  return [admissionPendingFeesReminder];\n};\n\nexport const useAdmissionExcessFeeNotRefundedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionExcessFeeNotRefundedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionExcessFeeNotRefundedList: data,\n    admissionExcessFeeNotRefundedListRefetch: refetch,\n    admissionExcessFeeNotRefundedListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionExcessFeeRefundedList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExcessFeeRefundedListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExcessFeeRefundedList: data,\n    admissionExcessFeeRefundedListRefetch: refetch,\n    admissionExcessFeeRefundedListLoading: isFetching,\n  };\n};\nexport const useAdmissionExcessFeeNotRefundedListExport = () => {\n  const [admissionExcessFeeNotRefundedListExport] =\n    useAdmissionExcessFeeNotRefundedListExportMutation();\n  return [admissionExcessFeeNotRefundedListExport];\n};\nexport const useAdmissionExcessFeeRefundedListExport = () => {\n  const [admissionExcessFeeRefundedListExport] =\n    useAdmissionExcessFeeRefundedListExportMutation();\n  return [admissionExcessFeeRefundedListExport];\n};\n\nexport const useAdmissionCompletedApplicationList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionCompletedApplicationListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionCompletedApplicationList: data,\n    admissionCompletedApplicationListRefetch: refetch,\n    admissionCompletedApplicationListLoading: isFetching,\n  };\n};\nexport const useAdmissionCompleteApplication = () => {\n  const [admissionCompleteApplication] =\n    useAdmissionCompleteApplicationMutation();\n  return [admissionCompleteApplication];\n};\nexport const useAdmissionIncompleteApplication = () => {\n  const [admissionIncompleteApplication] =\n    useAdmissionIncompleteApplicationMutation();\n  return [admissionIncompleteApplication];\n};\nexport const useAdmissionTabController = () => {\n  const [admissionTabController] = useAdmissionTabControllerMutation();\n  return [admissionTabController];\n};\nexport const useAdmissionExportFilterExcel = () => {\n  const [admissionExportFilterExcel] = useAdmissionExportFilterExcelMutation();\n  return [admissionExportFilterExcel];\n};\n\nexport const useAdmissionOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplication: data,\n    admissionOngoingApplicationRefetch: refetch,\n    admissionOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionCreateApplication = () => {\n  const [admissionCreateApplication] = useAdmissionCreateApplicationMutation();\n  return [admissionCreateApplication];\n};\nexport const useAdmissionUpdateApplication = () => {\n  const [admissionUpdateApplication] = useAdmissionUpdateApplicationMutation();\n  return [admissionUpdateApplication];\n};\nexport const useAdmissionRemoveApplication = () => {\n  const [admissionRemoveApplication] = useAdmissionRemoveApplicationMutation();\n  return [admissionRemoveApplication];\n};\n\nexport const useAdmissionOneOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneOngoingApplicationQuery(\n    args.appId,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOneOngoingApplication: data,\n    admissionOneOngoingApplicationRefetch: refetch,\n    admissionOneOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationRequest = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationRequestQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationRequest: data,\n    admissionOngoingApplicationRequestRefetch: refetch,\n    admissionOngoingApplicationRequestLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationSelect = () => {\n  const [admissionOngoingApplicationSelect] =\n    useAdmissionOngoingApplicationSelectMutation();\n  return [admissionOngoingApplicationSelect];\n};\nexport const useAdmissionOngoingApplicationReject = () => {\n  const [admissionOngoingApplicationReject] =\n    useAdmissionOngoingApplicationRejectMutation();\n  return [admissionOngoingApplicationReject];\n};\nexport const useAdmissionOngoingApplicationFormUpdateReject = () => {\n  const [admissionOngoingApplicationFormUpdateReject] =\n    useAdmissionOngoingApplicationFormUpdateRejectMutation();\n  return [admissionOngoingApplicationFormUpdateReject];\n};\nexport const useAdmissionOngoingApplicationExport = () => {\n  const [admissionOngoingApplicationExport] =\n    useAdmissionOngoingApplicationExportMutation();\n  return [admissionOngoingApplicationExport];\n};\nexport const useAdmissionOngoingApplicationAllottmentSubjectListExport = () => {\n  const [admissionOngoingApplicationAllottmentSubjectListExport] =\n    useAdmissionOngoingApplicationAllottmentSubjectListExportMutation();\n  return [admissionOngoingApplicationAllottmentSubjectListExport];\n};\n\nexport const useAdmissionOngoingApplicationDocument = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDocumentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDocument: data,\n    admissionOngoingApplicationDocumentRefetch: refetch,\n    admissionOngoingApplicationDocumentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationDocumentCollect = () => {\n  const [admissionOngoingApplicationDocumentCollect] =\n    useAdmissionOngoingApplicationDocumentCollectMutation();\n  return [admissionOngoingApplicationDocumentCollect];\n};\n\nexport const useAdmissionOngoingApplicationDocumentRevert = () => {\n  const [admissionOngoingApplicationDocumentRevert] =\n    useAdmissionOngoingApplicationDocumentRevertMutation();\n  return [admissionOngoingApplicationDocumentRevert];\n};\n\nexport const useAdmissionOngoingApplicationDocumentEditStructure = () => {\n  const [admissionOngoingApplicationDocumentEditStructure] =\n    useAdmissionOngoingApplicationDocumentEditStructureMutation();\n  return [admissionOngoingApplicationDocumentEditStructure];\n};\nexport const useAdmissionOngoingApplicationFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplicationFees: data,\n    admissionOngoingApplicationFeesRefetch: refetch,\n    admissionOngoingApplicationFeesLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationFeesCollect = () => {\n  const [admissionOngoingApplicationFeesCollect] =\n    useAdmissionOngoingApplicationFeesCollectMutation();\n  return [admissionOngoingApplicationFeesCollect];\n};\nexport const useAdmissionOngoingApplicationFeesRevert = () => {\n  const [admissionOngoingApplicationFeesRevert] =\n    useAdmissionOngoingApplicationFeesRevertMutation();\n  return [admissionOngoingApplicationFeesRevert];\n};\nexport const useAdmissionOngoingApplicationConfirm = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationConfirmQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationConfirm: data,\n    admissionOngoingApplicationConfirmRefetch: refetch,\n    admissionOngoingApplicationConfirmLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllConfirmList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllConfirmListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllConfirmList: data,\n    admissionOngoingApplicationAllConfirmListRefetch: refetch,\n    admissionOngoingApplicationAllConfirmListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationConfirmReview = () => {\n  const [admissionOngoingApplicationConfirmReview] =\n    useAdmissionOngoingApplicationConfirmReviewMutation();\n  return [admissionOngoingApplicationConfirmReview];\n};\nexport const useAdmissionOngoingApplicationReview = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReview: data,\n    admissionOngoingApplicationReviewRefetch: refetch,\n    admissionOngoingApplicationReviewLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllReviewList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllReviewListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllReviewList: data,\n    admissionOngoingApplicationAllReviewListRefetch: refetch,\n    admissionOngoingApplicationAllReviewListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewSort = () => {\n  const [admissionOngoingApplicationReviewSort] =\n    useAdmissionOngoingApplicationReviewSortMutation();\n  return [admissionOngoingApplicationReviewSort];\n};\nexport const useAdmissionOngoingApplicationReviewBatch = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewBatchQuery(args.appId, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewBatch: data,\n    admissionOngoingApplicationReviewBatchRefetch: refetch,\n    admissionOngoingApplicationReviewBatchLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewClasses = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewClassesQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewClasses: data,\n    admissionOngoingApplicationReviewClassesRefetch: refetch,\n    admissionOngoingApplicationReviewClassesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewAllot = () => {\n  const [admissionOngoingApplicationReviewAllot] =\n    useAdmissionOngoingApplicationReviewAllotMutation();\n  return [admissionOngoingApplicationReviewAllot];\n};\nexport const useAdmissionOngoingApplicationReviewCancel = () => {\n  const [admissionOngoingApplicationReviewCancel] =\n    useAdmissionOngoingApplicationReviewCancelMutation();\n  return [admissionOngoingApplicationReviewCancel];\n};\nexport const useAdmissionOngoingApplicationAllottment = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllottmentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllottment: data,\n    admissionOngoingApplicationAllottmentRefetch: refetch,\n    admissionOngoingApplicationAllottmentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllottmentCancel = () => {\n  const [admissionOngoingApplicationAllottmentCancel] =\n    useAdmissionOngoingApplicationAllottmentCancelMutation();\n  return [admissionOngoingApplicationAllottmentCancel];\n};\nexport const useAdmissionOngoingApplicationAllottmentRevert = () => {\n  const [admissionOngoingApplicationAllottmentRevert] =\n    useAdmissionOngoingApplicationAllottmentRevertMutation();\n  return [admissionOngoingApplicationAllottmentRevert];\n};\nexport const useAdmissionOngoingApplicationCancelled = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationCancelledQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationCancelled: data,\n    admissionOngoingApplicationCancelledRefetch: refetch,\n    admissionOngoingApplicationCancelledLoading: isFetching,\n  };\n};\n\nexport const useAdmissionTransferApplicatToOtherApplication = () => {\n  const [admissionTransferApplicatToOtherApplication] =\n    useAdmissionTransferApplicatToOtherApplicationMutation();\n  return [admissionTransferApplicatToOtherApplication];\n};\nexport const useAdmissionOngoingApplicationDailyCollect = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDailyCollectQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDailyCollect: data,\n    admissionOngoingApplicationDailyCollectRefetch: refetch,\n    admissionOngoingApplicationDailyCollectLoading: isFetching,\n  };\n};\n\nexport const useAdmissionPendingFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPendingFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPendingFees: data,\n    admissionPendingFeesRefetch: refetch,\n    admissionPendingFeesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionApplicantCancelledList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionApplicantCancelledListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionApplicantCancelledList: data,\n    admissionApplicantCancelledListRefetch: refetch,\n    admissionApplicantCancelledListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCancelledListExport = () => {\n  const [admissionCancelledListExport] =\n    useAdmissionCancelledListExportMutation();\n  return [admissionCancelledListExport];\n};\n\nexport const useAdmissionReadmissionList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionReadmissionListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionReadmissionList: data,\n    admissionReadmissionListRefetch: refetch,\n    admissionReadmissionListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionReadmissionConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionReadmissionConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionReadmissionConfirmedList: data,\n    admissionReadmissionConfirmedListRefetch: refetch,\n    admissionReadmissionConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionReadmissionCollectFees = () => {\n  const [admissionReadmissionCollectFees] =\n    useAdmissionReadmissionCollectFeesMutation();\n  return [admissionReadmissionCollectFees];\n};\n\nexport const useAdmissionStudentAddSection = () => {\n  const [admissionStudentAddSection] = useAdmissionStudentAddSectionMutation();\n  return [admissionStudentAddSection];\n};\nexport const useAdmissionStudentSectionAddChecklist = () => {\n  const [admissionStudentSectionAddChecklist] =\n    useAdmissionStudentSectionAddChecklistMutation();\n  return [admissionStudentSectionAddChecklist];\n};\nexport const useAdmissionStudentRearrangeSection = () => {\n  const [admissionStudentRearrangeSection] =\n    useAdmissionStudentRearrangeSectionMutation();\n  return [admissionStudentRearrangeSection];\n};\nexport const useAdmissionStudentUpdateSectionChecklist = () => {\n  const [admissionStudentUpdateSectionChecklist] =\n    useAdmissionStudentUpdateSectionChecklistMutation();\n  return [admissionStudentUpdateSectionChecklist];\n};\n\nexport const useAdmissionStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionStudentFormDetail: data,\n    admissionStudentFormDetailRefetch: refetch,\n    admissionStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useAdmissionStudentToggleChecklist = () => {\n  const [admissionStudentToggleChecklist] =\n    useAdmissionStudentToggleChecklistMutation();\n  return [admissionStudentToggleChecklist];\n};\n\nexport const useAdmissionAddOuterGorup = () => {\n  const [admissionAddOuterGorup] = useAdmissionAddOuterGorupMutation();\n  return [admissionAddOuterGorup];\n};\nexport const useAdmissionOuterGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOuterGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOuterGroupList: data,\n    admissionOuterGroupListRefetch: refetch,\n    admissionOuterGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionSubjectGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubjectGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubjectGroupList: data,\n    admissionSubjectGroupListRefetch: refetch,\n    admissionSubjectGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddSubjectGroup = () => {\n  const [admissionAddSubjectGroup] = useAdmissionAddSubjectGroupMutation();\n  return [admissionAddSubjectGroup];\n};\nexport const useAdmissionSubGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubGroupList: data,\n    admissionSubGroupListRefetch: refetch,\n    admissionSubGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionOneSubGroupDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneSubGroupDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOneSubGroupDetail: data,\n    admissionOneSubGroupDetailRefetch: refetch,\n    admissionOneSubGroupDetailLoading: isFetching,\n  };\n};\n\nexport const useAdmissionSubGroupAddSubject = () => {\n  const [admissionSubGroupAddSubject] =\n    useAdmissionSubGroupAddSubjectMutation();\n  return [admissionSubGroupAddSubject];\n};\n\nexport const useAdmissionInstituteAllSubjectList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionInstituteAllSubjectListQuery(args?.data, {\n      skip: args?.skip,\n    });\n  return {\n    admissionInstituteAllSubjectList: data,\n    admissionInstituteAllSubjectListRefetch: refetch,\n    admissionInstituteAllSubjectListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionRemoveOuterGroup = () => {\n  const [admissionRemoveOuterGroup] = useAdmissionRemoveOuterGroupMutation();\n  return [admissionRemoveOuterGroup];\n};\n\nexport const useAdmissionRemoveSubjectGroup = () => {\n  const [admissionRemoveSubjectGroup] =\n    useAdmissionRemoveSubjectGroupMutation();\n  return [admissionRemoveSubjectGroup];\n};\n\nexport const useInstitutePinApplication = () => {\n  const [institutePinApplication] = useInstitutePinApplicationMutation();\n  return [institutePinApplication];\n};\n\nexport const useInstituteUnPinApplication = () => {\n  const [instituteUnPinApplication] = useInstituteUnPinApplicationMutation();\n  return [instituteUnPinApplication];\n};\n\nexport const useInstituteAllApplicationList = (args) => {\n  const { data, refetch, isFetching } = useInstituteAllApplicationListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    instituteAllApplicationList: data,\n    instituteAllApplicationListRefetch: refetch,\n    instituteAllApplicationListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationDocumentList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationDocumentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationDocumentList: data,\n    admissionMergedApplicationDocumentListRefetch: refetch,\n    admissionMergedApplicationDocumentListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationFeesList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationFeesListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationFeesList: data,\n    admissionMergedApplicationFeesListRefetch: refetch,\n    admissionMergedApplicationFeesListLoading: isFetching,\n  };\n};\nexport const useAdmissionMergedApplicationConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationConfirmedList: data,\n    admissionMergedApplicationConfirmedListRefetch: refetch,\n    admissionMergedApplicationConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingDirectApplicationExcel = () => {\n  const [admissionOngoingDirectApplicationExcel] =\n    useAdmissionOngoingDirectApplicationExcelMutation();\n  return [admissionOngoingDirectApplicationExcel];\n};\n\nexport const useOneApplicationSubjectCountList = (args) => {\n  const { data, refetch, isFetching } = useOneApplicationSubjectCountListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    oneApplicationSubjectCountList: data,\n    oneApplicationSubjectCountListRefetch: refetch,\n    oneApplicationSubjectCountListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentList = (args) => {\n  const { data, refetch, isFetching } =\n    useOneApplicationOneSubjectStudentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    oneApplicationOneSubjectStudentList: data,\n    oneApplicationOneSubjectStudentListRefetch: refetch,\n    oneApplicationOneSubjectStudentListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentListExport = () => {\n  const [oneApplicationOneSubjectStudentListExport] =\n    useOneApplicationOneSubjectStudentListExportMutation();\n  return [oneApplicationOneSubjectStudentListExport];\n};\n\nexport const useAdmissionMergedApplicationTotalCount = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationTotalCountQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationTotalCount: data,\n    admissionMergedApplicationTotalCountRefetch: refetch,\n    admissionMergedApplicationTotalCountLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationStudentFormGenerate = () => {\n  const [oneApplicationStudentFormGenerate] =\n    useOneApplicationStudentFormGenerateMutation();\n  return [oneApplicationStudentFormGenerate];\n};\n\nexport const useOneApplicationIntakeUpdate = () => {\n  const [oneApplicationIntakeUpdate] = useOneApplicationIntakeUpdateMutation();\n  return [oneApplicationIntakeUpdate];\n};\nexport const useOneApplicationIntakeExport = () => {\n  const [oneApplicationIntakeExport] = useOneApplicationIntakeExportMutation();\n  return [oneApplicationIntakeExport];\n};\n\nexport const useOneApplicationStaffActionShow = (args) => {\n  const { data, refetch, isFetching } = useOneApplicationStaffActionShowQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    oneApplicationStaffActionShow: data,\n    oneApplicationStaffActionShowRefetch: refetch,\n    oneApplicationStaffActionShowLoading: isFetching,\n  };\n};\nexport const useOneApplicationUpdateDocumentSetting = () => {\n  const [oneApplicationUpdateDocumentSetting] =\n    useOneApplicationUpdateDocumentSettingMutation();\n  return [oneApplicationUpdateDocumentSetting];\n};\nexport const useAdmissionIntakeRecordList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionIntakeRecordListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionIntakeRecordList: data,\n    admissionIntakeRecordListRefetch: refetch,\n    admissionIntakeRecordListLoading: isFetching,\n  };\n};\nexport const useOngoingAdmissionTotalCardExport = () => {\n  const [ongoingAdmissionTotalCardExport] =\n    useOngoingAdmissionTotalCardExportMutation();\n  return [ongoingAdmissionTotalCardExport];\n};\n\nexport const useAdmissionFormPrintCase = () => {\n  const [admissionFormPrintCase] = useAdmissionFormPrintCaseMutation();\n  return [admissionFormPrintCase];\n};\nexport const useOneApplicationAllotToReveiwStudent = () => {\n  const [oneApplicationAllotToReveiwStudent] =\n    useOneApplicationAllotToReveiwStudentMutation();\n  return [oneApplicationAllotToReveiwStudent];\n};\n\n///\n\nexport const useDepartmentBatchAllClass = (args) => {\n  const { data, refetch, isFetching } = useDepartmentBatchAllClassQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    departmentBatchAllClass: data,\n    departmentBatchAllClassRefetch: refetch,\n    departmentBatchAllClassLoading: isFetching,\n  };\n};\n"],"names":["admissionActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","activateModule","admissionUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","admissionDashboardMasterFunction","aid","mod_id","providesTags","serializeQueryArgs","_ref","endpointName","transformResponse","response","dect","decryption","encrypt","admission","admissionCashToFinanceFunction","submitAmount","admissionPaymentVerifyListFunction","page","limit","filterBy","over_filter","search","_ref2","meta","arg","list","all_requests","merge","currentCache","incomingData","_currentCache$list","push","forceRefetch","_ref3","currentArg","previousArg","admissionPaymentVerifyActionFunction","rid","reqId","status","receiptAction","admissionDocumentListFunction","_ref4","all_docs","_currentCache$list2","_ref5","admissionAddDocumentFunction","document","admissionUpdateDocumentFunction","editDocument","admissionRemoveDocumentFunction","did","DELETE","admissionExportExcelListFunction","_ref6","all_excel","_currentCache$list3","_ref7","admissionEditExportExcelFunction","xlsxId","excelUpdate","admissionRemoveExportExcelFunction","admissionExportFilterExcelFunction","gender","caste","is_all","all_depart","batch_status","exportData","admissionModeratorListFunction","_ref8","all_mods","_currentCache$list4","_ref9","admissionAddModeratorFunction","_data$active_tab","active_tab","addModerator","admissionUpdateModeratorFunction","_data$active_tab2","modId","updateModerator","admissionRemoveModeratorFunction","admissionPendingFeesFunction","_data$flow","flow","_ref10","remain","_currentCache$list5","_ref11","admissionPendingFeesReminderHistoryFunction","_data$search","id","_ref12","all_message","_currentCache$list6","_ref13","admissionPendingFeesOsStudentListFunction","pendingData","admissionPendingFeesReminderFunction","alarm_mode","reminderData","admissionExcessFeeNotRefundedListFunction","_data$search2","_ref14","all_refund_list","_currentCache$list7","_ref15","admissionExcessFeeRefundedListFunction","_ref16","all_refunded","_currentCache$list8","_ref17","admissionExcessFeeNotRefundedListExportFunction","admissionExcessFeeRefundedListExportFunction","admissionTabControllerFunction","tabManage","admissionCompletedApplicationListFunction","_ref18","completed","_currentCache$list9","_ref19","admissionCompleteApplicationFunction","appId","admissionIncompleteApplicationFunction","admissionOngoingApplicationFunction","ad","_ref20","res","ongoing","_currentCache$list10","_ref21","admissionCreateApplicationFunction","application","admissionUpdateApplicationFunction","updateApplication","admissionRemoveApplicationFunction","admissionOneOngoingApplicationFunction","oneApply","_ref22","_ref23","admissionOngoingApplicationRequestFunction","req","_ref24","request","_currentCache$list11","_ref25","admissionOngoingApplicationSelectFunction","sid","applicant","admissionOngoingApplicationRejectFunction","bodyParameter","admissionOngoingApplicationFormUpdateRejectFunction","admissionOngoingApplicationExportFunction","admissionOngoingApplicationAllottmentSubjectListExportFunction","admissionOngoingApplicationDocumentFunction","_ref26","select","_currentCache$list12","_ref27","admissionOngoingApplicationDocumentCollectFunction","admissionOngoingApplicationDocumentRevertFunction","revert","admissionOngoingApplicationDocumentEditStructureFunction","admissionOngoingApplicationFeesFunction","_ref28","fees","_currentCache$list13","_ref29","admissionOngoingApplicationFeesCollectFunction","_data$receipt_status","receipt_status","collect","admissionOngoingApplicationFeesRevertFunction","admissionOngoingApplicationConfirmFunction","_ref30","confirm","_currentCache$list14","_ref31","admissionOngoingApplicationAllConfirmListFunction","_ref32","_ref33","admissionOngoingApplicationConfirmReviewFunction","review","admissionOngoingApplicationReviewFunction","_ref34","_currentCache$list15","_ref35","admissionOngoingApplicationAllReviewListFunction","_ref36","_ref37","admissionOngoingApplicationReviewSortFunction","sort_query","admissionOngoingApplicationReviewBatchFunction","_ref38","batch","_ref39","admissionOngoingApplicationReviewClassesFunction","bid","_ref40","classes","_currentCache$list16","_ref41","admissionOngoingApplicationReviewAllotFunction","cid","admissionOngoingApplicationReviewCancelFunction","payment","admissionOngoingApplicationAllottmentFunction","_ref42","allot","_currentCache$list17","_ref43","admissionOngoingApplicationAllottmentCancelFunction","admissionOngoingApplicationAllottmentRevertFunction","admissionOngoingApplicationCancelledFunction","_ref44","cancel","_currentCache$list18","_ref45","admissionTransferApplicatToOtherApplicationFunction","transferApplicantData","admissionOngoingApplicationDailyCollectFunction","valid_date","_ref46","day_wise","_ref47","admissionApplicantCancelledListFunction","_ref48","_currentCache$list19","_ref49","admissionCancelledListExportFunction","timeline","timeline_content","from","to","bank","admissionReadmissionListFunction","_ref50","_currentCache$list20","_ref51","admissionReadmissionConfirmedListFunction","_ref52","_currentCache$list21","_ref53","admissionReadmissionCollectFeesFunction","admissionStudentAddSectionFunction","formId","admissionStudentSectionAddChecklistFunction","admissionStudentRearrangeSectionFunction","admissionStudentUpdateSectionChecklistFunction","admissionStudentFormDetailFunction","section","_ref54","_ref55","admissionStudentToggleChecklistFunction","admissionAddOuterGorupFunction","admissionOuterGroupListFunction","_ref56","all_group","_currentCache$list22","_ref57","admissionSubjectGroupListFunction","_ref58","_currentCache$list23","_ref59","admissionAddSubjectGroupFunction","sgid","admissionSubGroupListFunction","_ref60","all_group_select","_currentCache$list24","_ref61","admissionOneSubGroupDetailFunction","_ref62","group","_ref63","admissionSubGroupAddSubjectFunction","ssid","admissionInstituteAllSubjectListFunction","_ref64","all_subjects","_currentCache$list25","_ref65","admissionRemoveOuterGroupFunction","admissionRemoveSubjectGroupFunction","institutePinApplicationFunction","instituteUnPinApplicationFunction","instituteAllApplicationListFunction","_ref66","_currentCache$list26","_ref67","admissionMergedApplicationTotalCountFunction","_ref68","ads_obj","_ref69","admissionMergedApplicationDocumentListFunction","_ref70","_currentCache$list27","_ref71","admissionMergedApplicationFeesListFunction","_ref72","_currentCache$list28","_ref73","admissionMergedApplicationConfirmedListFunction","_ref74","_currentCache$list29","_ref75","admissionOngoingDirectApplicationExcelFunction","oneApplicationSubjectCountListFunction","_ref76","subject","_ref77","oneApplicationOneSubjectStudentListFunction","smid","_ref78","student","studentCount","student_count","_currentCache$list30","_ref79","oneApplicationOneSubjectStudentListExportFunction","oneApplicationStudentFormGenerateFunction","oneApplicationIntakeUpdateFunction","oneApplicationIntakeExportFunction","oneApplicationStaffActionShowFunction","_ref80","only","_ref81","oneApplicationUpdateDocumentSettingFunction","admissionIntakeRecordListFunction","_ref82","admission_intake_set","_currentCache$list31","_ref83","ongoingAdmissionTotalCardExportFunction","admissionFormPrintCaseFunction","oneApplicationAllotToReveiwStudentFunction","departmentBatchAllClassFunction","_ref84","_response$batch","_response$batch2","classroom","_currentCache$list32","_ref85","admissionManagerApiDynamic","admissionManagerApi","injectEndpoints","endpoints","admissionActivateModule","admissionUpdateModule","admissionDashboardMaster","admissionCashToFinance","admissionPaymentVerifyList","admissionPaymentVerifyAction","admissionDocumentList","admissionAddDocument","admissionUpdateDocument","admissionRemoveDocument","admissionExportExcelList","admissionEditExportExcel","admissionRemoveExportExcel","admissionModeratorList","admissionAddModerator","admissionUpdateModerator","admissionRemoveModerator","admissionPendingFeesReminderHistory","admissionPendingFeesOsStudentList","admissionPendingFeesReminder","admissionExcessFeeNotRefundedList","admissionExcessFeeRefundedList","admissionCompletedApplicationList","admissionCompleteApplication","admissionIncompleteApplication","admissionExcessFeeNotRefundedListExport","admissionExcessFeeRefundedListExport","admissionTabController","admissionExportFilterExcel","admissionOngoingApplication","admissionCreateApplication","admissionUpdateApplication","admissionRemoveApplication","admissionOneOngoingApplication","admissionOngoingApplicationRequest","admissionOngoingApplicationSelect","admissionOngoingApplicationReject","admissionOngoingApplicationFormUpdateReject","admissionOngoingApplicationExport","admissionOngoingApplicationAllottmentSubjectListExport","admissionOngoingApplicationDocument","admissionOngoingApplicationDocumentCollect","admissionOngoingApplicationDocumentRevert","admissionOngoingApplicationDocumentEditStructure","admissionOngoingApplicationFees","admissionOngoingApplicationFeesCollect","admissionOngoingApplicationFeesRevert","admissionOngoingApplicationConfirm","admissionOngoingApplicationAllConfirmList","admissionOngoingApplicationConfirmReview","admissionOngoingApplicationReview","admissionOngoingApplicationAllReviewList","admissionOngoingApplicationReviewSort","admissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewAllot","admissionOngoingApplicationReviewCancel","admissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentCancel","admissionOngoingApplicationAllottmentRevert","admissionOngoingApplicationCancelled","admissionTransferApplicatToOtherApplication","admissionOngoingApplicationDailyCollect","admissionPendingFees","admissionApplicantCancelledList","admissionCancelledListExport","admissionReadmissionList","admissionReadmissionConfirmedList","admissionReadmissionCollectFees","admissionStudentAddSection","admissionStudentSectionAddChecklist","admissionStudentRearrangeSection","admissionStudentUpdateSectionChecklist","admissionStudentFormDetail","admissionStudentToggleChecklist","admissionAddOuterGorup","admissionOuterGroupList","admissionSubjectGroupList","admissionAddSubjectGroup","admissionSubGroupList","admissionOneSubGroupDetail","admissionSubGroupAddSubject","admissionInstituteAllSubjectList","admissionRemoveOuterGroup","admissionRemoveSubjectGroup","institutePinApplication","instituteUnPinApplication","instituteAllApplicationList","admissionMergedApplicationFeesList","admissionMergedApplicationDocumentList","admissionMergedApplicationConfirmedList","admissionOngoingDirectApplicationExcel","oneApplicationSubjectCountList","oneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListExport","admissionMergedApplicationTotalCount","oneApplicationStudentFormGenerate","oneApplicationIntakeUpdate","oneApplicationIntakeExport","oneApplicationStaffActionShow","oneApplicationUpdateDocumentSetting","admissionIntakeRecordList","ongoingAdmissionTotalCardExport","admissionFormPrintCase","oneApplicationAllotToReveiwStudent","departmentBatchAllClass","useAdmissionActivateModuleMutation","useAdmissionUpdateModuleMutation","useAdmissionDashboardMasterQuery","useAdmissionCashToFinanceMutation","useAdmissionPaymentVerifyListQuery","useAdmissionPaymentVerifyActionMutation","useAdmissionDocumentListQuery","useAdmissionAddDocumentMutation","useAdmissionUpdateDocumentMutation","useAdmissionRemoveDocumentMutation","useAdmissionExportExcelListQuery","useAdmissionEditExportExcelMutation","useAdmissionRemoveExportExcelMutation","useAdmissionModeratorListQuery","useAdmissionAddModeratorMutation","useAdmissionUpdateModeratorMutation","useAdmissionRemoveModeratorMutation","useAdmissionPendingFeesReminderHistoryQuery","useAdmissionPendingFeesOsStudentListMutation","useAdmissionPendingFeesReminderMutation","useAdmissionExcessFeeNotRefundedListQuery","useAdmissionExcessFeeRefundedListQuery","useAdmissionCompletedApplicationListQuery","useAdmissionCompleteApplicationMutation","useAdmissionIncompleteApplicationMutation","useAdmissionExcessFeeNotRefundedListExportMutation","useAdmissionExcessFeeRefundedListExportMutation","useAdmissionTabControllerMutation","useAdmissionExportFilterExcelMutation","useAdmissionOngoingApplicationQuery","useAdmissionCreateApplicationMutation","useAdmissionUpdateApplicationMutation","useAdmissionRemoveApplicationMutation","useAdmissionOneOngoingApplicationQuery","useAdmissionOngoingApplicationRequestQuery","useAdmissionOngoingApplicationSelectMutation","useAdmissionOngoingApplicationRejectMutation","useAdmissionOngoingApplicationFormUpdateRejectMutation","useAdmissionOngoingApplicationExportMutation","useAdmissionOngoingApplicationAllottmentSubjectListExportMutation","useAdmissionOngoingApplicationDocumentQuery","useAdmissionOngoingApplicationDocumentCollectMutation","useAdmissionOngoingApplicationDocumentRevertMutation","useAdmissionOngoingApplicationDocumentEditStructureMutation","useAdmissionOngoingApplicationFeesQuery","useAdmissionOngoingApplicationFeesCollectMutation","useAdmissionOngoingApplicationFeesRevertMutation","useAdmissionOngoingApplicationConfirmQuery","useAdmissionOngoingApplicationAllConfirmListQuery","useAdmissionOngoingApplicationConfirmReviewMutation","useAdmissionOngoingApplicationReviewQuery","useAdmissionOngoingApplicationAllReviewListQuery","useAdmissionOngoingApplicationReviewSortMutation","useAdmissionOngoingApplicationReviewBatchQuery","useAdmissionOngoingApplicationReviewClassesQuery","useAdmissionOngoingApplicationReviewAllotMutation","useAdmissionOngoingApplicationReviewCancelMutation","useAdmissionOngoingApplicationAllottmentQuery","useAdmissionOngoingApplicationAllottmentCancelMutation","useAdmissionOngoingApplicationAllottmentRevertMutation","useAdmissionOngoingApplicationCancelledQuery","useAdmissionTransferApplicatToOtherApplicationMutation","useAdmissionOngoingApplicationDailyCollectQuery","useAdmissionPendingFeesQuery","useAdmissionApplicantCancelledListQuery","useAdmissionCancelledListExportMutation","useAdmissionReadmissionListQuery","useAdmissionReadmissionConfirmedListQuery","useAdmissionReadmissionCollectFeesMutation","useAdmissionStudentAddSectionMutation","useAdmissionStudentSectionAddChecklistMutation","useAdmissionStudentRearrangeSectionMutation","useAdmissionStudentUpdateSectionChecklistMutation","useAdmissionStudentFormDetailQuery","useAdmissionStudentToggleChecklistMutation","useAdmissionAddOuterGorupMutation","useAdmissionOuterGroupListQuery","useAdmissionSubjectGroupListQuery","useAdmissionAddSubjectGroupMutation","useAdmissionSubGroupListQuery","useAdmissionOneSubGroupDetailQuery","useAdmissionSubGroupAddSubjectMutation","useAdmissionInstituteAllSubjectListQuery","useAdmissionRemoveOuterGroupMutation","useAdmissionRemoveSubjectGroupMutation","useInstitutePinApplicationMutation","useInstituteUnPinApplicationMutation","useInstituteAllApplicationListQuery","useAdmissionMergedApplicationDocumentListQuery","useAdmissionMergedApplicationFeesListQuery","useAdmissionMergedApplicationConfirmedListQuery","useAdmissionOngoingDirectApplicationExcelMutation","useOneApplicationSubjectCountListQuery","useOneApplicationOneSubjectStudentListQuery","useOneApplicationOneSubjectStudentListExportMutation","useAdmissionMergedApplicationTotalCountQuery","useOneApplicationStudentFormGenerateMutation","useOneApplicationIntakeUpdateMutation","useOneApplicationIntakeExportMutation","useOneApplicationStaffActionShowQuery","useOneApplicationUpdateDocumentSettingMutation","useAdmissionIntakeRecordListQuery","useOngoingAdmissionTotalCardExportMutation","useAdmissionFormPrintCaseMutation","useOneApplicationAllotToReveiwStudentMutation","useDepartmentBatchAllClassQuery","useAdmissionActivateModule","useAdmissionUpdateModule","useAdmissionDashboardMaster","args","refetch","isFetching","skip","admissionDashboardMasterRefetch","admissionDashboardMasterLoading","useAdmissionCashToFinance","useAdmissionPaymentVerifyList","admissionPaymentVerifyListRefetch","admissionPaymentVerifyListLoading","useAdmissionPaymentVerifyAction","useAdmissionDocumentList","admissionDocumentListRefetch","admissionDocumentListLoading","useAdmissionAddDocument","useAdmissionUpdateDocument","useAdmissionRemoveDocument","useAdmissionExportExcelList","admissionExportExcelListRefetch","admissionExportExcelListLoading","useAdmissionEditExportExcel","useAdmissionRemoveExportExcel","useAdmissionModeratorList","admissionModeratorListRefetch","admissionModeratorListLoading","useAdmissionAddModerator","useAdmissionUpdateModerator","useAdmissionRemoveModerator","useAdmissionPendingFeesReminderHistory","admissionPendingFeesReminderHistoryRefetch","admissionPendingFeesReminderHistoryLoading","useAdmissionPendingFeesOsStudentList","useAdmissionPendingFeesReminder","useAdmissionExcessFeeNotRefundedList","admissionExcessFeeNotRefundedListRefetch","admissionExcessFeeNotRefundedListLoading","useAdmissionExcessFeeRefundedList","admissionExcessFeeRefundedListRefetch","admissionExcessFeeRefundedListLoading","useAdmissionExcessFeeNotRefundedListExport","useAdmissionExcessFeeRefundedListExport","useAdmissionCompletedApplicationList","admissionCompletedApplicationListRefetch","admissionCompletedApplicationListLoading","useAdmissionCompleteApplication","useAdmissionIncompleteApplication","useAdmissionTabController","useAdmissionExportFilterExcel","useAdmissionOngoingApplication","admissionOngoingApplicationRefetch","admissionOngoingApplicationLoading","useAdmissionCreateApplication","useAdmissionUpdateApplication","useAdmissionRemoveApplication","useAdmissionOneOngoingApplication","admissionOneOngoingApplicationRefetch","admissionOneOngoingApplicationLoading","useAdmissionOngoingApplicationRequest","admissionOngoingApplicationRequestRefetch","admissionOngoingApplicationRequestLoading","useAdmissionOngoingApplicationSelect","useAdmissionOngoingApplicationReject","useAdmissionOngoingApplicationFormUpdateReject","useAdmissionOngoingApplicationExport","useAdmissionOngoingApplicationAllottmentSubjectListExport","useAdmissionOngoingApplicationDocument","admissionOngoingApplicationDocumentRefetch","admissionOngoingApplicationDocumentLoading","useAdmissionOngoingApplicationDocumentCollect","useAdmissionOngoingApplicationDocumentRevert","useAdmissionOngoingApplicationDocumentEditStructure","useAdmissionOngoingApplicationFees","admissionOngoingApplicationFeesRefetch","admissionOngoingApplicationFeesLoading","useAdmissionOngoingApplicationFeesCollect","useAdmissionOngoingApplicationFeesRevert","useAdmissionOngoingApplicationConfirm","admissionOngoingApplicationConfirmRefetch","admissionOngoingApplicationConfirmLoading","useAdmissionOngoingApplicationAllConfirmList","admissionOngoingApplicationAllConfirmListRefetch","admissionOngoingApplicationAllConfirmListLoading","useAdmissionOngoingApplicationConfirmReview","useAdmissionOngoingApplicationReview","admissionOngoingApplicationReviewRefetch","admissionOngoingApplicationReviewLoading","useAdmissionOngoingApplicationAllReviewList","admissionOngoingApplicationAllReviewListRefetch","admissionOngoingApplicationAllReviewListLoading","useAdmissionOngoingApplicationReviewSort","useAdmissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewBatchRefetch","admissionOngoingApplicationReviewBatchLoading","useAdmissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewClassesRefetch","admissionOngoingApplicationReviewClassesLoading","useAdmissionOngoingApplicationReviewAllot","useAdmissionOngoingApplicationReviewCancel","useAdmissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentRefetch","admissionOngoingApplicationAllottmentLoading","useAdmissionOngoingApplicationAllottmentCancel","useAdmissionOngoingApplicationAllottmentRevert","useAdmissionOngoingApplicationCancelled","admissionOngoingApplicationCancelledRefetch","admissionOngoingApplicationCancelledLoading","useAdmissionTransferApplicatToOtherApplication","useAdmissionOngoingApplicationDailyCollect","admissionOngoingApplicationDailyCollectRefetch","admissionOngoingApplicationDailyCollectLoading","useAdmissionPendingFees","admissionPendingFeesRefetch","admissionPendingFeesLoading","useAdmissionApplicantCancelledList","admissionApplicantCancelledListRefetch","admissionApplicantCancelledListLoading","useAdmissionCancelledListExport","useAdmissionReadmissionList","admissionReadmissionListRefetch","admissionReadmissionListLoading","useAdmissionReadmissionConfirmedList","admissionReadmissionConfirmedListRefetch","admissionReadmissionConfirmedListLoading","useAdmissionReadmissionCollectFees","useAdmissionStudentAddSection","useAdmissionStudentSectionAddChecklist","useAdmissionStudentRearrangeSection","useAdmissionStudentUpdateSectionChecklist","useAdmissionStudentFormDetail","admissionStudentFormDetailRefetch","admissionStudentFormDetailLoading","useAdmissionStudentToggleChecklist","useAdmissionAddOuterGorup","useAdmissionOuterGroupList","admissionOuterGroupListRefetch","admissionOuterGroupListLoading","useAdmissionAddSubjectGroup","useAdmissionSubGroupList","admissionSubGroupListRefetch","admissionSubGroupListLoading","useAdmissionOneSubGroupDetail","admissionOneSubGroupDetailRefetch","admissionOneSubGroupDetailLoading","useAdmissionSubGroupAddSubject","useAdmissionInstituteAllSubjectList","admissionInstituteAllSubjectListRefetch","admissionInstituteAllSubjectListLoading","useAdmissionRemoveOuterGroup","useAdmissionRemoveSubjectGroup","useInstitutePinApplication","useInstituteUnPinApplication","useInstituteAllApplicationList","instituteAllApplicationListRefetch","instituteAllApplicationListLoading","useAdmissionMergedApplicationDocumentList","admissionMergedApplicationDocumentListRefetch","admissionMergedApplicationDocumentListLoading","useAdmissionMergedApplicationFeesList","admissionMergedApplicationFeesListRefetch","admissionMergedApplicationFeesListLoading","useAdmissionMergedApplicationConfirmedList","admissionMergedApplicationConfirmedListRefetch","admissionMergedApplicationConfirmedListLoading","useAdmissionOngoingDirectApplicationExcel","useOneApplicationSubjectCountList","oneApplicationSubjectCountListRefetch","oneApplicationSubjectCountListLoading","useOneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListRefetch","oneApplicationOneSubjectStudentListLoading","useOneApplicationOneSubjectStudentListExport","useAdmissionMergedApplicationTotalCount","admissionMergedApplicationTotalCountRefetch","admissionMergedApplicationTotalCountLoading","useOneApplicationStudentFormGenerate","useOneApplicationIntakeUpdate","useOneApplicationIntakeExport","useOneApplicationStaffActionShow","oneApplicationStaffActionShowRefetch","oneApplicationStaffActionShowLoading","useOneApplicationUpdateDocumentSetting","useAdmissionIntakeRecordList","admissionIntakeRecordListRefetch","admissionIntakeRecordListLoading","useOngoingAdmissionTotalCardExport","useAdmissionFormPrintCase","useDepartmentBatchAllClass","departmentBatchAllClassRefetch","departmentBatchAllClassLoading"],"sourceRoot":""}