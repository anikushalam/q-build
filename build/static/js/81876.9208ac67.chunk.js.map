{"version":3,"file":"static/js/81876.9208ac67.chunk.js","mappings":"iQAYA,MAAMA,EAAmBC,EAAAA,MAAW,IAClC,yCAiJF,EA/IgBC,IAA+C,IAADC,EAAA,IAA7C,QAAEC,EAAO,OAAEC,EAAM,YAAEC,EAAW,OAAEC,GAAQL,EACvD,MAAM,EAAEM,IAAMC,EAAAA,EAAAA,MACRC,GAAKC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASH,MAC1CI,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,GACnCG,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,OACRC,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,CAC7CS,OAAQ,GACRC,qBAAsB,GACtBC,aAAc,GACdC,OAAQ,GACRC,mBAAoB,GACpBC,sBAAqD,QAAhC3B,EAAS,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,6BAAqB,IAAA3B,EAAAA,EAAI,GACzD4B,wBAAyB,GACzBC,oBAAqB,GACrBC,qBAAsB,GACtBC,cAAe,GACfC,kBAAmB,GACnBC,qBAAsB,GACtBC,eAAgB,GAChBC,mBAAoB,GACpBC,wBAAyB,GACzBC,qBAAsB,GACtBC,wBAAyB,GACzBC,qBAAsB,GACtBC,mBAAoB,MAEfC,EAAmBC,IAAwB7B,EAAAA,EAAAA,UAAS,CACzD8B,IAAK,GACLC,KAAK,KAEAC,IAAkBC,EAAAA,EAAAA,OACnB,YAAEC,EAAW,mBAAEC,IAAuBC,EAAAA,EAAAA,IAAe,CACzD1C,GAAIJ,GAA4BI,EAChC2C,KAAiB,qBAAXhD,GAAiCC,GAAeI,KAGxD4C,EAAAA,EAAAA,YAAU,KACChD,GAAc6C,GAAoB,GAC1C,CAACzC,EAAIJ,EAAa6C,IAwCrB,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,iBAAiBC,SAAA,EACrCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMG,cAAcD,SAAA,CACtB,aAAXpD,GACCsD,EAAAA,EAAAA,KAAA,KAAAF,SAAInD,EAAE,2BAENqD,EAAAA,EAAAA,KAAA,KAAAF,SAAInD,EAAE,cAERqD,EAAAA,EAAAA,KAAA,OACEC,IAAI,kCACJC,IAAI,GACJC,QAASA,IAAMjD,GAAc,SAIjCwC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMQ,YAAYN,SAAA,EAChCE,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAAA,EAAMS,GAAGP,UACvBE,EAAAA,EAAAA,KAAA,SACEM,KAAK,MACLC,YAAa5D,EAAE,YACf6D,SAAWC,GACT9C,EAAe,IAAKD,EAAaE,OAAQ6C,EAAEC,OAAOC,QAEpDC,UAAQ,MAIa,MAAb,OAAXlD,QAAW,IAAXA,OAAW,EAAXA,EAAaE,UACZ8B,EAAAA,EAAAA,MAAA,UACEY,KAAK,SACLlD,SAAUA,EACVuC,UAAWC,EAAAA,EAAMiB,OACjBV,QAtEeW,KACvBzD,GAAa0D,IAASA,IACtB5B,EAAe,CACbtC,GAAIJ,GAA4BI,EAChCwD,GAAI3C,EAAYE,OAChBoD,gBAAiBtD,IAEhBuD,MAAMC,IACL7D,GAAa0D,IAASA,IACtBzD,EAAS,MAAD6D,OAAO3D,EAAO4D,SAAQ,6BAA6B,CACzDrE,MAAO,CACLR,QAAS2E,EAAIG,KAAK9E,QAClB+E,SAAUJ,EAAIG,KAAKC,SACnB7E,YAAaA,EACb8E,WAAY7E,IAEd,IAcH8E,OAAM,KACLxC,EAAqB,CACnBC,IAAK,uBACLC,KAAK,GACL,GACF,EAmC8BY,SAAA,EAE1BE,EAAAA,EAAAA,KAAA,KAAAF,SAAInD,EAAE,iBACLS,IAAY4C,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,UAK/BxE,IACC+C,EAAAA,EAAAA,KAAC0B,EAAAA,EAAc,CAAA5B,UACbE,EAAAA,EAAAA,KAAC7D,EAAgB,CACfwF,UAAYC,GAAM1E,EAAc0E,GAChC3E,WAAYA,EACZ4E,aAAyB,OAAXxC,QAAW,IAAXA,OAAW,EAAXA,EAAayC,OAC3BtF,OAAQA,EACRC,YAAaA,EACbsF,UAAWzC,OAIjBU,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,CACV/C,IAAKF,EAAkBE,IACvBC,IAAKH,EAAkBG,IACvB+C,OAAQA,IAAMjD,EAAqB,CAAEC,IAAK,GAAIC,KAAK,IACnDgD,SAAS,SACT5B,KAAK,YAEH,C","sources":["StaffTab/StudentTab/MainContent/Certificates/Leaving/Leaving.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CustomSuspense from \"../../../../../Custom/SuspenseLoading/CustomSuspense\";\nimport {\n  useGetEditable,\n  useStudentLeaving,\n} from \"../../../../../hooks/institute/institute-staff-student-api\";\nimport LoaderButton from \"../../../../../Loader/LoaderButton\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../CertificateDetail.module.css\";\nimport { Notfication } from \"../../../../../validation/Snackbar\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nconst CertificateModal = React.lazy(() =>\n  import(\"../CertificateModal/CertificateModal\")\n);\nconst Leaving = ({ student, viewAs, instituteId, status }) => {\n  const { t } = useTranslation();\n  const id = useSelector((state) => state.idChange.id);\n  const [addDisplay, setAddDisplay] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const navigate = useNavigate();\n  const params = useParams();\n  const [leavingData, setLeavingData] = useState({\n    number: \"\",\n    studentCertificateNo: \"\",\n    leaving_date: \"\",\n    bookNo: \"\",\n    studentUidaiNumber: \"\",\n    studentPreviousSchool: student?.studentPreviousSchool ?? \"\",\n    studentLeavingBehaviour: \"\",\n    studentLeavingStudy: \"\",\n    studentLeavingReason: \"\",\n    studentRemark: \"\",\n    instituteJoinDate: \"\",\n    instituteLeavingDate: \"\",\n    leaving_degree: \"\",\n    leaving_since_date: \"\",\n    leaving_course_duration: \"\",\n    elective_subject_one: \"\",\n    elective_subject_second: \"\",\n    leaving_project_work: \"\",\n    leaving_guide_name: \"\",\n  });\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const [studentLeaving] = useStudentLeaving();\n  const { getEditable, getEditableRefetch } = useGetEditable({\n    id: instituteId ? instituteId : id,\n    skip: viewAs === \"DESIGNATION_SIDE\" ? !instituteId : !id,\n  });\n\n  useEffect(() => {\n    if ((id, instituteId)) getEditableRefetch();\n  }, [id, instituteId, getEditableRefetch]);\n\n  const onLeavingHandler = () => {\n    setDisabled((pre) => !pre);\n    studentLeaving({\n      id: instituteId ? instituteId : id,\n      gr: leavingData.number,\n      leavingFeedback: leavingData,\n    })\n      .then((res) => {\n        setDisabled((pre) => !pre);\n        navigate(`/q/${params.username}/student/certificate/form`, {\n          state: {\n            student: res.data.student,\n            download: res.data.download,\n            instituteId: instituteId,\n            is_leaving: status,\n          },\n        });\n        // setStudent(res.data.student);\n        // setDownload(res.data.download);\n        // setToggle({\n        //   id: instituteId ? instituteId : id,\n        //   gr: leavingData.number,\n        //   leavingFeedback: leavingData,\n        // });\n        // if (status === \"leaving\") {\n        //   setLeavingForm({ ...leavingform, leaving: true, transfer: false });\n        // } else if (status === \"transfer\") {\n        //   setLeavingForm({ ...leavingform, leaving: false, transfer: true });\n        // }\n      })\n      .catch(() => {\n        setNotificationState({\n          msg: \"something went wrong\",\n          run: true,\n        });\n      });\n  };\n\n  return (\n    <div className={style.complaintDetails}>\n      <div className={style.detailsHeader}>\n        {status === \"transfer\" ? (\n          <p>{t(\"transfer_certificate\")}</p>\n        ) : (\n          <p>{t(\"leaving\")}</p>\n        )}\n        <img\n          src=\"/images/menu-dots-dark-icon.svg\"\n          alt=\"\"\n          onClick={() => setAddDisplay(true)}\n        />\n      </div>\n\n      <div className={style.detailsBody}>\n        <div className={style.gr}>\n          <input\n            type=\"tel\"\n            placeholder={t(\"enter_gr\")}\n            onChange={(e) =>\n              setLeavingData({ ...leavingData, number: e.target.value })\n            }\n            required\n          />\n        </div>\n\n        {leavingData?.number !== \"\" && (\n          <button\n            type=\"submit\"\n            disabled={disabled}\n            className={style.getBtn}\n            onClick={onLeavingHandler}\n          >\n            <p>{t(\"cer_preview\")}</p>\n            {disabled && <LoaderButton />}\n          </button>\n        )}\n      </div>\n\n      {addDisplay && (\n        <CustomSuspense>\n          <CertificateModal\n            hideModal={(w) => setAddDisplay(w)}\n            addDisplay={addDisplay}\n            editableData={getEditable?.detail}\n            viewAs={viewAs}\n            instituteId={instituteId}\n            onRefetch={getEditableRefetch}\n          />\n        </CustomSuspense>\n      )}\n      <Notfication\n        msg={notificationState.msg}\n        run={notificationState.run}\n        setRun={() => setNotificationState({ msg: \"\", run: false })}\n        postiton=\"bottom\"\n        type=\"error\"\n      />\n    </div>\n  );\n};\n\nexport default Leaving;\n"],"names":["CertificateModal","React","_ref","_student$studentPrevi","student","viewAs","instituteId","status","t","useTranslation","id","useSelector","state","idChange","addDisplay","setAddDisplay","useState","disabled","setDisabled","navigate","useNavigate","params","useParams","leavingData","setLeavingData","number","studentCertificateNo","leaving_date","bookNo","studentUidaiNumber","studentPreviousSchool","studentLeavingBehaviour","studentLeavingStudy","studentLeavingReason","studentRemark","instituteJoinDate","instituteLeavingDate","leaving_degree","leaving_since_date","leaving_course_duration","elective_subject_one","elective_subject_second","leaving_project_work","leaving_guide_name","notificationState","setNotificationState","msg","run","studentLeaving","useStudentLeaving","getEditable","getEditableRefetch","useGetEditable","skip","useEffect","_jsxs","className","style","complaintDetails","children","detailsHeader","_jsx","src","alt","onClick","detailsBody","gr","type","placeholder","onChange","e","target","value","required","getBtn","onLeavingHandler","pre","leavingFeedback","then","res","concat","username","data","download","is_leaving","catch","LoaderButton","CustomSuspense","hideModal","w","editableData","detail","onRefetch","Notfication","setRun","postiton"],"sourceRoot":""}