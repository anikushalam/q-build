{"version":3,"file":"static/js/4146.5bd47d2c.chunk.js","mappings":"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","sources":["ProfileSetting/User/MainBody/Stats/SettingBody/Account/AccountDelete.jsx","optimized/Auth/DeleteAccount/DeleteAccount.jsx","optimized/Auth/Login/LoginFormWithMobile.jsx","optimized/Auth/Login/LoginFormWithUserName.jsx","optimized/Validation/Auth/invalidateAuthUsername.js","webpack://mithkal-qviple/./src/ProfileSetting/User/MainBody/Stats/SettingBody/Account/DeleteAcnt.module.css?919b"],"sourcesContent":["import { useState } from \"react\";\nimport style from \"./DeleteAcnt.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router\";\nimport { Notfication } from \"../../../../../../validation/Snackbar\";\nimport { useUserDeleteAccountFromQviple } from \"../../../../../../hooks/setting-api\";\nimport QLoader from \"../../../../../../Loader/QLoader\";\n\nfunction AccountDelete({ dashboardData, userId, isApk }) {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [passwordData, setPasswordData] = useState({\n    password: \"\",\n  });\n  const [userDeleteAccountFromQviple] = useUserDeleteAccountFromQviple();\n  const [disabled, setDisabled] = useState(false);\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const onDeleteAccount = () => {\n    if (userId || dashboardData?.user?._id) {\n      setDisabled((pre) => !pre);\n      userDeleteAccountFromQviple({\n        id: userId ? userId : dashboardData?.user?._id,\n        valid_pass: passwordData.password,\n      })\n        .then((res) => {\n          console.info(\"sdlfngjkfbkjgs\", res.data);\n          if (res?.data?.dynamic) {\n            setNotificationState({\n              msg: res.data.dynamic,\n              run: true,\n            });\n            setDisabled((pre) => !pre);\n          } else {\n            setDisabled((pre) => !pre);\n            localStorage.clear();\n            window.location.replace(\"/\");\n          }\n        })\n        .catch({});\n    }\n  };\n  return (\n    <>\n      <div\n        className={style.settingBody}\n        // style={{\n        //   border: isApk ? \"none\" : \"auto\",\n        // }}\n      >\n        <h6>{t(\"deleting_your_qviple_account\")}</h6>\n        <p>{t(\"deleting_your_qviple_account_note_1\")}</p>\n        <p>{t(\"deleting_your_qviple_account_note_2\")}</p>\n\n        <div className={style.inputContainer}>\n          <label>{t(\"password\")}</label>\n          <input\n            type=\"password\"\n            value={passwordData.password}\n            minLength={8}\n            onChange={(e) =>\n              setPasswordData({ ...passwordData, password: e.target.value })\n            }\n          />\n        </div>\n\n        {passwordData.password?.length >= 8 ? (\n          <button\n            className={`${style.btn}`}\n            type=\"button\"\n            onClick={onDeleteAccount}\n          >\n            {t(\"delete\")}\n          </button>\n        ) : (\n          <button type=\"button\" className={`${style.btn1}`} disabled>\n            {t(\"delete\")}\n          </button>\n        )}\n      </div>\n      {notificationState.run && (\n        <Notfication\n          msg={notificationState.msg}\n          run={notificationState.run}\n          setRun={() => setNotificationState({ msg: \"\", run: false })}\n          postiton=\"bottom\"\n          type=\"error\"\n        />\n      )}\n      {disabled && <QLoader />}\n    </>\n  );\n}\n\nexport default AccountDelete;\n","import GetStarted from \"../GetStarted\";\nimport style from \"../Auth.module.css\";\nimport { useState } from \"react\";\nimport LoginFormWithMobile from \"../Login/LoginFormWithMobile\";\nimport LoginFormWithUserName from \"../Login/LoginFormWithUserName\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport AccountDelete from \"../../../ProfileSetting/User/MainBody/Stats/SettingBody/Account/AccountDelete\";\nconst userMobile = \"USER_MOBILE\";\nconst userName = \"USER_NAME\";\nconst DeleteAccount = () => {\n  const [searchParams] = useSearchParams();\n  const getQuery = useLocation();\n  const [state, setState] = useState(\"USER_MOBILE\");\n  const onUser = () => {\n    setState(userMobile);\n  };\n  const onUserName = () => {\n    setState(userName);\n  };\n  return (\n    <>\n      {searchParams.get(\"type\") === \"confirm\" ? (\n        <div className={style.auth_delete_container}>\n          <AccountDelete userId={getQuery.state?.id} isApk />\n        </div>\n      ) : (\n        <GetStarted>\n          <div className={style.auth_card_wrapper}>\n            <>\n              {state === userMobile ? (\n                <LoginFormWithMobile\n                  onUserName={onUserName}\n                  accessFrom=\"DELETED_ACCOUNT\"\n                />\n              ) : state === userName ? (\n                <LoginFormWithUserName\n                  isUser\n                  onUserMobile={onUser}\n                  accessFrom=\"DELETED_ACCOUNT\"\n                />\n              ) : null}\n            </>\n          </div>\n        </GetStarted>\n      )}\n    </>\n  );\n};\n\nexport default DeleteAccount;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthUserNumber } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  invalidateAuthEmailOrMobile,\n  typeOfAuth,\n} from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nconst LoginFormWithMobile = ({ onUserName, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [authUserNumber] = useAuthUserNumber();\n  const [state, setState] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n\n  const onChangeHandler = (e) => {\n    setState(e.target.value);\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (state) {\n      setDisabled((pre) => !pre);\n      authUserNumber({\n        userPhoneNumber: state,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(state),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            navigate(\"/verify\", {\n              state: {\n                phoneNumber: response?.ePhone,\n                type:\n                  typeOfAuth(state) === \"qviple id\"\n                    ? \"mobile number\"\n                    : typeOfAuth(state),\n                accessFrom: accessFrom,\n              },\n            });\n            setDisabled((pre) => !pre);\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    } else {\n      setErrorField({\n        state: \"* required\",\n      });\n    }\n  };\n  return (\n    <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n      <AuthFormFieldWithIcon\n        label={t(\"user_email_number_qviple_id\")}\n        placeholder={t(\"user_email_number_qviple_id_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-flag.svg`}\n        validate={errorField[\"state\"]}\n        name=\"mobile_number\"\n        value={state}\n        onChange={onChangeHandler}\n      />\n      <p className={style.auth_privacy_and_policy}>\n        {t(\"mobile_login_note\")}{\" \"}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/terms/condition\">{t(\"terms_condition\")}</a>\n        </span>{\" \"}\n        {t(\"and\")}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/privacy/policy\">{t(\"privacy_policy\")}</a>\n        </span>\n      </p>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"send_otp\")}\n        disabled={disabled}\n      />\n      <div className={style.auth_footer_container}>\n        <p className={style.auth_forget_text} onClick={onUserName}>\n          {t(\"login_with_user_name\")}\n        </p>\n      </div>\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithMobile;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthLogin } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useLogin } from \"../hooks/use-login\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nimport { useNavigate } from \"react-router-dom\";\nconst LoginFormWithUserName = ({ isUser, onUserMobile, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    insUserName: \"\",\n    insPassword: \"\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authLogin] = useAuthLogin();\n  const { userDispatchAction, instituteDispatchAction } = useLogin();\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.insUserName))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authLogin({\n          login: state,\n        })\n          .then((res) => {\n            const response = decryption(res?.data?.encrypt);\n            // console.info(\"response\", response);\n\n            if (response?.login) {\n              if (response?.user)\n                userDispatchAction({\n                  token: response?.token,\n                  user: response?.user,\n                  isUniversal: response?.user?.is_universal,\n                  phoneNumber: response?.user?.code_arr,\n                  u_name:\n                    response?.user?.userPhoneNumber ||\n                    response?.user?.userEmail,\n                  accessFrom: accessFrom,\n                });\n              else\n                instituteDispatchAction({\n                  token: response?.token,\n                  institute: response?.institute,\n                  isUniversal: response?.institute?.is_universal,\n                  main_role: response?.main_role,\n                });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Credentials\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onForgetHandler = () => {\n    let url = \"\";\n    if (isUser) url = \"/user/forget\";\n    else url = \"/institute/forget\";\n    navigate(url);\n  };\n  const onInstituteAccount = () => {\n    navigate(\"/institute\");\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <AuthFormFieldWithIcon\n        label={t(\"username\")}\n        placeholder={t(\"username_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n        validate={errorField[\"insUserName\"]}\n        name=\"insUserName\"\n        value={state.insUserName}\n        onChange={onChangeHandler}\n      />\n      <AuthFormFieldWithIcon\n        label={t(\"password\")}\n        placeholder={t(\"password_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-password.svg`}\n        validate={errorField[\"insPassword\"]}\n        name=\"insPassword\"\n        value={state.insPassword}\n        onChange={onChangeHandler}\n        type=\"password\"\n        isPassword\n      />\n\n      <div className={style.auth_forget_container}>\n        <p className={style.auth_forget_text} onClick={onForgetHandler}>\n          {t(\"forgot_password\")}\n        </p>\n      </div>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"login\")}\n        disabled={disabled}\n      />\n      {isUser ? (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onUserMobile}>\n            {t(\"continue_with_mobile_no\")}\n          </p>\n        </div>\n      ) : (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onInstituteAccount}>\n            {t(\"new_to_qviple\")} {t(\"signup\")}\n          </p>\n        </div>\n      )}\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithUserName;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"settingBody\":\"DeleteAcnt_settingBody__5Jnjq\",\"inputContainer\":\"DeleteAcnt_inputContainer__LhkiC\",\"btn\":\"DeleteAcnt_btn__acudM\",\"btn1\":\"DeleteAcnt_btn1__bbdC0\"};"],"names":["_ref","_passwordData$passwor","dashboardData","userId","t","isApk","useNavigate","useTranslation","_useState","useState","password","_useState2","_slicedToArray","passwordData","setPasswordData","_useUserDeleteAccount","useUserDeleteAccountFromQviple","userDeleteAccountFromQviple","_useState3","_useState4","disabled","setDisabled","_useState5","msg","run","_useState6","notificationState","setNotificationState","_jsxs","_Fragment","children","className","style","settingBody","_jsx","inputContainer","type","value","minLength","onChange","e","_objectSpread","target","length","concat","btn","onClick","_dashboardData$user","_dashboardData$user2","user","_id","pre","id","valid_pass","then","res","_res$data","console","info","data","dynamic","localStorage","clear","window","location","replace","catch","btn1","Notfication","setRun","postiton","QLoader","userMobile","userName","_getQuery$state","_useSearchParams","useSearchParams","searchParams","getQuery","useLocation","state","setState","get","auth_delete_container","AccountDelete","GetStarted","auth_card_wrapper","LoginFormWithMobile","onUserName","accessFrom","LoginFormWithUserName","isUser","onUserMobile","navigate","_useAuthUserNumber","useAuthUserNumber","authUserNumber","errorField","setErrorField","_useState7","open","variant","_useState8","snackbar","setSnackbar","onSubmit","preventDefault","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","response","decryption","encrypt","phoneNumber","ePhone","typeOfAuth","auth_login_form","AuthFormFieldWithIcon","label","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","auth_privacy_and_policy","auth_privacy_and_policy_link","href","ButtonWithTypeSubmit","buttonText","auth_footer_container","auth_forget_text","NotifyEvent","eventState","eventStateHandler","insUserName","insPassword","_useAuthLogin","useAuthLogin","authLogin","_useLogin","useLogin","userDispatchAction","instituteDispatchAction","onChangeHandler","prev","_defineProperty","validation","requiredField","existingRequiredField","invalidateAuthUsername","login","_response$user","_response$user2","_response$user3","_response$user4","_response$institute","token","isUniversal","is_universal","code_arr","u_name","userEmail","institute","main_role","err","isPassword","auth_forget_container","specailSymbol","username","includes"],"sourceRoot":""}