{"version":3,"file":"static/js/4142.f10cfd39.chunk.js","mappings":"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","sources":["optimized/Auth/CreateAccount/Institute/InstituteMobileRegister.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport NotifyEvent from \"../../../Utils/Snackbar/NotifyEvent\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthInstituteNumber } from \"../../../Hooks/ApiHooks/Auth/auth-api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../../Services/Encryption/decrypt\";\nimport AuthFormFieldWithIcon from \"../../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\nimport GetStarted from \"../../GetStarted\";\n\nconst InstituteMobileRegister = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    insPhoneNumber: \"\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authInstituteNumber] = useAuthInstituteNumber();\n  const onInputChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (state.insPhoneNumber) {\n      setDisabled((pre) => !pre);\n      authInstituteNumber({\n        phone: {\n          insPhoneNumber: `${state.insPhoneNumber}`,\n          status: \"Not Verified\",\n        },\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.insPhoneNumber) {\n            navigate(\"/institute/verify\", {\n              state: {\n                phoneNumber: response?.insPhoneNumber,\n              },\n            });\n            setDisabled((pre) => !pre);\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    } else {\n      setErrorField({\n        insPhoneNumber: \"* required\",\n      });\n    }\n  };\n\n  const onNavigate = () => {\n    navigate(\"/\");\n  };\n  return (\n    <>\n      <GetStarted>\n        <div className={style.auth_card_wrapper}>\n          <div className={style.auth_create_container}>\n            <div>\n              <h6\n                className={style.auth_card_title}\n                style={{\n                  fontSize: \"1rem\",\n                }}\n              >\n                {t(\"signup\")}\n              </h6>\n            </div>\n          </div>\n          <div\n            className={style.auth_login_form}\n            style={{\n              marginTop: \"0\",\n            }}\n          >\n            <form onSubmit={onSubmitHandler}>\n              <AuthFormFieldWithIcon\n                label={t(\"mobile_number\")}\n                placeholder={t(\"institute_mobile_number_placeholder\")}\n                fieldIconUrl={`${assestsAuthUrl}/auth-flag.svg`}\n                validate={errorField[\"insPhoneNumber\"]}\n                name=\"insPhoneNumber\"\n                value={state.insPhoneNumber}\n                onChange={onInputChange}\n              />\n\n              <p className={style.auth_privacy_and_policy}>\n                {t(\"mobile_login_note\")}{\" \"}\n                <span className={style.auth_privacy_and_policy_link}>\n                  <a href=\"/q/terms/condition\">{t(\"terms_condition\")}</a>\n                </span>{\" \"}\n                {t(\"and\")}\n                <span className={style.auth_privacy_and_policy_link}>\n                  <a href=\"/q/privacy/policy\">{t(\"privacy_policy\")}</a>\n                </span>\n              </p>\n\n              <ButtonWithTypeSubmit\n                type=\"submit\"\n                buttonText={t(\"send_otp\")}\n                disabled={disabled}\n                customStyleButton={{\n                  marginTop: \"1.5rem\",\n                }}\n              />\n              <div className={style.auth_footer_container}>\n                <p className={style.auth_forget_text}>\n                  <span\n                    style={{\n                      color: \"rgba(0,0,0,.8)\",\n                    }}\n                  >\n                    {t(\"already_registered\")}\n                  </span>\n                  <span onClick={onNavigate}> {t(\"login\")}</span>\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </GetStarted>\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </>\n  );\n};\n\nexport default InstituteMobileRegister;\n"],"names":["t","useTranslation","navigate","useNavigate","_useState","useState","insPhoneNumber","_useState2","_slicedToArray","state","setState","_useState3","_useState4","disabled","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","_useAuthInstituteNumb","useAuthInstituteNumber","authInstituteNumber","_jsxs","_Fragment","children","_jsx","GetStarted","className","style","auth_card_wrapper","auth_create_container","auth_card_title","fontSize","auth_login_form","marginTop","onSubmit","e","preventDefault","pre","phone","concat","status","then","res","_res$data","response","decryption","data","encrypt","phoneNumber","catch","AuthFormFieldWithIcon","label","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","value","onChange","prev","_objectSpread","_defineProperty","target","auth_privacy_and_policy","auth_privacy_and_policy_link","href","ButtonWithTypeSubmit","type","buttonText","customStyleButton","auth_footer_container","auth_forget_text","color","onClick","NotifyEvent","eventState","eventStateHandler"],"sourceRoot":""}