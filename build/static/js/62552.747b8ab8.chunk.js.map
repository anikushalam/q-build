{"version":3,"file":"static/js/62552.747b8ab8.chunk.js","mappings":"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","sources":["optimized/Constant/Admission/admission_constant.js","optimized/Ui/Input/FormInput.jsx","optimized/Utils/Modal/OverlayModal.jsx","optimized/Ui/Modal/Modal.jsx","optimized/Ui/UserMember/UserMemberContainerWrapper.jsx","optimized/Utils/EmptyMessage/EmptyMessage.jsx","optimized/Utils/Functions/nextPage.js","optimized/Utils/Modal/BackdropModal.jsx","webpack://mithkal-qviple/./src/optimized/Ui/UiInput.module.css?63d1","webpack://mithkal-qviple/./src/optimized/UserStaffMember/FinanceManager/Income/Income.module.css?46f8","webpack://mithkal-qviple/./src/optimized/Utils/Utils.module.css?d850","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["export const admissionModeratorAccess = {\n  ALL_FEE_ACCESS: [\"students\", \"message\", \"fund\", \"verification\"],\n  MULTI_APP_ACCESS: [\n    \"students\",\n    \"message\",\n    \"ongoing\",\n    \"ongoing-detail\",\n    \"complete\",\n  ],\n  INQUIRY_ACCESS: [\"students\", \"message\"],\n  REFUND_ACCESS: [\"students\", \"message\", \"excess\"],\n  PENDING_FEE_ACCESS: [\"students\", \"message\", \"pending\", \"reminder-message\"],\n  ONE_TAB_ACCESS: [\"students\", \"message\", \"ongoing\", \"ongoing-detail\"],\n  DATA_EXPORT_ACCESS: [\"students\", \"message\", \"export\"],\n  ONGOING_ACCESS: [\"ongoing\", \"ongoing-detail\"],\n  REQUIRED_DOCUMENTS: [\"document\", \"export\"],\n};\n\nexport const admissionOneTabAccess = {\n  Application: \"Application\",\n  Selected: \"Selected\",\n  \"FEE COLLECTION TAB\": \"FEE COLLECTION TAB\",\n  Confirmed: \"Confirmed\",\n  \"REVIEW TAB\": \"REVIEW TAB\",\n  Allotted: \"Allotted\",\n  Cancelled: \"Cancelled\",\n};\nexport const admissionTabAccessList = {\n  Application: [\n    {\n      label: \"application\",\n      id: \"application\",\n      urlKey: \"\",\n      groupIs: [\"\", null],\n    },\n  ],\n  Selected: [\n    {\n      label: \"docs_collection\",\n      id: \"document\",\n      urlKey: \"&n=document\",\n      groupIs: [\"document\"],\n    },\n  ],\n  \"FEE COLLECTION TAB\": [\n    {\n      label: \"fees_collection\",\n      id: \"fees\",\n      urlKey: \"&n=fees\",\n      groupIs: [\"fees\"],\n    },\n  ],\n  Confirmed: [\n    {\n      label: \"confirmed\",\n      id: \"confirmed\",\n      urlKey: \"&n=confirmed\",\n      groupIs: [\"confirmed\", \"confirmed-multi\"],\n    },\n  ],\n  \"REVIEW TAB\": [\n    {\n      label: \"review\",\n      id: \"review\",\n      urlKey: \"&n=review\",\n      groupIs: [\"review\", \"review-multi\"],\n    },\n  ],\n  Allotted: [\n    {\n      label: \"allottment\",\n      id: \"allottment\",\n      urlKey: \"&n=allottment\",\n      groupIs: [\"allottment\"],\n    },\n  ],\n  Cancelled: [\n    {\n      label: \"cancelled\",\n      id: \"cancelled\",\n      urlKey: \"&n=cancelled\",\n      groupIs: [\"cancelled\"],\n    },\n  ],\n};\nexport const optionalSubjectCombineWithName = (val) => {\n  let ft = \"\";\n  for (let dt of val) {\n    ft = ft ? `${ft} or ${dt?.subjectName}` : `${dt?.subjectName}`;\n  }\n  return ft;\n};\nexport const admissionModeratorUrlRedirect = {\n  DATA_EXPORT_ACCESS: {\n    subUrl: \"export\",\n    authorizedKey: \"data_export\",\n  },\n  INQUIRY_ACCESS: {\n    subUrl: \"enq-application\",\n    authorizedKey: \"admission_enquiry\",\n  },\n  ONE_TAB_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  MULTI_APP_ACCESS: {\n    subUrl: \"ongoing\",\n    nestedUrl: \"ongoing-detail\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  ONGOING_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  ONGOING_VIEW_ACCESS: {\n    subUrl: \"ongoing\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  COMBINED_APP_ACCESS: {\n    subUrl: \"combine-application\",\n    authorizedKey: \"ongoing_admission\",\n  },\n  REQUIRED_DOCUMENTS: {\n    subUrl: \"document\",\n    authorizedKey: \"required_documents\",\n  },\n};\n\nexport const admissionIntakeType = [\n  {\n    key: \"CAP\",\n    name: \"intake_type1\",\n  },\n  {\n    key: \"AGAINST_CAP\",\n    name: \"intake_type2\",\n  },\n  {\n    key: \"IL\",\n    name: \"intake_type3\",\n  },\n  {\n    key: \"EWS\",\n    name: \"intake_type4\",\n  },\n  {\n    key: \"TFWS\",\n    name: \"intake_type5\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../UiInput.module.css\";\nconst inputType = [\"tel\", \"number\"];\nconst FormInput = ({\n  label,\n  name,\n  msg,\n  type,\n  value,\n  onChange,\n  placeholder,\n  maxLength,\n  customFormInputContainer,\n  customFormInputLabel,\n  customFormInput,\n  errorShow,\n  disabled,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      className={style.form_input_container}\n      style={customFormInputContainer}\n    >\n      {label && (\n        <label\n          className={style.form_input_label}\n          style={customFormInputLabel}\n          htmlFor={name}\n        >\n          {label}\n          {msg ? (\n            <>\n              <span className={style.form_input_label_error}>\n                {\" \"}\n                {` `} {msg}\n              </span>\n            </>\n          ) : errorShow ? (\n            <span className={style.form_input_label_error}>\n              * {t(\"form_require_label\")}\n            </span>\n          ) : null}\n          {children}\n        </label>\n      )}\n      {inputType.includes(type) ? (\n        <input\n          className={style.form_input}\n          type={type}\n          value={value}\n          onChange={onChange}\n          name={name}\n          placeholder={placeholder}\n          maxLength={maxLength ?? 100}\n          disabled={disabled}\n          style={customFormInput}\n        />\n      ) : (\n        <input\n          className={style.form_input}\n          type={type}\n          value={value}\n          onChange={onChange}\n          name={name}\n          placeholder={placeholder}\n          disabled={disabled}\n          style={customFormInput}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FormInput;\n","import ReactDOM from \"react-dom\";\nimport style from \"../Utils.module.css\";\n\nconst OverlayModal = ({ modalState, isHide, customOverlayStyle, children }) => {\n  // console.info(\"wefkdsf\", modalState, isHide);\n  return ReactDOM.createPortal(\n    <div\n      className={style.modal_overlay}\n      // className={isHide ? style.modal_hide_overlay : style.modal_overlay}\n      style={{\n        // \"--modal-cleint-y\": modalState?.yoffset,\n        // \"--modal-cleint-x\": modalState?.xoffset,\n        ...customOverlayStyle,\n      }}\n    >\n      {children}\n    </div>,\n    document.getElementById(\"overlay\")\n  );\n};\n\nexport default OverlayModal;\n","import BackdropModal from \"../../Utils/Modal/BackdropModal\";\nimport OverlayModal from \"../../Utils/Modal/OverlayModal\";\n// import { useCallback, useState } from \"react\";\n\nconst Modal = ({\n  onClose,\n  modalState,\n  customBackdropStyle,\n  customOverlayStyle,\n  children,\n}) => {\n  // const [isHide, setIsHide] = useState(false);\n  // const onAnimationClose = useCallback(() => {\n  //   setIsHide(true);\n  //   let animationTimeout = setTimeout(() => {\n  //     onClose();\n  //   }, 500);\n  //   return () => clearTimeout(animationTimeout);\n  // }, [onClose]);\n  return (\n    <>\n      <BackdropModal\n        onBackdropClose={onClose}\n        customBackdropStyle={customBackdropStyle}\n      />\n      <OverlayModal\n        // modalState={modalState}\n        // isHide={isHide}\n        customOverlayStyle={customOverlayStyle}\n      >\n        {/* <div\n          style={{\n            width: \"30rem\",\n            minHeight: \"30rem\",\n          }}\n        >\n          <h6>hi everyoune</h6>\n        </div> */}\n        {children}\n      </OverlayModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import style from \"./UserMember.module.css\";\n\nconst UserMemberContainerWrapper = ({ customStyle, children }) => {\n  return (\n    <div className={style.user_member_container_wrapper} style={customStyle}>\n      {children}\n    </div>\n  );\n};\n\nexport default UserMemberContainerWrapper;\n","import style from \"../Utils.module.css\";\nconst EmptyMessage = ({\n  title,\n  subtitle,\n  customStyleContainer,\n  costomTextTitleStyle,\n  costomTextSubtitleStyle,\n}) => {\n  return (\n    <div className={style.empty_container} style={customStyleContainer}>\n      {title && <h6 style={costomTextTitleStyle}>{title}</h6>}\n      {subtitle && <p style={costomTextSubtitleStyle}>{subtitle}</p>}\n    </div>\n  );\n};\n\nexport default EmptyMessage;\n","export const nextPage = (args) => {\n  if (args % 10 === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import { useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport style from \"../Utils.module.css\";\n\nconst BackdropModal = ({ onBackdropClose, customBackdropStyle }) => {\n  const onClose = useCallback(() => {\n    if (onBackdropClose) {\n      onBackdropClose();\n    } else {\n      return null;\n    }\n  }, [onBackdropClose]);\n  return ReactDOM.createPortal(\n    <div\n      className={style.modal_backdrop}\n      onClick={onClose}\n      style={customBackdropStyle}\n    />,\n    document.getElementById(\"backdrop\")\n  );\n};\n\nexport default BackdropModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_input_container\":\"UiInput_form_input_container__HtVPV\",\"form_read_input_container\":\"UiInput_form_read_input_container__iILPu\",\"form_file_container\":\"UiInput_form_file_container__33Bsr\",\"form_input_label\":\"UiInput_form_input_label__XH6ki\",\"form_input_label_error\":\"UiInput_form_input_label_error__EUef-\",\"form_input\":\"UiInput_form_input__zl3Bt\",\"form_textarea_input\":\"UiInput_form_textarea_input__fps0U\",\"form_read_input_label\":\"UiInput_form_read_input_label__JDOsH\",\"form_read_input\":\"UiInput_form_read_input__E8qX5\",\"form_read_input_file\":\"UiInput_form_read_input_file__NqG3A\",\"form_file_choose\":\"UiInput_form_file_choose__jxsyJ\",\"form_file_choosen\":\"UiInput_form_file_choosen__8OI09\",\"form_file_choose_active\":\"UiInput_form_file_choose_active__7e8B5\",\"form_input_search\":\"UiInput_form_input_search__RLSi+\",\"form_input_search_image\":\"UiInput_form_input_search_image__iV4xv\",\"join_form_select_paragraph\":\"UiInput_join_form_select_paragraph__CSWSG\",\"join_form_select_custom\":\"UiInput_join_form_select_custom__qemxS\",\"join_form_select_custom_paragraph\":\"UiInput_join_form_select_custom_paragraph__3g7zT\",\"join_form_select_custom_icon\":\"UiInput_join_form_select_custom_icon__Of6Sb\",\"join_form_select_custom_rotate_icon\":\"UiInput_join_form_select_custom_rotate_icon__zANaN\",\"join_form_select_custom_list\":\"UiInput_join_form_select_custom_list__MWLZM\",\"join_form_select_custom_paragraph_option\":\"UiInput_join_form_select_custom_paragraph_option__Mh24f\",\"form_calendar_icon\":\"UiInput_form_calendar_icon__KyFQA\",\"payment_mode_heading\":\"UiInput_payment_mode_heading__v1Ek0\",\"jfscl_option_list\":\"UiInput_jfscl_option_list__+Bigu\",\"jfsclol_search_container\":\"UiInput_jfsclol_search_container__C19t-\",\"jfsclolsc_input\":\"UiInput_jfsclolsc_input__ZNDZW\"};","// extracted by mini-css-extract-plugin\nexport default {\"right\":\"Income_right__XnzYj\",\"rightHead\":\"Income_rightHead__1rLc6\",\"rightBody\":\"Income_rightBody__fGEC5\",\"income_detail\":\"Income_income_detail__IWoJa\",\"detailTop\":\"Income_detailTop__4JXuu\",\"detailTopMid\":\"Income_detailTopMid__yc2yv\",\"modal_container\":\"Income_modal_container__HiGr+\",\"modal_container_outer_header\":\"Income_modal_container_outer_header__F9c7X\",\"modal_container_header\":\"Income_modal_container_header__td-Fb\",\"card_container\":\"Income_card_container__ewKhQ\",\"card_container_image\":\"Income_card_container_image__5XloP\",\"card_container_inner\":\"Income_card_container_inner__JBmxr\",\"admission_fees_row\":\"Income_admission_fees_row__MPJCs\",\"close_icon\":\"Income_close_icon__Ozq4u\",\"student_message_container\":\"Income_student_message_container__8KnPc\",\"student_message_container_inner\":\"Income_student_message_container_inner__mRYpD\",\"usm_institute_container\":\"Income_usm_institute_container__4LkYt\",\"usm_institute\":\"Income_usm_institute__hlzdF\",\"date_select\":\"Income_date_select__D3VkU\",\"gsf_star_container\":\"Income_gsf_star_container__7gdUs\",\"afsi_container\":\"Income_afsi_container__7u06w\",\"days_container\":\"Income_days_container__xq2RX\",\"days_container_child\":\"Income_days_container_child__E30h2\",\"days_container_child_active\":\"Income_days_container_child_active__y6eWZ\",\"spsc_student\":\"Income_spsc_student__2-qo4\",\"pdf_modal_container\":\"Income_pdf_modal_container__6511u\"};","// extracted by mini-css-extract-plugin\nexport default {\"notify_backdrop\":\"Utils_notify_backdrop__saL0O\",\"notify_overlay\":\"Utils_notify_overlay__GtPc5\",\"notify_hide_overlay\":\"Utils_notify_hide_overlay__MYvkC\",\"notify_overlay_animation\":\"Utils_notify_overlay_animation__pcASm\",\"notify_hide_overlay_animation\":\"Utils_notify_hide_overlay_animation__UKRcG\",\"notify_container\":\"Utils_notify_container__O8DBA\",\"notify_message\":\"Utils_notify_message__PHwKo\",\"notify_close\":\"Utils_notify_close__IwjyA\",\"modal_backdrop\":\"Utils_modal_backdrop__WBquw\",\"modal_overlay\":\"Utils_modal_overlay__Yy-AV\",\"modal_hide_overlay\":\"Utils_modal_hide_overlay__elt3A\",\"navbar_modal_hide_overlay\":\"Utils_navbar_modal_hide_overlay__yqj5q\",\"navbar_modal_overlay\":\"Utils_navbar_modal_overlay__6ub8g\",\"modal_hide_overlay_animation\":\"Utils_modal_hide_overlay_animation__d3TNp\",\"navbar_modal_overlay_animation\":\"Utils_navbar_modal_overlay_animation__Ypk9u\",\"navbar_modal_hide_overlay_animation\":\"Utils_navbar_modal_hide_overlay_animation__QLEse\",\"empty_container\":\"Utils_empty_container__-VyCI\",\"modal_overlay_animation\":\"Utils_modal_overlay_animation__zkjsk\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["admissionModeratorAccess","ALL_FEE_ACCESS","MULTI_APP_ACCESS","INQUIRY_ACCESS","REFUND_ACCESS","PENDING_FEE_ACCESS","ONE_TAB_ACCESS","DATA_EXPORT_ACCESS","ONGOING_ACCESS","REQUIRED_DOCUMENTS","admissionOneTabAccess","Application","Selected","Confirmed","Allotted","Cancelled","admissionTabAccessList","label","id","urlKey","groupIs","optionalSubjectCombineWithName","val","ft","dt","concat","subjectName","admissionModeratorUrlRedirect","subUrl","authorizedKey","nestedUrl","ONGOING_VIEW_ACCESS","COMBINED_APP_ACCESS","admissionIntakeType","key","name","inputType","_ref","msg","type","value","onChange","placeholder","maxLength","customFormInputContainer","customFormInputLabel","customFormInput","errorShow","disabled","children","t","useTranslation","_jsxs","className","style","form_input_container","form_input_label","htmlFor","_jsx","_Fragment","form_input_label_error","includes","form_input","modalState","isHide","customOverlayStyle","ReactDOM","modal_overlay","document","getElementById","onClose","customBackdropStyle","BackdropModal","onBackdropClose","OverlayModal","customStyle","user_member_container_wrapper","title","subtitle","customStyleContainer","costomTextTitleStyle","costomTextSubtitleStyle","empty_container","nextPage","args","useCallback","modal_backdrop","onClick","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","map","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","useInView","delay","rootMargin","triggerOnce","skip","initialInView","ref","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}