{"version":3,"file":"static/js/43317.9b80b136.chunk.js","mappings":"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","sources":["optimized/Services/AdmissionManager/admission_manager_query_mutation_function.js","optimized/Services/AdmissionManager/admissionManagerApiDynamic.js","optimized/Hooks/ApiHooks/AdmissionManager/admission-manager-api.js"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\nexport const admissionActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/ins/${data.instituteId}/admission/query`,\n      method: POST,\n      body: data.activateModule,\n    }),\n  });\n};\n\nexport const admissionUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/edit/staff/admission/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// dashboard\nexport const admissionDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/dashboard/query?mod_id=${data.mod_id}`,\n    providesTags: [\"Cash_finance\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.admission;\n    },\n  });\n};\n\n// admission fund tab\nexport const admissionCashToFinanceFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/finance/${data.aid}/admission/request`,\n      method: POST,\n      body: data.submitAmount,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// offline payment verification\nexport const admissionPaymentVerifyListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/receipts/by?page=${data.page}&limit=${data.limit}&filter_by=${data.filterBy}&over_filter=${data.over_filter}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_requests,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_requests,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPaymentVerifyActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/one/receipts/${data.rid}/status/decheque/query?reqId=${data.reqId}&status=${data.status}`,\n      method: PATCH,\n      body: data.receiptAction,\n    }),\n  });\n};\n\n// admission required document\nexport const admissionDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/document/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_docs,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_docs,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/document/flow`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionUpdateDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/edit/document/flow`,\n      method: PATCH,\n      body: data.editDocument,\n    }),\n  });\n};\nexport const admissionRemoveDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/document/${data.did}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission excel export\nexport const admissionExportExcelListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/export/excel/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_excel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_excel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionEditExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/edit`,\n      method: PATCH,\n      body: data.excelUpdate,\n    }),\n  });\n};\nexport const admissionRemoveExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/destroy/query`,\n      method: DELETE,\n    }),\n  });\n};\nexport const admissionExportFilterExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/pending/fee/${data.aid}?gender=${data.gender}&category=${data.caste}&is_all=${data.is_all}&all_depart=${data.all_depart}&batch_status=${data.batch_status}`,\n      method: PATCH,\n      body: data.exportData,\n    }),\n  });\n};\n// admission moderator\nexport const admissionModeratorListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/role/permission/${data.aid}/all/moderator?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_mods,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_mods,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/new/app/mod?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: POST,\n      body: data.addModerator,\n    }),\n  });\n};\n\nexport const admissionUpdateModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/update/app/mod/${data.modId}?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: PATCH,\n      body: data.updateModerator,\n    }),\n  });\n};\n\nexport const admissionRemoveModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/destroy/app/mod/${data.modId}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission pending fees\nexport const admissionPendingFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/remaining/applicable/array?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search}&flow=${\n        data.flow ?? \"Applicable_Fees_Query\"\n      }`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.remain,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.remain,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionPendingFeesReminderHistoryFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/extra/all/filtered/alarm/${data.id}/query?page=${data.page}&limit=${\n        data.limit\n      }&search=${data.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_message,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_message,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPendingFeesOsStudentListFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/all/outstanding/query`,\n      method: PATCH,\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const admissionPendingFeesReminderFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/trigger/alarm?alarm_mode=${data.alarm_mode}`,\n      method: POST,\n      body: data.reminderData,\n    }),\n  });\n};\n\n// admission excess fees\nexport const admissionExcessFeeNotRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/refund/array?page=${data.page}&limit=${\n        data.limit\n      }&search=${data?.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refund_list,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refund_list,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/refunded/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refunded,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refunded,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeNotRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/excess/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionExcessFeeRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/refund/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission tab controller\nexport const admissionTabControllerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/manage/tab/${data?.aid}`,\n      method: PATCH,\n      body: data.tabManage,\n    }),\n  });\n};\n\n// admission completed application\nexport const admissionCompletedApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/completed/application/detail?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.completed,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.completed,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionCompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/complete`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionIncompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/incomplete`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission ongoing admission\nexport const admissionOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/v2/admission/${ad.aid}/all/ongoing/application?page=${ad.page}&limit=${ad.limit}&search=${ad.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let res = decryption(response?.encrypt);\n\n      if (arg?.search)\n        return {\n          search: true,\n          list: res?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: res?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCreateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/new/application`,\n      method: POST,\n      body: data.application,\n    }),\n  });\n};\n\nexport const admissionUpdateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/${data.appId}`,\n      method: PATCH,\n      body: data.updateApplication,\n    }),\n  });\n};\nexport const admissionRemoveApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/destroy/${data.appId}`,\n      method: DELETE,\n    }),\n  });\n};\n// admission one application\nexport const admissionOneOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/query`,\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.oneApply;\n    },\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationRequestFunction = (builder) => {\n  return builder.query({\n    query: (req) =>\n      `/v2/admission/${req.appId}/request/application?page=${req.page}&limit=${req.limit}&search=${req.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.request,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.request,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationSelectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/select`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationRejectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionOngoingApplicationFormUpdateRejectFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app/form/modify`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentSubjectListExportFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/allotted/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentDseStudentExportFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/allotted/dse/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/selected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationDocumentCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/docs`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/revert/back/select/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentEditStructureFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/student/${data.sid}/edit/structure`,\n      method: PATCH,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/fee/collected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationFeesCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${\n        data.appId\n      }/pay/offline/confirm?receipt_status=${data?.receipt_status ?? \"\"}`,\n      method: POST,\n      body: data.collect,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/revert/back/docs/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationConfirmFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllConfirmListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.confirm,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationConfirmReviewFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/student/review/query`,\n      method: PATCH,\n      body: data.review,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.review,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.review,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllReviewListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.review,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewSortFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/review/array/${data.appId}?sort_query=${data.sort_query}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionOngoingApplicationReviewBatchFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/batch`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.batch,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationReviewClassesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/application/class/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.classes,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.classes,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewAllotFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/student/${data.appId}/allot/class/${data.cid}`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewCancelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/allotted/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.allot,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.allot,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentCancelFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/allotted/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentRevertFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/reverse/student/${data.appId}/allot/class`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionOngoingApplicationCancelledFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/cancelled/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionTransferApplicatToOtherApplicationFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/transfer/apps/query`,\n      method: PATCH,\n      body: data.transferApplicantData,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDailyCollectFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/by/date/collection/${data?.appId}/query?valid_date=${data.valid_date}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.day_wise;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionApplicantCancelledListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/cancel/app/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCancelledListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.aid}/cancel/export/query?all_depart=${data.all_depart}&batch_status=${data.batch_status}&timeline=${data.timeline}&timeline_content=${data.timeline_content}&from=${data.from}&to=${data.to}&bank=${data.bank}`,\n      method: \"PATCH\",\n      body: data?.pendingData,\n    }),\n  });\n};\n\n// for admission readmission related\nexport const admissionReadmissionListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/confirmed/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionCollectFeesFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/fees/student/${data.sid}/re/admission`,\n      method: PATCH,\n      body: data.collect,\n    }),\n  });\n};\n\n//  for one application form setting///\n\nexport const admissionStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// for optional subject\nexport const admissionAddOuterGorupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/subject/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOuterGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// DO NOT USE\nexport const admissionSubjectGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.osid}/one/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/add/subject/group/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionSubGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.sgid}/all/subject/group/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group_select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group_select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOneSubGroupDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.osid}/one/subject/group/query`,\n    providesTags: [\"Nested_Criteria_Detail\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.group,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionSubGroupAddSubjectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.ssid}/add/subject/group/select/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Nested_Criteria_Detail\"],\n  });\n};\n\nexport const admissionInstituteAllSubjectListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/subject/list/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_subjects,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_subjects,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionRemoveOuterGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/subject/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionRemoveSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/delete/subject/group/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// add to pin in single landing page\nexport const institutePinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const instituteUnPinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/un/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// all application\nexport const instituteAllApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/ongoing/application/pinned?page=${data.page}&limit=${data.limit}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      // console.info(\"sjhdfvsdfvbsd\", dect?.ongoing);\n      // let arr = [];\n      // let arr = [...dect?.depend, ...dect?.independ];\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// admission merged docs and collect fees list\n\nexport const admissionMergedApplicationTotalCountFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.aid}/all/merged/ongoing/application`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.ads_obj,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionMergedApplicationDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/docs/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationFeesListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/fees/collect/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/confirm/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingDirectApplicationExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/extra/excel/to/json/${data.aid}/exist/application/student`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationSubjectCountListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/select?search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.subject,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.smid}/one/subject/all/${data?.aid}/student?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.smid}/subject/${data?.aid}/application/export`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationStudentFormGenerateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/extra/generate/custom/oneapplication/${data?.aid}/student/form`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationIntakeUpdateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/app/intake/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationIntakeExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data?.aid}/intake/record/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationStaffActionShowFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.sid}/staff/name/only`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.only,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationUpdateDocumentSettingFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/docs/collect/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionIntakeRecordListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/${data.aid}/all/admission/intake?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.admission_intake_set,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.admission_intake_set,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const ongoingAdmissionTotalCardExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/combined/application/export/${data?.aid}?flow=${data?.flow}`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionFormPrintCaseFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/form/${data?.aid}/print/case`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationAllotToReveiwStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/reverse/student/${data?.appId}/llot/class`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionApplicationRequiredDocumentExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/all/documents/export`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const documentReminderStudentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/all/students/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_student,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_student,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const documentReminderSendStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.aid}/document/trigger/alarm?alarm_mode=${data?.alarm_mode}`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const documentNotFilledStudentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/one/documents/list?did=${data?.did}&page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_stu,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_stu,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const documentNotFilledStudentActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.did}/one/student/pending/documents/${data?.sid}`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionDocumentReminderHistoryFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/extra/all/filtered/document/alarm/${data.id}/query?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_message,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_message,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionStudentAddUndertakingSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/dynamic/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionStudentUpdateUndertakingSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/dynamic/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionStudentUndertakingUpdateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/department/add/dynamic/textarea/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// ============AFTER MOVE =================\n// this api that move, when their part is optimzed.\nexport const departmentBatchAllClassFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/ins/batch-detail/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.batch?.classroom,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.batch?.classroom,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n","import { admissionManagerApi } from \"./admissionManagerApi\";\nimport {\n  admissionActivateModuleFunction,\n  admissionUpdateModuleFunction,\n  admissionAddDocumentFunction,\n  admissionAddModeratorFunction,\n  admissionCompleteApplicationFunction,\n  admissionCompletedApplicationListFunction,\n  admissionDashboardMasterFunction,\n  admissionDocumentListFunction,\n  admissionEditExportExcelFunction,\n  admissionExcessFeeNotRefundedListFunction,\n  admissionExcessFeeRefundedListFunction,\n  admissionExportExcelListFunction,\n  admissionIncompleteApplicationFunction,\n  admissionModeratorListFunction,\n  admissionPaymentVerifyActionFunction,\n  admissionPaymentVerifyListFunction,\n  admissionPendingFeesOsStudentListFunction,\n  admissionPendingFeesReminderFunction,\n  admissionPendingFeesReminderHistoryFunction,\n  admissionRemoveDocumentFunction,\n  admissionRemoveExportExcelFunction,\n  admissionRemoveModeratorFunction,\n  admissionUpdateDocumentFunction,\n  admissionUpdateModeratorFunction,\n  admissionCashToFinanceFunction,\n  admissionExcessFeeNotRefundedListExportFunction,\n  admissionExcessFeeRefundedListExportFunction,\n  admissionTabControllerFunction,\n  admissionExportFilterExcelFunction,\n  admissionOngoingApplicationFunction,\n  admissionCreateApplicationFunction,\n  admissionUpdateApplicationFunction,\n  admissionRemoveApplicationFunction,\n  admissionOneOngoingApplicationFunction,\n  admissionOngoingApplicationRequestFunction,\n  admissionOngoingApplicationSelectFunction,\n  admissionOngoingApplicationRejectFunction,\n  admissionOngoingApplicationFormUpdateRejectFunction,\n  admissionOngoingApplicationExportFunction,\n  admissionOngoingApplicationAllottmentSubjectListExportFunction,\n  admissionOngoingApplicationAllottmentDseStudentExportFunction,\n  admissionOngoingApplicationDocumentFunction,\n  admissionOngoingApplicationDocumentCollectFunction,\n  admissionOngoingApplicationDocumentRevertFunction,\n  admissionOngoingApplicationDocumentEditStructureFunction,\n  admissionOngoingApplicationFeesFunction,\n  admissionOngoingApplicationFeesCollectFunction,\n  admissionOngoingApplicationFeesRevertFunction,\n  admissionOngoingApplicationConfirmFunction,\n  admissionOngoingApplicationAllConfirmListFunction,\n  admissionOngoingApplicationConfirmReviewFunction,\n  admissionOngoingApplicationReviewFunction,\n  admissionOngoingApplicationAllReviewListFunction,\n  admissionOngoingApplicationReviewSortFunction,\n  admissionOngoingApplicationReviewBatchFunction,\n  admissionOngoingApplicationReviewClassesFunction,\n  admissionOngoingApplicationReviewAllotFunction,\n  admissionOngoingApplicationReviewCancelFunction,\n  admissionOngoingApplicationAllottmentFunction,\n  admissionOngoingApplicationAllottmentCancelFunction,\n  admissionOngoingApplicationAllottmentRevertFunction,\n  admissionOngoingApplicationCancelledFunction,\n  admissionTransferApplicatToOtherApplicationFunction,\n  admissionOngoingApplicationDailyCollectFunction,\n  admissionApplicantCancelledListFunction,\n  admissionCancelledListExportFunction,\n  admissionPendingFeesFunction,\n  departmentBatchAllClassFunction,\n  admissionReadmissionListFunction,\n  admissionReadmissionConfirmedListFunction,\n  admissionReadmissionCollectFeesFunction,\n  admissionStudentAddSectionFunction,\n  admissionStudentFormDetailFunction,\n  admissionStudentRearrangeSectionFunction,\n  admissionStudentSectionAddChecklistFunction,\n  admissionStudentUpdateSectionChecklistFunction,\n  admissionStudentToggleChecklistFunction,\n  admissionAddOuterGorupFunction,\n  admissionOuterGroupListFunction,\n  admissionSubjectGroupListFunction,\n  admissionAddSubjectGroupFunction,\n  admissionSubGroupListFunction,\n  admissionOneSubGroupDetailFunction,\n  admissionSubGroupAddSubjectFunction,\n  admissionInstituteAllSubjectListFunction,\n  admissionRemoveOuterGroupFunction,\n  admissionRemoveSubjectGroupFunction,\n  institutePinApplicationFunction,\n  instituteUnPinApplicationFunction,\n  instituteAllApplicationListFunction,\n  admissionMergedApplicationDocumentListFunction,\n  admissionMergedApplicationFeesListFunction,\n  admissionMergedApplicationConfirmedListFunction,\n  admissionOngoingDirectApplicationExcelFunction,\n  oneApplicationSubjectCountListFunction,\n  oneApplicationOneSubjectStudentListFunction,\n  oneApplicationOneSubjectStudentListExportFunction,\n  admissionMergedApplicationTotalCountFunction,\n  oneApplicationStudentFormGenerateFunction,\n  oneApplicationIntakeUpdateFunction,\n  oneApplicationIntakeExportFunction,\n  oneApplicationStaffActionShowFunction,\n  oneApplicationUpdateDocumentSettingFunction,\n  admissionIntakeRecordListFunction,\n  ongoingAdmissionTotalCardExportFunction,\n  admissionFormPrintCaseFunction,\n  oneApplicationAllotToReveiwStudentFunction,\n  admissionApplicationRequiredDocumentExportFunction,\n  documentReminderStudentListFunction,\n  documentReminderSendStudentFunction,\n  documentNotFilledStudentListFunction,\n  documentNotFilledStudentActionFunction,\n  admissionDocumentReminderHistoryFunction,\n  admissionStudentAddUndertakingSectionFunction,\n  admissionStudentUpdateUndertakingSectionFunction,\n  admissionStudentUndertakingUpdateFunction,\n} from \"./admission_manager_query_mutation_function\";\n\nconst admissionManagerApiDynamic = admissionManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    admissionActivateModule: admissionActivateModuleFunction(builder),\n    admissionUpdateModule: admissionUpdateModuleFunction(builder),\n    admissionDashboardMaster: admissionDashboardMasterFunction(builder),\n    admissionCashToFinance: admissionCashToFinanceFunction(builder),\n    admissionPaymentVerifyList: admissionPaymentVerifyListFunction(builder),\n    admissionPaymentVerifyAction: admissionPaymentVerifyActionFunction(builder),\n    admissionDocumentList: admissionDocumentListFunction(builder),\n    admissionAddDocument: admissionAddDocumentFunction(builder),\n    admissionUpdateDocument: admissionUpdateDocumentFunction(builder),\n    admissionRemoveDocument: admissionRemoveDocumentFunction(builder),\n    admissionExportExcelList: admissionExportExcelListFunction(builder),\n    admissionEditExportExcel: admissionEditExportExcelFunction(builder),\n    admissionRemoveExportExcel: admissionRemoveExportExcelFunction(builder),\n    admissionModeratorList: admissionModeratorListFunction(builder),\n    admissionAddModerator: admissionAddModeratorFunction(builder),\n    admissionUpdateModerator: admissionUpdateModeratorFunction(builder),\n    admissionRemoveModerator: admissionRemoveModeratorFunction(builder),\n    admissionPendingFeesReminderHistory:\n      admissionPendingFeesReminderHistoryFunction(builder),\n    admissionPendingFeesOsStudentList:\n      admissionPendingFeesOsStudentListFunction(builder),\n    admissionPendingFeesReminder: admissionPendingFeesReminderFunction(builder),\n\n    admissionExcessFeeNotRefundedList:\n      admissionExcessFeeNotRefundedListFunction(builder),\n    admissionExcessFeeRefundedList:\n      admissionExcessFeeRefundedListFunction(builder),\n    admissionCompletedApplicationList:\n      admissionCompletedApplicationListFunction(builder),\n    admissionCompleteApplication: admissionCompleteApplicationFunction(builder),\n    admissionIncompleteApplication:\n      admissionIncompleteApplicationFunction(builder),\n\n    admissionExcessFeeNotRefundedListExport:\n      admissionExcessFeeNotRefundedListExportFunction(builder),\n    admissionExcessFeeRefundedListExport:\n      admissionExcessFeeRefundedListExportFunction(builder),\n    admissionTabController: admissionTabControllerFunction(builder),\n    admissionExportFilterExcel: admissionExportFilterExcelFunction(builder),\n    admissionOngoingApplication: admissionOngoingApplicationFunction(builder),\n    admissionCreateApplication: admissionCreateApplicationFunction(builder),\n    admissionUpdateApplication: admissionUpdateApplicationFunction(builder),\n    admissionRemoveApplication: admissionRemoveApplicationFunction(builder),\n    admissionOneOngoingApplication:\n      admissionOneOngoingApplicationFunction(builder),\n    admissionOngoingApplicationRequest:\n      admissionOngoingApplicationRequestFunction(builder),\n    admissionOngoingApplicationSelect:\n      admissionOngoingApplicationSelectFunction(builder),\n    admissionOngoingApplicationReject:\n      admissionOngoingApplicationRejectFunction(builder),\n    admissionOngoingApplicationFormUpdateReject:\n      admissionOngoingApplicationFormUpdateRejectFunction(builder),\n    admissionOngoingApplicationExport:\n      admissionOngoingApplicationExportFunction(builder),\n    admissionOngoingApplicationAllottmentSubjectListExport:\n      admissionOngoingApplicationAllottmentSubjectListExportFunction(builder),\n    admissionOngoingApplicationAllottmentDseStudentExport:\n      admissionOngoingApplicationAllottmentDseStudentExportFunction(builder),\n    admissionOngoingApplicationDocument:\n      admissionOngoingApplicationDocumentFunction(builder),\n    admissionOngoingApplicationDocumentCollect:\n      admissionOngoingApplicationDocumentCollectFunction(builder),\n    admissionOngoingApplicationDocumentRevert:\n      admissionOngoingApplicationDocumentRevertFunction(builder),\n    admissionOngoingApplicationDocumentEditStructure:\n      admissionOngoingApplicationDocumentEditStructureFunction(builder),\n    admissionOngoingApplicationFees:\n      admissionOngoingApplicationFeesFunction(builder),\n    admissionOngoingApplicationFeesCollect:\n      admissionOngoingApplicationFeesCollectFunction(builder),\n    admissionOngoingApplicationFeesRevert:\n      admissionOngoingApplicationFeesRevertFunction(builder),\n    admissionOngoingApplicationConfirm:\n      admissionOngoingApplicationConfirmFunction(builder),\n    admissionOngoingApplicationAllConfirmList:\n      admissionOngoingApplicationAllConfirmListFunction(builder),\n    admissionOngoingApplicationConfirmReview:\n      admissionOngoingApplicationConfirmReviewFunction(builder),\n    admissionOngoingApplicationReview:\n      admissionOngoingApplicationReviewFunction(builder),\n    admissionOngoingApplicationAllReviewList:\n      admissionOngoingApplicationAllReviewListFunction(builder),\n    admissionOngoingApplicationReviewSort:\n      admissionOngoingApplicationReviewSortFunction(builder),\n    admissionOngoingApplicationReviewBatch:\n      admissionOngoingApplicationReviewBatchFunction(builder),\n    admissionOngoingApplicationReviewClasses:\n      admissionOngoingApplicationReviewClassesFunction(builder),\n    admissionOngoingApplicationReviewAllot:\n      admissionOngoingApplicationReviewAllotFunction(builder),\n    admissionOngoingApplicationReviewCancel:\n      admissionOngoingApplicationReviewCancelFunction(builder),\n    admissionOngoingApplicationAllottment:\n      admissionOngoingApplicationAllottmentFunction(builder),\n    admissionOngoingApplicationAllottmentCancel:\n      admissionOngoingApplicationAllottmentCancelFunction(builder),\n    admissionOngoingApplicationAllottmentRevert:\n      admissionOngoingApplicationAllottmentRevertFunction(builder),\n    admissionOngoingApplicationCancelled:\n      admissionOngoingApplicationCancelledFunction(builder),\n\n    admissionTransferApplicatToOtherApplication:\n      admissionTransferApplicatToOtherApplicationFunction(builder),\n    admissionOngoingApplicationDailyCollect:\n      admissionOngoingApplicationDailyCollectFunction(builder),\n    admissionPendingFees: admissionPendingFeesFunction(builder),\n    admissionApplicantCancelledList:\n      admissionApplicantCancelledListFunction(builder),\n    admissionCancelledListExport: admissionCancelledListExportFunction(builder),\n\n    admissionReadmissionList: admissionReadmissionListFunction(builder),\n    admissionReadmissionConfirmedList:\n      admissionReadmissionConfirmedListFunction(builder),\n    admissionReadmissionCollectFees:\n      admissionReadmissionCollectFeesFunction(builder),\n\n    admissionStudentAddSection: admissionStudentAddSectionFunction(builder),\n    admissionStudentSectionAddChecklist:\n      admissionStudentSectionAddChecklistFunction(builder),\n    admissionStudentRearrangeSection:\n      admissionStudentRearrangeSectionFunction(builder),\n    admissionStudentUpdateSectionChecklist:\n      admissionStudentUpdateSectionChecklistFunction(builder),\n    admissionStudentFormDetail: admissionStudentFormDetailFunction(builder),\n    admissionStudentToggleChecklist:\n      admissionStudentToggleChecklistFunction(builder),\n\n    admissionAddOuterGorup: admissionAddOuterGorupFunction(builder),\n    admissionOuterGroupList: admissionOuterGroupListFunction(builder),\n    admissionSubjectGroupList: admissionSubjectGroupListFunction(builder),\n    admissionAddSubjectGroup: admissionAddSubjectGroupFunction(builder),\n    admissionSubGroupList: admissionSubGroupListFunction(builder),\n    admissionOneSubGroupDetail: admissionOneSubGroupDetailFunction(builder),\n    admissionSubGroupAddSubject: admissionSubGroupAddSubjectFunction(builder),\n    admissionInstituteAllSubjectList:\n      admissionInstituteAllSubjectListFunction(builder),\n\n    admissionRemoveOuterGroup: admissionRemoveOuterGroupFunction(builder),\n    admissionRemoveSubjectGroup: admissionRemoveSubjectGroupFunction(builder),\n    institutePinApplication: institutePinApplicationFunction(builder),\n    instituteUnPinApplication: instituteUnPinApplicationFunction(builder),\n    instituteAllApplicationList: instituteAllApplicationListFunction(builder),\n    admissionMergedApplicationFeesList:\n      admissionMergedApplicationFeesListFunction(builder),\n    admissionMergedApplicationDocumentList:\n      admissionMergedApplicationDocumentListFunction(builder),\n    admissionMergedApplicationConfirmedList:\n      admissionMergedApplicationConfirmedListFunction(builder),\n    admissionOngoingDirectApplicationExcel:\n      admissionOngoingDirectApplicationExcelFunction(builder),\n    oneApplicationSubjectCountList:\n      oneApplicationSubjectCountListFunction(builder),\n    oneApplicationOneSubjectStudentList:\n      oneApplicationOneSubjectStudentListFunction(builder),\n    oneApplicationOneSubjectStudentListExport:\n      oneApplicationOneSubjectStudentListExportFunction(builder),\n    admissionMergedApplicationTotalCount:\n      admissionMergedApplicationTotalCountFunction(builder),\n    oneApplicationStudentFormGenerate:\n      oneApplicationStudentFormGenerateFunction(builder),\n\n    oneApplicationIntakeUpdate: oneApplicationIntakeUpdateFunction(builder),\n    oneApplicationIntakeExport: oneApplicationIntakeExportFunction(builder),\n    oneApplicationStaffActionShow:\n      oneApplicationStaffActionShowFunction(builder),\n    oneApplicationUpdateDocumentSetting:\n      oneApplicationUpdateDocumentSettingFunction(builder),\n    admissionIntakeRecordList: admissionIntakeRecordListFunction(builder),\n    ongoingAdmissionTotalCardExport:\n      ongoingAdmissionTotalCardExportFunction(builder),\n    admissionFormPrintCase: admissionFormPrintCaseFunction(builder),\n    oneApplicationAllotToReveiwStudent:\n      oneApplicationAllotToReveiwStudentFunction(builder),\n    admissionApplicationRequiredDocumentExport:\n      admissionApplicationRequiredDocumentExportFunction(builder),\n    documentReminderSendStudent: documentReminderSendStudentFunction(builder),\n    documentReminderStudentList: documentReminderStudentListFunction(builder),\n    documentNotFilledStudentList: documentNotFilledStudentListFunction(builder),\n    documentNotFilledStudentAction:\n      documentNotFilledStudentActionFunction(builder),\n    admissionDocumentReminderHistory:\n      admissionDocumentReminderHistoryFunction(builder),\n\n    admissionStudentAddUndertakingSection:\n      admissionStudentAddUndertakingSectionFunction(builder),\n    admissionStudentUpdateUndertakingSection:\n      admissionStudentUpdateUndertakingSectionFunction(builder),\n    admissionStudentUndertakingUpdate:\n      admissionStudentUndertakingUpdateFunction(builder),\n    //\n    departmentBatchAllClass: departmentBatchAllClassFunction(builder),\n  }),\n});\n\nexport const {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationAllottmentSubjectListExportMutation,\n  useAdmissionOngoingApplicationAllottmentDseStudentExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationAllottmentRevertMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useOneApplicationOneSubjectStudentListExportMutation,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  useOneApplicationIntakeUpdateMutation,\n  useOneApplicationIntakeExportMutation,\n  useOneApplicationStaffActionShowQuery,\n  useOneApplicationUpdateDocumentSettingMutation,\n  useAdmissionIntakeRecordListQuery,\n  useOngoingAdmissionTotalCardExportMutation,\n  useAdmissionFormPrintCaseMutation,\n  useOneApplicationAllotToReveiwStudentMutation,\n  useAdmissionApplicationRequiredDocumentExportMutation,\n  useDocumentReminderStudentListQuery,\n  useDocumentReminderSendStudentMutation,\n  useDocumentNotFilledStudentActionMutation,\n  useDocumentNotFilledStudentListQuery,\n  useAdmissionDocumentReminderHistoryQuery,\n  useAdmissionStudentAddUndertakingSectionMutation,\n  useAdmissionStudentUpdateUndertakingSectionMutation,\n  useAdmissionStudentUndertakingUpdateMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n} = admissionManagerApiDynamic;\n","import {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationAllottmentSubjectListExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationAllottmentRevertMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  useOneApplicationIntakeUpdateMutation,\n  useOneApplicationIntakeExportMutation,\n  useOneApplicationStaffActionShowQuery,\n  useAdmissionIntakeRecordListQuery,\n  useOngoingAdmissionTotalCardExportMutation,\n  useAdmissionFormPrintCaseMutation,\n  useOneApplicationAllotToReveiwStudentMutation,\n  useOneApplicationOneSubjectStudentListExportMutation,\n  useOneApplicationUpdateDocumentSettingMutation,\n  useAdmissionApplicationRequiredDocumentExportMutation,\n  useDocumentReminderStudentListQuery,\n  useDocumentReminderSendStudentMutation,\n  useDocumentNotFilledStudentActionMutation,\n  useDocumentNotFilledStudentListQuery,\n  useAdmissionDocumentReminderHistoryQuery,\n  useAdmissionStudentAddUndertakingSectionMutation,\n  useAdmissionStudentUpdateUndertakingSectionMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n  useAdmissionStudentUndertakingUpdateMutation,\n  useAdmissionOngoingApplicationAllottmentDseStudentExportMutation,\n} from \"../../../Services/AdmissionManager/admissionManagerApiDynamic\";\n\nexport const useAdmissionActivateModule = () => {\n  const [admissionActivateModule] = useAdmissionActivateModuleMutation();\n  return [admissionActivateModule];\n};\nexport const useAdmissionUpdateModule = () => {\n  const [admissionUpdateModule] = useAdmissionUpdateModuleMutation();\n  return [admissionUpdateModule];\n};\nexport const useAdmissionDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDashboardMaster: data,\n    admissionDashboardMasterRefetch: refetch,\n    admissionDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCashToFinance = () => {\n  const [admissionCashToFinance] = useAdmissionCashToFinanceMutation();\n  return [admissionCashToFinance];\n};\nexport const useAdmissionPaymentVerifyList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPaymentVerifyListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPaymentVerifyList: data,\n    admissionPaymentVerifyListRefetch: refetch,\n    admissionPaymentVerifyListLoading: isFetching,\n  };\n};\nexport const useAdmissionPaymentVerifyAction = () => {\n  const [admissionPaymentVerifyAction] =\n    useAdmissionPaymentVerifyActionMutation();\n  return [admissionPaymentVerifyAction];\n};\nexport const useAdmissionDocumentList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDocumentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDocumentList: data,\n    admissionDocumentListRefetch: refetch,\n    admissionDocumentListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddDocument = () => {\n  const [admissionAddDocument] = useAdmissionAddDocumentMutation();\n  return [admissionAddDocument];\n};\nexport const useAdmissionUpdateDocument = () => {\n  const [admissionUpdateDocument] = useAdmissionUpdateDocumentMutation();\n  return [admissionUpdateDocument];\n};\nexport const useAdmissionRemoveDocument = () => {\n  const [admissionRemoveDocument] = useAdmissionRemoveDocumentMutation();\n  return [admissionRemoveDocument];\n};\nexport const useAdmissionExportExcelList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExportExcelListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExportExcelList: data,\n    admissionExportExcelListRefetch: refetch,\n    admissionExportExcelListLoading: isFetching,\n  };\n};\nexport const useAdmissionEditExportExcel = () => {\n  const [admissionEditExportExcel] = useAdmissionEditExportExcelMutation();\n  return [admissionEditExportExcel];\n};\nexport const useAdmissionRemoveExportExcel = () => {\n  const [admissionRemoveExportExcel] = useAdmissionRemoveExportExcelMutation();\n  return [admissionRemoveExportExcel];\n};\nexport const useAdmissionModeratorList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionModeratorListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionModeratorList: data,\n    admissionModeratorListRefetch: refetch,\n    admissionModeratorListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddModerator = () => {\n  const [admissionAddModerator] = useAdmissionAddModeratorMutation();\n  return [admissionAddModerator];\n};\nexport const useAdmissionUpdateModerator = () => {\n  const [admissionUpdateModerator] = useAdmissionUpdateModeratorMutation();\n  return [admissionUpdateModerator];\n};\nexport const useAdmissionRemoveModerator = () => {\n  const [admissionRemoveModerator] = useAdmissionRemoveModeratorMutation();\n  return [admissionRemoveModerator];\n};\n\nexport const useAdmissionPendingFeesReminderHistory = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionPendingFeesReminderHistoryQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionPendingFeesReminderHistory: data,\n    admissionPendingFeesReminderHistoryRefetch: refetch,\n    admissionPendingFeesReminderHistoryLoading: isFetching,\n  };\n};\nexport const useAdmissionPendingFeesOsStudentList = () => {\n  const [admissionPendingFeesOsStudentList] =\n    useAdmissionPendingFeesOsStudentListMutation();\n  return [admissionPendingFeesOsStudentList];\n};\nexport const useAdmissionPendingFeesReminder = () => {\n  const [admissionPendingFeesReminder] =\n    useAdmissionPendingFeesReminderMutation();\n  return [admissionPendingFeesReminder];\n};\n\nexport const useAdmissionExcessFeeNotRefundedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionExcessFeeNotRefundedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionExcessFeeNotRefundedList: data,\n    admissionExcessFeeNotRefundedListRefetch: refetch,\n    admissionExcessFeeNotRefundedListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionExcessFeeRefundedList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExcessFeeRefundedListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExcessFeeRefundedList: data,\n    admissionExcessFeeRefundedListRefetch: refetch,\n    admissionExcessFeeRefundedListLoading: isFetching,\n  };\n};\nexport const useAdmissionExcessFeeNotRefundedListExport = () => {\n  const [admissionExcessFeeNotRefundedListExport] =\n    useAdmissionExcessFeeNotRefundedListExportMutation();\n  return [admissionExcessFeeNotRefundedListExport];\n};\nexport const useAdmissionExcessFeeRefundedListExport = () => {\n  const [admissionExcessFeeRefundedListExport] =\n    useAdmissionExcessFeeRefundedListExportMutation();\n  return [admissionExcessFeeRefundedListExport];\n};\n\nexport const useAdmissionCompletedApplicationList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionCompletedApplicationListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionCompletedApplicationList: data,\n    admissionCompletedApplicationListRefetch: refetch,\n    admissionCompletedApplicationListLoading: isFetching,\n  };\n};\nexport const useAdmissionCompleteApplication = () => {\n  const [admissionCompleteApplication] =\n    useAdmissionCompleteApplicationMutation();\n  return [admissionCompleteApplication];\n};\nexport const useAdmissionIncompleteApplication = () => {\n  const [admissionIncompleteApplication] =\n    useAdmissionIncompleteApplicationMutation();\n  return [admissionIncompleteApplication];\n};\nexport const useAdmissionTabController = () => {\n  const [admissionTabController] = useAdmissionTabControllerMutation();\n  return [admissionTabController];\n};\nexport const useAdmissionExportFilterExcel = () => {\n  const [admissionExportFilterExcel] = useAdmissionExportFilterExcelMutation();\n  return [admissionExportFilterExcel];\n};\n\nexport const useAdmissionOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplication: data,\n    admissionOngoingApplicationRefetch: refetch,\n    admissionOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionCreateApplication = () => {\n  const [admissionCreateApplication] = useAdmissionCreateApplicationMutation();\n  return [admissionCreateApplication];\n};\nexport const useAdmissionUpdateApplication = () => {\n  const [admissionUpdateApplication] = useAdmissionUpdateApplicationMutation();\n  return [admissionUpdateApplication];\n};\nexport const useAdmissionRemoveApplication = () => {\n  const [admissionRemoveApplication] = useAdmissionRemoveApplicationMutation();\n  return [admissionRemoveApplication];\n};\n\nexport const useAdmissionOneOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneOngoingApplicationQuery(\n    args.appId,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOneOngoingApplication: data,\n    admissionOneOngoingApplicationRefetch: refetch,\n    admissionOneOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationRequest = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationRequestQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationRequest: data,\n    admissionOngoingApplicationRequestRefetch: refetch,\n    admissionOngoingApplicationRequestLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationSelect = () => {\n  const [admissionOngoingApplicationSelect] =\n    useAdmissionOngoingApplicationSelectMutation();\n  return [admissionOngoingApplicationSelect];\n};\nexport const useAdmissionOngoingApplicationReject = () => {\n  const [admissionOngoingApplicationReject] =\n    useAdmissionOngoingApplicationRejectMutation();\n  return [admissionOngoingApplicationReject];\n};\nexport const useAdmissionOngoingApplicationFormUpdateReject = () => {\n  const [admissionOngoingApplicationFormUpdateReject] =\n    useAdmissionOngoingApplicationFormUpdateRejectMutation();\n  return [admissionOngoingApplicationFormUpdateReject];\n};\nexport const useAdmissionOngoingApplicationExport = () => {\n  const [admissionOngoingApplicationExport] =\n    useAdmissionOngoingApplicationExportMutation();\n  return [admissionOngoingApplicationExport];\n};\nexport const useAdmissionOngoingApplicationAllottmentSubjectListExport = () => {\n  const [admissionOngoingApplicationAllottmentSubjectListExport] =\n    useAdmissionOngoingApplicationAllottmentSubjectListExportMutation();\n  return [admissionOngoingApplicationAllottmentSubjectListExport];\n};\nexport const useAdmissionOngoingApplicationAllottmentDseStudentExport = () => {\n  const [admissionOngoingApplicationAllottmentDseStudentExport] =\n    useAdmissionOngoingApplicationAllottmentDseStudentExportMutation();\n  return [admissionOngoingApplicationAllottmentDseStudentExport];\n};\n\nexport const useAdmissionOngoingApplicationDocument = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDocumentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDocument: data,\n    admissionOngoingApplicationDocumentRefetch: refetch,\n    admissionOngoingApplicationDocumentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationDocumentCollect = () => {\n  const [admissionOngoingApplicationDocumentCollect] =\n    useAdmissionOngoingApplicationDocumentCollectMutation();\n  return [admissionOngoingApplicationDocumentCollect];\n};\n\nexport const useAdmissionOngoingApplicationDocumentRevert = () => {\n  const [admissionOngoingApplicationDocumentRevert] =\n    useAdmissionOngoingApplicationDocumentRevertMutation();\n  return [admissionOngoingApplicationDocumentRevert];\n};\n\nexport const useAdmissionOngoingApplicationDocumentEditStructure = () => {\n  const [admissionOngoingApplicationDocumentEditStructure] =\n    useAdmissionOngoingApplicationDocumentEditStructureMutation();\n  return [admissionOngoingApplicationDocumentEditStructure];\n};\nexport const useAdmissionOngoingApplicationFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplicationFees: data,\n    admissionOngoingApplicationFeesRefetch: refetch,\n    admissionOngoingApplicationFeesLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationFeesCollect = () => {\n  const [admissionOngoingApplicationFeesCollect] =\n    useAdmissionOngoingApplicationFeesCollectMutation();\n  return [admissionOngoingApplicationFeesCollect];\n};\nexport const useAdmissionOngoingApplicationFeesRevert = () => {\n  const [admissionOngoingApplicationFeesRevert] =\n    useAdmissionOngoingApplicationFeesRevertMutation();\n  return [admissionOngoingApplicationFeesRevert];\n};\nexport const useAdmissionOngoingApplicationConfirm = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationConfirmQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationConfirm: data,\n    admissionOngoingApplicationConfirmRefetch: refetch,\n    admissionOngoingApplicationConfirmLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllConfirmList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllConfirmListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllConfirmList: data,\n    admissionOngoingApplicationAllConfirmListRefetch: refetch,\n    admissionOngoingApplicationAllConfirmListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationConfirmReview = () => {\n  const [admissionOngoingApplicationConfirmReview] =\n    useAdmissionOngoingApplicationConfirmReviewMutation();\n  return [admissionOngoingApplicationConfirmReview];\n};\nexport const useAdmissionOngoingApplicationReview = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReview: data,\n    admissionOngoingApplicationReviewRefetch: refetch,\n    admissionOngoingApplicationReviewLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllReviewList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllReviewListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllReviewList: data,\n    admissionOngoingApplicationAllReviewListRefetch: refetch,\n    admissionOngoingApplicationAllReviewListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewSort = () => {\n  const [admissionOngoingApplicationReviewSort] =\n    useAdmissionOngoingApplicationReviewSortMutation();\n  return [admissionOngoingApplicationReviewSort];\n};\nexport const useAdmissionOngoingApplicationReviewBatch = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewBatchQuery(args.appId, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewBatch: data,\n    admissionOngoingApplicationReviewBatchRefetch: refetch,\n    admissionOngoingApplicationReviewBatchLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewClasses = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewClassesQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewClasses: data,\n    admissionOngoingApplicationReviewClassesRefetch: refetch,\n    admissionOngoingApplicationReviewClassesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewAllot = () => {\n  const [admissionOngoingApplicationReviewAllot] =\n    useAdmissionOngoingApplicationReviewAllotMutation();\n  return [admissionOngoingApplicationReviewAllot];\n};\nexport const useAdmissionOngoingApplicationReviewCancel = () => {\n  const [admissionOngoingApplicationReviewCancel] =\n    useAdmissionOngoingApplicationReviewCancelMutation();\n  return [admissionOngoingApplicationReviewCancel];\n};\nexport const useAdmissionOngoingApplicationAllottment = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllottmentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllottment: data,\n    admissionOngoingApplicationAllottmentRefetch: refetch,\n    admissionOngoingApplicationAllottmentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllottmentCancel = () => {\n  const [admissionOngoingApplicationAllottmentCancel] =\n    useAdmissionOngoingApplicationAllottmentCancelMutation();\n  return [admissionOngoingApplicationAllottmentCancel];\n};\nexport const useAdmissionOngoingApplicationAllottmentRevert = () => {\n  const [admissionOngoingApplicationAllottmentRevert] =\n    useAdmissionOngoingApplicationAllottmentRevertMutation();\n  return [admissionOngoingApplicationAllottmentRevert];\n};\nexport const useAdmissionOngoingApplicationCancelled = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationCancelledQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationCancelled: data,\n    admissionOngoingApplicationCancelledRefetch: refetch,\n    admissionOngoingApplicationCancelledLoading: isFetching,\n  };\n};\n\nexport const useAdmissionTransferApplicatToOtherApplication = () => {\n  const [admissionTransferApplicatToOtherApplication] =\n    useAdmissionTransferApplicatToOtherApplicationMutation();\n  return [admissionTransferApplicatToOtherApplication];\n};\nexport const useAdmissionOngoingApplicationDailyCollect = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDailyCollectQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDailyCollect: data,\n    admissionOngoingApplicationDailyCollectRefetch: refetch,\n    admissionOngoingApplicationDailyCollectLoading: isFetching,\n  };\n};\n\nexport const useAdmissionPendingFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPendingFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPendingFees: data,\n    admissionPendingFeesRefetch: refetch,\n    admissionPendingFeesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionApplicantCancelledList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionApplicantCancelledListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionApplicantCancelledList: data,\n    admissionApplicantCancelledListRefetch: refetch,\n    admissionApplicantCancelledListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCancelledListExport = () => {\n  const [admissionCancelledListExport] =\n    useAdmissionCancelledListExportMutation();\n  return [admissionCancelledListExport];\n};\n\nexport const useAdmissionReadmissionList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionReadmissionListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionReadmissionList: data,\n    admissionReadmissionListRefetch: refetch,\n    admissionReadmissionListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionReadmissionConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionReadmissionConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionReadmissionConfirmedList: data,\n    admissionReadmissionConfirmedListRefetch: refetch,\n    admissionReadmissionConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionReadmissionCollectFees = () => {\n  const [admissionReadmissionCollectFees] =\n    useAdmissionReadmissionCollectFeesMutation();\n  return [admissionReadmissionCollectFees];\n};\n\nexport const useAdmissionStudentAddSection = () => {\n  const [admissionStudentAddSection] = useAdmissionStudentAddSectionMutation();\n  return [admissionStudentAddSection];\n};\nexport const useAdmissionStudentSectionAddChecklist = () => {\n  const [admissionStudentSectionAddChecklist] =\n    useAdmissionStudentSectionAddChecklistMutation();\n  return [admissionStudentSectionAddChecklist];\n};\nexport const useAdmissionStudentRearrangeSection = () => {\n  const [admissionStudentRearrangeSection] =\n    useAdmissionStudentRearrangeSectionMutation();\n  return [admissionStudentRearrangeSection];\n};\nexport const useAdmissionStudentUpdateSectionChecklist = () => {\n  const [admissionStudentUpdateSectionChecklist] =\n    useAdmissionStudentUpdateSectionChecklistMutation();\n  return [admissionStudentUpdateSectionChecklist];\n};\n\nexport const useAdmissionStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionStudentFormDetail: data,\n    admissionStudentFormDetailRefetch: refetch,\n    admissionStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useAdmissionStudentToggleChecklist = () => {\n  const [admissionStudentToggleChecklist] =\n    useAdmissionStudentToggleChecklistMutation();\n  return [admissionStudentToggleChecklist];\n};\n\nexport const useAdmissionAddOuterGorup = () => {\n  const [admissionAddOuterGorup] = useAdmissionAddOuterGorupMutation();\n  return [admissionAddOuterGorup];\n};\nexport const useAdmissionOuterGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOuterGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOuterGroupList: data,\n    admissionOuterGroupListRefetch: refetch,\n    admissionOuterGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionSubjectGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubjectGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubjectGroupList: data,\n    admissionSubjectGroupListRefetch: refetch,\n    admissionSubjectGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddSubjectGroup = () => {\n  const [admissionAddSubjectGroup] = useAdmissionAddSubjectGroupMutation();\n  return [admissionAddSubjectGroup];\n};\nexport const useAdmissionSubGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubGroupList: data,\n    admissionSubGroupListRefetch: refetch,\n    admissionSubGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionOneSubGroupDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneSubGroupDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOneSubGroupDetail: data,\n    admissionOneSubGroupDetailRefetch: refetch,\n    admissionOneSubGroupDetailLoading: isFetching,\n  };\n};\n\nexport const useAdmissionSubGroupAddSubject = () => {\n  const [admissionSubGroupAddSubject] =\n    useAdmissionSubGroupAddSubjectMutation();\n  return [admissionSubGroupAddSubject];\n};\n\nexport const useAdmissionInstituteAllSubjectList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionInstituteAllSubjectListQuery(args?.data, {\n      skip: args?.skip,\n    });\n  return {\n    admissionInstituteAllSubjectList: data,\n    admissionInstituteAllSubjectListRefetch: refetch,\n    admissionInstituteAllSubjectListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionRemoveOuterGroup = () => {\n  const [admissionRemoveOuterGroup] = useAdmissionRemoveOuterGroupMutation();\n  return [admissionRemoveOuterGroup];\n};\n\nexport const useAdmissionRemoveSubjectGroup = () => {\n  const [admissionRemoveSubjectGroup] =\n    useAdmissionRemoveSubjectGroupMutation();\n  return [admissionRemoveSubjectGroup];\n};\n\nexport const useInstitutePinApplication = () => {\n  const [institutePinApplication] = useInstitutePinApplicationMutation();\n  return [institutePinApplication];\n};\n\nexport const useInstituteUnPinApplication = () => {\n  const [instituteUnPinApplication] = useInstituteUnPinApplicationMutation();\n  return [instituteUnPinApplication];\n};\n\nexport const useInstituteAllApplicationList = (args) => {\n  const { data, refetch, isFetching } = useInstituteAllApplicationListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    instituteAllApplicationList: data,\n    instituteAllApplicationListRefetch: refetch,\n    instituteAllApplicationListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationDocumentList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationDocumentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationDocumentList: data,\n    admissionMergedApplicationDocumentListRefetch: refetch,\n    admissionMergedApplicationDocumentListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationFeesList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationFeesListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationFeesList: data,\n    admissionMergedApplicationFeesListRefetch: refetch,\n    admissionMergedApplicationFeesListLoading: isFetching,\n  };\n};\nexport const useAdmissionMergedApplicationConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationConfirmedList: data,\n    admissionMergedApplicationConfirmedListRefetch: refetch,\n    admissionMergedApplicationConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingDirectApplicationExcel = () => {\n  const [admissionOngoingDirectApplicationExcel] =\n    useAdmissionOngoingDirectApplicationExcelMutation();\n  return [admissionOngoingDirectApplicationExcel];\n};\n\nexport const useOneApplicationSubjectCountList = (args) => {\n  const { data, refetch, isFetching } = useOneApplicationSubjectCountListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    oneApplicationSubjectCountList: data,\n    oneApplicationSubjectCountListRefetch: refetch,\n    oneApplicationSubjectCountListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentList = (args) => {\n  const { data, refetch, isFetching } =\n    useOneApplicationOneSubjectStudentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    oneApplicationOneSubjectStudentList: data,\n    oneApplicationOneSubjectStudentListRefetch: refetch,\n    oneApplicationOneSubjectStudentListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentListExport = () => {\n  const [oneApplicationOneSubjectStudentListExport] =\n    useOneApplicationOneSubjectStudentListExportMutation();\n  return [oneApplicationOneSubjectStudentListExport];\n};\n\nexport const useAdmissionMergedApplicationTotalCount = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationTotalCountQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationTotalCount: data,\n    admissionMergedApplicationTotalCountRefetch: refetch,\n    admissionMergedApplicationTotalCountLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationStudentFormGenerate = () => {\n  const [oneApplicationStudentFormGenerate] =\n    useOneApplicationStudentFormGenerateMutation();\n  return [oneApplicationStudentFormGenerate];\n};\n\nexport const useOneApplicationIntakeUpdate = () => {\n  const [oneApplicationIntakeUpdate] = useOneApplicationIntakeUpdateMutation();\n  return [oneApplicationIntakeUpdate];\n};\nexport const useOneApplicationIntakeExport = () => {\n  const [oneApplicationIntakeExport] = useOneApplicationIntakeExportMutation();\n  return [oneApplicationIntakeExport];\n};\n\nexport const useOneApplicationStaffActionShow = (args) => {\n  const { data, refetch, isFetching } = useOneApplicationStaffActionShowQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    oneApplicationStaffActionShow: data,\n    oneApplicationStaffActionShowRefetch: refetch,\n    oneApplicationStaffActionShowLoading: isFetching,\n  };\n};\nexport const useOneApplicationUpdateDocumentSetting = () => {\n  const [oneApplicationUpdateDocumentSetting] =\n    useOneApplicationUpdateDocumentSettingMutation();\n  return [oneApplicationUpdateDocumentSetting];\n};\nexport const useAdmissionIntakeRecordList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionIntakeRecordListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionIntakeRecordList: data,\n    admissionIntakeRecordListRefetch: refetch,\n    admissionIntakeRecordListLoading: isFetching,\n  };\n};\nexport const useOngoingAdmissionTotalCardExport = () => {\n  const [ongoingAdmissionTotalCardExport] =\n    useOngoingAdmissionTotalCardExportMutation();\n  return [ongoingAdmissionTotalCardExport];\n};\n\nexport const useAdmissionFormPrintCase = () => {\n  const [admissionFormPrintCase] = useAdmissionFormPrintCaseMutation();\n  return [admissionFormPrintCase];\n};\nexport const useOneApplicationAllotToReveiwStudent = () => {\n  const [oneApplicationAllotToReveiwStudent] =\n    useOneApplicationAllotToReveiwStudentMutation();\n  return [oneApplicationAllotToReveiwStudent];\n};\nexport const useAdmissionApplicationRequiredDocumentExport = () => {\n  const [admissionApplicationRequiredDocumentExport] =\n    useAdmissionApplicationRequiredDocumentExportMutation();\n  return [admissionApplicationRequiredDocumentExport];\n};\n\nexport const useDocumentReminderStudentList = (args) => {\n  const { data, refetch, isFetching } = useDocumentReminderStudentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    documentReminderStudentList: data,\n    documentReminderStudentListRefetch: refetch,\n    documentReminderStudentListLoading: isFetching,\n  };\n};\n\nexport const useDocumentReminderSendStudent = () => {\n  const [documentReminderSendStudent] =\n    useDocumentReminderSendStudentMutation();\n  return [documentReminderSendStudent];\n};\n\nexport const useDocumentNotFilledStudentList = (args) => {\n  const { data, refetch, isFetching } = useDocumentNotFilledStudentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    documentNotFilledStudentList: data,\n    documentNotFilledStudentListRefetch: refetch,\n    documentNotFilledStudentListLoading: isFetching,\n  };\n};\n\nexport const useDocumentNotFilledStudentAction = () => {\n  const [documentNotFilledStudentAction] =\n    useDocumentNotFilledStudentActionMutation();\n  return [documentNotFilledStudentAction];\n};\nexport const useAdmissionDocumentReminderHistory = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionDocumentReminderHistoryQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionDocumentReminderHistory: data,\n    admissionDocumentReminderHistoryRefetch: refetch,\n    admissionDocumentReminderHistoryLoading: isFetching,\n  };\n};\n\nexport const useAdmissionStudentAddUndertakingSection = () => {\n  const [admissionStudentAddUndertakingSection] =\n    useAdmissionStudentAddUndertakingSectionMutation();\n  return [admissionStudentAddUndertakingSection];\n};\nexport const useAdmissionStudentUpdateUndertakingSection = () => {\n  const [admissionStudentUpdateUndertakingSection] =\n    useAdmissionStudentUpdateUndertakingSectionMutation();\n  return [admissionStudentUpdateUndertakingSection];\n};\nexport const useAdmissionStudentUndertakingUpdate = () => {\n  const [admissionStudentUndertakingUpdate] =\n    useAdmissionStudentUndertakingUpdateMutation();\n  return [admissionStudentUndertakingUpdate];\n};\n\n///\n\nexport const useDepartmentBatchAllClass = (args) => {\n  const { data, refetch, isFetching } = useDepartmentBatchAllClassQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    departmentBatchAllClass: data,\n    departmentBatchAllClassRefetch: refetch,\n    departmentBatchAllClassLoading: isFetching,\n  };\n};\n"],"names":["admissionActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","activateModule","admissionUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","admissionDashboardMasterFunction","aid","mod_id","providesTags","serializeQueryArgs","_ref","endpointName","transformResponse","response","dect","decryption","encrypt","admission","admissionCashToFinanceFunction","submitAmount","admissionPaymentVerifyListFunction","page","limit","filterBy","over_filter","search","_ref2","meta","arg","list","all_requests","merge","currentCache","incomingData","_currentCache$list","push","forceRefetch","_ref3","currentArg","previousArg","admissionPaymentVerifyActionFunction","rid","reqId","status","receiptAction","admissionDocumentListFunction","_ref4","all_docs","_currentCache$list2","_ref5","admissionAddDocumentFunction","document","admissionUpdateDocumentFunction","editDocument","admissionRemoveDocumentFunction","did","DELETE","admissionExportExcelListFunction","_ref6","all_excel","_currentCache$list3","_ref7","admissionEditExportExcelFunction","xlsxId","excelUpdate","admissionRemoveExportExcelFunction","admissionExportFilterExcelFunction","gender","caste","is_all","all_depart","batch_status","exportData","admissionModeratorListFunction","_ref8","all_mods","_currentCache$list4","_ref9","admissionAddModeratorFunction","_data$active_tab","active_tab","addModerator","admissionUpdateModeratorFunction","_data$active_tab2","modId","updateModerator","admissionRemoveModeratorFunction","admissionPendingFeesFunction","_data$flow","flow","_ref10","remain","_currentCache$list5","_ref11","admissionPendingFeesReminderHistoryFunction","_data$search","id","_ref12","all_message","_currentCache$list6","_ref13","admissionPendingFeesOsStudentListFunction","pendingData","admissionPendingFeesReminderFunction","alarm_mode","reminderData","admissionExcessFeeNotRefundedListFunction","_data$search2","_ref14","all_refund_list","_currentCache$list7","_ref15","admissionExcessFeeRefundedListFunction","_ref16","all_refunded","_currentCache$list8","_ref17","admissionExcessFeeNotRefundedListExportFunction","admissionExcessFeeRefundedListExportFunction","admissionTabControllerFunction","tabManage","admissionCompletedApplicationListFunction","_ref18","completed","_currentCache$list9","_ref19","admissionCompleteApplicationFunction","appId","admissionIncompleteApplicationFunction","admissionOngoingApplicationFunction","ad","_ref20","res","ongoing","_currentCache$list10","_ref21","admissionCreateApplicationFunction","application","admissionUpdateApplicationFunction","updateApplication","admissionRemoveApplicationFunction","admissionOneOngoingApplicationFunction","oneApply","_ref22","_ref23","admissionOngoingApplicationRequestFunction","req","_ref24","request","_currentCache$list11","_ref25","admissionOngoingApplicationSelectFunction","sid","applicant","admissionOngoingApplicationRejectFunction","bodyParameter","admissionOngoingApplicationFormUpdateRejectFunction","admissionOngoingApplicationExportFunction","admissionOngoingApplicationAllottmentSubjectListExportFunction","admissionOngoingApplicationAllottmentDseStudentExportFunction","admissionOngoingApplicationDocumentFunction","_ref26","select","_currentCache$list12","_ref27","admissionOngoingApplicationDocumentCollectFunction","admissionOngoingApplicationDocumentRevertFunction","revert","admissionOngoingApplicationDocumentEditStructureFunction","admissionOngoingApplicationFeesFunction","_ref28","fees","_currentCache$list13","_ref29","admissionOngoingApplicationFeesCollectFunction","_data$receipt_status","receipt_status","collect","admissionOngoingApplicationFeesRevertFunction","admissionOngoingApplicationConfirmFunction","_ref30","confirm","_currentCache$list14","_ref31","admissionOngoingApplicationAllConfirmListFunction","_ref32","_ref33","admissionOngoingApplicationConfirmReviewFunction","review","admissionOngoingApplicationReviewFunction","_ref34","_currentCache$list15","_ref35","admissionOngoingApplicationAllReviewListFunction","_ref36","_ref37","admissionOngoingApplicationReviewSortFunction","sort_query","admissionOngoingApplicationReviewBatchFunction","_ref38","batch","_ref39","admissionOngoingApplicationReviewClassesFunction","bid","_ref40","classes","_currentCache$list16","_ref41","admissionOngoingApplicationReviewAllotFunction","cid","admissionOngoingApplicationReviewCancelFunction","payment","admissionOngoingApplicationAllottmentFunction","_ref42","allot","_currentCache$list17","_ref43","admissionOngoingApplicationAllottmentCancelFunction","admissionOngoingApplicationAllottmentRevertFunction","admissionOngoingApplicationCancelledFunction","_ref44","cancel","_currentCache$list18","_ref45","admissionTransferApplicatToOtherApplicationFunction","transferApplicantData","admissionOngoingApplicationDailyCollectFunction","valid_date","_ref46","day_wise","_ref47","admissionApplicantCancelledListFunction","_ref48","_currentCache$list19","_ref49","admissionCancelledListExportFunction","timeline","timeline_content","from","to","bank","admissionReadmissionListFunction","_ref50","_currentCache$list20","_ref51","admissionReadmissionConfirmedListFunction","_ref52","_currentCache$list21","_ref53","admissionReadmissionCollectFeesFunction","admissionStudentAddSectionFunction","formId","admissionStudentSectionAddChecklistFunction","admissionStudentRearrangeSectionFunction","admissionStudentUpdateSectionChecklistFunction","admissionStudentFormDetailFunction","section","_ref54","_ref55","admissionStudentToggleChecklistFunction","admissionAddOuterGorupFunction","admissionOuterGroupListFunction","_ref56","all_group","_currentCache$list22","_ref57","admissionSubjectGroupListFunction","_ref58","_currentCache$list23","_ref59","admissionAddSubjectGroupFunction","sgid","admissionSubGroupListFunction","_ref60","all_group_select","_currentCache$list24","_ref61","admissionOneSubGroupDetailFunction","_ref62","group","_ref63","admissionSubGroupAddSubjectFunction","ssid","admissionInstituteAllSubjectListFunction","_ref64","all_subjects","_currentCache$list25","_ref65","admissionRemoveOuterGroupFunction","admissionRemoveSubjectGroupFunction","institutePinApplicationFunction","instituteUnPinApplicationFunction","instituteAllApplicationListFunction","_ref66","_currentCache$list26","_ref67","admissionMergedApplicationTotalCountFunction","_ref68","ads_obj","_ref69","admissionMergedApplicationDocumentListFunction","_ref70","_currentCache$list27","_ref71","admissionMergedApplicationFeesListFunction","_ref72","_currentCache$list28","_ref73","admissionMergedApplicationConfirmedListFunction","_ref74","_currentCache$list29","_ref75","admissionOngoingDirectApplicationExcelFunction","oneApplicationSubjectCountListFunction","_ref76","subject","_ref77","oneApplicationOneSubjectStudentListFunction","smid","_ref78","student","studentCount","student_count","_currentCache$list30","_ref79","oneApplicationOneSubjectStudentListExportFunction","oneApplicationStudentFormGenerateFunction","oneApplicationIntakeUpdateFunction","oneApplicationIntakeExportFunction","oneApplicationStaffActionShowFunction","_ref80","only","_ref81","oneApplicationUpdateDocumentSettingFunction","admissionIntakeRecordListFunction","_ref82","admission_intake_set","_currentCache$list31","_ref83","ongoingAdmissionTotalCardExportFunction","admissionFormPrintCaseFunction","oneApplicationAllotToReveiwStudentFunction","admissionApplicationRequiredDocumentExportFunction","documentReminderStudentListFunction","_ref84","all_student","_currentCache$list32","_ref85","documentReminderSendStudentFunction","documentNotFilledStudentListFunction","_ref86","all_stu","_currentCache$list33","_ref87","documentNotFilledStudentActionFunction","admissionDocumentReminderHistoryFunction","_data$search3","_ref88","_currentCache$list34","_ref89","admissionStudentAddUndertakingSectionFunction","admissionStudentUpdateUndertakingSectionFunction","admissionStudentUndertakingUpdateFunction","departmentBatchAllClassFunction","_ref90","_response$batch","_response$batch2","classroom","_currentCache$list35","_ref91","admissionManagerApiDynamic","admissionManagerApi","injectEndpoints","endpoints","admissionActivateModule","admissionUpdateModule","admissionDashboardMaster","admissionCashToFinance","admissionPaymentVerifyList","admissionPaymentVerifyAction","admissionDocumentList","admissionAddDocument","admissionUpdateDocument","admissionRemoveDocument","admissionExportExcelList","admissionEditExportExcel","admissionRemoveExportExcel","admissionModeratorList","admissionAddModerator","admissionUpdateModerator","admissionRemoveModerator","admissionPendingFeesReminderHistory","admissionPendingFeesOsStudentList","admissionPendingFeesReminder","admissionExcessFeeNotRefundedList","admissionExcessFeeRefundedList","admissionCompletedApplicationList","admissionCompleteApplication","admissionIncompleteApplication","admissionExcessFeeNotRefundedListExport","admissionExcessFeeRefundedListExport","admissionTabController","admissionExportFilterExcel","admissionOngoingApplication","admissionCreateApplication","admissionUpdateApplication","admissionRemoveApplication","admissionOneOngoingApplication","admissionOngoingApplicationRequest","admissionOngoingApplicationSelect","admissionOngoingApplicationReject","admissionOngoingApplicationFormUpdateReject","admissionOngoingApplicationExport","admissionOngoingApplicationAllottmentSubjectListExport","admissionOngoingApplicationAllottmentDseStudentExport","admissionOngoingApplicationDocument","admissionOngoingApplicationDocumentCollect","admissionOngoingApplicationDocumentRevert","admissionOngoingApplicationDocumentEditStructure","admissionOngoingApplicationFees","admissionOngoingApplicationFeesCollect","admissionOngoingApplicationFeesRevert","admissionOngoingApplicationConfirm","admissionOngoingApplicationAllConfirmList","admissionOngoingApplicationConfirmReview","admissionOngoingApplicationReview","admissionOngoingApplicationAllReviewList","admissionOngoingApplicationReviewSort","admissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewAllot","admissionOngoingApplicationReviewCancel","admissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentCancel","admissionOngoingApplicationAllottmentRevert","admissionOngoingApplicationCancelled","admissionTransferApplicatToOtherApplication","admissionOngoingApplicationDailyCollect","admissionPendingFees","admissionApplicantCancelledList","admissionCancelledListExport","admissionReadmissionList","admissionReadmissionConfirmedList","admissionReadmissionCollectFees","admissionStudentAddSection","admissionStudentSectionAddChecklist","admissionStudentRearrangeSection","admissionStudentUpdateSectionChecklist","admissionStudentFormDetail","admissionStudentToggleChecklist","admissionAddOuterGorup","admissionOuterGroupList","admissionSubjectGroupList","admissionAddSubjectGroup","admissionSubGroupList","admissionOneSubGroupDetail","admissionSubGroupAddSubject","admissionInstituteAllSubjectList","admissionRemoveOuterGroup","admissionRemoveSubjectGroup","institutePinApplication","instituteUnPinApplication","instituteAllApplicationList","admissionMergedApplicationFeesList","admissionMergedApplicationDocumentList","admissionMergedApplicationConfirmedList","admissionOngoingDirectApplicationExcel","oneApplicationSubjectCountList","oneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListExport","admissionMergedApplicationTotalCount","oneApplicationStudentFormGenerate","oneApplicationIntakeUpdate","oneApplicationIntakeExport","oneApplicationStaffActionShow","oneApplicationUpdateDocumentSetting","admissionIntakeRecordList","ongoingAdmissionTotalCardExport","admissionFormPrintCase","oneApplicationAllotToReveiwStudent","admissionApplicationRequiredDocumentExport","documentReminderSendStudent","documentReminderStudentList","documentNotFilledStudentList","documentNotFilledStudentAction","admissionDocumentReminderHistory","admissionStudentAddUndertakingSection","admissionStudentUpdateUndertakingSection","admissionStudentUndertakingUpdate","departmentBatchAllClass","useAdmissionActivateModuleMutation","useAdmissionUpdateModuleMutation","useAdmissionDashboardMasterQuery","useAdmissionCashToFinanceMutation","useAdmissionPaymentVerifyListQuery","useAdmissionPaymentVerifyActionMutation","useAdmissionDocumentListQuery","useAdmissionAddDocumentMutation","useAdmissionUpdateDocumentMutation","useAdmissionRemoveDocumentMutation","useAdmissionExportExcelListQuery","useAdmissionEditExportExcelMutation","useAdmissionRemoveExportExcelMutation","useAdmissionModeratorListQuery","useAdmissionAddModeratorMutation","useAdmissionUpdateModeratorMutation","useAdmissionRemoveModeratorMutation","useAdmissionPendingFeesReminderHistoryQuery","useAdmissionPendingFeesOsStudentListMutation","useAdmissionPendingFeesReminderMutation","useAdmissionExcessFeeNotRefundedListQuery","useAdmissionExcessFeeRefundedListQuery","useAdmissionCompletedApplicationListQuery","useAdmissionCompleteApplicationMutation","useAdmissionIncompleteApplicationMutation","useAdmissionExcessFeeNotRefundedListExportMutation","useAdmissionExcessFeeRefundedListExportMutation","useAdmissionTabControllerMutation","useAdmissionExportFilterExcelMutation","useAdmissionOngoingApplicationQuery","useAdmissionCreateApplicationMutation","useAdmissionUpdateApplicationMutation","useAdmissionRemoveApplicationMutation","useAdmissionOneOngoingApplicationQuery","useAdmissionOngoingApplicationRequestQuery","useAdmissionOngoingApplicationSelectMutation","useAdmissionOngoingApplicationRejectMutation","useAdmissionOngoingApplicationFormUpdateRejectMutation","useAdmissionOngoingApplicationExportMutation","useAdmissionOngoingApplicationAllottmentSubjectListExportMutation","useAdmissionOngoingApplicationAllottmentDseStudentExportMutation","useAdmissionOngoingApplicationDocumentQuery","useAdmissionOngoingApplicationDocumentCollectMutation","useAdmissionOngoingApplicationDocumentRevertMutation","useAdmissionOngoingApplicationDocumentEditStructureMutation","useAdmissionOngoingApplicationFeesQuery","useAdmissionOngoingApplicationFeesCollectMutation","useAdmissionOngoingApplicationFeesRevertMutation","useAdmissionOngoingApplicationConfirmQuery","useAdmissionOngoingApplicationAllConfirmListQuery","useAdmissionOngoingApplicationConfirmReviewMutation","useAdmissionOngoingApplicationReviewQuery","useAdmissionOngoingApplicationAllReviewListQuery","useAdmissionOngoingApplicationReviewSortMutation","useAdmissionOngoingApplicationReviewBatchQuery","useAdmissionOngoingApplicationReviewClassesQuery","useAdmissionOngoingApplicationReviewAllotMutation","useAdmissionOngoingApplicationReviewCancelMutation","useAdmissionOngoingApplicationAllottmentQuery","useAdmissionOngoingApplicationAllottmentCancelMutation","useAdmissionOngoingApplicationAllottmentRevertMutation","useAdmissionOngoingApplicationCancelledQuery","useAdmissionTransferApplicatToOtherApplicationMutation","useAdmissionOngoingApplicationDailyCollectQuery","useAdmissionPendingFeesQuery","useAdmissionApplicantCancelledListQuery","useAdmissionCancelledListExportMutation","useAdmissionReadmissionListQuery","useAdmissionReadmissionConfirmedListQuery","useAdmissionReadmissionCollectFeesMutation","useAdmissionStudentAddSectionMutation","useAdmissionStudentSectionAddChecklistMutation","useAdmissionStudentRearrangeSectionMutation","useAdmissionStudentUpdateSectionChecklistMutation","useAdmissionStudentFormDetailQuery","useAdmissionStudentToggleChecklistMutation","useAdmissionAddOuterGorupMutation","useAdmissionOuterGroupListQuery","useAdmissionSubjectGroupListQuery","useAdmissionAddSubjectGroupMutation","useAdmissionSubGroupListQuery","useAdmissionOneSubGroupDetailQuery","useAdmissionSubGroupAddSubjectMutation","useAdmissionInstituteAllSubjectListQuery","useAdmissionRemoveOuterGroupMutation","useAdmissionRemoveSubjectGroupMutation","useInstitutePinApplicationMutation","useInstituteUnPinApplicationMutation","useInstituteAllApplicationListQuery","useAdmissionMergedApplicationDocumentListQuery","useAdmissionMergedApplicationFeesListQuery","useAdmissionMergedApplicationConfirmedListQuery","useAdmissionOngoingDirectApplicationExcelMutation","useOneApplicationSubjectCountListQuery","useOneApplicationOneSubjectStudentListQuery","useOneApplicationOneSubjectStudentListExportMutation","useAdmissionMergedApplicationTotalCountQuery","useOneApplicationStudentFormGenerateMutation","useOneApplicationIntakeUpdateMutation","useOneApplicationIntakeExportMutation","useOneApplicationStaffActionShowQuery","useOneApplicationUpdateDocumentSettingMutation","useAdmissionIntakeRecordListQuery","useOngoingAdmissionTotalCardExportMutation","useAdmissionFormPrintCaseMutation","useOneApplicationAllotToReveiwStudentMutation","useAdmissionApplicationRequiredDocumentExportMutation","useDocumentReminderStudentListQuery","useDocumentReminderSendStudentMutation","useDocumentNotFilledStudentActionMutation","useDocumentNotFilledStudentListQuery","useAdmissionDocumentReminderHistoryQuery","useAdmissionStudentAddUndertakingSectionMutation","useAdmissionStudentUpdateUndertakingSectionMutation","useAdmissionStudentUndertakingUpdateMutation","useDepartmentBatchAllClassQuery","useAdmissionActivateModule","useAdmissionUpdateModule","useAdmissionDashboardMaster","args","refetch","isFetching","skip","admissionDashboardMasterRefetch","admissionDashboardMasterLoading","useAdmissionCashToFinance","useAdmissionPaymentVerifyList","admissionPaymentVerifyListRefetch","admissionPaymentVerifyListLoading","useAdmissionPaymentVerifyAction","useAdmissionDocumentList","admissionDocumentListRefetch","admissionDocumentListLoading","useAdmissionAddDocument","useAdmissionUpdateDocument","useAdmissionRemoveDocument","useAdmissionExportExcelList","admissionExportExcelListRefetch","admissionExportExcelListLoading","useAdmissionEditExportExcel","useAdmissionRemoveExportExcel","useAdmissionModeratorList","admissionModeratorListRefetch","admissionModeratorListLoading","useAdmissionAddModerator","useAdmissionUpdateModerator","useAdmissionRemoveModerator","useAdmissionPendingFeesReminderHistory","admissionPendingFeesReminderHistoryRefetch","admissionPendingFeesReminderHistoryLoading","useAdmissionPendingFeesOsStudentList","useAdmissionPendingFeesReminder","useAdmissionExcessFeeNotRefundedList","admissionExcessFeeNotRefundedListRefetch","admissionExcessFeeNotRefundedListLoading","useAdmissionExcessFeeRefundedList","admissionExcessFeeRefundedListRefetch","admissionExcessFeeRefundedListLoading","useAdmissionExcessFeeNotRefundedListExport","useAdmissionExcessFeeRefundedListExport","useAdmissionCompletedApplicationList","admissionCompletedApplicationListRefetch","admissionCompletedApplicationListLoading","useAdmissionCompleteApplication","useAdmissionIncompleteApplication","useAdmissionTabController","useAdmissionExportFilterExcel","useAdmissionOngoingApplication","admissionOngoingApplicationRefetch","admissionOngoingApplicationLoading","useAdmissionCreateApplication","useAdmissionUpdateApplication","useAdmissionRemoveApplication","useAdmissionOneOngoingApplication","admissionOneOngoingApplicationRefetch","admissionOneOngoingApplicationLoading","useAdmissionOngoingApplicationRequest","admissionOngoingApplicationRequestRefetch","admissionOngoingApplicationRequestLoading","useAdmissionOngoingApplicationSelect","useAdmissionOngoingApplicationReject","useAdmissionOngoingApplicationFormUpdateReject","useAdmissionOngoingApplicationExport","useAdmissionOngoingApplicationAllottmentSubjectListExport","useAdmissionOngoingApplicationAllottmentDseStudentExport","useAdmissionOngoingApplicationDocument","admissionOngoingApplicationDocumentRefetch","admissionOngoingApplicationDocumentLoading","useAdmissionOngoingApplicationDocumentCollect","useAdmissionOngoingApplicationDocumentRevert","useAdmissionOngoingApplicationDocumentEditStructure","useAdmissionOngoingApplicationFees","admissionOngoingApplicationFeesRefetch","admissionOngoingApplicationFeesLoading","useAdmissionOngoingApplicationFeesCollect","useAdmissionOngoingApplicationFeesRevert","useAdmissionOngoingApplicationConfirm","admissionOngoingApplicationConfirmRefetch","admissionOngoingApplicationConfirmLoading","useAdmissionOngoingApplicationAllConfirmList","admissionOngoingApplicationAllConfirmListRefetch","admissionOngoingApplicationAllConfirmListLoading","useAdmissionOngoingApplicationConfirmReview","useAdmissionOngoingApplicationReview","admissionOngoingApplicationReviewRefetch","admissionOngoingApplicationReviewLoading","useAdmissionOngoingApplicationAllReviewList","admissionOngoingApplicationAllReviewListRefetch","admissionOngoingApplicationAllReviewListLoading","useAdmissionOngoingApplicationReviewSort","useAdmissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewBatchRefetch","admissionOngoingApplicationReviewBatchLoading","useAdmissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewClassesRefetch","admissionOngoingApplicationReviewClassesLoading","useAdmissionOngoingApplicationReviewAllot","useAdmissionOngoingApplicationReviewCancel","useAdmissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentRefetch","admissionOngoingApplicationAllottmentLoading","useAdmissionOngoingApplicationAllottmentCancel","useAdmissionOngoingApplicationAllottmentRevert","useAdmissionOngoingApplicationCancelled","admissionOngoingApplicationCancelledRefetch","admissionOngoingApplicationCancelledLoading","useAdmissionTransferApplicatToOtherApplication","useAdmissionOngoingApplicationDailyCollect","admissionOngoingApplicationDailyCollectRefetch","admissionOngoingApplicationDailyCollectLoading","useAdmissionPendingFees","admissionPendingFeesRefetch","admissionPendingFeesLoading","useAdmissionApplicantCancelledList","admissionApplicantCancelledListRefetch","admissionApplicantCancelledListLoading","useAdmissionCancelledListExport","useAdmissionReadmissionList","admissionReadmissionListRefetch","admissionReadmissionListLoading","useAdmissionReadmissionConfirmedList","admissionReadmissionConfirmedListRefetch","admissionReadmissionConfirmedListLoading","useAdmissionReadmissionCollectFees","useAdmissionStudentAddSection","useAdmissionStudentSectionAddChecklist","useAdmissionStudentRearrangeSection","useAdmissionStudentUpdateSectionChecklist","useAdmissionStudentFormDetail","admissionStudentFormDetailRefetch","admissionStudentFormDetailLoading","useAdmissionStudentToggleChecklist","useAdmissionAddOuterGorup","useAdmissionOuterGroupList","admissionOuterGroupListRefetch","admissionOuterGroupListLoading","useAdmissionAddSubjectGroup","useAdmissionSubGroupList","admissionSubGroupListRefetch","admissionSubGroupListLoading","useAdmissionOneSubGroupDetail","admissionOneSubGroupDetailRefetch","admissionOneSubGroupDetailLoading","useAdmissionSubGroupAddSubject","useAdmissionInstituteAllSubjectList","admissionInstituteAllSubjectListRefetch","admissionInstituteAllSubjectListLoading","useAdmissionRemoveOuterGroup","useAdmissionRemoveSubjectGroup","useInstitutePinApplication","useInstituteUnPinApplication","useInstituteAllApplicationList","instituteAllApplicationListRefetch","instituteAllApplicationListLoading","useAdmissionMergedApplicationDocumentList","admissionMergedApplicationDocumentListRefetch","admissionMergedApplicationDocumentListLoading","useAdmissionMergedApplicationFeesList","admissionMergedApplicationFeesListRefetch","admissionMergedApplicationFeesListLoading","useAdmissionMergedApplicationConfirmedList","admissionMergedApplicationConfirmedListRefetch","admissionMergedApplicationConfirmedListLoading","useAdmissionOngoingDirectApplicationExcel","useOneApplicationSubjectCountList","oneApplicationSubjectCountListRefetch","oneApplicationSubjectCountListLoading","useOneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListRefetch","oneApplicationOneSubjectStudentListLoading","useOneApplicationOneSubjectStudentListExport","useAdmissionMergedApplicationTotalCount","admissionMergedApplicationTotalCountRefetch","admissionMergedApplicationTotalCountLoading","useOneApplicationStudentFormGenerate","useOneApplicationIntakeUpdate","useOneApplicationIntakeExport","useOneApplicationStaffActionShow","oneApplicationStaffActionShowRefetch","oneApplicationStaffActionShowLoading","useOneApplicationUpdateDocumentSetting","useAdmissionIntakeRecordList","admissionIntakeRecordListRefetch","admissionIntakeRecordListLoading","useOngoingAdmissionTotalCardExport","useAdmissionFormPrintCase","useAdmissionApplicationRequiredDocumentExport","useDocumentReminderStudentList","documentReminderStudentListRefetch","documentReminderStudentListLoading","useDocumentReminderSendStudent","useDocumentNotFilledStudentList","documentNotFilledStudentListRefetch","documentNotFilledStudentListLoading","useDocumentNotFilledStudentAction","useAdmissionDocumentReminderHistory","admissionDocumentReminderHistoryRefetch","admissionDocumentReminderHistoryLoading","useAdmissionStudentAddUndertakingSection","useAdmissionStudentUpdateUndertakingSection","useAdmissionStudentUndertakingUpdate","useDepartmentBatchAllClass","departmentBatchAllClassRefetch","departmentBatchAllClassLoading"],"sourceRoot":""}