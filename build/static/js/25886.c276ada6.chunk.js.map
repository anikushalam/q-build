{"version":3,"file":"static/js/25886.c276ada6.chunk.js","mappings":"2MAKA,MAAMA,EAAcC,EAAAA,MAAW,IAC7B,kEAEIC,EAAgBD,EAAAA,MAAW,IAC/B,qEA+EF,EA5E4BE,IAQrB,IARsB,aAC3BC,EAAY,QACZC,EAAO,KACPC,EAAI,WACJC,EAAU,cACVC,EAAa,OACbC,EAAM,UACNC,GACDP,EACC,MAAOQ,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,WAAS,GAC7CG,GAAMC,EAAAA,EAAAA,QAAO,OACb,EAAEC,IAAMC,EAAAA,EAAAA,MACRC,EAAsBC,IACN,UAAhBA,EAAEC,OAAOC,IAA4C,OAA1BF,EAAEC,OAAOE,MAAMC,QAC5Cf,GACF,EAWF,OARAgB,EAAAA,EAAAA,YAAU,KACRC,SAASC,iBAAiB,QAASR,GAAoB,GAChD,KACLO,SAASE,oBAAoB,QAAST,GAAoB,EAAK,IAGhE,KAGDU,EAAAA,EAAAA,MAAA,OAAKC,UAAWP,EAAAA,EAAMQ,eAAeC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWP,EAAAA,EAAMW,YAEtBL,EAAAA,EAAAA,MAAA,OAAKC,UAAWP,EAAAA,EAAMY,YAAYH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEX,GAAG,QACHC,MAAO,CAAEC,OAAQ,MACjBT,IAAKA,EACLqB,QAASA,IAAMzB,GAAe,GAAMqB,SAEnCf,EAAE,mBAELgB,EAAAA,EAAAA,KAAA,OACEV,MAAO,CAAEC,OAAQ,MACjBF,GAAG,QACHP,IAAKA,EACLqB,QAASA,IAAMtB,GAAiB,GAAMkB,SAErCf,EAAE,wBAGPY,EAAAA,EAAAA,MAACQ,EAAAA,EAAc,CAAAL,SAAA,CACZtB,IACCuB,EAAAA,EAAAA,KAAClC,EAAW,CACVuC,UAAYC,GAAM5B,EAAe4B,GACjC7B,YAAaA,EACbL,KAAMA,EACNC,WAAYA,EACZC,cAAeA,EACfC,OAAQA,EACRJ,QAASA,IAGZS,IACCoB,EAAAA,EAAAA,KAAChC,EAAa,CACZqC,UAAYC,GAAMzB,EAAiByB,GACnC1B,cAAeA,EACfN,cAAeA,EACfC,OAAQA,EACRL,aAAcA,EACdC,QAASA,SAIX,C","sources":["Dashboard/InsDashboard/Components/Mainbody/Sidebar/components/InstituteDisplayPerson/DisplayPersonOption.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport CustomSuspense from \"../../../../../../../Custom/SuspenseLoading/CustomSuspense\";\nimport style from \"../SidebarBottom.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst EditDisplay = React.lazy(() =>\n  import(\"../../../../../Modals/DisplayPerson/EditDisplay\")\n);\nconst DeleteDisplay = React.lazy(() =>\n  import(\"../../../../../Modals/DisplayPerson/DeleteDisplay\")\n);\n\nconst DisplayPersonOption = ({\n  closeTooltip,\n  refetch,\n  name,\n  dsignation,\n  displayUserId,\n  userId,\n  closeMenu,\n}) => {\n  const [editDisplay, setEditDisplay] = useState(false);\n  const [deleteDisplay, setDeleteDisplay] = useState(false);\n  const ref = useRef(null);\n  const { t } = useTranslation();\n  const handleClickOutside = (e) => {\n    if (e.target.id !== \"edlit\" && e.target.style.zIndex !== \"58\") {\n      closeMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={style.profileToolTip}>\n      <div className={style.triangle}></div>\n\n      <div className={style.profilelist}>\n        <div\n          id=\"edlit\"\n          style={{ zIndex: \"33\" }}\n          ref={ref}\n          onClick={() => setEditDisplay(true)}\n        >\n          {t(\"edit_display\")}\n        </div>\n        <div\n          style={{ zIndex: \"33\" }}\n          id=\"edlit\"\n          ref={ref}\n          onClick={() => setDeleteDisplay(true)}\n        >\n          {t(\"remove_display\")}\n        </div>\n      </div>\n      <CustomSuspense>\n        {editDisplay && (\n          <EditDisplay\n            hideModal={(w) => setEditDisplay(w)}\n            editDisplay={editDisplay}\n            name={name}\n            dsignation={dsignation}\n            displayUserId={displayUserId}\n            userId={userId}\n            refetch={refetch}\n          />\n        )}\n        {deleteDisplay && (\n          <DeleteDisplay\n            hideModal={(w) => setDeleteDisplay(w)}\n            deleteDisplay={deleteDisplay}\n            displayUserId={displayUserId}\n            userId={userId}\n            closeTooltip={closeTooltip}\n            refetch={refetch}\n          />\n        )}\n      </CustomSuspense>\n    </div>\n  );\n};\n\nexport default DisplayPersonOption;\n"],"names":["EditDisplay","React","DeleteDisplay","_ref","closeTooltip","refetch","name","dsignation","displayUserId","userId","closeMenu","editDisplay","setEditDisplay","useState","deleteDisplay","setDeleteDisplay","ref","useRef","t","useTranslation","handleClickOutside","e","target","id","style","zIndex","useEffect","document","addEventListener","removeEventListener","_jsxs","className","profileToolTip","children","_jsx","triangle","profilelist","onClick","CustomSuspense","hideModal","w"],"sourceRoot":""}