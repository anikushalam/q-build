{"version":3,"file":"static/js/64338.cf9f4687.chunk.js","mappings":"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","sources":["optimized/Auth/Login/Login.jsx","optimized/Auth/Auth.jsx","optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Login/LoginFormWithMobile.jsx","optimized/Auth/Login/LoginFormWithUserName.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Ui/Button/CreateButton.jsx","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/optimized/Ui/Button/Button.module.css?2226"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\nimport LoginFormWithUserName from \"./LoginFormWithUserName\";\nimport LoginFormWithMobile from \"./LoginFormWithMobile\";\n\nconst userMobile = \"USER_MOBILE\";\nconst userName = \"USER_NAME\";\nconst instituteUserName = \"INSTITUTE_USER_NAME\";\nconst userLogin = [userMobile, userName];\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const [state, setState] = useState(\"USER_MOBILE\");\n  const onUser = () => {\n    setState(userMobile);\n  };\n  const onUserName = () => {\n    setState(userName);\n  };\n  const onInstitute = () => {\n    setState(instituteUserName);\n  };\n\n  return (\n    <>\n      <div className={style.auth_login_tab_container}>\n        <div\n          className={\n            userLogin?.includes(state)\n              ? style.auth_login_tab_active\n              : style.auth_login_tab\n          }\n          onClick={onUser}\n        >\n          {t(\"user_staff_student\")}\n        </div>\n        <div\n          className={\n            state === instituteUserName\n              ? style.auth_login_tab_active\n              : style.auth_login_tab\n          }\n          onClick={onInstitute}\n        >\n          {t(\"institute\")}\n        </div>\n      </div>\n      {state === userMobile ? (\n        <LoginFormWithMobile onUserName={onUserName} />\n      ) : state === userName ? (\n        <LoginFormWithUserName isUser onUserMobile={onUser} />\n      ) : (\n        <LoginFormWithUserName />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport GetStarted from \"./GetStarted\";\nimport AuthCardWrapper from \"./AuthCardWrapper\";\nimport Login from \"../Auth/Login/Login\";\nimport { useRedirectLogin } from \"../../oneTimeLogin/one-time-login\";\n\nconst Auth = () => {\n  const { autoLogin } = useRedirectLogin();\n  useEffect(() => {\n    autoLogin();\n  }, []);\n  return (\n    <GetStarted>\n      <AuthCardWrapper>\n        <Login />\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default Auth;\n","import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthUserNumber } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  invalidateAuthEmailOrMobile,\n  typeOfAuth,\n} from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nconst LoginFormWithMobile = ({ onUserName, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [authUserNumber] = useAuthUserNumber();\n  const [state, setState] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n\n  const onChangeHandler = (e) => {\n    setState(e.target.value);\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (state) {\n      setDisabled((pre) => !pre);\n      authUserNumber({\n        userPhoneNumber: state,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(state),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            navigate(\"/verify\", {\n              state: {\n                phoneNumber: response?.ePhone,\n                type:\n                  typeOfAuth(state) === \"qviple id\"\n                    ? \"mobile number\"\n                    : typeOfAuth(state),\n                accessFrom: accessFrom,\n                landingPage: {\n                  appId: searchParams?.get(\"goaid\"),\n                  instituteId: searchParams?.get(\"goid\"),\n                  departmentId: searchParams?.get(\"godid\"),\n                  applicationName: searchParams?.get(\"gon\"),\n                  hostelId: searchParams?.get(\"gohid\"),\n                  isHostel: searchParams?.get(\"gov\"),\n                },\n              },\n            });\n            setDisabled((pre) => !pre);\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    } else {\n      setErrorField({\n        state: \"* required\",\n      });\n    }\n  };\n  return (\n    <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n      <AuthFormFieldWithIcon\n        label={t(\"user_email_number_qviple_id\")}\n        placeholder={t(\"user_email_number_qviple_id_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-flag.svg`}\n        validate={errorField[\"state\"]}\n        name=\"mobile_number\"\n        value={state}\n        onChange={onChangeHandler}\n      />\n      <p className={style.auth_privacy_and_policy}>\n        {t(\"mobile_login_note\")}{\" \"}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/terms/condition\">{t(\"terms_condition\")}</a>\n        </span>{\" \"}\n        {t(\"and\")}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/privacy/policy\">{t(\"privacy_policy\")}</a>\n        </span>\n      </p>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"send_otp\")}\n        disabled={disabled}\n      />\n      <div className={style.auth_footer_container}>\n        <p className={style.auth_forget_text} onClick={onUserName}>\n          {t(\"login_with_user_name\")}\n        </p>\n      </div>\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithMobile;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthLogin } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useLogin } from \"../hooks/use-login\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nimport { useNavigate } from \"react-router-dom\";\nconst LoginFormWithUserName = ({ isUser, onUserMobile, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    insUserName: \"\",\n    insPassword: \"\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authLogin] = useAuthLogin();\n  const { userDispatchAction, instituteDispatchAction } = useLogin();\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.insUserName))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authLogin({\n          login: state,\n        })\n          .then((res) => {\n            const response = decryption(res?.data?.encrypt);\n            // console.info(\"response\", response);\n\n            if (response?.login) {\n              if (response?.user)\n                userDispatchAction({\n                  token: response?.token,\n                  user: response?.user,\n                  isUniversal: response?.user?.is_universal,\n                  phoneNumber: response?.user?.code_arr,\n                  u_name:\n                    response?.user?.userPhoneNumber ||\n                    response?.user?.userEmail,\n                  accessFrom: accessFrom,\n                });\n              else\n                instituteDispatchAction({\n                  token: response?.token,\n                  institute: response?.institute,\n                  isUniversal: response?.institute?.is_universal,\n                  main_role: response?.main_role,\n                });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Credentials\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onForgetHandler = () => {\n    let url = \"\";\n    if (isUser) url = \"/user/forget\";\n    else url = \"/institute/forget\";\n    navigate(url);\n  };\n  const onInstituteAccount = () => {\n    navigate(\"/institute\");\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <AuthFormFieldWithIcon\n        label={t(\"username\")}\n        placeholder={t(\"username_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n        validate={errorField[\"insUserName\"]}\n        name=\"insUserName\"\n        value={state.insUserName}\n        onChange={onChangeHandler}\n      />\n      <AuthFormFieldWithIcon\n        label={t(\"password\")}\n        placeholder={t(\"password_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-password.svg`}\n        validate={errorField[\"insPassword\"]}\n        name=\"insPassword\"\n        value={state.insPassword}\n        onChange={onChangeHandler}\n        type=\"password\"\n        isPassword\n      />\n\n      <div className={style.auth_forget_container}>\n        <p className={style.auth_forget_text} onClick={onForgetHandler}>\n          {t(\"forgot_password\")}\n        </p>\n      </div>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"login\")}\n        disabled={disabled}\n      />\n      {isUser ? (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onUserMobile}>\n            {t(\"continue_with_mobile_no\")}\n          </p>\n        </div>\n      ) : (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onInstituteAccount}>\n            {t(\"new_to_qviple\")} {t(\"signup\")}\n          </p>\n        </div>\n      )}\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithUserName;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./Button.module.css\";\nconst CreateButton = ({ label, count, onAction, customStyle, isTranslate }) => {\n  const { t } = useTranslation();\n\n  return isTranslate ? (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {label}\n    </div>\n  ) : (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {t(label)}\n    </div>\n  );\n};\n\nexport default CreateButton;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrapper\":\"Button_btn_wrapper__ihT7O\",\"btn_container\":\"Button_btn_container__OaH2t\",\"create_btn_container\":\"Button_create_btn_container__JuZrx\",\"upload_excel_file\":\"Button_upload_excel_file__a7d0K\",\"set_btn_container\":\"Button_set_btn_container__RvfRG\",\"ccb_button\":\"Button_ccb_button__Mjv4T\"};"],"names":["userMobile","userName","instituteUserName","userLogin","Login","t","useTranslation","state","setState","useState","onUser","_jsxs","_Fragment","children","className","style","auth_login_tab_container","_jsx","includes","auth_login_tab_active","auth_login_tab","onClick","onInstitute","LoginFormWithMobile","onUserName","LoginFormWithUserName","isUser","onUserMobile","Auth","autoLogin","useRedirectLogin","useEffect","GetStarted","AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","auth_card_wrapper","auth_create_container","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","memo","accessFrom","navigate","useNavigate","searchParams","useSearchParams","authUserNumber","useAuthUserNumber","disabled","setDisabled","errorField","setErrorField","snackbar","setSnackbar","open","msg","variant","onSubmit","e","preventDefault","pre","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","then","res","_res$data","response","decryption","data","encrypt","phoneNumber","ePhone","type","typeOfAuth","landingPage","appId","get","instituteId","departmentId","applicationName","hostelId","isHostel","catch","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","concat","assestsAuthUrl","validate","name","value","onChange","target","auth_privacy_and_policy","auth_privacy_and_policy_link","href","ButtonWithTypeSubmit","buttonText","auth_footer_container","auth_forget_text","NotifyEvent","eventState","eventStateHandler","insUserName","insPassword","authLogin","useAuthLogin","userDispatchAction","instituteDispatchAction","useLogin","onChangeHandler","prev","validation","requiredField","existingRequiredField","invalidateAuthUsername","login","_response$user","_response$user2","_response$user3","_response$user4","_response$institute","user","token","isUniversal","is_universal","code_arr","u_name","userEmail","institute","main_role","err","isPassword","auth_forget_container","onForgetHandler","url","onInstituteAccount","minLength","maxLength","passwordVisible","setPasswordVisible","htmlFor","src","alt","onToggle","count","isTranslate","create_btn_container","optional","arguments","length","undefined","error","obj","required","req"],"sourceRoot":""}