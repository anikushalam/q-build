{"version":3,"file":"static/js/70887.5b1aa593.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/UserForgetVerify.jsx","optimized/Auth/Verification/OtpResendTimer.jsx","optimized/Ui/Button/CreateButton.jsx","optimized/Utils/Snackbar/NotifyOverlay.jsx","optimized/Utils/Snackbar/NotifyEvent.jsx","optimized/Validation/Auth/invalidateAuthUsername.js","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/optimized/Ui/Button/Button.module.css?2226","webpack://mithkal-qviple/./src/optimized/Utils/Utils.module.css?d850"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport {\n  useAuthUserForgetOtp,\n  useAuthUserNumber,\n} from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport OtpResendTimer from \"../Verification/OtpResendTimer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { invalidateAuthEmailOrMobile } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst UserForgetVerify = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [state, setState] = useState({\n    userOtpCode: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForgetOtp] = useAuthUserForgetOtp();\n  const [authUserNumber] = useAuthUserNumber();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, userOtpCode: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation) && getQuery.state?.uid) {\n      setDisabled((pre) => !pre);\n      authUserForgetOtp({\n        uid: getQuery.state?.uid,\n        otp: state,\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.user?._id) {\n            navigate(\"/user/forget/password\", {\n              state: {\n                uid: response?.user?._id,\n              },\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid Otp\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onOtpResend = () => {\n    if (getQuery?.state?.phoneNumber) {\n      authUserNumber({\n        userPhoneNumber: `${getQuery?.state?.phoneNumber}`,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(`${getQuery?.state?.phoneNumber}`),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            setSnackbar({\n              open: true,\n              msg: `Code will be resent to xxxx- ${`${getQuery?.state?.phoneNumber}`?.substring(\n                `${getQuery?.state?.phoneNumber}`?.length - 4\n              )}`,\n              variant: \"success\",\n            });\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forget_password_verification_code\"\n        subTitle={`${t(\"verification_code_note\")}${\n          getQuery.state?.type ?? \"\"\n        }${t(\"ending\")} ${`${getQuery?.state?.phoneNumber}`?.substring(\n          `${getQuery?.state?.phoneNumber}`?.length - 4\n        )}`}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            placeholder={t(\"verification_code\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-otp.svg`}\n            maxLength=\"4\"\n            validate={errorField[\"userOtpCode\"]}\n            name=\"userOtpCode\"\n            value={state.userOtpCode}\n            onChange={onChangeHandler}\n          />\n          <div className={style.auth_footer_container}>\n            <p className={style.auth_otp_text}>\n              {t(\"if_you_did_not_recieve_otp\")}\n              <OtpResendTimer onOtpResend={onOtpResend} />\n            </p>\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"verify\")}\n            disabled={disabled}\n          />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default UserForgetVerify;\n","import React, { memo, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\n\nconst OtpResendTimer = ({ onOtpResend }) => {\n  const { t } = useTranslation();\n  const [timer, setTimer] = useState(\"\");\n  const Ref = useRef(null);\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    return {\n      total,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(seconds);\n    }\n  };\n\n  const clearTimer = (e) => {\n    setTimer(\"40\");\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 40);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickResetTimer = () => {\n    clearTimer(getDeadTime());\n  };\n  const ResendOtpHandler = () => {\n    if (!timer) {\n      onOtpResend();\n      onClickResetTimer();\n    }\n  };\n  return (\n    <>\n      <span className={style.auth_otp_resend} onClick={ResendOtpHandler}>\n        {\" \"}\n        {t(\"resend\")}{\" \"}\n      </span>\n      <span className={style.auth_otp_resend}>{timer}</span>\n    </>\n  );\n};\n\nexport default memo(OtpResendTimer);\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./Button.module.css\";\nconst CreateButton = ({ label, count, onAction, customStyle, isTranslate }) => {\n  const { t } = useTranslation();\n\n  return isTranslate ? (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {label}\n    </div>\n  ) : (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {t(label)}\n    </div>\n  );\n};\n\nexport default CreateButton;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport style from \"../Utils.module.css\";\nimport { assestsUtilityUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\n\nconst NotifyOverlay = ({ onClose, isVariant, isHide, children }) => {\n  // console.info(\"isHide\", isHide);\n  return ReactDOM.createPortal(\n    <div>\n      {/* <div className={style.notify_backdrop} onClick={onClose} /> */}\n      <div\n        className={isHide ? style.notify_hide_overlay : style.notify_overlay}\n      >\n        <div\n          className={style.notify_container}\n          style={{\n            \"--notify-bg-color\": isVariant,\n          }}\n        >\n          {children}\n          <img\n            src={`${assestsUtilityUrl}/close-white.svg`}\n            alt=\"close icon\"\n            onClick={onClose}\n            className={style.notify_close}\n          />\n          {/* <img src={`${assestsUtilsUrl}/close.svg`} alt=\"close icon\" /> */}\n        </div>\n      </div>\n    </div>,\n    document.getElementById(\"notify-alert\")\n  );\n};\n\nexport default NotifyOverlay;\n","import { useEffect, useState } from \"react\";\nimport NotifyOverlay from \"./NotifyOverlay\";\nimport style from \"../Utils.module.css\";\n\nconst variantType = {\n  success: \"green\",\n  error: \"#ed4a4a\",\n  warning: \"orange\",\n};\nconst NotifyEvent = ({ eventState, eventStateHandler }) => {\n  const [isHide, setIsHide] = useState(false);\n  const onClose = () => {\n    setIsHide(true);\n    let animationTimeout = setTimeout(() => {\n      eventStateHandler((prev) => ({\n        ...prev,\n        open: false,\n        msg: \"\",\n        variant: \"success\",\n      }));\n      setIsHide(false);\n    }, 500);\n    return () => clearTimeout(animationTimeout);\n  };\n\n  // useEffect(() => {\n  //   let identifire = setTimeout(() => {\n  //     onClose();\n  //   }, 3000);\n  //   return () => clearTimeout(identifire);\n  // }, []);\n\n  if (!eventState?.open) return null;\n  // console.info(\"dsbfsk,m,lk.,as\", isHide);\n  return (\n    <NotifyOverlay\n      onClose={onClose}\n      isVariant={variantType[eventState?.variant]}\n      isHide={isHide}\n    >\n      <h6 className={style.notify_message}>{eventState?.msg ?? \"\"}</h6>\n    </NotifyOverlay>\n  );\n};\n\nexport default NotifyEvent;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrapper\":\"Button_btn_wrapper__ihT7O\",\"btn_container\":\"Button_btn_container__OaH2t\",\"create_btn_container\":\"Button_create_btn_container__JuZrx\",\"upload_excel_file\":\"Button_upload_excel_file__a7d0K\",\"set_btn_container\":\"Button_set_btn_container__RvfRG\",\"ccb_button\":\"Button_ccb_button__Mjv4T\"};","// extracted by mini-css-extract-plugin\nexport default {\"notify_backdrop\":\"Utils_notify_backdrop__saL0O\",\"notify_overlay\":\"Utils_notify_overlay__GtPc5\",\"notify_hide_overlay\":\"Utils_notify_hide_overlay__MYvkC\",\"notify_overlay_animation\":\"Utils_notify_overlay_animation__pcASm\",\"notify_hide_overlay_animation\":\"Utils_notify_hide_overlay_animation__UKRcG\",\"notify_container\":\"Utils_notify_container__O8DBA\",\"notify_message\":\"Utils_notify_message__PHwKo\",\"notify_close\":\"Utils_notify_close__IwjyA\",\"modal_backdrop\":\"Utils_modal_backdrop__WBquw\",\"modal_overlay\":\"Utils_modal_overlay__Yy-AV\",\"modal_hide_overlay\":\"Utils_modal_hide_overlay__elt3A\",\"navbar_modal_hide_overlay\":\"Utils_navbar_modal_hide_overlay__yqj5q\",\"navbar_modal_overlay\":\"Utils_navbar_modal_overlay__6ub8g\",\"modal_hide_overlay_animation\":\"Utils_modal_hide_overlay_animation__d3TNp\",\"navbar_modal_overlay_animation\":\"Utils_navbar_modal_overlay_animation__Ypk9u\",\"navbar_modal_hide_overlay_animation\":\"Utils_navbar_modal_hide_overlay_animation__QLEse\",\"empty_container\":\"Utils_empty_container__-VyCI\",\"modal_overlay_animation\":\"Utils_modal_overlay_animation__zkjsk\"};"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","UserForgetVerify","_getQuery$state$type","_getQuery$state8","_ref3","_getQuery$state9","_ref4","_getQuery$state10","navigate","useNavigate","getQuery","useLocation","state","setState","useState","userOtpCode","disabled","setDisabled","errorField","setErrorField","snackbar","setSnackbar","open","msg","variant","authUserForgetOtp","useAuthUserForgetOtp","authUserNumber","useAuthUserNumber","GetStarted","concat","type","phoneNumber","substring","length","fontSize","onSubmit","e","_getQuery$state","preventDefault","validation","requiredField","_getQuery$state2","existingRequiredField","uid","pre","otp","then","res","_res$data","_response$user","response","decryption","data","encrypt","_response$user2","user","_id","catch","err","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","maxLength","validate","name","value","onChange","prev","target","auth_footer_container","auth_otp_text","OtpResendTimer","onOtpResend","_getQuery$state3","_getQuery$state4","_getQuery$state5","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","_res$data2","_getQuery$state6","_ref2","_getQuery$state7","ButtonWithTypeSubmit","buttonText","NotifyEvent","eventState","eventStateHandler","timer","setTimer","Ref","useRef","startTimer","total","seconds","Date","parse","Math","floor","getTimeRemaining","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","auth_otp_resend","onClick","ResendOtpHandler","count","isTranslate","create_btn_container","onClose","isVariant","isHide","ReactDOM","notify_hide_overlay","notify_overlay","notify_container","src","assestsUtilityUrl","alt","notify_close","document","getElementById","variantType","success","error","warning","_eventState$msg","setIsHide","NotifyOverlay","animationTimeout","setTimeout","clearTimeout","notify_message","specailSymbol","invalidateAuthUsername","username","includes","typeOfAuth","optional","arguments","undefined","obj","required","req"],"sourceRoot":""}