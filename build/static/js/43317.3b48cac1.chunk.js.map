{"version":3,"file":"static/js/43317.3b48cac1.chunk.js","mappings":"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","sources":["optimized/Services/AdmissionManager/admission_manager_query_mutation_function.js","optimized/Services/AdmissionManager/admissionManagerApiDynamic.js","optimized/Hooks/ApiHooks/AdmissionManager/admission-manager-api.js"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\nexport const admissionActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/ins/${data.instituteId}/admission/query`,\n      method: POST,\n      body: data.activateModule,\n    }),\n  });\n};\n\nexport const admissionUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/edit/staff/admission/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// dashboard\nexport const admissionDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/dashboard/query?mod_id=${data.mod_id}`,\n    providesTags: [\"Cash_finance\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.admission;\n    },\n  });\n};\n\n// admission fund tab\nexport const admissionCashToFinanceFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/finance/${data.aid}/admission/request`,\n      method: POST,\n      body: data.submitAmount,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// offline payment verification\nexport const admissionPaymentVerifyListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/receipts/by?page=${data.page}&limit=${data.limit}&filter_by=${data.filterBy}&over_filter=${data.over_filter}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_requests,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_requests,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPaymentVerifyActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/one/receipts/${data.rid}/status/decheque/query?reqId=${data.reqId}&status=${data.status}`,\n      method: PATCH,\n      body: data.receiptAction,\n    }),\n  });\n};\n\n// admission required document\nexport const admissionDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/document/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_docs,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_docs,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/document/flow`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionUpdateDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/edit/document/flow`,\n      method: PATCH,\n      body: data.editDocument,\n    }),\n  });\n};\nexport const admissionRemoveDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/document/${data.did}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission excel export\nexport const admissionExportExcelListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/export/excel/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_excel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_excel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionEditExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/edit`,\n      method: PATCH,\n      body: data.excelUpdate,\n    }),\n  });\n};\nexport const admissionRemoveExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/destroy/query`,\n      method: DELETE,\n    }),\n  });\n};\nexport const admissionExportFilterExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/pending/fee/${data.aid}?gender=${data.gender}&category=${data.caste}&is_all=${data.is_all}&all_depart=${data.all_depart}&batch_status=${data.batch_status}`,\n      method: PATCH,\n      body: data.exportData,\n    }),\n  });\n};\n// admission moderator\nexport const admissionModeratorListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/role/permission/${data.aid}/all/moderator?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_mods,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_mods,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/new/app/mod?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: POST,\n      body: data.addModerator,\n    }),\n  });\n};\n\nexport const admissionUpdateModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/update/app/mod/${data.modId}?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: PATCH,\n      body: data.updateModerator,\n    }),\n  });\n};\n\nexport const admissionRemoveModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/destroy/app/mod/${data.modId}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission pending fees\nexport const admissionPendingFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/remaining/applicable/array?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search}&flow=${\n        data.flow ?? \"Applicable_Fees_Query\"\n      }`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.remain,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.remain,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionPendingFeesReminderHistoryFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/extra/all/filtered/alarm/${data.id}/query?page=${data.page}&limit=${\n        data.limit\n      }&search=${data.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_message,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_message,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPendingFeesOsStudentListFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/all/outstanding/query`,\n      method: PATCH,\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const admissionPendingFeesReminderFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/trigger/alarm?alarm_mode=${data.alarm_mode}`,\n      method: POST,\n      body: data.reminderData,\n    }),\n  });\n};\n\n// admission excess fees\nexport const admissionExcessFeeNotRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/refund/array?page=${data.page}&limit=${\n        data.limit\n      }&search=${data?.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refund_list,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refund_list,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/refunded/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refunded,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refunded,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeNotRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/excess/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionExcessFeeRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/refund/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission tab controller\nexport const admissionTabControllerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/manage/tab/${data?.aid}`,\n      method: PATCH,\n      body: data.tabManage,\n    }),\n  });\n};\n\n// admission completed application\nexport const admissionCompletedApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/completed/application/detail?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.completed,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.completed,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionCompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/complete`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionIncompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/incomplete`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission ongoing admission\nexport const admissionOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/v2/admission/${ad.aid}/all/ongoing/application?page=${ad.page}&limit=${ad.limit}&search=${ad.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let res = decryption(response?.encrypt);\n\n      if (arg?.search)\n        return {\n          search: true,\n          list: res?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: res?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCreateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/new/application`,\n      method: POST,\n      body: data.application,\n    }),\n  });\n};\n\nexport const admissionUpdateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/${data.appId}`,\n      method: PATCH,\n      body: data.updateApplication,\n    }),\n  });\n};\nexport const admissionRemoveApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/destroy/${data.appId}`,\n      method: DELETE,\n    }),\n  });\n};\n// admission one application\nexport const admissionOneOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/query`,\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.oneApply;\n    },\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationRequestFunction = (builder) => {\n  return builder.query({\n    query: (req) =>\n      `/v2/admission/${req.appId}/request/application?page=${req.page}&limit=${req.limit}&search=${req.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.request,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.request,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationSelectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/select`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationRejectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const admissionOngoingApplicationFormUpdateRejectFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app/form/modify`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/selected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationDocumentCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/docs`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/revert/back/select/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentEditStructureFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/student/${data.sid}/edit/structure`,\n      method: PATCH,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/fee/collected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationFeesCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${\n        data.appId\n      }/pay/offline/confirm?receipt_status=${data?.receipt_status ?? \"\"}`,\n      method: POST,\n      body: data.collect,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/revert/back/docs/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationConfirmFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllConfirmListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.confirm,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationConfirmReviewFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/student/review/query`,\n      method: PATCH,\n      body: data.review,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.review,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.review,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllReviewListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.review,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewSortFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/review/array/${data.appId}?sort_query=${data.sort_query}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionOngoingApplicationReviewBatchFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/batch`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.batch,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationReviewClassesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/application/class/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.classes,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.classes,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewAllotFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/student/${data.appId}/allot/class/${data.cid}`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewCancelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/allotted/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.allot,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.allot,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentCancelFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/allotted/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationCancelledFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/cancelled/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionTransferApplicatToOtherApplicationFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/transfer/apps/query`,\n      method: PATCH,\n      body: data.transferApplicantData,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDailyCollectFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/by/date/collection/${data?.appId}/query?valid_date=${data.valid_date}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.day_wise;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionApplicantCancelledListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/cancel/app/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCancelledListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.aid}/cancel/export/query?all_depart=${data.all_depart}&batch_status=${data.batch_status}&timeline=${data.timeline}&timeline_content=${data.timeline_content}&from=${data.from}&to=${data.to}&bank=${data.bank}`,\n      method: \"PATCH\",\n      body: data?.pendingData,\n    }),\n  });\n};\n\n// for admission readmission related\nexport const admissionReadmissionListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/confirmed/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionCollectFeesFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/fees/student/${data.sid}/re/admission`,\n      method: PATCH,\n      body: data.collect,\n    }),\n  });\n};\n\n//  for one application form setting///\n\nexport const admissionStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// for optional subject\nexport const admissionAddOuterGorupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/subject/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOuterGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// DO NOT USE\nexport const admissionSubjectGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.osid}/one/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/add/subject/group/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionSubGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.sgid}/all/subject/group/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group_select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group_select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOneSubGroupDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.osid}/one/subject/group/query`,\n    providesTags: [\"Nested_Criteria_Detail\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.group,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionSubGroupAddSubjectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.ssid}/add/subject/group/select/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Nested_Criteria_Detail\"],\n  });\n};\n\nexport const admissionInstituteAllSubjectListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/subject/list/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_subjects,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_subjects,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionRemoveOuterGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/subject/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionRemoveSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/delete/subject/group/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// add to pin in single landing page\nexport const institutePinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const instituteUnPinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/un/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// all application\nexport const instituteAllApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/ongoing/application/pinned?page=${data.page}&limit=${data.limit}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      // console.info(\"sjhdfvsdfvbsd\", dect?.ongoing);\n      // let arr = [];\n      // let arr = [...dect?.depend, ...dect?.independ];\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// admission merged docs and collect fees list\n\nexport const admissionMergedApplicationTotalCountFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.aid}/all/merged/ongoing/application`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.ads_obj,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionMergedApplicationDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/docs/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationFeesListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/fees/collect/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/confirm/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingDirectApplicationExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/extra/excel/to/json/${data.aid}/exist/application/student`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const oneApplicationSubjectCountListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/select?search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.subject,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.smid}/one/subject/all/${data?.aid}/student?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.student,\n          studentCount: response?.student_count,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const oneApplicationOneSubjectStudentListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.smid}/subject/${data?.aid}/application/export`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const oneApplicationStudentFormGenerateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v1/extra/generate/custom/oneapplication/${data?.aid}/student/form`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n// ============AFTER MOVE =================\n// this api that move, when their part is optimzed.\nexport const departmentBatchAllClassFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/ins/batch-detail/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.batch?.classroom,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.batch?.classroom,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n","import { admissionManagerApi } from \"./admissionManagerApi\";\nimport {\n  admissionActivateModuleFunction,\n  admissionUpdateModuleFunction,\n  admissionAddDocumentFunction,\n  admissionAddModeratorFunction,\n  admissionCompleteApplicationFunction,\n  admissionCompletedApplicationListFunction,\n  admissionDashboardMasterFunction,\n  admissionDocumentListFunction,\n  admissionEditExportExcelFunction,\n  admissionExcessFeeNotRefundedListFunction,\n  admissionExcessFeeRefundedListFunction,\n  admissionExportExcelListFunction,\n  admissionIncompleteApplicationFunction,\n  admissionModeratorListFunction,\n  admissionPaymentVerifyActionFunction,\n  admissionPaymentVerifyListFunction,\n  admissionPendingFeesOsStudentListFunction,\n  admissionPendingFeesReminderFunction,\n  admissionPendingFeesReminderHistoryFunction,\n  admissionRemoveDocumentFunction,\n  admissionRemoveExportExcelFunction,\n  admissionRemoveModeratorFunction,\n  admissionUpdateDocumentFunction,\n  admissionUpdateModeratorFunction,\n  admissionCashToFinanceFunction,\n  admissionExcessFeeNotRefundedListExportFunction,\n  admissionExcessFeeRefundedListExportFunction,\n  admissionTabControllerFunction,\n  admissionExportFilterExcelFunction,\n  admissionOngoingApplicationFunction,\n  admissionCreateApplicationFunction,\n  admissionUpdateApplicationFunction,\n  admissionRemoveApplicationFunction,\n  admissionOneOngoingApplicationFunction,\n  admissionOngoingApplicationRequestFunction,\n  admissionOngoingApplicationSelectFunction,\n  admissionOngoingApplicationRejectFunction,\n  admissionOngoingApplicationFormUpdateRejectFunction,\n  admissionOngoingApplicationExportFunction,\n  admissionOngoingApplicationDocumentFunction,\n  admissionOngoingApplicationDocumentCollectFunction,\n  admissionOngoingApplicationDocumentRevertFunction,\n  admissionOngoingApplicationDocumentEditStructureFunction,\n  admissionOngoingApplicationFeesFunction,\n  admissionOngoingApplicationFeesCollectFunction,\n  admissionOngoingApplicationFeesRevertFunction,\n  admissionOngoingApplicationConfirmFunction,\n  admissionOngoingApplicationAllConfirmListFunction,\n  admissionOngoingApplicationConfirmReviewFunction,\n  admissionOngoingApplicationReviewFunction,\n  admissionOngoingApplicationAllReviewListFunction,\n  admissionOngoingApplicationReviewSortFunction,\n  admissionOngoingApplicationReviewBatchFunction,\n  admissionOngoingApplicationReviewClassesFunction,\n  admissionOngoingApplicationReviewAllotFunction,\n  admissionOngoingApplicationReviewCancelFunction,\n  admissionOngoingApplicationAllottmentFunction,\n  admissionOngoingApplicationAllottmentCancelFunction,\n  admissionOngoingApplicationCancelledFunction,\n  admissionTransferApplicatToOtherApplicationFunction,\n  admissionOngoingApplicationDailyCollectFunction,\n  admissionApplicantCancelledListFunction,\n  admissionCancelledListExportFunction,\n  admissionPendingFeesFunction,\n  departmentBatchAllClassFunction,\n  admissionReadmissionListFunction,\n  admissionReadmissionConfirmedListFunction,\n  admissionReadmissionCollectFeesFunction,\n  admissionStudentAddSectionFunction,\n  admissionStudentFormDetailFunction,\n  admissionStudentRearrangeSectionFunction,\n  admissionStudentSectionAddChecklistFunction,\n  admissionStudentUpdateSectionChecklistFunction,\n  admissionStudentToggleChecklistFunction,\n  admissionAddOuterGorupFunction,\n  admissionOuterGroupListFunction,\n  admissionSubjectGroupListFunction,\n  admissionAddSubjectGroupFunction,\n  admissionSubGroupListFunction,\n  admissionOneSubGroupDetailFunction,\n  admissionSubGroupAddSubjectFunction,\n  admissionInstituteAllSubjectListFunction,\n  admissionRemoveOuterGroupFunction,\n  admissionRemoveSubjectGroupFunction,\n  institutePinApplicationFunction,\n  instituteUnPinApplicationFunction,\n  instituteAllApplicationListFunction,\n  admissionMergedApplicationDocumentListFunction,\n  admissionMergedApplicationFeesListFunction,\n  admissionMergedApplicationConfirmedListFunction,\n  admissionOngoingDirectApplicationExcelFunction,\n  oneApplicationSubjectCountListFunction,\n  oneApplicationOneSubjectStudentListFunction,\n  oneApplicationOneSubjectStudentListExportFunction,\n  admissionMergedApplicationTotalCountFunction,\n  oneApplicationStudentFormGenerateFunction,\n} from \"./admission_manager_query_mutation_function\";\n\nconst admissionManagerApiDynamic = admissionManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    admissionActivateModule: admissionActivateModuleFunction(builder),\n    admissionUpdateModule: admissionUpdateModuleFunction(builder),\n    admissionDashboardMaster: admissionDashboardMasterFunction(builder),\n    admissionCashToFinance: admissionCashToFinanceFunction(builder),\n    admissionPaymentVerifyList: admissionPaymentVerifyListFunction(builder),\n    admissionPaymentVerifyAction: admissionPaymentVerifyActionFunction(builder),\n    admissionDocumentList: admissionDocumentListFunction(builder),\n    admissionAddDocument: admissionAddDocumentFunction(builder),\n    admissionUpdateDocument: admissionUpdateDocumentFunction(builder),\n    admissionRemoveDocument: admissionRemoveDocumentFunction(builder),\n    admissionExportExcelList: admissionExportExcelListFunction(builder),\n    admissionEditExportExcel: admissionEditExportExcelFunction(builder),\n    admissionRemoveExportExcel: admissionRemoveExportExcelFunction(builder),\n    admissionModeratorList: admissionModeratorListFunction(builder),\n    admissionAddModerator: admissionAddModeratorFunction(builder),\n    admissionUpdateModerator: admissionUpdateModeratorFunction(builder),\n    admissionRemoveModerator: admissionRemoveModeratorFunction(builder),\n    admissionPendingFeesReminderHistory:\n      admissionPendingFeesReminderHistoryFunction(builder),\n    admissionPendingFeesOsStudentList:\n      admissionPendingFeesOsStudentListFunction(builder),\n    admissionPendingFeesReminder: admissionPendingFeesReminderFunction(builder),\n\n    admissionExcessFeeNotRefundedList:\n      admissionExcessFeeNotRefundedListFunction(builder),\n    admissionExcessFeeRefundedList:\n      admissionExcessFeeRefundedListFunction(builder),\n    admissionCompletedApplicationList:\n      admissionCompletedApplicationListFunction(builder),\n    admissionCompleteApplication: admissionCompleteApplicationFunction(builder),\n    admissionIncompleteApplication:\n      admissionIncompleteApplicationFunction(builder),\n\n    admissionExcessFeeNotRefundedListExport:\n      admissionExcessFeeNotRefundedListExportFunction(builder),\n    admissionExcessFeeRefundedListExport:\n      admissionExcessFeeRefundedListExportFunction(builder),\n    admissionTabController: admissionTabControllerFunction(builder),\n    admissionExportFilterExcel: admissionExportFilterExcelFunction(builder),\n    admissionOngoingApplication: admissionOngoingApplicationFunction(builder),\n    admissionCreateApplication: admissionCreateApplicationFunction(builder),\n    admissionUpdateApplication: admissionUpdateApplicationFunction(builder),\n    admissionRemoveApplication: admissionRemoveApplicationFunction(builder),\n    admissionOneOngoingApplication:\n      admissionOneOngoingApplicationFunction(builder),\n    admissionOngoingApplicationRequest:\n      admissionOngoingApplicationRequestFunction(builder),\n    admissionOngoingApplicationSelect:\n      admissionOngoingApplicationSelectFunction(builder),\n    admissionOngoingApplicationReject:\n      admissionOngoingApplicationRejectFunction(builder),\n    admissionOngoingApplicationFormUpdateReject:\n      admissionOngoingApplicationFormUpdateRejectFunction(builder),\n    admissionOngoingApplicationExport:\n      admissionOngoingApplicationExportFunction(builder),\n    admissionOngoingApplicationDocument:\n      admissionOngoingApplicationDocumentFunction(builder),\n    admissionOngoingApplicationDocumentCollect:\n      admissionOngoingApplicationDocumentCollectFunction(builder),\n    admissionOngoingApplicationDocumentRevert:\n      admissionOngoingApplicationDocumentRevertFunction(builder),\n    admissionOngoingApplicationDocumentEditStructure:\n      admissionOngoingApplicationDocumentEditStructureFunction(builder),\n    admissionOngoingApplicationFees:\n      admissionOngoingApplicationFeesFunction(builder),\n    admissionOngoingApplicationFeesCollect:\n      admissionOngoingApplicationFeesCollectFunction(builder),\n    admissionOngoingApplicationFeesRevert:\n      admissionOngoingApplicationFeesRevertFunction(builder),\n    admissionOngoingApplicationConfirm:\n      admissionOngoingApplicationConfirmFunction(builder),\n    admissionOngoingApplicationAllConfirmList:\n      admissionOngoingApplicationAllConfirmListFunction(builder),\n    admissionOngoingApplicationConfirmReview:\n      admissionOngoingApplicationConfirmReviewFunction(builder),\n    admissionOngoingApplicationReview:\n      admissionOngoingApplicationReviewFunction(builder),\n    admissionOngoingApplicationAllReviewList:\n      admissionOngoingApplicationAllReviewListFunction(builder),\n    admissionOngoingApplicationReviewSort:\n      admissionOngoingApplicationReviewSortFunction(builder),\n    admissionOngoingApplicationReviewBatch:\n      admissionOngoingApplicationReviewBatchFunction(builder),\n    admissionOngoingApplicationReviewClasses:\n      admissionOngoingApplicationReviewClassesFunction(builder),\n    admissionOngoingApplicationReviewAllot:\n      admissionOngoingApplicationReviewAllotFunction(builder),\n    admissionOngoingApplicationReviewCancel:\n      admissionOngoingApplicationReviewCancelFunction(builder),\n    admissionOngoingApplicationAllottment:\n      admissionOngoingApplicationAllottmentFunction(builder),\n    admissionOngoingApplicationAllottmentCancel:\n      admissionOngoingApplicationAllottmentCancelFunction(builder),\n    admissionOngoingApplicationCancelled:\n      admissionOngoingApplicationCancelledFunction(builder),\n\n    admissionTransferApplicatToOtherApplication:\n      admissionTransferApplicatToOtherApplicationFunction(builder),\n    admissionOngoingApplicationDailyCollect:\n      admissionOngoingApplicationDailyCollectFunction(builder),\n    admissionPendingFees: admissionPendingFeesFunction(builder),\n    admissionApplicantCancelledList:\n      admissionApplicantCancelledListFunction(builder),\n    admissionCancelledListExport: admissionCancelledListExportFunction(builder),\n\n    admissionReadmissionList: admissionReadmissionListFunction(builder),\n    admissionReadmissionConfirmedList:\n      admissionReadmissionConfirmedListFunction(builder),\n    admissionReadmissionCollectFees:\n      admissionReadmissionCollectFeesFunction(builder),\n\n    admissionStudentAddSection: admissionStudentAddSectionFunction(builder),\n    admissionStudentSectionAddChecklist:\n      admissionStudentSectionAddChecklistFunction(builder),\n    admissionStudentRearrangeSection:\n      admissionStudentRearrangeSectionFunction(builder),\n    admissionStudentUpdateSectionChecklist:\n      admissionStudentUpdateSectionChecklistFunction(builder),\n    admissionStudentFormDetail: admissionStudentFormDetailFunction(builder),\n    admissionStudentToggleChecklist:\n      admissionStudentToggleChecklistFunction(builder),\n\n    admissionAddOuterGorup: admissionAddOuterGorupFunction(builder),\n    admissionOuterGroupList: admissionOuterGroupListFunction(builder),\n    admissionSubjectGroupList: admissionSubjectGroupListFunction(builder),\n    admissionAddSubjectGroup: admissionAddSubjectGroupFunction(builder),\n    admissionSubGroupList: admissionSubGroupListFunction(builder),\n    admissionOneSubGroupDetail: admissionOneSubGroupDetailFunction(builder),\n    admissionSubGroupAddSubject: admissionSubGroupAddSubjectFunction(builder),\n    admissionInstituteAllSubjectList:\n      admissionInstituteAllSubjectListFunction(builder),\n\n    admissionRemoveOuterGroup: admissionRemoveOuterGroupFunction(builder),\n    admissionRemoveSubjectGroup: admissionRemoveSubjectGroupFunction(builder),\n    institutePinApplication: institutePinApplicationFunction(builder),\n    instituteUnPinApplication: instituteUnPinApplicationFunction(builder),\n    instituteAllApplicationList: instituteAllApplicationListFunction(builder),\n    admissionMergedApplicationFeesList:\n      admissionMergedApplicationFeesListFunction(builder),\n    admissionMergedApplicationDocumentList:\n      admissionMergedApplicationDocumentListFunction(builder),\n    admissionMergedApplicationConfirmedList:\n      admissionMergedApplicationConfirmedListFunction(builder),\n    admissionOngoingDirectApplicationExcel:\n      admissionOngoingDirectApplicationExcelFunction(builder),\n    oneApplicationSubjectCountList:\n      oneApplicationSubjectCountListFunction(builder),\n    oneApplicationOneSubjectStudentList:\n      oneApplicationOneSubjectStudentListFunction(builder),\n    oneApplicationOneSubjectStudentListExport:\n      oneApplicationOneSubjectStudentListExportFunction(builder),\n    admissionMergedApplicationTotalCount:\n      admissionMergedApplicationTotalCountFunction(builder),\n    oneApplicationStudentFormGenerate:\n      oneApplicationStudentFormGenerateFunction(builder),\n\n    //\n    departmentBatchAllClass: departmentBatchAllClassFunction(builder),\n  }),\n});\n\nexport const {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useOneApplicationOneSubjectStudentListExportMutation,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n} = admissionManagerApiDynamic;\n","import {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationFormUpdateRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useAdmissionOngoingDirectApplicationExcelMutation,\n  useOneApplicationSubjectCountListQuery,\n  useOneApplicationOneSubjectStudentListQuery,\n  useAdmissionMergedApplicationTotalCountQuery,\n  useOneApplicationStudentFormGenerateMutation,\n  //\n  useDepartmentBatchAllClassQuery,\n  useOneApplicationOneSubjectStudentListExportMutation,\n} from \"../../../Services/AdmissionManager/admissionManagerApiDynamic\";\n\nexport const useAdmissionActivateModule = () => {\n  const [admissionActivateModule] = useAdmissionActivateModuleMutation();\n  return [admissionActivateModule];\n};\nexport const useAdmissionUpdateModule = () => {\n  const [admissionUpdateModule] = useAdmissionUpdateModuleMutation();\n  return [admissionUpdateModule];\n};\nexport const useAdmissionDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDashboardMaster: data,\n    admissionDashboardMasterRefetch: refetch,\n    admissionDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCashToFinance = () => {\n  const [admissionCashToFinance] = useAdmissionCashToFinanceMutation();\n  return [admissionCashToFinance];\n};\nexport const useAdmissionPaymentVerifyList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPaymentVerifyListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPaymentVerifyList: data,\n    admissionPaymentVerifyListRefetch: refetch,\n    admissionPaymentVerifyListLoading: isFetching,\n  };\n};\nexport const useAdmissionPaymentVerifyAction = () => {\n  const [admissionPaymentVerifyAction] =\n    useAdmissionPaymentVerifyActionMutation();\n  return [admissionPaymentVerifyAction];\n};\nexport const useAdmissionDocumentList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDocumentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDocumentList: data,\n    admissionDocumentListRefetch: refetch,\n    admissionDocumentListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddDocument = () => {\n  const [admissionAddDocument] = useAdmissionAddDocumentMutation();\n  return [admissionAddDocument];\n};\nexport const useAdmissionUpdateDocument = () => {\n  const [admissionUpdateDocument] = useAdmissionUpdateDocumentMutation();\n  return [admissionUpdateDocument];\n};\nexport const useAdmissionRemoveDocument = () => {\n  const [admissionRemoveDocument] = useAdmissionRemoveDocumentMutation();\n  return [admissionRemoveDocument];\n};\nexport const useAdmissionExportExcelList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExportExcelListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExportExcelList: data,\n    admissionExportExcelListRefetch: refetch,\n    admissionExportExcelListLoading: isFetching,\n  };\n};\nexport const useAdmissionEditExportExcel = () => {\n  const [admissionEditExportExcel] = useAdmissionEditExportExcelMutation();\n  return [admissionEditExportExcel];\n};\nexport const useAdmissionRemoveExportExcel = () => {\n  const [admissionRemoveExportExcel] = useAdmissionRemoveExportExcelMutation();\n  return [admissionRemoveExportExcel];\n};\nexport const useAdmissionModeratorList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionModeratorListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionModeratorList: data,\n    admissionModeratorListRefetch: refetch,\n    admissionModeratorListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddModerator = () => {\n  const [admissionAddModerator] = useAdmissionAddModeratorMutation();\n  return [admissionAddModerator];\n};\nexport const useAdmissionUpdateModerator = () => {\n  const [admissionUpdateModerator] = useAdmissionUpdateModeratorMutation();\n  return [admissionUpdateModerator];\n};\nexport const useAdmissionRemoveModerator = () => {\n  const [admissionRemoveModerator] = useAdmissionRemoveModeratorMutation();\n  return [admissionRemoveModerator];\n};\n\nexport const useAdmissionPendingFeesReminderHistory = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionPendingFeesReminderHistoryQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionPendingFeesReminderHistory: data,\n    admissionPendingFeesReminderHistoryRefetch: refetch,\n    admissionPendingFeesReminderHistoryLoading: isFetching,\n  };\n};\nexport const useAdmissionPendingFeesOsStudentList = () => {\n  const [admissionPendingFeesOsStudentList] =\n    useAdmissionPendingFeesOsStudentListMutation();\n  return [admissionPendingFeesOsStudentList];\n};\nexport const useAdmissionPendingFeesReminder = () => {\n  const [admissionPendingFeesReminder] =\n    useAdmissionPendingFeesReminderMutation();\n  return [admissionPendingFeesReminder];\n};\n\nexport const useAdmissionExcessFeeNotRefundedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionExcessFeeNotRefundedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionExcessFeeNotRefundedList: data,\n    admissionExcessFeeNotRefundedListRefetch: refetch,\n    admissionExcessFeeNotRefundedListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionExcessFeeRefundedList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExcessFeeRefundedListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExcessFeeRefundedList: data,\n    admissionExcessFeeRefundedListRefetch: refetch,\n    admissionExcessFeeRefundedListLoading: isFetching,\n  };\n};\nexport const useAdmissionExcessFeeNotRefundedListExport = () => {\n  const [admissionExcessFeeNotRefundedListExport] =\n    useAdmissionExcessFeeNotRefundedListExportMutation();\n  return [admissionExcessFeeNotRefundedListExport];\n};\nexport const useAdmissionExcessFeeRefundedListExport = () => {\n  const [admissionExcessFeeRefundedListExport] =\n    useAdmissionExcessFeeRefundedListExportMutation();\n  return [admissionExcessFeeRefundedListExport];\n};\n\nexport const useAdmissionCompletedApplicationList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionCompletedApplicationListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionCompletedApplicationList: data,\n    admissionCompletedApplicationListRefetch: refetch,\n    admissionCompletedApplicationListLoading: isFetching,\n  };\n};\nexport const useAdmissionCompleteApplication = () => {\n  const [admissionCompleteApplication] =\n    useAdmissionCompleteApplicationMutation();\n  return [admissionCompleteApplication];\n};\nexport const useAdmissionIncompleteApplication = () => {\n  const [admissionIncompleteApplication] =\n    useAdmissionIncompleteApplicationMutation();\n  return [admissionIncompleteApplication];\n};\nexport const useAdmissionTabController = () => {\n  const [admissionTabController] = useAdmissionTabControllerMutation();\n  return [admissionTabController];\n};\nexport const useAdmissionExportFilterExcel = () => {\n  const [admissionExportFilterExcel] = useAdmissionExportFilterExcelMutation();\n  return [admissionExportFilterExcel];\n};\n\nexport const useAdmissionOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplication: data,\n    admissionOngoingApplicationRefetch: refetch,\n    admissionOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionCreateApplication = () => {\n  const [admissionCreateApplication] = useAdmissionCreateApplicationMutation();\n  return [admissionCreateApplication];\n};\nexport const useAdmissionUpdateApplication = () => {\n  const [admissionUpdateApplication] = useAdmissionUpdateApplicationMutation();\n  return [admissionUpdateApplication];\n};\nexport const useAdmissionRemoveApplication = () => {\n  const [admissionRemoveApplication] = useAdmissionRemoveApplicationMutation();\n  return [admissionRemoveApplication];\n};\n\nexport const useAdmissionOneOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneOngoingApplicationQuery(\n    args.appId,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOneOngoingApplication: data,\n    admissionOneOngoingApplicationRefetch: refetch,\n    admissionOneOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationRequest = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationRequestQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationRequest: data,\n    admissionOngoingApplicationRequestRefetch: refetch,\n    admissionOngoingApplicationRequestLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationSelect = () => {\n  const [admissionOngoingApplicationSelect] =\n    useAdmissionOngoingApplicationSelectMutation();\n  return [admissionOngoingApplicationSelect];\n};\nexport const useAdmissionOngoingApplicationReject = () => {\n  const [admissionOngoingApplicationReject] =\n    useAdmissionOngoingApplicationRejectMutation();\n  return [admissionOngoingApplicationReject];\n};\nexport const useAdmissionOngoingApplicationFormUpdateReject = () => {\n  const [admissionOngoingApplicationFormUpdateReject] =\n    useAdmissionOngoingApplicationFormUpdateRejectMutation();\n  return [admissionOngoingApplicationFormUpdateReject];\n};\nexport const useAdmissionOngoingApplicationExport = () => {\n  const [admissionOngoingApplicationExport] =\n    useAdmissionOngoingApplicationExportMutation();\n  return [admissionOngoingApplicationExport];\n};\n\nexport const useAdmissionOngoingApplicationDocument = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDocumentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDocument: data,\n    admissionOngoingApplicationDocumentRefetch: refetch,\n    admissionOngoingApplicationDocumentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationDocumentCollect = () => {\n  const [admissionOngoingApplicationDocumentCollect] =\n    useAdmissionOngoingApplicationDocumentCollectMutation();\n  return [admissionOngoingApplicationDocumentCollect];\n};\n\nexport const useAdmissionOngoingApplicationDocumentRevert = () => {\n  const [admissionOngoingApplicationDocumentRevert] =\n    useAdmissionOngoingApplicationDocumentRevertMutation();\n  return [admissionOngoingApplicationDocumentRevert];\n};\n\nexport const useAdmissionOngoingApplicationDocumentEditStructure = () => {\n  const [admissionOngoingApplicationDocumentEditStructure] =\n    useAdmissionOngoingApplicationDocumentEditStructureMutation();\n  return [admissionOngoingApplicationDocumentEditStructure];\n};\nexport const useAdmissionOngoingApplicationFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplicationFees: data,\n    admissionOngoingApplicationFeesRefetch: refetch,\n    admissionOngoingApplicationFeesLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationFeesCollect = () => {\n  const [admissionOngoingApplicationFeesCollect] =\n    useAdmissionOngoingApplicationFeesCollectMutation();\n  return [admissionOngoingApplicationFeesCollect];\n};\nexport const useAdmissionOngoingApplicationFeesRevert = () => {\n  const [admissionOngoingApplicationFeesRevert] =\n    useAdmissionOngoingApplicationFeesRevertMutation();\n  return [admissionOngoingApplicationFeesRevert];\n};\nexport const useAdmissionOngoingApplicationConfirm = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationConfirmQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationConfirm: data,\n    admissionOngoingApplicationConfirmRefetch: refetch,\n    admissionOngoingApplicationConfirmLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllConfirmList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllConfirmListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllConfirmList: data,\n    admissionOngoingApplicationAllConfirmListRefetch: refetch,\n    admissionOngoingApplicationAllConfirmListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationConfirmReview = () => {\n  const [admissionOngoingApplicationConfirmReview] =\n    useAdmissionOngoingApplicationConfirmReviewMutation();\n  return [admissionOngoingApplicationConfirmReview];\n};\nexport const useAdmissionOngoingApplicationReview = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReview: data,\n    admissionOngoingApplicationReviewRefetch: refetch,\n    admissionOngoingApplicationReviewLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllReviewList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllReviewListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllReviewList: data,\n    admissionOngoingApplicationAllReviewListRefetch: refetch,\n    admissionOngoingApplicationAllReviewListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewSort = () => {\n  const [admissionOngoingApplicationReviewSort] =\n    useAdmissionOngoingApplicationReviewSortMutation();\n  return [admissionOngoingApplicationReviewSort];\n};\nexport const useAdmissionOngoingApplicationReviewBatch = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewBatchQuery(args.appId, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewBatch: data,\n    admissionOngoingApplicationReviewBatchRefetch: refetch,\n    admissionOngoingApplicationReviewBatchLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewClasses = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewClassesQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewClasses: data,\n    admissionOngoingApplicationReviewClassesRefetch: refetch,\n    admissionOngoingApplicationReviewClassesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewAllot = () => {\n  const [admissionOngoingApplicationReviewAllot] =\n    useAdmissionOngoingApplicationReviewAllotMutation();\n  return [admissionOngoingApplicationReviewAllot];\n};\nexport const useAdmissionOngoingApplicationReviewCancel = () => {\n  const [admissionOngoingApplicationReviewCancel] =\n    useAdmissionOngoingApplicationReviewCancelMutation();\n  return [admissionOngoingApplicationReviewCancel];\n};\nexport const useAdmissionOngoingApplicationAllottment = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllottmentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllottment: data,\n    admissionOngoingApplicationAllottmentRefetch: refetch,\n    admissionOngoingApplicationAllottmentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllottmentCancel = () => {\n  const [admissionOngoingApplicationAllottmentCancel] =\n    useAdmissionOngoingApplicationAllottmentCancelMutation();\n  return [admissionOngoingApplicationAllottmentCancel];\n};\n\nexport const useAdmissionOngoingApplicationCancelled = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationCancelledQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationCancelled: data,\n    admissionOngoingApplicationCancelledRefetch: refetch,\n    admissionOngoingApplicationCancelledLoading: isFetching,\n  };\n};\n\nexport const useAdmissionTransferApplicatToOtherApplication = () => {\n  const [admissionTransferApplicatToOtherApplication] =\n    useAdmissionTransferApplicatToOtherApplicationMutation();\n  return [admissionTransferApplicatToOtherApplication];\n};\nexport const useAdmissionOngoingApplicationDailyCollect = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDailyCollectQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDailyCollect: data,\n    admissionOngoingApplicationDailyCollectRefetch: refetch,\n    admissionOngoingApplicationDailyCollectLoading: isFetching,\n  };\n};\n\nexport const useAdmissionPendingFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPendingFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPendingFees: data,\n    admissionPendingFeesRefetch: refetch,\n    admissionPendingFeesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionApplicantCancelledList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionApplicantCancelledListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionApplicantCancelledList: data,\n    admissionApplicantCancelledListRefetch: refetch,\n    admissionApplicantCancelledListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCancelledListExport = () => {\n  const [admissionCancelledListExport] =\n    useAdmissionCancelledListExportMutation();\n  return [admissionCancelledListExport];\n};\n\nexport const useAdmissionReadmissionList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionReadmissionListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionReadmissionList: data,\n    admissionReadmissionListRefetch: refetch,\n    admissionReadmissionListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionReadmissionConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionReadmissionConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionReadmissionConfirmedList: data,\n    admissionReadmissionConfirmedListRefetch: refetch,\n    admissionReadmissionConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionReadmissionCollectFees = () => {\n  const [admissionReadmissionCollectFees] =\n    useAdmissionReadmissionCollectFeesMutation();\n  return [admissionReadmissionCollectFees];\n};\n\nexport const useAdmissionStudentAddSection = () => {\n  const [admissionStudentAddSection] = useAdmissionStudentAddSectionMutation();\n  return [admissionStudentAddSection];\n};\nexport const useAdmissionStudentSectionAddChecklist = () => {\n  const [admissionStudentSectionAddChecklist] =\n    useAdmissionStudentSectionAddChecklistMutation();\n  return [admissionStudentSectionAddChecklist];\n};\nexport const useAdmissionStudentRearrangeSection = () => {\n  const [admissionStudentRearrangeSection] =\n    useAdmissionStudentRearrangeSectionMutation();\n  return [admissionStudentRearrangeSection];\n};\nexport const useAdmissionStudentUpdateSectionChecklist = () => {\n  const [admissionStudentUpdateSectionChecklist] =\n    useAdmissionStudentUpdateSectionChecklistMutation();\n  return [admissionStudentUpdateSectionChecklist];\n};\n\nexport const useAdmissionStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionStudentFormDetail: data,\n    admissionStudentFormDetailRefetch: refetch,\n    admissionStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useAdmissionStudentToggleChecklist = () => {\n  const [admissionStudentToggleChecklist] =\n    useAdmissionStudentToggleChecklistMutation();\n  return [admissionStudentToggleChecklist];\n};\n\nexport const useAdmissionAddOuterGorup = () => {\n  const [admissionAddOuterGorup] = useAdmissionAddOuterGorupMutation();\n  return [admissionAddOuterGorup];\n};\nexport const useAdmissionOuterGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOuterGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOuterGroupList: data,\n    admissionOuterGroupListRefetch: refetch,\n    admissionOuterGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionSubjectGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubjectGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubjectGroupList: data,\n    admissionSubjectGroupListRefetch: refetch,\n    admissionSubjectGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddSubjectGroup = () => {\n  const [admissionAddSubjectGroup] = useAdmissionAddSubjectGroupMutation();\n  return [admissionAddSubjectGroup];\n};\nexport const useAdmissionSubGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubGroupList: data,\n    admissionSubGroupListRefetch: refetch,\n    admissionSubGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionOneSubGroupDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneSubGroupDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOneSubGroupDetail: data,\n    admissionOneSubGroupDetailRefetch: refetch,\n    admissionOneSubGroupDetailLoading: isFetching,\n  };\n};\n\nexport const useAdmissionSubGroupAddSubject = () => {\n  const [admissionSubGroupAddSubject] =\n    useAdmissionSubGroupAddSubjectMutation();\n  return [admissionSubGroupAddSubject];\n};\n\nexport const useAdmissionInstituteAllSubjectList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionInstituteAllSubjectListQuery(args?.data, {\n      skip: args?.skip,\n    });\n  return {\n    admissionInstituteAllSubjectList: data,\n    admissionInstituteAllSubjectListRefetch: refetch,\n    admissionInstituteAllSubjectListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionRemoveOuterGroup = () => {\n  const [admissionRemoveOuterGroup] = useAdmissionRemoveOuterGroupMutation();\n  return [admissionRemoveOuterGroup];\n};\n\nexport const useAdmissionRemoveSubjectGroup = () => {\n  const [admissionRemoveSubjectGroup] =\n    useAdmissionRemoveSubjectGroupMutation();\n  return [admissionRemoveSubjectGroup];\n};\n\nexport const useInstitutePinApplication = () => {\n  const [institutePinApplication] = useInstitutePinApplicationMutation();\n  return [institutePinApplication];\n};\n\nexport const useInstituteUnPinApplication = () => {\n  const [instituteUnPinApplication] = useInstituteUnPinApplicationMutation();\n  return [instituteUnPinApplication];\n};\n\nexport const useInstituteAllApplicationList = (args) => {\n  const { data, refetch, isFetching } = useInstituteAllApplicationListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    instituteAllApplicationList: data,\n    instituteAllApplicationListRefetch: refetch,\n    instituteAllApplicationListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationDocumentList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationDocumentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationDocumentList: data,\n    admissionMergedApplicationDocumentListRefetch: refetch,\n    admissionMergedApplicationDocumentListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationFeesList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationFeesListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationFeesList: data,\n    admissionMergedApplicationFeesListRefetch: refetch,\n    admissionMergedApplicationFeesListLoading: isFetching,\n  };\n};\nexport const useAdmissionMergedApplicationConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationConfirmedList: data,\n    admissionMergedApplicationConfirmedListRefetch: refetch,\n    admissionMergedApplicationConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingDirectApplicationExcel = () => {\n  const [admissionOngoingDirectApplicationExcel] =\n    useAdmissionOngoingDirectApplicationExcelMutation();\n  return [admissionOngoingDirectApplicationExcel];\n};\n\nexport const useOneApplicationSubjectCountList = (args) => {\n  const { data, refetch, isFetching } = useOneApplicationSubjectCountListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    oneApplicationSubjectCountList: data,\n    oneApplicationSubjectCountListRefetch: refetch,\n    oneApplicationSubjectCountListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentList = (args) => {\n  const { data, refetch, isFetching } =\n    useOneApplicationOneSubjectStudentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    oneApplicationOneSubjectStudentList: data,\n    oneApplicationOneSubjectStudentListRefetch: refetch,\n    oneApplicationOneSubjectStudentListLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationOneSubjectStudentListExport = () => {\n  const [oneApplicationOneSubjectStudentListExport] =\n    useOneApplicationOneSubjectStudentListExportMutation();\n  return [oneApplicationOneSubjectStudentListExport];\n};\n\nexport const useAdmissionMergedApplicationTotalCount = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationTotalCountQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationTotalCount: data,\n    admissionMergedApplicationTotalCountRefetch: refetch,\n    admissionMergedApplicationTotalCountLoading: isFetching,\n  };\n};\n\nexport const useOneApplicationStudentFormGenerate = () => {\n  const [oneApplicationStudentFormGenerate] =\n    useOneApplicationStudentFormGenerateMutation();\n  return [oneApplicationStudentFormGenerate];\n};\n///\nexport const useDepartmentBatchAllClass = (args) => {\n  const { data, refetch, isFetching } = useDepartmentBatchAllClassQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    departmentBatchAllClass: data,\n    departmentBatchAllClassRefetch: refetch,\n    departmentBatchAllClassLoading: isFetching,\n  };\n};\n"],"names":["admissionActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","activateModule","admissionUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","admissionDashboardMasterFunction","aid","mod_id","providesTags","serializeQueryArgs","_ref","endpointName","transformResponse","response","dect","decryption","encrypt","admission","admissionCashToFinanceFunction","submitAmount","admissionPaymentVerifyListFunction","page","limit","filterBy","over_filter","search","_ref2","meta","arg","list","all_requests","merge","currentCache","incomingData","_currentCache$list","push","forceRefetch","_ref3","currentArg","previousArg","admissionPaymentVerifyActionFunction","rid","reqId","status","receiptAction","admissionDocumentListFunction","_ref4","all_docs","_currentCache$list2","_ref5","admissionAddDocumentFunction","document","admissionUpdateDocumentFunction","editDocument","admissionRemoveDocumentFunction","did","DELETE","admissionExportExcelListFunction","_ref6","all_excel","_currentCache$list3","_ref7","admissionEditExportExcelFunction","xlsxId","excelUpdate","admissionRemoveExportExcelFunction","admissionExportFilterExcelFunction","gender","caste","is_all","all_depart","batch_status","exportData","admissionModeratorListFunction","_ref8","all_mods","_currentCache$list4","_ref9","admissionAddModeratorFunction","_data$active_tab","active_tab","addModerator","admissionUpdateModeratorFunction","_data$active_tab2","modId","updateModerator","admissionRemoveModeratorFunction","admissionPendingFeesFunction","_data$flow","flow","_ref10","remain","_currentCache$list5","_ref11","admissionPendingFeesReminderHistoryFunction","_data$search","id","_ref12","all_message","_currentCache$list6","_ref13","admissionPendingFeesOsStudentListFunction","pendingData","admissionPendingFeesReminderFunction","alarm_mode","reminderData","admissionExcessFeeNotRefundedListFunction","_data$search2","_ref14","all_refund_list","_currentCache$list7","_ref15","admissionExcessFeeRefundedListFunction","_ref16","all_refunded","_currentCache$list8","_ref17","admissionExcessFeeNotRefundedListExportFunction","admissionExcessFeeRefundedListExportFunction","admissionTabControllerFunction","tabManage","admissionCompletedApplicationListFunction","_ref18","completed","_currentCache$list9","_ref19","admissionCompleteApplicationFunction","appId","admissionIncompleteApplicationFunction","admissionOngoingApplicationFunction","ad","_ref20","res","ongoing","_currentCache$list10","_ref21","admissionCreateApplicationFunction","application","admissionUpdateApplicationFunction","updateApplication","admissionRemoveApplicationFunction","admissionOneOngoingApplicationFunction","oneApply","_ref22","_ref23","admissionOngoingApplicationRequestFunction","req","_ref24","request","_currentCache$list11","_ref25","admissionOngoingApplicationSelectFunction","sid","applicant","admissionOngoingApplicationRejectFunction","bodyParameter","admissionOngoingApplicationFormUpdateRejectFunction","admissionOngoingApplicationExportFunction","admissionOngoingApplicationDocumentFunction","_ref26","select","_currentCache$list12","_ref27","admissionOngoingApplicationDocumentCollectFunction","admissionOngoingApplicationDocumentRevertFunction","revert","admissionOngoingApplicationDocumentEditStructureFunction","admissionOngoingApplicationFeesFunction","_ref28","fees","_currentCache$list13","_ref29","admissionOngoingApplicationFeesCollectFunction","_data$receipt_status","receipt_status","collect","admissionOngoingApplicationFeesRevertFunction","admissionOngoingApplicationConfirmFunction","_ref30","confirm","_currentCache$list14","_ref31","admissionOngoingApplicationAllConfirmListFunction","_ref32","_ref33","admissionOngoingApplicationConfirmReviewFunction","review","admissionOngoingApplicationReviewFunction","_ref34","_currentCache$list15","_ref35","admissionOngoingApplicationAllReviewListFunction","_ref36","_ref37","admissionOngoingApplicationReviewSortFunction","sort_query","admissionOngoingApplicationReviewBatchFunction","_ref38","batch","_ref39","admissionOngoingApplicationReviewClassesFunction","bid","_ref40","classes","_currentCache$list16","_ref41","admissionOngoingApplicationReviewAllotFunction","cid","admissionOngoingApplicationReviewCancelFunction","payment","admissionOngoingApplicationAllottmentFunction","_ref42","allot","_currentCache$list17","_ref43","admissionOngoingApplicationAllottmentCancelFunction","admissionOngoingApplicationCancelledFunction","_ref44","cancel","_currentCache$list18","_ref45","admissionTransferApplicatToOtherApplicationFunction","transferApplicantData","admissionOngoingApplicationDailyCollectFunction","valid_date","_ref46","day_wise","_ref47","admissionApplicantCancelledListFunction","_ref48","_currentCache$list19","_ref49","admissionCancelledListExportFunction","timeline","timeline_content","from","to","bank","admissionReadmissionListFunction","_ref50","_currentCache$list20","_ref51","admissionReadmissionConfirmedListFunction","_ref52","_currentCache$list21","_ref53","admissionReadmissionCollectFeesFunction","admissionStudentAddSectionFunction","formId","admissionStudentSectionAddChecklistFunction","admissionStudentRearrangeSectionFunction","admissionStudentUpdateSectionChecklistFunction","admissionStudentFormDetailFunction","section","_ref54","_ref55","admissionStudentToggleChecklistFunction","admissionAddOuterGorupFunction","admissionOuterGroupListFunction","_ref56","all_group","_currentCache$list22","_ref57","admissionSubjectGroupListFunction","_ref58","_currentCache$list23","_ref59","admissionAddSubjectGroupFunction","sgid","admissionSubGroupListFunction","_ref60","all_group_select","_currentCache$list24","_ref61","admissionOneSubGroupDetailFunction","_ref62","group","_ref63","admissionSubGroupAddSubjectFunction","ssid","admissionInstituteAllSubjectListFunction","_ref64","all_subjects","_currentCache$list25","_ref65","admissionRemoveOuterGroupFunction","admissionRemoveSubjectGroupFunction","institutePinApplicationFunction","instituteUnPinApplicationFunction","instituteAllApplicationListFunction","_ref66","_currentCache$list26","_ref67","admissionMergedApplicationTotalCountFunction","_ref68","ads_obj","_ref69","admissionMergedApplicationDocumentListFunction","_ref70","_currentCache$list27","_ref71","admissionMergedApplicationFeesListFunction","_ref72","_currentCache$list28","_ref73","admissionMergedApplicationConfirmedListFunction","_ref74","_currentCache$list29","_ref75","admissionOngoingDirectApplicationExcelFunction","oneApplicationSubjectCountListFunction","_ref76","subject","_ref77","oneApplicationOneSubjectStudentListFunction","smid","_ref78","student","studentCount","student_count","_currentCache$list30","_ref79","oneApplicationOneSubjectStudentListExportFunction","oneApplicationStudentFormGenerateFunction","departmentBatchAllClassFunction","_ref80","_response$batch","_response$batch2","classroom","_currentCache$list31","_ref81","admissionManagerApiDynamic","admissionManagerApi","injectEndpoints","endpoints","admissionActivateModule","admissionUpdateModule","admissionDashboardMaster","admissionCashToFinance","admissionPaymentVerifyList","admissionPaymentVerifyAction","admissionDocumentList","admissionAddDocument","admissionUpdateDocument","admissionRemoveDocument","admissionExportExcelList","admissionEditExportExcel","admissionRemoveExportExcel","admissionModeratorList","admissionAddModerator","admissionUpdateModerator","admissionRemoveModerator","admissionPendingFeesReminderHistory","admissionPendingFeesOsStudentList","admissionPendingFeesReminder","admissionExcessFeeNotRefundedList","admissionExcessFeeRefundedList","admissionCompletedApplicationList","admissionCompleteApplication","admissionIncompleteApplication","admissionExcessFeeNotRefundedListExport","admissionExcessFeeRefundedListExport","admissionTabController","admissionExportFilterExcel","admissionOngoingApplication","admissionCreateApplication","admissionUpdateApplication","admissionRemoveApplication","admissionOneOngoingApplication","admissionOngoingApplicationRequest","admissionOngoingApplicationSelect","admissionOngoingApplicationReject","admissionOngoingApplicationFormUpdateReject","admissionOngoingApplicationExport","admissionOngoingApplicationDocument","admissionOngoingApplicationDocumentCollect","admissionOngoingApplicationDocumentRevert","admissionOngoingApplicationDocumentEditStructure","admissionOngoingApplicationFees","admissionOngoingApplicationFeesCollect","admissionOngoingApplicationFeesRevert","admissionOngoingApplicationConfirm","admissionOngoingApplicationAllConfirmList","admissionOngoingApplicationConfirmReview","admissionOngoingApplicationReview","admissionOngoingApplicationAllReviewList","admissionOngoingApplicationReviewSort","admissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewAllot","admissionOngoingApplicationReviewCancel","admissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentCancel","admissionOngoingApplicationCancelled","admissionTransferApplicatToOtherApplication","admissionOngoingApplicationDailyCollect","admissionPendingFees","admissionApplicantCancelledList","admissionCancelledListExport","admissionReadmissionList","admissionReadmissionConfirmedList","admissionReadmissionCollectFees","admissionStudentAddSection","admissionStudentSectionAddChecklist","admissionStudentRearrangeSection","admissionStudentUpdateSectionChecklist","admissionStudentFormDetail","admissionStudentToggleChecklist","admissionAddOuterGorup","admissionOuterGroupList","admissionSubjectGroupList","admissionAddSubjectGroup","admissionSubGroupList","admissionOneSubGroupDetail","admissionSubGroupAddSubject","admissionInstituteAllSubjectList","admissionRemoveOuterGroup","admissionRemoveSubjectGroup","institutePinApplication","instituteUnPinApplication","instituteAllApplicationList","admissionMergedApplicationFeesList","admissionMergedApplicationDocumentList","admissionMergedApplicationConfirmedList","admissionOngoingDirectApplicationExcel","oneApplicationSubjectCountList","oneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListExport","admissionMergedApplicationTotalCount","oneApplicationStudentFormGenerate","departmentBatchAllClass","useAdmissionActivateModuleMutation","useAdmissionUpdateModuleMutation","useAdmissionDashboardMasterQuery","useAdmissionCashToFinanceMutation","useAdmissionPaymentVerifyListQuery","useAdmissionPaymentVerifyActionMutation","useAdmissionDocumentListQuery","useAdmissionAddDocumentMutation","useAdmissionUpdateDocumentMutation","useAdmissionRemoveDocumentMutation","useAdmissionExportExcelListQuery","useAdmissionEditExportExcelMutation","useAdmissionRemoveExportExcelMutation","useAdmissionModeratorListQuery","useAdmissionAddModeratorMutation","useAdmissionUpdateModeratorMutation","useAdmissionRemoveModeratorMutation","useAdmissionPendingFeesReminderHistoryQuery","useAdmissionPendingFeesOsStudentListMutation","useAdmissionPendingFeesReminderMutation","useAdmissionExcessFeeNotRefundedListQuery","useAdmissionExcessFeeRefundedListQuery","useAdmissionCompletedApplicationListQuery","useAdmissionCompleteApplicationMutation","useAdmissionIncompleteApplicationMutation","useAdmissionExcessFeeNotRefundedListExportMutation","useAdmissionExcessFeeRefundedListExportMutation","useAdmissionTabControllerMutation","useAdmissionExportFilterExcelMutation","useAdmissionOngoingApplicationQuery","useAdmissionCreateApplicationMutation","useAdmissionUpdateApplicationMutation","useAdmissionRemoveApplicationMutation","useAdmissionOneOngoingApplicationQuery","useAdmissionOngoingApplicationRequestQuery","useAdmissionOngoingApplicationSelectMutation","useAdmissionOngoingApplicationRejectMutation","useAdmissionOngoingApplicationFormUpdateRejectMutation","useAdmissionOngoingApplicationExportMutation","useAdmissionOngoingApplicationDocumentQuery","useAdmissionOngoingApplicationDocumentCollectMutation","useAdmissionOngoingApplicationDocumentRevertMutation","useAdmissionOngoingApplicationDocumentEditStructureMutation","useAdmissionOngoingApplicationFeesQuery","useAdmissionOngoingApplicationFeesCollectMutation","useAdmissionOngoingApplicationFeesRevertMutation","useAdmissionOngoingApplicationConfirmQuery","useAdmissionOngoingApplicationAllConfirmListQuery","useAdmissionOngoingApplicationConfirmReviewMutation","useAdmissionOngoingApplicationReviewQuery","useAdmissionOngoingApplicationAllReviewListQuery","useAdmissionOngoingApplicationReviewSortMutation","useAdmissionOngoingApplicationReviewBatchQuery","useAdmissionOngoingApplicationReviewClassesQuery","useAdmissionOngoingApplicationReviewAllotMutation","useAdmissionOngoingApplicationReviewCancelMutation","useAdmissionOngoingApplicationAllottmentQuery","useAdmissionOngoingApplicationAllottmentCancelMutation","useAdmissionOngoingApplicationCancelledQuery","useAdmissionTransferApplicatToOtherApplicationMutation","useAdmissionOngoingApplicationDailyCollectQuery","useAdmissionPendingFeesQuery","useAdmissionApplicantCancelledListQuery","useAdmissionCancelledListExportMutation","useAdmissionReadmissionListQuery","useAdmissionReadmissionConfirmedListQuery","useAdmissionReadmissionCollectFeesMutation","useAdmissionStudentAddSectionMutation","useAdmissionStudentSectionAddChecklistMutation","useAdmissionStudentRearrangeSectionMutation","useAdmissionStudentUpdateSectionChecklistMutation","useAdmissionStudentFormDetailQuery","useAdmissionStudentToggleChecklistMutation","useAdmissionAddOuterGorupMutation","useAdmissionOuterGroupListQuery","useAdmissionSubjectGroupListQuery","useAdmissionAddSubjectGroupMutation","useAdmissionSubGroupListQuery","useAdmissionOneSubGroupDetailQuery","useAdmissionSubGroupAddSubjectMutation","useAdmissionInstituteAllSubjectListQuery","useAdmissionRemoveOuterGroupMutation","useAdmissionRemoveSubjectGroupMutation","useInstitutePinApplicationMutation","useInstituteUnPinApplicationMutation","useInstituteAllApplicationListQuery","useAdmissionMergedApplicationDocumentListQuery","useAdmissionMergedApplicationFeesListQuery","useAdmissionMergedApplicationConfirmedListQuery","useAdmissionOngoingDirectApplicationExcelMutation","useOneApplicationSubjectCountListQuery","useOneApplicationOneSubjectStudentListQuery","useOneApplicationOneSubjectStudentListExportMutation","useAdmissionMergedApplicationTotalCountQuery","useOneApplicationStudentFormGenerateMutation","useDepartmentBatchAllClassQuery","useAdmissionActivateModule","useAdmissionUpdateModule","useAdmissionDashboardMaster","args","refetch","isFetching","skip","admissionDashboardMasterRefetch","admissionDashboardMasterLoading","useAdmissionCashToFinance","useAdmissionPaymentVerifyList","admissionPaymentVerifyListRefetch","admissionPaymentVerifyListLoading","useAdmissionPaymentVerifyAction","useAdmissionDocumentList","admissionDocumentListRefetch","admissionDocumentListLoading","useAdmissionAddDocument","useAdmissionUpdateDocument","useAdmissionRemoveDocument","useAdmissionExportExcelList","admissionExportExcelListRefetch","admissionExportExcelListLoading","useAdmissionEditExportExcel","useAdmissionRemoveExportExcel","useAdmissionModeratorList","admissionModeratorListRefetch","admissionModeratorListLoading","useAdmissionAddModerator","useAdmissionUpdateModerator","useAdmissionRemoveModerator","useAdmissionPendingFeesReminderHistory","admissionPendingFeesReminderHistoryRefetch","admissionPendingFeesReminderHistoryLoading","useAdmissionPendingFeesOsStudentList","useAdmissionPendingFeesReminder","useAdmissionExcessFeeNotRefundedList","admissionExcessFeeNotRefundedListRefetch","admissionExcessFeeNotRefundedListLoading","useAdmissionExcessFeeRefundedList","admissionExcessFeeRefundedListRefetch","admissionExcessFeeRefundedListLoading","useAdmissionExcessFeeNotRefundedListExport","useAdmissionExcessFeeRefundedListExport","useAdmissionCompletedApplicationList","admissionCompletedApplicationListRefetch","admissionCompletedApplicationListLoading","useAdmissionCompleteApplication","useAdmissionIncompleteApplication","useAdmissionTabController","useAdmissionExportFilterExcel","useAdmissionOngoingApplication","admissionOngoingApplicationRefetch","admissionOngoingApplicationLoading","useAdmissionCreateApplication","useAdmissionUpdateApplication","useAdmissionRemoveApplication","useAdmissionOneOngoingApplication","admissionOneOngoingApplicationRefetch","admissionOneOngoingApplicationLoading","useAdmissionOngoingApplicationRequest","admissionOngoingApplicationRequestRefetch","admissionOngoingApplicationRequestLoading","useAdmissionOngoingApplicationSelect","useAdmissionOngoingApplicationReject","useAdmissionOngoingApplicationFormUpdateReject","useAdmissionOngoingApplicationExport","useAdmissionOngoingApplicationDocument","admissionOngoingApplicationDocumentRefetch","admissionOngoingApplicationDocumentLoading","useAdmissionOngoingApplicationDocumentCollect","useAdmissionOngoingApplicationDocumentRevert","useAdmissionOngoingApplicationDocumentEditStructure","useAdmissionOngoingApplicationFees","admissionOngoingApplicationFeesRefetch","admissionOngoingApplicationFeesLoading","useAdmissionOngoingApplicationFeesCollect","useAdmissionOngoingApplicationFeesRevert","useAdmissionOngoingApplicationConfirm","admissionOngoingApplicationConfirmRefetch","admissionOngoingApplicationConfirmLoading","useAdmissionOngoingApplicationAllConfirmList","admissionOngoingApplicationAllConfirmListRefetch","admissionOngoingApplicationAllConfirmListLoading","useAdmissionOngoingApplicationConfirmReview","useAdmissionOngoingApplicationReview","admissionOngoingApplicationReviewRefetch","admissionOngoingApplicationReviewLoading","useAdmissionOngoingApplicationAllReviewList","admissionOngoingApplicationAllReviewListRefetch","admissionOngoingApplicationAllReviewListLoading","useAdmissionOngoingApplicationReviewSort","useAdmissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewBatchRefetch","admissionOngoingApplicationReviewBatchLoading","useAdmissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewClassesRefetch","admissionOngoingApplicationReviewClassesLoading","useAdmissionOngoingApplicationReviewAllot","useAdmissionOngoingApplicationReviewCancel","useAdmissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentRefetch","admissionOngoingApplicationAllottmentLoading","useAdmissionOngoingApplicationAllottmentCancel","useAdmissionOngoingApplicationCancelled","admissionOngoingApplicationCancelledRefetch","admissionOngoingApplicationCancelledLoading","useAdmissionTransferApplicatToOtherApplication","useAdmissionOngoingApplicationDailyCollect","admissionOngoingApplicationDailyCollectRefetch","admissionOngoingApplicationDailyCollectLoading","useAdmissionPendingFees","admissionPendingFeesRefetch","admissionPendingFeesLoading","useAdmissionApplicantCancelledList","admissionApplicantCancelledListRefetch","admissionApplicantCancelledListLoading","useAdmissionCancelledListExport","useAdmissionReadmissionList","admissionReadmissionListRefetch","admissionReadmissionListLoading","useAdmissionReadmissionConfirmedList","admissionReadmissionConfirmedListRefetch","admissionReadmissionConfirmedListLoading","useAdmissionReadmissionCollectFees","useAdmissionStudentAddSection","useAdmissionStudentSectionAddChecklist","useAdmissionStudentRearrangeSection","useAdmissionStudentUpdateSectionChecklist","useAdmissionStudentFormDetail","admissionStudentFormDetailRefetch","admissionStudentFormDetailLoading","useAdmissionStudentToggleChecklist","useAdmissionAddOuterGorup","useAdmissionOuterGroupList","admissionOuterGroupListRefetch","admissionOuterGroupListLoading","useAdmissionAddSubjectGroup","useAdmissionSubGroupList","admissionSubGroupListRefetch","admissionSubGroupListLoading","useAdmissionOneSubGroupDetail","admissionOneSubGroupDetailRefetch","admissionOneSubGroupDetailLoading","useAdmissionSubGroupAddSubject","useAdmissionInstituteAllSubjectList","admissionInstituteAllSubjectListRefetch","admissionInstituteAllSubjectListLoading","useAdmissionRemoveOuterGroup","useAdmissionRemoveSubjectGroup","useInstitutePinApplication","useInstituteUnPinApplication","useInstituteAllApplicationList","instituteAllApplicationListRefetch","instituteAllApplicationListLoading","useAdmissionMergedApplicationDocumentList","admissionMergedApplicationDocumentListRefetch","admissionMergedApplicationDocumentListLoading","useAdmissionMergedApplicationFeesList","admissionMergedApplicationFeesListRefetch","admissionMergedApplicationFeesListLoading","useAdmissionMergedApplicationConfirmedList","admissionMergedApplicationConfirmedListRefetch","admissionMergedApplicationConfirmedListLoading","useAdmissionOngoingDirectApplicationExcel","useOneApplicationSubjectCountList","oneApplicationSubjectCountListRefetch","oneApplicationSubjectCountListLoading","useOneApplicationOneSubjectStudentList","oneApplicationOneSubjectStudentListRefetch","oneApplicationOneSubjectStudentListLoading","useOneApplicationOneSubjectStudentListExport","useAdmissionMergedApplicationTotalCount","admissionMergedApplicationTotalCountRefetch","admissionMergedApplicationTotalCountLoading","useOneApplicationStudentFormGenerate","useDepartmentBatchAllClass","departmentBatchAllClassRefetch","departmentBatchAllClassLoading"],"sourceRoot":""}