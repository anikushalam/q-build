{"version":3,"file":"static/js/198.154e8e19.chunk.js","mappings":"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","sources":["Post/Institute/Components/search-api.js"],"sourcesContent":["import { useStaffSearchQuery } from \"../../../services/qvipleAPI\";\nimport {\n  useFollowInstituteListQuery,\n  useFollowingInstituteListQuery,\n  useFollowInstituteMutation,\n  useInstituteAllSearchQuery,\n  useInstituteCreateAnnouncementMutation,\n  useUnfollowInstituteMutation,\n  useFollowInstituteListIdQuery,\n  useFollowingInstituteListIdQuery,\n  useFollowUserListQuery,\n  useFollowingUserListQuery,\n  useUserAllSearchQuery,\n  useFollowUserMutation,\n  useUnfollowUserMutation,\n  useCircleUserMutation,\n  useUncircleUserMutation,\n  useFollowUserInsMutation,\n  useUnfollowUserInsMutation,\n  useCircleUserListQuery,\n  useUniversalUserQuery,\n} from \"../../../services/searchApi\";\n\nexport const useInstituteAllSearch = (args) => {\n  const { data, refetch } = useInstituteAllSearchQuery(args.search, {\n    skip: args.skip,\n  });\n  return { instituteAllSearch: data, instituteAllSearchRefetch: refetch };\n};\n\nexport const useInstituteFollow = () => {\n  const [instituteFollow] = useFollowInstituteMutation();\n  return [instituteFollow];\n};\n\nexport const useInstituteUnfollow = () => {\n  const [instituteUnfollow] = useUnfollowInstituteMutation();\n  return [instituteUnfollow];\n};\n\nexport const useInstituteFollowList = (args) => {\n  const { data, refetch } = useFollowInstituteListQuery(args.list, {\n    skip: args.skip,\n  });\n  return { instituteFollowList: data, instituteFollowListRefetch: refetch };\n};\n\nexport const useInstituteOwnFollowingList = (args) => {\n  const { data, refetch } = useFollowingInstituteListQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    instituteOwnFollowingList: data,\n    instituteOwnFollowingListRefetch: refetch,\n  };\n};\n\nexport const useInstituteFollowListId = (args) => {\n  const { data, refetch } = useFollowInstituteListIdQuery(args.list);\n  return { instituteFollowListId: data, instituteFollowListIdRefetch: refetch };\n};\n\nexport const useInstituteOwnFollowingListId = (args) => {\n  const { data, refetch } = useFollowingInstituteListIdQuery(args);\n  return {\n    instituteOwnFollowingListId: data,\n    instituteOwnFollowingListIdRefetch: refetch,\n  };\n};\n\nexport const useInstituteCreateAnnouncement = () => {\n  const [instituteCreateAnnouncement] =\n    useInstituteCreateAnnouncementMutation();\n  return [instituteCreateAnnouncement];\n};\n\nexport const useUserFollowList = (args) => {\n  const { data, refetch } = useFollowUserListQuery(args.list);\n  return { userFollowList: data, userFollowListRefetch: refetch };\n};\nexport const useUserOwnFollowingList = (args) => {\n  const { data, refetch } = useFollowingUserListQuery(args);\n  return {\n    userFollowingList: data,\n    userFollowingListRefetch: refetch,\n  };\n};\n\nexport const useUserAllSearch = (args) => {\n  const { data, refetch } = useUserAllSearchQuery(args.search, {\n    skip: args.skip,\n  });\n  return { userAllSearch: data, userAllSearchRefetch: refetch };\n};\n\nexport const useUserFollow = () => {\n  const [userFollow] = useFollowUserMutation();\n  return [userFollow];\n};\n\nexport const useUserUnfollow = () => {\n  const [userUnfollow] = useUnfollowUserMutation();\n  return [userUnfollow];\n};\n\nexport const useUserCircle = () => {\n  const [userCircle] = useCircleUserMutation();\n  return [userCircle];\n};\n\nexport const useUserUncircle = () => {\n  const [userUncircle] = useUncircleUserMutation();\n  return [userUncircle];\n};\n\nexport const useUserFollowIns = () => {\n  const [userFollowIns] = useFollowUserInsMutation();\n  return [userFollowIns];\n};\n\nexport const useUserUnfollowIns = () => {\n  const [userUnfollowIns] = useUnfollowUserInsMutation();\n  return [userUnfollowIns];\n};\n\nexport const useUserCircleList = (args) => {\n  const { data, refetch } = useCircleUserListQuery(args);\n  return {\n    userCircleList: data,\n    userCircleListRefetch: refetch,\n  };\n};\n\n//for assign of staff head\n\nexport const useAssignSearchStaff = (args) => {\n  const { data: assignSearchStaff, refetch: assignSearchStaffRefetch } =\n    useStaffSearchQuery(args.search, { skip: args.skip });\n  return {\n    assignSearchStaff,\n    assignSearchStaffRefetch,\n  };\n};\n\n//for assign to all universal user\n\nexport const useUniversalUser = (args) => {\n  const { data: universalUser, refetch: universalUserRefetch } =\n    useUniversalUserQuery(args);\n  return {\n    universalUser,\n    universalUserRefetch,\n  };\n};\n"],"names":["useInstituteAllSearch","args","_useInstituteAllSearc","useInstituteAllSearchQuery","search","skip","instituteAllSearch","data","instituteAllSearchRefetch","refetch","useInstituteFollow","_useFollowInstituteMu","useFollowInstituteMutation","_slicedToArray","useInstituteUnfollow","_useUnfollowInstitute","useUnfollowInstituteMutation","useInstituteFollowList","_useFollowInstituteLi","useFollowInstituteListQuery","list","instituteFollowList","instituteFollowListRefetch","useInstituteOwnFollowingList","_useFollowingInstitut","useFollowingInstituteListQuery","instituteOwnFollowingList","instituteOwnFollowingListRefetch","useInstituteCreateAnnouncement","_useInstituteCreateAn","useInstituteCreateAnnouncementMutation","useUserFollowList","_useFollowUserListQue","useFollowUserListQuery","userFollowList","userFollowListRefetch","useUserOwnFollowingList","_useFollowingUserList","useFollowingUserListQuery","userFollowingList","userFollowingListRefetch","useUserAllSearch","_useUserAllSearchQuer","useUserAllSearchQuery","userAllSearch","userAllSearchRefetch","useUserFollow","_useFollowUserMutatio","useFollowUserMutation","useUserUnfollow","_useUnfollowUserMutat","useUnfollowUserMutation","useUserCircle","_useCircleUserMutatio","useCircleUserMutation","useUserUncircle","_useUncircleUserMutat","useUncircleUserMutation","useUserFollowIns","_useFollowUserInsMuta","useFollowUserInsMutation","useUserUnfollowIns","_useUnfollowUserInsMu","useUnfollowUserInsMutation","useUserCircleList","_useCircleUserListQue","useCircleUserListQuery","userCircleList","userCircleListRefetch","useAssignSearchStaff","_useStaffSearchQuery","useStaffSearchQuery","assignSearchStaff","assignSearchStaffRefetch","useUniversalUser","_useUniversalUserQuer","useUniversalUserQuery","universalUser","universalUserRefetch"],"sourceRoot":""}