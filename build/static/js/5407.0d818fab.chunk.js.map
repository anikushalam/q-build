{"version":3,"file":"static/js/5407.0d818fab.chunk.js","mappings":"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","sources":["webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/EachNestedComment.module.css?5f68","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/EachNestedComment.jsx","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/NestedComments.module.css?b402","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/NestedComments.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"eachComment\":\"EachNestedComment_eachComment__Yp1ET\",\"imgcontainer\":\"EachNestedComment_imgcontainer__GalK4\",\"commentText\":\"EachNestedComment_commentText__7zNCO\",\"likeReply\":\"EachNestedComment_likeReply__yVcO+\",\"eachCommentContainer\":\"EachNestedComment_eachCommentContainer__eeCVJ\",\"dots\":\"EachNestedComment_dots__bR3MT\",\"time\":\"EachNestedComment_time__u9Zlo\"};","import React from \"react\";\nimport { format } from \"timeago.js\";\nimport { imageShowUrl } from \"../../../../../../../../services/BaseUrl\";\nimport style from \"./EachNestedComment.module.css\";\nimport { assestsFeedUrl } from \"../../../../../../../../optimized/Services/UrlConfig/AssestsBaseUrl\";\n\nfunction EachNestedComment({ comment }) {\n  return (\n    <div className={style.eachCommentContainer}>\n      <div className={style.eachComment}>\n        <div className={style.imgcontainer}>\n          <img\n            src={\n              comment?.authorPhotoId !== \"1\"\n                ? `${imageShowUrl}/${comment.authorProfilePhoto}`\n                : `${assestsFeedUrl}/feed-user-avatar.svg`\n            }\n            alt=\"\"\n          />\n        </div>\n\n        <div className={style.commentText}>\n          <h6>{comment?.authorUserName}</h6>\n          <p>{comment?.repliedComment}</p>\n        </div>\n      </div>\n\n      {/* <div className={style.likeReply}>\n        <p>Like</p>\n      </div> */}\n\n      <div className={style.dots}>\n        <p className={style.time}>{format(comment?.createdAt)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EachNestedComment;\n","// extracted by mini-css-extract-plugin\nexport default {\"eachComment\":\"NestedComments_eachComment__pANlV\",\"addComment\":\"NestedComments_addComment__t172M\",\"imgcontainer\":\"NestedComments_imgcontainer__t7PYl\",\"inputContainer\":\"NestedComments_inputContainer__xy2lD\",\"hr\":\"NestedComments_hr__uf04W\",\"icons\":\"NestedComments_icons__pg5T8\",\"btn\":\"NestedComments_btn__-gMA2\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  useCommentReply,\n  useOneCommentAllReply,\n} from \"../../../../../../../../Post/Institute/Components/post-api\";\nimport EachNestedComment from \"./EachNestedComment\";\nimport style from \"./NestedComments.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { imageShowUrl } from \"../../../../../../../../services/BaseUrl\";\nimport { postChangeAction } from \"../../../../../../../../redux/store/post-slice\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useTranslation } from \"react-i18next\";\nimport { instituteAs } from \"../../../../../../../../constant/constant_value\";\nimport Avatar from \"../../../../../../../../Custom/Avatar/Avatar\";\nimport { useOneInstituteDashboard } from \"../../../../../../../../hooks/dashboard/dashboard-api\";\n\nfunction NestedComments({ pcid, pid }) {\n  //for setting the next page to fetch data\n  const [page, setPage] = useState(1);\n  const { t } = useTranslation();\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n\n  //for the fetch more or not after seeing all post\n  const [state, setState] = useState(true);\n\n  const commentRef = useRef(\"\");\n  const ids = useSelector((state) => state.idChange);\n  const allReply = useSelector((state) => state.postChange.replyComments);\n\n  const dispatch = useDispatch();\n  const { allReplyComment, allReplyCommentRefetch } = useOneCommentAllReply({\n    data: {\n      pcid: pcid ? pcid : \"\",\n      page: page,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: false,\n  });\n  const [commentReply] = useCommentReply();\n\n  const { oneInstituteDashboard, oneInstituteDashboardRefetch } =\n    useOneInstituteDashboard({\n      id: ids?.id,\n      skip: !ids?.id,\n    });\n  useEffect(() => {\n    if (ids?.id) oneInstituteDashboardRefetch();\n  }, [ids?.id, oneInstituteDashboardRefetch]);\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    allReplyCommentRefetch();\n  }, [page, allReplyCommentRefetch, state]);\n\n  //for the action perform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    if (allReplyComment?.replyComment) {\n      dispatch(\n        postChangeAction.addReplyComment({\n          commentId: pcid,\n          reply: allReplyComment?.replyComment,\n        })\n      );\n    }\n\n    //for next api is call or not dashboard\n    if (allReplyComment?.replyComment?.length === 10) setState(true);\n    else setState(false);\n  }, [allReplyComment?.replyComment, dispatch, pcid]);\n\n  const commentSubmitHandler = () => {\n    dispatch(\n      postChangeAction.addReplyCommentCount({\n        commentId: pcid,\n        postId: pid,\n      })\n    );\n    commentReply({\n      replyComment: {\n        comment: commentRef.current.value,\n        uid: ids.id,\n      },\n      pcid: pcid,\n      viewAs: instituteAs,\n    })\n      .then((res) => {\n        dispatch(\n          postChangeAction.addReplyCreatedComment({\n            commentId: pcid,\n            reply: res.data?.childReplyComment,\n          })\n        );\n      })\n      .catch({});\n    commentRef.current.value = \"\";\n  };\n\n  return (\n    <>\n      <div className={style.eachComment}>\n        <div className={style.addComment}>\n          <div className={style.imgcontainer}>\n            <Avatar\n              dynamicImage={\n                oneInstituteDashboard?.institute?.photoId !== \"1\"\n                  ? `${imageShowUrl}/${oneInstituteDashboard?.institute?.insProfilePhoto}`\n                  : \"/images/ins_default_profile.svg\"\n              }\n            />{\" \"}\n          </div>\n\n          <div className={style.inputContainer}>\n            <input\n              type=\"text\"\n              ref={commentRef}\n              placeholder={t(\"add_a_reply\")}\n              className={`form-control ${style.searchinput}`}\n            />\n            <div className={style.icons}>\n              <img src=\"/images/img-icon.svg\" alt=\"\" />\n              <img src=\"/images/emoji-icon.svg\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className={style.btn} onClick={commentSubmitHandler}>\n          {t(\"reply\")}\n        </div>\n      </div>\n\n      {allReply?.map((com) =>\n        com.commentId === pcid\n          ? com?.reply?.map((comment, index) =>\n              com?.reply?.length === index + 1 ? (\n                <div className={style.eachComment} key={index} ref={ref}>\n                  <EachNestedComment comment={comment} />\n                  <hr />\n                </div>\n              ) : (\n                <div className={style.eachComment} key={index}>\n                  <EachNestedComment comment={comment} />\n                  <hr />\n                </div>\n              )\n            )\n          : \"\"\n      )}\n    </>\n  );\n}\n\nexport default NestedComments;\n"],"names":["_ref","comment","_jsxs","className","style","children","_jsx","src","authorPhotoId","concat","imageShowUrl","authorProfilePhoto","assestsFeedUrl","alt","authorUserName","repliedComment","format","createdAt","_oneInstituteDashboar","_oneInstituteDashboar2","pcid","pid","page","setPage","useState","t","useTranslation","ref","inView","useInView","state","setState","commentRef","useRef","ids","useSelector","idChange","allReply","postChange","replyComments","dispatch","useDispatch","allReplyComment","allReplyCommentRefetch","useOneCommentAllReply","data","limit","viewAs","instituteAs","skip","commentReply","useCommentReply","oneInstituteDashboard","oneInstituteDashboardRefetch","useOneInstituteDashboard","id","useEffect","_allReplyComment$repl","replyComment","postChangeAction","addReplyComment","commentId","reply","length","_Fragment","eachComment","addComment","imgcontainer","Avatar","dynamicImage","institute","photoId","insProfilePhoto","inputContainer","type","placeholder","searchinput","icons","btn","onClick","commentSubmitHandler","addReplyCommentCount","postId","current","value","uid","then","res","_res$data","addReplyCreatedComment","childReplyComment","catch","map","com","_com$reply","index","_com$reply2","EachNestedComment"],"sourceRoot":""}