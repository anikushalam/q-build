{"version":3,"file":"static/js/59704.9e74097c.chunk.js","mappings":"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","sources":["optimized/Auth/CreateAccount/Institute/InstituteRegisterType.jsx","optimized/Auth/CreateAccount/Institute/InstituteRegisterMode.jsx","optimized/Auth/CreateAccount/Institute/InstituteRegisterForm.jsx","optimized/Auth/CreateAccount/Institute/InstituteCreateAccount.jsx","optimized/Validation/functions/checkingRequiredField.js"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\n\nconst InstituteRegisterType = ({ state, onGrab, onSubmit, errorField }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"type_of_ins\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"choose_others\")}\n          </h6>\n        </div>\n      </div>\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <div className={style.institute_type_container}>\n            {registerType?.map((rgtype) => (\n              <div\n                onClick={() => onGrab(rgtype.key)}\n                className={style.institute_type_card}\n              >\n                <img\n                  src={\n                    state === rgtype.key\n                      ? `${assestsAuthUrl}/${rgtype.activeIcon}`\n                      : `${assestsAuthUrl}/${rgtype.greyIcon}`\n                  }\n                  alt=\"type icon\"\n                />\n                <p\n                  style={{\n                    color: state === rgtype.key ? \"#34495e\" : \"#95a5a6\",\n                  }}\n                >\n                  {t(rgtype.name)}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"next\")}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterType;\n\nconst registerType = [\n  {\n    name: \"college_polytechnic\",\n    key: \"College/Polytechnic\",\n    greyIcon: \"clg-polytechnic.svg\",\n    activeIcon: \"clg-polytechnic-dark.svg\",\n  },\n  {\n    name: \"school_ecc\",\n    key: \"School\",\n    greyIcon: \"school.svg\",\n    activeIcon: \"school-dark.svg\",\n  },\n  {\n    name: \"coaching\",\n    key: \"Coaching/Tuition\",\n    greyIcon: \"coaching.svg\",\n    activeIcon: \"coaching-dark.svg\",\n  },\n  {\n    name: \"Computer_ins\",\n    key: \"Online Educating Institute\",\n    greyIcon: \"computer-institute.svg\",\n    activeIcon: \"computer-institute-dark.svg\",\n  },\n  {\n    name: \"educational_content\",\n    key: \"Content Creator\",\n    greyIcon: \"content-creator2.svg\",\n    activeIcon: \"content-creator-dark.svg\",\n  },\n  {\n    name: \"music_academy\",\n    key: \"Other\",\n    greyIcon: \"music-dance.svg\",\n    activeIcon: \"music-dance-dark.svg\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\n\nconst InstituteRegisterMode = ({ state, onGrab, onSubmit, errorField }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"type_of_ins\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"choose_others\")}\n          </h6>\n        </div>\n      </div>\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <div className={style.institute_type_container}>\n            {modeType?.map((rgtype) => (\n              <div\n                onClick={() => onGrab(rgtype.key)}\n                className={style.institute_type_card}\n              >\n                <img\n                  src={\n                    state === rgtype.key\n                      ? `${assestsAuthUrl}/${rgtype.activeIcon}`\n                      : `${assestsAuthUrl}/${rgtype.greyIcon}`\n                  }\n                  alt=\"type icon\"\n                />\n                <p\n                  style={{\n                    color: state === rgtype.key ? \"#34495e\" : \"#95a5a6\",\n                  }}\n                >\n                  {t(rgtype.name)}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"next\")}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterMode;\n\nconst modeType = [\n  {\n    name: \"online\",\n    key: \"Online\",\n    greyIcon: \"online.svg\",\n    activeIcon: \"online-dark.svg\",\n  },\n  {\n    name: \"offline\",\n    key: \"Offline\",\n    greyIcon: \"offline.svg\",\n    activeIcon: \"offline-dark.svg\",\n  },\n  {\n    name: \"both\",\n    key: \"Both\",\n    greyIcon: \"both.svg\",\n    activeIcon: \"both-dark.svg\",\n  },\n];\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../../Ui/Button/ButtonWithTypeSubmit\";\nimport AuthFormFieldWithIcon from \"../../../Ui/Auth/AuthFormFieldWithIcon\";\n\nconst InstituteRegisterForm = ({\n  onChangeHandler,\n  state,\n  onSubmit,\n  errorField,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      <div className={style.auth_create_container}>\n        <div>\n          <h6\n            className={style.auth_card_title}\n            style={{\n              fontSize: \"1rem\",\n            }}\n          >\n            {t(\"register-institute\")}\n          </h6>\n          <h6\n            className={style.auth_card_subtitle}\n            style={{\n              fontSize: \"0.8rem\",\n            }}\n          >\n            {t(\"enter_ins_details\")}\n          </h6>\n        </div>\n      </div>\n\n      <div\n        className={style.auth_login_form}\n        style={{\n          marginTop: \"0\",\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <AuthFormFieldWithIcon\n            label={t(\"institute_name\")}\n            placeholder={t(\"institute_name_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/name.svg`}\n            validate={errorField[\"insName\"]}\n            name=\"insName\"\n            value={state.insName}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"username\")}\n            placeholder={t(\"username_institute_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n            validate={errorField[\"name\"]}\n            name=\"name\"\n            value={state.name}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"email\")}\n            placeholder={t(\"email\")}\n            fieldIconUrl={`${assestsAuthUrl}/mail.svg`}\n            validate={errorField[\"insEmail\"]}\n            name=\"insEmail\"\n            value={state.insEmail}\n            onChange={onChangeHandler}\n            type=\"email\"\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"address\")}\n            placeholder={t(\"address_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/location.svg`}\n            validate={errorField[\"insAddress\"]}\n            name=\"insAddress\"\n            value={state.insAddress}\n            onChange={onChangeHandler}\n          />\n          <AuthFormFieldWithIcon\n            label={t(\"pincode\")}\n            placeholder={t(\"pincode_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/pincode.svg`}\n            // validate={errorField[\"pincode\"]}\n            name=\"pincode\"\n            value={state.pincode}\n            onChange={onChangeHandler}\n            maxLength=\"6\"\n            minLength=\"6\"\n          />\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"continue_to_proceed\")}\n            disabled={disabled}\n            customStyleButton={{\n              marginTop: \"1.5rem\",\n            }}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InstituteRegisterForm;\n","import GetStarted from \"../../GetStarted\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport InstituteRegisterType from \"./InstituteRegisterType\";\nimport InstituteRegisterMode from \"./InstituteRegisterMode\";\nimport InstituteRegisterForm from \"./InstituteRegisterForm\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../Validation/functions/checkingRequiredField\";\nimport { useAuthInstituteCreateAccount } from \"../../../Hooks/ApiHooks/Auth/auth-api\";\nimport { decryption } from \"../../../Services/Encryption/decrypt\";\n\nconst InstituteCreateAccount = () => {\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [step, setStep] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [state, setState] = useState({\n    insName: \"\",\n    name: \"\",\n    insEmail: \"\",\n    insAddress: \"\",\n    insPincode: \"\",\n    insMode: \"\",\n    insType: \"\",\n  });\n\n  const [authInstituteCreateAccount] = useAuthInstituteCreateAccount();\n  const onRegisterType = (val) => {\n    setState((prev) => ({\n      ...prev,\n      insType: val,\n    }));\n  };\n\n  const onSubmitRegisterType = (e) => {\n    e.preventDefault();\n    let validation = requiredField({ insType: state.insType });\n    if (existingRequiredField(validation)) {\n      setStep(\"MODE\");\n    } else {\n      setErrorField(validation);\n    }\n  };\n  const onRegisterMode = (val) => {\n    setState((prev) => ({\n      ...prev,\n      insMode: val,\n    }));\n  };\n\n  const onSubmitRegisterMode = (e) => {\n    e.preventDefault();\n    let validation = requiredField({ insMode: state.insMode });\n    if (existingRequiredField(validation)) {\n      setStep(\"FORM_FIELD\");\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onCreateAccount = (e) => {\n    e.preventDefault();\n    setDisabled((pre) => !pre);\n    let validation = requiredField(state, [\"insPincode\"]);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      authInstituteCreateAccount({\n        profileCreation: {\n          ...state,\n          insPhoneNumber: getQuery?.state?.phoneNumber,\n          insMobileStatus: getQuery?.state?.insMobileStatus,\n        },\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute?._id) {\n            navigate(\"/institute/create/account/password\", {\n              state: {\n                id: response?.institute?._id,\n              },\n            });\n          }\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n      setDisabled((pre) => !pre);\n    }\n  };\n  return (\n    <>\n      <GetStarted>\n        {!step ? (\n          <InstituteRegisterType\n            onGrab={onRegisterType}\n            state={state.insType}\n            onSubmit={onSubmitRegisterType}\n            errorField={errorField}\n          />\n        ) : step === \"MODE\" ? (\n          <InstituteRegisterMode\n            onGrab={onRegisterMode}\n            state={state.insMode}\n            onSubmit={onSubmitRegisterMode}\n            errorField={errorField}\n          />\n        ) : (\n          <InstituteRegisterForm\n            onChangeHandler={onChangeHandler}\n            state={state}\n            onSubmit={onCreateAccount}\n            errorField={errorField}\n            disabled={disabled}\n          />\n        )}\n      </GetStarted>\n    </>\n  );\n};\n\nexport default InstituteCreateAccount;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n"],"names":["_ref","state","onGrab","onSubmit","errorField","t","useTranslation","_jsxs","className","style","auth_card_wrapper","children","_jsx","auth_create_container","auth_card_title","fontSize","auth_card_subtitle","auth_login_form","marginTop","institute_type_container","registerType","map","rgtype","onClick","key","institute_type_card","src","concat","assestsAuthUrl","activeIcon","greyIcon","alt","color","name","ButtonWithTypeSubmit","type","buttonText","customStyleButton","modeType","onChangeHandler","disabled","AuthFormFieldWithIcon","label","placeholder","fieldIconUrl","validate","value","insName","onChange","insEmail","insAddress","pincode","maxLength","minLength","InstituteCreateAccount","navigate","useNavigate","getQuery","useLocation","step","setStep","useState","setDisabled","setErrorField","setState","insPincode","insMode","insType","authInstituteCreateAccount","useAuthInstituteCreateAccount","_Fragment","GetStarted","InstituteRegisterMode","val","prev","e","preventDefault","validation","requiredField","existingRequiredField","InstituteRegisterForm","target","pre","_getQuery$state","_getQuery$state2","profileCreation","insPhoneNumber","phoneNumber","insMobileStatus","then","res","_res$data","_response$institute","response","decryption","data","encrypt","_response$institute2","institute","_id","id","catch","InstituteRegisterType","optional","arguments","length","undefined","error","obj","includes","required","req"],"sourceRoot":""}