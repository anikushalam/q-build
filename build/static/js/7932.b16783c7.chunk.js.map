{"version":3,"file":"static/js/7932.b16783c7.chunk.js","mappings":"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","sources":["hooks/member_tab/finance-api.js"],"sourcesContent":["import {\n  useFetchFinanceDetailQuery,\n  useAllHistoryQuery,\n  useAddEmployeePayrollMutation,\n  useAddPayrollMutation,\n  useGetOneEmpDetailAndOneSalaryHistoryQuery,\n  useOneStaffAttendanceQuery,\n  useMerchantIdQuery,\n  useInventoryListQuery,\n  useOneInventoryExpneseListQuery,\n  useGetBankByFinanceQuery,\n  usePaymentModeUpdateFinanceMutation,\n  useAddBankByFinanceMutation,\n  useGetAllFeesCategoryQuery,\n  useAddFeesCategoryMutation,\n  useGetAllFeesStructureQuery,\n  useAddFeesStructureMutation,\n  useGetAllExemptionQuery,\n  useGetAllGovernmentScholarshipQuery,\n  useOneFeeStructureDetailQuery,\n  useAllAdmissionFeeFinanceQuery,\n  useAdmissionFeeActionFinanceMutation,\n  useAllLibraryFeeFinanceQuery,\n  useLibraryFeeActionFinanceMutation,\n  useAdmissionGovernmentGrantFinanceMutation,\n  useGetAllFeeHeadMasterQuery,\n  useAddFeeHeadMasterMutation,\n  useUpdateFeeHeadMasterMutation,\n  useDeleteFeesCategoryMutation,\n  useUpdateFeesStructureMutation,\n  useUpdateRetroFeesStructureMutation,\n  useDeleteFeesStructureMutation,\n  useDeleteFeesHeadMutation,\n  useAddExcelCategoryByFinanceMutation,\n  useAddExcelStructureByFinanceMutation,\n  useAddExcelFeeHeadByFinanceMutation,\n  useFilterTransactionHistoryQuery,\n  useGetAllExcelByFinanceQuery,\n  useUpdateExcelByFinanceMutation,\n  useDeleteExcelByFinanceMutation,\n  useGetAllBankByFinanceQuery,\n  useDeleteBankByFinanceMutation,\n  useUpdateBankByFinanceMutation,\n  useGetOneBankByFinanceQuery,\n  useGetMasterDepositByFinanceQuery,\n  useGetMasterDepositAllByFinanceQuery,\n  useRefundDepositByFinanceMutation,\n  useGetAllDepositRefundByFinanceQuery,\n  useAddModeratorByFinanceMutation,\n  useGetModeratorByFinanceQuery,\n  useUpdateModeratorByFinanceMutation,\n  useDeleteModeratorByFinanceMutation,\n  useFilterFeeHeadReceiptMutation,\n  useGetAllStandardInstituteQuery,\n  useGetPayrollHeadListQuery,\n  useAddPayrollHeadMutation,\n  useGetOnePayrollHeadMonthQuery,\n  useGetOnePayrollHeadEmployeeQuery,\n  usePayrollAccountHeadPaymentMutation,\n  useGetAllSalaryHistoryQuery,\n  useAllHostelFeeFinanceQuery,\n  useHostelFeeActionFinanceMutation,\n  useAllTransportFeeFinanceQuery,\n  useTransportFeeActionFinanceMutation,\n  useMarkAsSecondaryCategoryMutation,\n  useFilterHostelFeeHeadReceiptQuery,\n  useFinanceTransportReceiptQuery,\n} from \"../../services/financeAPI\";\n\nexport const useFinanceDetailManager = (args) => {\n  const { data: financeDetailManager, refetch: financeDetailManagerRefetch } =\n    useFetchFinanceDetailQuery(args.data, { skip: args.skip });\n  return { financeDetailManager, financeDetailManagerRefetch };\n};\n\nexport const useFinanceAllHistory = (args) => {\n  const { data: financeAllHistory, refetch: financeAllHistoryRefetch } =\n    useAllHistoryQuery(args.data, { skip: args.skip });\n  return { financeAllHistory, financeAllHistoryRefetch };\n};\n\nexport const useAddEmployeePayroll = () => {\n  const [addEmployeePayroll] = useAddEmployeePayrollMutation();\n  return [addEmployeePayroll];\n};\n\nexport const useAddPayroll = () => {\n  const [addPayroll] = useAddPayrollMutation();\n  return [addPayroll];\n};\n\nexport const useFinanceOneEmployeeDetailHistory = (args) => {\n  const {\n    data: financeOneEmployeeDetailHistory,\n    refetch: financeOneEmployeeDetailHistoryRefetch,\n  } = useGetOneEmpDetailAndOneSalaryHistoryQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    financeOneEmployeeDetailHistory,\n    financeOneEmployeeDetailHistoryRefetch,\n  };\n};\n\nexport const useOneStaffAttendance = (args) => {\n  const { data: oneStaffAttendance, refetch: oneStaffAttendanceRefetch } =\n    useOneStaffAttendanceQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    oneStaffAttendance,\n    oneStaffAttendanceRefetch,\n  };\n};\n\nexport const useMerchantId = (args) => {\n  const { data: merchantId, refetch: merchantIdRefetch } = useMerchantIdQuery(\n    args.id,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    merchantId,\n    merchantIdRefetch,\n  };\n};\n\nexport const useInventoryList = (args) => {\n  const { data: inventoryList, refetch: inventoryListRefetch } =\n    useInventoryListQuery(args.data, { skip: args.skip });\n  return { inventoryList, inventoryListRefetch };\n};\n\nexport const useOneInventoryExpneseList = (args) => {\n  const { data: inventoryExpneseList, refetch: inventoryExpneseListRefetch } =\n    useOneInventoryExpneseListQuery(args.data, { skip: args.skip });\n  return { inventoryExpneseList, inventoryExpneseListRefetch };\n};\n\nexport const useGetBankByFinance = (args) => {\n  const { data: getBankByFinance, refetch: getBankByFinanceRefetch } =\n    useGetBankByFinanceQuery(args.data, { skip: args.skip });\n  return { getBankByFinance, getBankByFinanceRefetch };\n};\n\nexport const usePaymentModeUpdateFinance = () => {\n  const [paymentModeUpdateFinance] = usePaymentModeUpdateFinanceMutation();\n  return [paymentModeUpdateFinance];\n};\nexport const useAddBankByFinance = () => {\n  const [addBankByFinance] = useAddBankByFinanceMutation();\n  return [addBankByFinance];\n};\nexport const useGetAllFeesCategory = (args) => {\n  const { data: getAllFeesCategory, refetch: getAllFeesCategoryRefetch } =\n    useGetAllFeesCategoryQuery(args.fid, { skip: args.skip });\n  return { getAllFeesCategory, getAllFeesCategoryRefetch };\n};\n\nexport const useAddFeesCategory = () => {\n  const [addFeesCategory] = useAddFeesCategoryMutation();\n  return [addFeesCategory];\n};\n\nexport const useGetAllFeesStructure = (args) => {\n  const { data: getAllFeesStructure, refetch: getAllFeesStructureRefetch } =\n    useGetAllFeesStructureQuery(args.data, { skip: args.skip });\n  return { getAllFeesStructure, getAllFeesStructureRefetch };\n};\n\nexport const useAddFeesStructure = () => {\n  const [addFeesStructure] = useAddFeesStructureMutation();\n  return [addFeesStructure];\n};\n\nexport const useGetAllExemption = (args) => {\n  const { data: getAllExemption, refetch: getAllExemptionRefetch } =\n    useGetAllExemptionQuery(args.data, { skip: args.skip });\n  return { getAllExemption, getAllExemptionRefetch };\n};\n\nexport const useGetAllGovernmentScholarship = (args) => {\n  const {\n    data: getAllGovernmentScholarship,\n    refetch: getAllGovernmentScholarshipRefetch,\n  } = useGetAllGovernmentScholarshipQuery(args.data, { skip: args.skip });\n  return { getAllGovernmentScholarship, getAllGovernmentScholarshipRefetch };\n};\n\nexport const useOneFeeStructureDetail = (args) => {\n  const { data: oneFeeStructureDetail, refetch: oneFeeStructureDetailRefetch } =\n    useOneFeeStructureDetailQuery(args.fsid, { skip: args.skip });\n  return { oneFeeStructureDetail, oneFeeStructureDetailRefetch };\n};\n\nexport const useAllAdmissionFeeFinanceManager = (args) => {\n  const {\n    data: allAdmissionFeeFinance,\n    refetch: allAdmissionFeeFinanceRefetch,\n  } = useAllAdmissionFeeFinanceQuery(args.data, { skip: args.skip });\n  return { allAdmissionFeeFinance, allAdmissionFeeFinanceRefetch };\n};\n\nexport const useAdmissionFeeActionFinance = () => {\n  const [admissionFeeActionFinance] = useAdmissionFeeActionFinanceMutation();\n  return [admissionFeeActionFinance];\n};\n\nexport const useAllLibraryFeeFinance = (args) => {\n  const { data: allLibraryFeeFinance, refetch: allLibraryFeeFinanceRefetch } =\n    useAllLibraryFeeFinanceQuery(args.data, { skip: args.skip });\n  return { allLibraryFeeFinance, allLibraryFeeFinanceRefetch };\n};\n\nexport const useLibraryFeeActionFinance = () => {\n  const [libraryFeeActionFinance] = useLibraryFeeActionFinanceMutation();\n  return [libraryFeeActionFinance];\n};\n\nexport const useAdmissionGovernmentGrantFinance = () => {\n  const [admissionGovernmentGrantFinance] =\n    useAdmissionGovernmentGrantFinanceMutation();\n  return [admissionGovernmentGrantFinance];\n};\n\nexport const useGetAllFeeHeadMaster = (args) => {\n  const { data: getAllFeeHeadMaster, refetch: getAllFeeHeadMasterRefetch } =\n    useGetAllFeeHeadMasterQuery(args.data, { skip: args.skip });\n  return { getAllFeeHeadMaster, getAllFeeHeadMasterRefetch };\n};\n\nexport const useAddFeeHeadMaster = () => {\n  const [addFeeHeadMaster] = useAddFeeHeadMasterMutation();\n  return [addFeeHeadMaster];\n};\nexport const useUpdateFeeHeadMaster = () => {\n  const [updateFeeHeadMaster] = useUpdateFeeHeadMasterMutation();\n  return [updateFeeHeadMaster];\n};\n\nexport const useDeleteFeesCategory = () => {\n  const [deleteFeesCategory] = useDeleteFeesCategoryMutation();\n  return [deleteFeesCategory];\n};\nexport const useUpdateFeesStructure = () => {\n  const [updateFeesStructure] = useUpdateFeesStructureMutation();\n  return [updateFeesStructure];\n};\nexport const useUpdateRetroFeesStructure = () => {\n  const [updateRetroFeesStructure] = useUpdateRetroFeesStructureMutation();\n  return [updateRetroFeesStructure];\n};\nexport const useDeleteFeesStructure = () => {\n  const [deleteFeesStructure] = useDeleteFeesStructureMutation();\n  return [deleteFeesStructure];\n};\nexport const useDeleteFeesHead = () => {\n  const [deleteFeesHead] = useDeleteFeesHeadMutation();\n  return [deleteFeesHead];\n};\n\nexport const useAddExcelCategoryByFinance = () => {\n  const [addExcelCategoryByFinance] = useAddExcelCategoryByFinanceMutation();\n  return [addExcelCategoryByFinance];\n};\nexport const useAddExcelStructureByFinance = () => {\n  const [addExcelStructureByFinance] = useAddExcelStructureByFinanceMutation();\n  return [addExcelStructureByFinance];\n};\nexport const useAddExcelFeeHeadByFinance = () => {\n  const [addExcelFeeHeadByFinance] = useAddExcelFeeHeadByFinanceMutation();\n  return [addExcelFeeHeadByFinance];\n};\n\nexport const useFilterTransactionHistory = (args) => {\n  const {\n    data: filterTransactionHistory,\n    refetch: filterTransactionHistoryRefetch,\n  } = useFilterTransactionHistoryQuery(args.data, { skip: args.skip });\n  return { filterTransactionHistory, filterTransactionHistoryRefetch };\n};\nexport const useGetAllExcelByFinance = (args) => {\n  const { data: getAllExcelByFinance, refetch: getAllExcelByFinanceRefetch } =\n    useGetAllExcelByFinanceQuery(args.data, { skip: args.skip });\n  return { getAllExcelByFinance, getAllExcelByFinanceRefetch };\n};\n\nexport const useUpdateExcelByFinance = () => {\n  const [updateExcelByFinance] = useUpdateExcelByFinanceMutation();\n  return [updateExcelByFinance];\n};\n\nexport const useDeleteExcelByFinance = () => {\n  const [deleteExcelByFinance] = useDeleteExcelByFinanceMutation();\n  return [deleteExcelByFinance];\n};\n\nexport const useGetAllBankByFinance = (args) => {\n  const { data: getAllBankByFinance, refetch: getAllBankByFinanceRefetch } =\n    useGetAllBankByFinanceQuery(args.data, { skip: args.skip });\n  return { getAllBankByFinance, getAllBankByFinanceRefetch };\n};\n\nexport const useGetOneBankByFinance = (args) => {\n  const { data: getOneBankByFinance, refetch: getOneBankByFinanceRefetch } =\n    useGetOneBankByFinanceQuery(args.bid, { skip: args.skip });\n  return { getOneBankByFinance, getOneBankByFinanceRefetch };\n};\n\nexport const useDeleteBankByFinance = () => {\n  const [deleteBankByFinance] = useDeleteBankByFinanceMutation();\n  return [deleteBankByFinance];\n};\n\nexport const useUpdateBankByFinance = () => {\n  const [updateBankByFinance] = useUpdateBankByFinanceMutation();\n  return [updateBankByFinance];\n};\n\nexport const useGetMasterDepositByFinance = (args) => {\n  const {\n    data: getMasterDepositByFinance,\n    refetch: getMasterDepositByFinanceRefetch,\n  } = useGetMasterDepositByFinanceQuery(args.fid, { skip: args.skip });\n  return { getMasterDepositByFinance, getMasterDepositByFinanceRefetch };\n};\n\nexport const useGetMasterDepositAllByFinance = (args) => {\n  const {\n    data: getMasterDepositAllByFinance,\n    refetch: getMasterDepositAllByFinanceRefetch,\n  } = useGetMasterDepositAllByFinanceQuery(args.data, { skip: args.skip });\n  return { getMasterDepositAllByFinance, getMasterDepositAllByFinanceRefetch };\n};\n\nexport const useRefundDepositByFinance = () => {\n  const [refundDepositByFinance] = useRefundDepositByFinanceMutation();\n  return [refundDepositByFinance];\n};\n\nexport const useGetAllDepositRefundByFinance = (args) => {\n  const {\n    data: getAllDepositRefundByFinance,\n    refetch: getAllDepositRefundByFinanceRefetch,\n  } = useGetAllDepositRefundByFinanceQuery(args.data, { skip: args.skip });\n  return { getAllDepositRefundByFinance, getAllDepositRefundByFinanceRefetch };\n};\n\nexport const useGetModeratorByFinance = (args) => {\n  const { data: getModeratorByFinance, refetch: getModeratorByFinanceRefetch } =\n    useGetModeratorByFinanceQuery(args.data, { skip: args.skip });\n  return { getModeratorByFinance, getModeratorByFinanceRefetch };\n};\n\nexport const useAddModeratorByFinance = () => {\n  const [addModeratorByFinance] = useAddModeratorByFinanceMutation();\n  return [addModeratorByFinance];\n};\n\nexport const useUpdateModeratorByFinance = () => {\n  const [updateModeratorByFinance] = useUpdateModeratorByFinanceMutation();\n  return [updateModeratorByFinance];\n};\n\nexport const useDeleteModeratorByFinance = () => {\n  const [deleteModeratorByFinance] = useDeleteModeratorByFinanceMutation();\n  return [deleteModeratorByFinance];\n};\n\nexport const useFilterFeeHeadReceipt = () => {\n  const [filterFeeHeadReceipt] = useFilterFeeHeadReceiptMutation();\n  return [filterFeeHeadReceipt];\n};\n\nexport const useGetAllStandardInstitute = (args) => {\n  const {\n    data: getAllStandardInstitute,\n    refetch: getAllStandardInstituteRefetch,\n  } = useGetAllStandardInstituteQuery(args.id, { skip: args.skip });\n  return { getAllStandardInstitute, getAllStandardInstituteRefetch };\n};\n\nexport const useGetPayrollHeadList = (args) => {\n  const { data: getPayrollHeadList, refetch: getPayrollHeadListRefetch } =\n    useGetPayrollHeadListQuery(args.data, { skip: args.skip });\n  return { getPayrollHeadList, getPayrollHeadListRefetch };\n};\n\nexport const useAddPayrollHead = () => {\n  const [addPayrollHead] = useAddPayrollHeadMutation();\n  return [addPayrollHead];\n};\n\nexport const useGetOnePayrollHeadMonth = (args) => {\n  const {\n    data: getOnePayrollHeadMonth,\n    refetch: getOnePayrollHeadMonthRefetch,\n  } = useGetOnePayrollHeadMonthQuery(args.data, { skip: args.skip });\n  return { getOnePayrollHeadMonth, getOnePayrollHeadMonthRefetch };\n};\nexport const useGetOnePayrollHeadEmployee = (args) => {\n  const {\n    data: getOnePayrollHeadEmployee,\n    refetch: getOnePayrollHeadEmployeeRefetch,\n  } = useGetOnePayrollHeadEmployeeQuery(args.data, { skip: args.skip });\n  return { getOnePayrollHeadEmployee, getOnePayrollHeadEmployeeRefetch };\n};\n\nexport const usePayrollAccountHeadPayment = () => {\n  const [payrollAccountHeadPayment] = usePayrollAccountHeadPaymentMutation();\n  return [payrollAccountHeadPayment];\n};\n\nexport const useGetPayrollSalaryHistoryList = (args) => {\n  const {\n    data: getPayrollSalaryHistoryList,\n    refetch: getPayrollSalaryHistoryListRefetch,\n  } = useGetAllSalaryHistoryQuery(args.fid, { skip: args.skip });\n  return { getPayrollSalaryHistoryList, getPayrollSalaryHistoryListRefetch };\n};\n\nexport const useAllHostelFeeFinance = (args) => {\n  const { data: allHostelFeeFinance, refetch: allHostelFeeFinanceRefetch } =\n    useAllHostelFeeFinanceQuery(args.data, { skip: args.skip });\n  return { allHostelFeeFinance, allHostelFeeFinanceRefetch };\n};\n\nexport const useHostelFeeActionFinance = () => {\n  const [hostelFeeActionFinance] = useHostelFeeActionFinanceMutation();\n  return [hostelFeeActionFinance];\n};\n\nexport const useAllTransportFeeFinance = (args) => {\n  const {\n    data: allTransportFeeFinance,\n    refetch: allTransportFeeFinanceRefetch,\n  } = useAllTransportFeeFinanceQuery(args.data, { skip: args.skip });\n  return { allTransportFeeFinance, allTransportFeeFinanceRefetch };\n};\n\nexport const useTransportFeeActionFinance = () => {\n  const [transportFeeActionFinance] = useTransportFeeActionFinanceMutation();\n  return [transportFeeActionFinance];\n};\nexport const useMarkAsSecondaryCategory = () => {\n  const [markAsSecondaryCategory] = useMarkAsSecondaryCategoryMutation();\n  return [markAsSecondaryCategory];\n};\n\nexport const useFilterHostelFeeHeadReceipt = (args) => {\n  const {\n    data: filterHostelFeeHeadReceipt,\n    refetch: filterHostelFeeHeadReceiptRefetch,\n  } = useFilterHostelFeeHeadReceiptQuery(args.data, { skip: args.skip });\n  return { filterHostelFeeHeadReceipt, filterHostelFeeHeadReceiptRefetch };\n};\nexport const useFinanceTransportReceipt = (args) => {\n  const {\n    data: financeTransportReceipt,\n    refetch: financeTransportReceiptRefetch,\n  } = useFinanceTransportReceiptQuery(args.rid, { skip: args.skip });\n  return { financeTransportReceipt, financeTransportReceiptRefetch };\n};\n"],"names":["useFinanceDetailManager","args","_useFetchFinanceDetai","useFetchFinanceDetailQuery","data","skip","financeDetailManager","financeDetailManagerRefetch","refetch","useFinanceAllHistory","_useAllHistoryQuery","useAllHistoryQuery","financeAllHistory","financeAllHistoryRefetch","useMerchantId","_useMerchantIdQuery","useMerchantIdQuery","id","merchantId","merchantIdRefetch","useGetBankByFinance","_useGetBankByFinanceQ","useGetBankByFinanceQuery","getBankByFinance","getBankByFinanceRefetch","usePaymentModeUpdateFinance","_usePaymentModeUpdate","usePaymentModeUpdateFinanceMutation","_slicedToArray","useAddBankByFinance","_useAddBankByFinanceM","useAddBankByFinanceMutation","useGetAllFeesCategory","_useGetAllFeesCategor","useGetAllFeesCategoryQuery","fid","getAllFeesCategory","getAllFeesCategoryRefetch","useAddFeesCategory","_useAddFeesCategoryMu","useAddFeesCategoryMutation","useGetAllFeesStructure","_useGetAllFeesStructu","useGetAllFeesStructureQuery","getAllFeesStructure","getAllFeesStructureRefetch","useAddFeesStructure","_useAddFeesStructureM","useAddFeesStructureMutation","useOneFeeStructureDetail","_useOneFeeStructureDe","useOneFeeStructureDetailQuery","fsid","oneFeeStructureDetail","oneFeeStructureDetailRefetch","useGetAllFeeHeadMaster","_useGetAllFeeHeadMast","useGetAllFeeHeadMasterQuery","getAllFeeHeadMaster","getAllFeeHeadMasterRefetch","useAddFeeHeadMaster","_useAddFeeHeadMasterM","useAddFeeHeadMasterMutation","useUpdateFeeHeadMaster","_useUpdateFeeHeadMast","useUpdateFeeHeadMasterMutation","useDeleteFeesCategory","_useDeleteFeesCategor","useDeleteFeesCategoryMutation","useUpdateFeesStructure","_useUpdateFeesStructu","useUpdateFeesStructureMutation","useUpdateRetroFeesStructure","_useUpdateRetroFeesSt","useUpdateRetroFeesStructureMutation","useDeleteFeesStructure","_useDeleteFeesStructu","useDeleteFeesStructureMutation","useDeleteFeesHead","_useDeleteFeesHeadMut","useDeleteFeesHeadMutation","useAddExcelCategoryByFinance","_useAddExcelCategoryB","useAddExcelCategoryByFinanceMutation","useAddExcelStructureByFinance","_useAddExcelStructure","useAddExcelStructureByFinanceMutation","useAddExcelFeeHeadByFinance","_useAddExcelFeeHeadBy","useAddExcelFeeHeadByFinanceMutation","useFilterTransactionHistory","_useFilterTransaction","useFilterTransactionHistoryQuery","filterTransactionHistory","filterTransactionHistoryRefetch","useGetAllExcelByFinance","_useGetAllExcelByFina","useGetAllExcelByFinanceQuery","getAllExcelByFinance","getAllExcelByFinanceRefetch","useUpdateExcelByFinance","_useUpdateExcelByFina","useUpdateExcelByFinanceMutation","useDeleteExcelByFinance","_useDeleteExcelByFina","useDeleteExcelByFinanceMutation","useGetAllBankByFinance","_useGetAllBankByFinan","useGetAllBankByFinanceQuery","getAllBankByFinance","getAllBankByFinanceRefetch","useGetOneBankByFinance","_useGetOneBankByFinan","useGetOneBankByFinanceQuery","bid","getOneBankByFinance","getOneBankByFinanceRefetch","useDeleteBankByFinance","_useDeleteBankByFinan","useDeleteBankByFinanceMutation","useUpdateBankByFinance","_useUpdateBankByFinan","useUpdateBankByFinanceMutation","useGetMasterDepositAllByFinance","_useGetMasterDepositA","useGetMasterDepositAllByFinanceQuery","getMasterDepositAllByFinance","getMasterDepositAllByFinanceRefetch","useRefundDepositByFinance","_useRefundDepositByFi","useRefundDepositByFinanceMutation","useGetModeratorByFinance","_useGetModeratorByFin","useGetModeratorByFinanceQuery","getModeratorByFinance","getModeratorByFinanceRefetch","useAddModeratorByFinance","_useAddModeratorByFin","useAddModeratorByFinanceMutation","useUpdateModeratorByFinance","_useUpdateModeratorBy","useUpdateModeratorByFinanceMutation","useDeleteModeratorByFinance","_useDeleteModeratorBy","useDeleteModeratorByFinanceMutation","useFilterFeeHeadReceipt","_useFilterFeeHeadRece","useFilterFeeHeadReceiptMutation","useGetAllStandardInstitute","_useGetAllStandardIns","useGetAllStandardInstituteQuery","getAllStandardInstitute","getAllStandardInstituteRefetch","useMarkAsSecondaryCategory","_useMarkAsSecondaryCa","useMarkAsSecondaryCategoryMutation","useFilterHostelFeeHeadReceipt","_useFilterHostelFeeHe","useFilterHostelFeeHeadReceiptQuery","filterHostelFeeHeadReceipt","filterHostelFeeHeadReceiptRefetch","useFinanceTransportReceipt","_useFinanceTransportR","useFinanceTransportReceiptQuery","rid","financeTransportReceipt","financeTransportReceiptRefetch"],"sourceRoot":""}