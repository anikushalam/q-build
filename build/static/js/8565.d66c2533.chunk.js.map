{"version":3,"file":"static/js/8565.d66c2533.chunk.js","mappings":"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","sources":["webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/EachNestedComment.module.css?5f68","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/EachNestedComment.js","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/NestedComments.module.css?b402","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/components/Nested_Comments/NestedComments.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"eachComment\":\"EachNestedComment_eachComment__Yp1ET\",\"imgcontainer\":\"EachNestedComment_imgcontainer__GalK4\",\"commentText\":\"EachNestedComment_commentText__7zNCO\",\"likeReply\":\"EachNestedComment_likeReply__yVcO+\",\"eachCommentContainer\":\"EachNestedComment_eachCommentContainer__eeCVJ\",\"dots\":\"EachNestedComment_dots__bR3MT\",\"time\":\"EachNestedComment_time__u9Zlo\"};","import React from \"react\";\nimport { format } from \"timeago.js\";\nimport { imageShowUrl } from \"../../../../../../../../services/BaseUrl\";\nimport style from \"./EachNestedComment.module.css\";\n\nfunction EachNestedComment({ comment }) {\n  return (\n    <div className={style.eachCommentContainer}>\n      <div className={style.eachComment}>\n        <div className={style.imgcontainer}>\n          <img\n            src={\n              comment?.authorPhotoId !== \"1\"\n                ? `${imageShowUrl}/${comment.authorProfilePhoto}`\n                : \"/images/dummy-avatar-icon.svg\"\n            }\n            alt=\"\"\n          />\n        </div>\n\n        <div className={style.commentText}>\n          <h6>{comment?.authorUserName}</h6>\n          <p>{comment?.repliedComment}</p>\n        </div>\n      </div>\n\n      {/* <div className={style.likeReply}>\n        <p>Like</p>\n      </div> */}\n\n      <div className={style.dots}>\n        <p className={style.time}>{format(comment?.createdAt)}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EachNestedComment;\n","// extracted by mini-css-extract-plugin\nexport default {\"eachComment\":\"NestedComments_eachComment__pANlV\",\"addComment\":\"NestedComments_addComment__t172M\",\"imgcontainer\":\"NestedComments_imgcontainer__t7PYl\",\"inputContainer\":\"NestedComments_inputContainer__xy2lD\",\"hr\":\"NestedComments_hr__uf04W\",\"icons\":\"NestedComments_icons__pg5T8\",\"btn\":\"NestedComments_btn__-gMA2\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  useCommentReply,\n  useOneCommentAllReply,\n} from \"../../../../../../../../Post/Institute/Components/post-api\";\nimport EachNestedComment from \"./EachNestedComment\";\nimport style from \"./NestedComments.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { imageShowUrl } from \"../../../../../../../../services/BaseUrl\";\nimport { postChangeAction } from \"../../../../../../../../redux/store/post-slice\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useTranslation } from \"react-i18next\";\nimport { instituteAs } from \"../../../../../../../../constant/constant_value\";\nimport Avatar from \"../../../../../../../../Custom/Avatar/Avatar\";\nimport { useOneInstituteDashboard } from \"../../../../../../../../hooks/dashboard/dashboard-api\";\n\nfunction NestedComments({ pcid, pid }) {\n  //for setting the next page to fetch data\n  const [page, setPage] = useState(1);\n  const { t } = useTranslation();\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n\n  //for the fetch more or not after seeing all post\n  const [state, setState] = useState(true);\n\n  const commentRef = useRef(\"\");\n  const ids = useSelector((state) => state.idChange);\n  const allReply = useSelector((state) => state.postChange.replyComments);\n\n  const dispatch = useDispatch();\n  const { allReplyComment, allReplyCommentRefetch } = useOneCommentAllReply({\n    data: {\n      pcid: pcid ? pcid : \"\",\n      page: page,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: false,\n  });\n  const [commentReply] = useCommentReply();\n\n  const { oneInstituteDashboard, oneInstituteDashboardRefetch } =\n    useOneInstituteDashboard({\n      id: ids?.id,\n      skip: !ids?.id,\n    });\n  useEffect(() => {\n    if (ids?.id) oneInstituteDashboardRefetch();\n  }, [ids?.id, oneInstituteDashboardRefetch]);\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    allReplyCommentRefetch();\n  }, [page, allReplyCommentRefetch, state]);\n\n  //for the action perform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    if (allReplyComment?.replyComment) {\n      dispatch(\n        postChangeAction.addReplyComment({\n          commentId: pcid,\n          reply: allReplyComment?.replyComment,\n        })\n      );\n    }\n\n    //for next api is call or not dashboard\n    if (allReplyComment?.replyComment?.length === 10) setState(true);\n    else setState(false);\n  }, [allReplyComment?.replyComment, dispatch, pcid]);\n\n  const commentSubmitHandler = () => {\n    dispatch(\n      postChangeAction.addReplyCommentCount({\n        commentId: pcid,\n        postId: pid,\n      })\n    );\n    commentReply({\n      replyComment: {\n        comment: commentRef.current.value,\n        uid: ids.id,\n      },\n      pcid: pcid,\n      viewAs: instituteAs,\n    })\n      .then((res) => {\n        dispatch(\n          postChangeAction.addReplyCreatedComment({\n            commentId: pcid,\n            reply: res.data?.childReplyComment,\n          })\n        );\n      })\n      .catch({});\n    commentRef.current.value = \"\";\n  };\n\n  return (\n    <>\n      <div className={style.eachComment}>\n        <div className={style.addComment}>\n          <div className={style.imgcontainer}>\n            <Avatar\n              dynamicImage={\n                oneInstituteDashboard?.institute?.photoId !== \"1\"\n                  ? `${imageShowUrl}/${oneInstituteDashboard?.institute?.insProfilePhoto}`\n                  : \"/images/ins_default_profile.svg\"\n              }\n            />{\" \"}\n          </div>\n\n          <div className={style.inputContainer}>\n            <input\n              type=\"text\"\n              ref={commentRef}\n              placeholder={t(\"add_a_reply\")}\n              className={`form-control ${style.searchinput}`}\n            />\n            <div className={style.icons}>\n              <img src=\"/images/img-icon.svg\" alt=\"\" />\n              <img src=\"/images/emoji-icon.svg\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className={style.btn} onClick={commentSubmitHandler}>\n          {t(\"reply\")}\n        </div>\n      </div>\n\n      {allReply?.map((com) =>\n        com.commentId === pcid\n          ? com?.reply?.map((comment, index) =>\n              com?.reply?.length === index + 1 ? (\n                <div className={style.eachComment} key={index} ref={ref}>\n                  <EachNestedComment comment={comment} />\n                  <hr />\n                </div>\n              ) : (\n                <div className={style.eachComment} key={index}>\n                  <EachNestedComment comment={comment} />\n                  <hr />\n                </div>\n              )\n            )\n          : \"\"\n      )}\n    </>\n  );\n}\n\nexport default NestedComments;\n"],"names":["_ref","comment","_jsxs","className","style","children","_jsx","src","authorPhotoId","concat","imageShowUrl","authorProfilePhoto","alt","authorUserName","repliedComment","format","createdAt","_oneInstituteDashboar","_oneInstituteDashboar2","pcid","pid","_useState","useState","_useState2","_slicedToArray","page","setPage","t","useTranslation","_useInView","useInView","_useInView2","ref","inView","_useState3","_useState4","state","setState","commentRef","useRef","ids","useSelector","idChange","allReply","postChange","replyComments","dispatch","useDispatch","_useOneCommentAllRepl","useOneCommentAllReply","data","limit","viewAs","instituteAs","skip","allReplyComment","allReplyCommentRefetch","_useCommentReply","useCommentReply","commentReply","_useOneInstituteDashb","useOneInstituteDashboard","id","oneInstituteDashboard","oneInstituteDashboardRefetch","useEffect","_allReplyComment$repl","replyComment","postChangeAction","addReplyComment","commentId","reply","length","_Fragment","eachComment","addComment","imgcontainer","Avatar","dynamicImage","institute","photoId","insProfilePhoto","inputContainer","type","placeholder","searchinput","icons","btn","onClick","addReplyCommentCount","postId","current","value","uid","then","res","_res$data","addReplyCreatedComment","childReplyComment","catch","map","com","_com$reply","index","_com$reply2","EachNestedComment"],"sourceRoot":""}