{"version":3,"file":"static/js/5674.fc154b37.chunk.js","mappings":"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","sources":["optimized/InstituteMember/InstituteFeedback/StudentFeedback/StudentFeedbackChart.jsx"],"sourcesContent":["import {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar, getElementAtEvent } from \"react-chartjs-2\";\nimport { useFeedbackSubjectTeacherList } from \"../../../Hooks/ApiHooks/InstituteFeedback/institute-feedback-api\";\nimport { Suspense, lazy, useEffect, useRef, useState } from \"react\";\nimport UserMemberContainerWrapper from \"../../../Ui/UserMember/UserMemberContainerWrapper\";\nimport UserMemberContentWrapper from \"../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../../../UserStaffMember/FinanceManager/FinanceManager.module.css\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nconst OneStaffAnalytic = lazy(() =>\n  import(\"./OneStaffAnalytic/OneStaffAnalytic\")\n);\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst StudentFeedbackChart = ({ instituteId, ifid }) => {\n  const { t } = useTranslation();\n  const ref = useRef();\n  const [open, setOpen] = useState(\"\");\n\n  const labels = [];\n  const [state, setState] = useState({\n    labels,\n    datasets: [\n      {\n        label: \"Feedback %\",\n        data: [],\n        barThickness: 8,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 205, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(201, 203, 207, 0.2)\",\n        ],\n        borderColor: [\n          \"rgb(255, 99, 132)\",\n          \"rgb(255, 159, 64)\",\n          \"rgb(255, 205, 86)\",\n          \"rgb(75, 192, 192)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(153, 102, 255)\",\n          \"rgb(201, 203, 207)\",\n        ],\n        borderWidth: 0.5,\n      },\n    ],\n  });\n  const { feedbackSubjectTeacherList } = useFeedbackSubjectTeacherList({\n    data: {\n      ifid: ifid,\n      page: 1,\n      limit: 1000,\n      search: \"\",\n    },\n    skip: !ifid,\n  });\n\n  useEffect(() => {\n    if (feedbackSubjectTeacherList?.list?.length > 0) {\n      let labels = [];\n      let obj = {\n        label: \"Feedback %\",\n        data: [],\n        // backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      };\n      for (let st of feedbackSubjectTeacherList?.list) {\n        // if (st?.staff_emp_code) {\n        if (st?.staffROLLNO) {\n          let per = getInPercentage(\n            st?.student_feedback?.[0]?.subject_analytic\n          );\n          labels.push(st?.staffROLLNO);\n          // labels.push(st?.staff_emp_code);\n          obj.data?.push(per);\n        }\n      }\n      setState({\n        labels,\n        datasets: [obj],\n      });\n    }\n  }, [feedbackSubjectTeacherList?.list]);\n\n  const onClick = (event) => {\n    let currect = getElementAtEvent(ref?.current, event);\n\n    // for (let st of feedbackSubjectTeacherList?.list) {\n    for (let i = 1; i <= feedbackSubjectTeacherList?.list?.length; i++) {\n      if (currect?.[0]?.index === i) {\n        setOpen(feedbackSubjectTeacherList?.list?.[i]);\n      }\n      // if (st?.staffROLLNO) {\n      //   let per = getInPercentage(\n      //     st?.student_feedback?.[0]?.subject_analytic\n      //   );\n      //   labels.push(st?.staffROLLNO);\n      //   obj.data?.push(per);\n      // }\n    }\n    // let currect = getDatasetAtEvent(ref?.current, event);\n    // if (currect?.length > 0) {\n    //   navigate(\n    //     `/q/${params.username}/institute/member/feedback?a=feedback-detail`,\n    //     {\n    //       state: getQuery.state,\n    //     }\n    //   );\n    // }\n  };\n  const onToggle = () => {\n    setOpen(\"\");\n  };\n  return (\n    <>\n      <UserMemberContainerWrapper>\n        <UserMemberContentWrapper>\n          <div className={style.fm_header_container}>\n            <h6>{t(\"feedback_analytics\")}</h6>\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper>\n          <Bar ref={ref} data={state} options={options} onClick={onClick} />\n        </UserMemberContentWrapper>\n      </UserMemberContainerWrapper>\n      <Suspense fallback={<QvipleLoader />}>\n        {open && (\n          <OneStaffAnalytic\n            onClose={onToggle}\n            ifid={ifid}\n            sid={open?._id}\n            staff={open}\n          />\n        )}\n      </Suspense>\n    </>\n  );\n};\n\nexport default StudentFeedbackChart;\n\nconst options = {\n  responsive: true,\n  scales: {\n    x: {\n      grid: {\n        offset: true,\n      },\n    },\n  },\n  // plugins: {\n  //   legend: {\n  //     position: \"top\",\n  //   },\n  //   title: {\n  //     display: true,\n  //     text: \"Chart.js Bar Chart\",\n  //   },\n  // },\n};\n\nconst getInPercentage = (list) => {\n  if (list?.length > 0) {\n    let sum = 0;\n    for (let lt of list) {\n      sum += lt?.feedback_percentage;\n    }\n    // for (let lt of list) {\n    //   sum += lt?.feedback_percentage;\n    // }\n    sum = Math.floor(sum / list?.length);\n    return sum;\n  }\n  return 0;\n};\n"],"names":["OneStaffAnalytic","lazy","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","_ref","instituteId","ifid","t","useTranslation","ref","useRef","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","labels","datasets","label","data","barThickness","backgroundColor","borderColor","borderWidth","_useState4","state","setState","feedbackSubjectTeacherList","useFeedbackSubjectTeacherList","page","limit","search","skip","useEffect","_feedbackSubjectTeach","list","length","_step","obj","_iterator","_createForOfIteratorHelper","s","n","done","st","value","staffROLLNO","_st$student_feedback","_st$student_feedback$","_obj$data","per","getInPercentage","student_feedback","subject_analytic","push","err","e","f","_jsxs","_Fragment","children","UserMemberContainerWrapper","_jsx","UserMemberContentWrapper","className","style","fm_header_container","BorderBottom","Bar","options","onClick","event","currect","getElementAtEvent","current","i","_feedbackSubjectTeach2","_currect$","_feedbackSubjectTeach3","index","Suspense","fallback","QvipleLoader","onClose","sid","_id","staff","responsive","scales","x","grid","offset","_step2","sum","_iterator2","lt","feedback_percentage","Math","floor"],"sourceRoot":""}