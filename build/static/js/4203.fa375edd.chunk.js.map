{"version":3,"file":"static/js/4203.fa375edd.chunk.js","mappings":"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","sources":["Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/PostTypeConfiguration.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/SearchPost.jsx","Loader/QvipleLoaderGif.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nconst EachPost = React.lazy(() => import(\"./EachPost/EachPost\"));\nconst EachPoll = React.lazy(() => import(\"./EachPoll/EachPoll\"));\nconst EachQuestion = React.lazy(() => import(\"./EachQuestion/EachQuestion\"));\nconst PostTypeConfiguration = ({ post, profilePost, allPosts }) => {\n  const ids = useSelector((state) => state.idChange);\n  const [selectOptions, setSelectOptions] = useState(\n    !profilePost\n      ? [\"post_unfollow\"]\n      : ids?.id === post?.author\n      ? post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? [\"post_delete\", \"turn_off_comment\"]\n        : [\"post_visibility\", \"post_delete\", \"turn_off_comment\"]\n      : [\"post_unfollow\"]\n  );\n\n  useEffect(() => {\n    if (ids?.id === post?.author) {\n      post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? setSelectOptions([\"post_delete\", \"turn_off_comment\"])\n        : setSelectOptions([\n            \"post_visibility\",\n            \"post_delete\",\n            \"turn_off_comment\",\n          ]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post?.author, ids?.id, post?.postType]);\n\n  return (\n    <React.Suspense fallback={<QvipeLoaderGif />}>\n      {post?.postType === \"Post\" && (\n        <EachPost\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Poll\" && (\n        <EachPoll\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Question\" && (\n        <EachQuestion\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n    </React.Suspense>\n  );\n};\n\nexport default PostTypeConfiguration;\n","import React from \"react\";\nimport { useProfileAllPost } from \"../../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState, useEffect } from \"react\";\nimport { postChangeAction } from \"../../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../../constant/constant_value\";\nimport PostTypeConfiguration from \"./PostTypeConfiguration\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\n\nfunction SearchPost({ profilePost }) {\n  //for The redux storage and actions\n  const ids = useSelector((state) => state.idChange);\n  const allPosts = useSelector((state) => state.postChange);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(true);\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n  const [profileState, setProfileState] = useState(true);\n  const [profilePage, setProfilePage] = useState(1);\n\n  const { allProfilePost, allProfilePostRefetch } = useProfileAllPost({\n    data: {\n      id: ids?.searchProfile?.id,\n      page: profilePage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !profilePost ? true : !ids?.searchProfile?.id,\n  });\n\n  //for the remove old search\n  useEffect(() => {\n    if (ids?.searchProfile?.id) {\n      dispatch(\n        postChangeAction.removeSearchPost({\n          search: [],\n        })\n      );\n      setProfilePage(1);\n      setProfileState(true);\n    }\n  }, [dispatch, ids?.searchProfile?.id]);\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && profileState && profilePost)\n      setProfilePage((profilePage) => profilePage + 1);\n    else {\n    }\n  }, [inView, profilePost, profileState]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    if (ids?.searchProfile?.id) allProfilePostRefetch();\n  }, [profilePage, ids?.searchProfile?.id, profilePost, allProfilePostRefetch]);\n\n  //for the action pperform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    dispatch(\n      postChangeAction.addPost({\n        post: !profilePost\n          ? []\n          : allProfilePost?.post?.[0]?.author === ids?.searchProfile.id\n          ? allProfilePost?.post\n          : [],\n        profilePost: !profilePost ? \"dash\" : \"search\",\n      })\n    );\n\n    //for next api is call or not profile\n    if (allProfilePost?.post.length === 10) setProfileState(true);\n    else setProfileState(false);\n  }, [allProfilePost?.post, dispatch, profilePost, ids?.searchProfile?.id]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(false);\n    }, 3000);\n  }, []);\n\n  return (\n    <div>\n      {!allPosts?.searchPosts?.length && profilePost && load ? (\n        <QvipeLoaderGif />\n      ) : (\n        allPosts?.searchPosts?.map((data, index) =>\n          allPosts?.searchPosts?.length === index + 1 ? (\n            <div ref={ref} key={index}>\n              <PostTypeConfiguration\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            </div>\n          ) : (\n            <PostTypeConfiguration\n              key={index}\n              post={data}\n              profilePost={profilePost}\n              allPosts={[]}\n            />\n          )\n        )\n      )}\n    </div>\n  );\n}\n\nexport default SearchPost;\n","import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\n\nconst QvipeLoaderGif = () => {\n  return (\n    <div className={styles.loaderGif}>\n      <img src=\"/images/loader/loader.gif\" alt=\"for load an items\" />\n    </div>\n  );\n};\n\nexport default QvipeLoaderGif;\n"],"names":["EachPost","React","EachPoll","EachQuestion","_ref","post","profilePost","allPosts","ids","useSelector","state","idChange","_useState","useState","id","author","postType","_useState2","_slicedToArray","selectOptions","setSelectOptions","useEffect","_jsxs","fallback","_jsx","QvipeLoaderGif","children","_ids$searchProfile","_ids$searchProfile2","_ids$searchProfile4","_ids$searchProfile6","_ids$searchProfile7","_allPosts$searchPosts","_allPosts$searchPosts2","postChange","dispatch","useDispatch","load","setLoad","_useInView","useInView","_useInView2","ref","inView","_useState3","_useState4","profileState","setProfileState","_useState5","_useState6","profilePage","setProfilePage","_useProfileAllPost","useProfileAllPost","data","searchProfile","page","limit","viewAs","instituteAs","skip","allProfilePost","allProfilePostRefetch","_ids$searchProfile3","postChangeAction","removeSearchPost","search","_ids$searchProfile5","_allProfilePost$post","_allProfilePost$post$","addPost","length","setTimeout","searchPosts","map","index","_allPosts$searchPosts3","PostTypeConfiguration","className","styles","loaderGif","src","alt"],"sourceRoot":""}