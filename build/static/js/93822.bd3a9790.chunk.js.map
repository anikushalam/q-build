{"version":3,"file":"static/js/93822.bd3a9790.chunk.js","mappings":"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","sources":["Loader/QvipleLoading.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/DepartmentQueries/QueriesTab.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/DepartmentQueries/QueriesCard.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/DepartmentQueries/UnsolvedQuesries.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/DepartmentQueries/SolvedQuesries.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/DepartmentQueries/DepartmentQueries.jsx","MembersTab/staff/Mainbody/DepartmentHead/DepartmentTabChangeLink.jsx","MembersTab/staff/Mainbody/StaffMentor/MentorTabChangeLink.jsx","webpack://mithkal-qviple/./src/MembersTab/staff/Mainbody/DepartmentHead/DepartmentMentor/Mentor.module.css?9980","webpack://mithkal-qviple/./src/MembersTab/staff/Mainbody/Hostel/MiddleContent/Tabs.module.css?16f7","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\nconst QvipleLoading = ({ status }) => {\n  return (\n    <div className={styles.loaderGif}>\n      <img\n        src={\n          status === \"white\"\n            ? \"/images/loader/loader-bg-white.gif\"\n            : \"/images/loader/loader.gif\"\n        }\n        alt=\"for load an items\"\n      />\n    </div>\n  );\n};\n\nexport default QvipleLoading;\n","import React from \"react\";\nimport style from \"../../../Hostel/MiddleContent/Tabs.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst QueriesTab = ({ activeIndex, setActiveIndex }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={style.mcqTop}>\n      <div className={style.mcqToptabs}>\n        <div\n          className={\n            activeIndex === 0\n              ? `${style.mcqTopItem} ${style.active}`\n              : style.mcqTopItem\n          }\n          onClick={() => setActiveIndex(0)}\n        >\n          {t(\"unsolved\")}\n        </div>\n\n        <div\n          className={\n            activeIndex === 1\n              ? `${style.mcqTopItem} ${style.active}`\n              : style.mcqTopItem\n          }\n          onClick={() => setActiveIndex(1)}\n        >\n          {t(\"solved\")}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QueriesTab;\n","import React from \"react\";\nimport moment from \"moment\";\nimport style from \"../Mentor.module.css\";\nimport { imageShowUrl } from \"../../../../../../services/BaseUrl\";\nimport DepartmentTabChangeLink from \"../../DepartmentTabChangeLink\";\nimport MentorTabChangeLink from \"../../../StaffMentor/MentorTabChangeLink\";\nconst QueriesCard = ({ query_detail, carryParentState, queryFlow }) => {\n  return (\n    <>\n      {queryFlow === \"By_Mentor\" ? (\n        <MentorTabChangeLink\n          carryParentState={{\n            ...carryParentState,\n            qid: query_detail?._id,\n          }}\n          activeTab={\"query-detail\"}\n        >\n          <div\n            className={style.mentor_card_container}\n            style={{\n              width: \"95%\",\n              margin: \"auto\",\n              marginBottom: \"0.7rem\",\n            }}\n          >\n            <img\n              src={\n                query_detail?.student?.studentProfilePhoto\n                  ? `${imageShowUrl}/${query_detail?.student?.studentProfilePhoto}`\n                  : \"/images/member_tab/class/default_avatar.svg\"\n              }\n              style={{\n                borderRadius: \"50%\",\n              }}\n              alt=\"mentor avatar\"\n            />\n            <div\n              className={style.mentor_container_inner}\n              style={{\n                gap: \"0.6rem\",\n              }}\n            >\n              <h6>{`${query_detail?.student?.studentFirstName ?? \"\"} ${\n                query_detail?.student?.studentMiddleName ?? \"\"\n              } ${query_detail?.student?.studentLastName ?? \"\"}`}</h6>\n              <p>\n                {moment(query_detail?.created_at).format(\"DD MMM\")},\n                {moment(query_detail?.created_at).format(\"LT\")}\n              </p>\n            </div>\n          </div>\n        </MentorTabChangeLink>\n      ) : (\n        <DepartmentTabChangeLink\n          carryParentState={{\n            ...carryParentState,\n            qid: query_detail?._id,\n          }}\n          activeTab={\"mentor&n=queries&query\"}\n        >\n          <div\n            className={style.mentor_card_container}\n            style={{\n              width: \"95%\",\n              margin: \"auto\",\n              marginBottom: \"0.7rem\",\n            }}\n          >\n            <img\n              src={\n                query_detail?.student?.studentProfilePhoto\n                  ? `${imageShowUrl}/${query_detail?.student?.studentProfilePhoto}`\n                  : \"/images/member_tab/class/default_avatar.svg\"\n              }\n              style={{\n                borderRadius: \"50%\",\n              }}\n              alt=\"mentor avatar\"\n            />\n            <div\n              className={style.mentor_container_inner}\n              style={{\n                gap: \"0.6rem\",\n              }}\n            >\n              <h6>{`${query_detail?.student?.studentFirstName ?? \"\"} ${\n                query_detail?.student?.studentMiddleName ?? \"\"\n              } ${query_detail?.student?.studentLastName ?? \"\"}`}</h6>\n              <p>\n                {moment(query_detail?.created_at).format(\"DD MMM\")},\n                {moment(query_detail?.created_at).format(\"LT\")}\n              </p>\n            </div>\n          </div>\n        </DepartmentTabChangeLink>\n      )}\n    </>\n  );\n};\n\nexport default QueriesCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport QvipleLoading from \"../../../../../../Loader/QvipleLoading\";\nimport QueriesCard from \"./QueriesCard\";\nimport { useGetAllQueryList } from \"../../../../../../hooks/member_tab/department-api\";\n\nconst UnsolvedQuesries = ({ carryParentState, did, queryFlow }) => {\n  const [ref, inView] = useInView();\n  const [page, setPage] = useState(1);\n  const [state, setState] = useState(true);\n  const [showingDataLoading, setShowingDataLoading] = useState(true);\n  const [queriesList, setQuesriesList] = useState([]);\n\n  const { getAllQueryList, getAllQueryListRefetch } = useGetAllQueryList({\n    data: {\n      did: did,\n      page: page,\n      limit: 10,\n      status: \"UnSolved\",\n      flow: queryFlow,\n    },\n    skip: !did,\n  });\n  useEffect(() => {\n    if (did) {\n      setShowingDataLoading(true);\n      getAllQueryListRefetch();\n    }\n  }, [did, page, getAllQueryListRefetch]);\n\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  useEffect(() => {\n    if (getAllQueryList?.all_query) {\n      setQuesriesList((prevState) =>\n        [\n          ...new Set(\n            [...prevState, ...getAllQueryList?.all_query]?.map(JSON.stringify)\n          ),\n        ]?.map(JSON.parse)\n      );\n      setShowingDataLoading(false);\n    } else if (getAllQueryList?.all_query?.length === 0)\n      setShowingDataLoading(false);\n    else {\n    }\n    if (getAllQueryList?.all_query?.length === 10) setState(true);\n    else setState(false);\n  }, [getAllQueryList?.all_query]);\n\n  return (\n    <>\n      {queriesList?.map((query_detail, index) =>\n        queriesList?.length === index + 1 ? (\n          <div ref={ref} key={query_detail?._id}>\n            <QueriesCard\n              query_detail={query_detail}\n              carryParentState={carryParentState}\n              queryFlow={queryFlow}\n            />\n          </div>\n        ) : (\n          <QueriesCard\n            query_detail={query_detail}\n            key={query_detail?._id}\n            carryParentState={carryParentState}\n            queryFlow={queryFlow}\n          />\n        )\n      )}\n      {showingDataLoading && <QvipleLoading />}\n    </>\n  );\n};\n\nexport default UnsolvedQuesries;\n","import React, { useEffect, useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport QvipleLoading from \"../../../../../../Loader/QvipleLoading\";\nimport QueriesCard from \"./QueriesCard\";\nimport { useGetAllQueryList } from \"../../../../../../hooks/member_tab/department-api\";\n\nconst SolvedQuesries = ({ carryParentState, did, queryFlow }) => {\n  const [ref, inView] = useInView();\n  const [page, setPage] = useState(1);\n  const [state, setState] = useState(true);\n  const [showingDataLoading, setShowingDataLoading] = useState(true);\n  const [queriesList, setQuesriesList] = useState([]);\n  const { getAllQueryList, getAllQueryListRefetch } = useGetAllQueryList({\n    data: {\n      did: did,\n      page: page,\n      limit: 10,\n      status: \"Solved\",\n      flow: queryFlow,\n    },\n    skip: !did,\n  });\n  useEffect(() => {\n    if (did) {\n      setShowingDataLoading(true);\n      getAllQueryListRefetch();\n    }\n  }, [did, page, getAllQueryListRefetch]);\n\n  useEffect(() => {\n    if (inView && state) setPage((page) => page + 1);\n  }, [inView, state]);\n\n  useEffect(() => {\n    if (getAllQueryList?.all_query) {\n      setQuesriesList((prevState) =>\n        [\n          ...new Set(\n            [...prevState, ...getAllQueryList?.all_query]?.map(JSON.stringify)\n          ),\n        ]?.map(JSON.parse)\n      );\n      setShowingDataLoading(false);\n    } else if (getAllQueryList?.all_query?.length === 0)\n      setShowingDataLoading(false);\n    else {\n    }\n    if (getAllQueryList?.all_query?.length === 10) setState(true);\n    else setState(false);\n  }, [getAllQueryList?.all_query]);\n  return (\n    <>\n      {queriesList?.map((query_detail, index) =>\n        queriesList?.length === index + 1 ? (\n          <div ref={ref} key={query_detail?._id}>\n            <QueriesCard\n              query_detail={query_detail}\n              carryParentState={carryParentState}\n              viewAs=\"SOLVED\"\n              queryFlow={queryFlow}\n            />\n          </div>\n        ) : (\n          <QueriesCard\n            query_detail={query_detail}\n            key={query_detail?._id}\n            carryParentState={carryParentState}\n            viewAs=\"SOLVED\"\n            queryFlow={queryFlow}\n          />\n        )\n      )}\n      {showingDataLoading && <QvipleLoading />}\n    </>\n  );\n};\n\nexport default SolvedQuesries;\n","import React, { useState } from \"react\";\nimport QueriesTab from \"./QueriesTab\";\nimport UnsolvedQuesries from \"./UnsolvedQuesries\";\nimport SolvedQuesries from \"./SolvedQuesries\";\n\nconst DepartmentQueries = ({ carryParentState, did, queryFlow }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  return (\n    <>\n      <QueriesTab activeIndex={activeIndex} setActiveIndex={setActiveIndex} />\n      {activeIndex === 0 && (\n        <UnsolvedQuesries\n          carryParentState={carryParentState}\n          did={did}\n          queryFlow={queryFlow}\n        />\n      )}\n      {activeIndex === 1 && (\n        <SolvedQuesries\n          carryParentState={carryParentState}\n          did={did}\n          queryFlow={queryFlow}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DepartmentQueries;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst DepartmentTabChangeLink = ({ carryParentState, activeTab, children }) => {\n  const params = useParams();\n\n  return (\n    <Link\n      to={`/q/${params.username}/member/department/${params.deptname}?a=${activeTab}`}\n      state={{ ...carryParentState }}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport default DepartmentTabChangeLink;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst MentorTabChangeLink = ({ carryParentState, activeTab, children }) => {\n  const params = useParams();\n\n  return (\n    <Link\n      to={`/q/${params.username}/member/mentor?a=${activeTab}`}\n      state={{ ...carryParentState }}\n    >\n      {children}\n    </Link>\n  );\n};\n\nexport default MentorTabChangeLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"mentor_card_container\":\"Mentor_mentor_card_container__05bPk\",\"mentor_card_int\":\"Mentor_mentor_card_int__-SwSR\",\"mentor_container_inner\":\"Mentor_mentor_container_inner__kxUWv\",\"student_container_inner\":\"Mentor_student_container_inner__2fDwu\",\"mentor_rating\":\"Mentor_mentor_rating__FHWQG\",\"student_inner_bottom\":\"Mentor_student_inner_bottom__zhsin\",\"student_card_container\":\"Mentor_student_card_container__+UobV\",\"feedback_question_container\":\"Mentor_feedback_question_container__YqWeu\",\"feedback_question_heading\":\"Mentor_feedback_question_heading__FdGSW\",\"feedback_question_option\":\"Mentor_feedback_question_option__Axxci\",\"option_selected_cover\":\"Mentor_option_selected_cover__Ygo7Z\",\"remove_btn\":\"Mentor_remove_btn__Waxwz\"};","// extracted by mini-css-extract-plugin\nexport default {\"studentMCQ\":\"Tabs_studentMCQ__lxivk\",\"mcqToptabs\":\"Tabs_mcqToptabs__1WXDd\",\"mcqTop\":\"Tabs_mcqTop__mmZ6T\",\"mcqTopItem\":\"Tabs_mcqTopItem__7P7cJ\",\"active\":\"Tabs_active__OMnFH\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","status","_jsx","className","styles","loaderGif","children","src","alt","activeIndex","setActiveIndex","t","useTranslation","style","mcqTop","_jsxs","mcqToptabs","concat","mcqTopItem","active","onClick","_query_detail$student","_query_detail$student2","_query_detail$student3","_query_detail$student4","_query_detail$student5","_query_detail$student6","_query_detail$student7","_query_detail$student8","_query_detail$student9","_query_detail$student10","_query_detail$student11","_query_detail$student12","_query_detail$student13","_query_detail$student14","_query_detail$student15","_query_detail$student16","query_detail","carryParentState","queryFlow","_Fragment","MentorTabChangeLink","qid","_id","activeTab","mentor_card_container","width","margin","marginBottom","student","studentProfilePhoto","imageShowUrl","borderRadius","mentor_container_inner","gap","studentFirstName","studentMiddleName","studentLastName","moment","created_at","format","DepartmentTabChangeLink","did","ref","inView","useInView","page","setPage","useState","state","setState","showingDataLoading","setShowingDataLoading","queriesList","setQuesriesList","getAllQueryList","getAllQueryListRefetch","useGetAllQueryList","data","limit","flow","skip","useEffect","_getAllQueryList$all_","_getAllQueryList$all_2","all_query","prevState","_ref2","_ref3","Set","map","JSON","stringify","parse","length","index","QueriesCard","QvipleLoading","viewAs","QueriesTab","UnsolvedQuesries","SolvedQuesries","params","useParams","Link","to","username","deptname","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","delay","rootMargin","triggerOnce","initialInView","onChange","setRef","React2","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}