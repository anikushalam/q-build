{"version":3,"file":"static/js/21766.ab8f52f8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["createSvgIcon","_jsx","d","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","slot","overridesResolver","props","styles","ownerState","root","indeterminate","color","concat","capitalize","_ref","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","getCheckboxUtilityClass","useUtilityClasses","type","fontSize","clsx","generateUtilityClass","generateUtilityClasses","undefined","formControlState","states","muiFormControl","reduce","acc","state","useFormControl","FormControlContext","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","_ref2","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","AsteriskComponent","asterisk","_ref3","error","_slotProps$typography","componentsProps","control","disabledProp","disableTypography","labelProp","required","requiredProp","slotProps","controlProps","forEach","key","fcs","getFormControlLabelUtilityClasses","typographySlotProps","typography","Typography","component","children","_jsxs","Stack","direction","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","SwitchBaseInput","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","defaultChecked","disableFocusRipple","id","inputRef","onBlur","onChange","onFocus","readOnly","tabIndex","value","setCheckedState","useControlled","controlled","default","Boolean","hasLabelFor","input","centerRipple","focusRipple","role","event","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}