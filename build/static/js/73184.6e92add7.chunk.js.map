{"version":3,"file":"static/js/73184.6e92add7.chunk.js","mappings":"mLAGA,MAAMA,EAAWC,EAAAA,MAAW,IAAM,8FAC5BC,EAAWD,EAAAA,MAAW,IAAM,mCAC5BE,EAAeF,EAAAA,MAAW,IAAM,mCAChCG,EAAuBH,EAAAA,MAAW,IACtC,mCAiEF,EA/D8BI,IAAsC,IAArC,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAAUH,EAC5D,MAAMI,GAAMC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,YAClCC,EAAeC,IAAoBC,EAAAA,EAAAA,UACvCR,IAEM,OAAHE,QAAG,IAAHA,OAAG,EAAHA,EAAKO,OAAW,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,QACC,UAAf,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,WAA0C,cAAf,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,UACjC,CAAC,cAAe,oBAChB,CAAC,kBAAmB,cAAe,oBAJrC,CAAC,kBAqBP,OAbAC,EAAAA,EAAAA,YAAU,MACD,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKO,OAAW,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,UACD,UAAf,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,WAA0C,cAAf,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,UAC/BJ,EAAiB,CAAC,cAAe,qBACjCA,EAAiB,CACf,kBACA,cACA,qBAER,GAEC,CAAK,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMW,OAAW,OAAHR,QAAG,IAAHA,OAAG,EAAHA,EAAKO,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMY,YAG/BE,EAAAA,EAAAA,MAACnB,EAAAA,SAAc,CAACoB,UAAUC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,IAAIC,SAAA,CACvB,UAAf,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMY,YACLI,EAAAA,EAAAA,KAACtB,EAAQ,CACPM,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVK,cAAeA,IAGC,UAAf,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMY,YACLI,EAAAA,EAAAA,KAACpB,EAAQ,CACPI,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVK,cAAeA,IAGC,cAAf,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMY,YACLI,EAAAA,EAAAA,KAACnB,EAAY,CACXG,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVK,cAAeA,IAGC,kBAAf,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMY,YACLI,EAAAA,EAAAA,KAAClB,EAAoB,CACnBE,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVK,cAAeA,MAGJ,C,iKCqNrB,QA1QA,SAAcR,GAAqC,IAADoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAnC,YAAE3B,EAAW,iBAAE4B,GAAkB9B,EAC9C,MAAM,EAAE+B,IAAMC,EAAAA,EAAAA,MAER5B,GAAMC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,WAEnCJ,GAAWE,EAAAA,EAAAA,KAAaC,GAAUA,EAAM2B,aACxCC,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAW3B,EAAAA,EAAAA,WAAS,IAE1B4B,EAAKC,IAAUC,EAAAA,EAAAA,OAGflC,EAAOmC,IAAY/B,EAAAA,EAAAA,WAAS,IAC5BgC,EAAcC,IAAmBjC,EAAAA,EAAAA,WAAS,IAC1CkC,EAAmBC,IAAwBnC,EAAAA,EAAAA,WAAS,IACpDoC,EAAiBC,IAAsBrC,EAAAA,EAAAA,WAAS,IAGhDsC,EAAMC,IAAWvC,EAAAA,EAAAA,UAAS,IAC1BwC,EAAaC,IAAkBzC,EAAAA,EAAAA,UAAS,IACxC0C,EAAkBC,IAAuB3C,EAAAA,EAAAA,UAAS,IAClD4C,EAAgBC,IAAqB7C,EAAAA,EAAAA,UAAS,IAG/C,YAAE8C,EAAW,mBAAEC,IAAuBC,EAAAA,EAAAA,IAAe,CACzDC,KAAM,CACJhD,GAAO,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKO,GACTqC,KAAMA,EACNY,MAAO,GACPC,OAAQC,EAAAA,IAEVC,KAAU,OAAH3D,QAAG,IAAHA,IAAAA,EAAKO,IAAYT,KAEpB,eAAE8D,EAAc,sBAAEC,IAA0BC,EAAAA,EAAAA,IAAkB,CAClEP,KAAM,CACJhD,GAAO,OAAHP,QAAG,IAAHA,GAAkB,QAAfgB,EAAHhB,EAAK+D,qBAAa,IAAA/C,GAAlBA,EAAoBT,GAAQ,OAAHP,QAAG,IAAHA,GAAkB,QAAfiB,EAAHjB,EAAK+D,qBAAa,IAAA9C,OAAf,EAAHA,EAAoBV,GAAQ,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKO,GAC3DqC,KAAME,EACNU,MAAO,GACPC,OAAQC,EAAAA,IAEVC,MAAO7D,KAGH,oBAAEkE,EAAmB,2BAAEC,IAC3BC,EAAAA,EAAAA,IAAuB,CACrBX,KAAM,CACJhD,GAAO,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKO,GACTqC,KAAMI,EACNQ,MAAO,GACPC,OAAQC,EAAAA,IAEVC,OAA6B,SAArBjC,KAAiC5B,KAGvC,kBAAEqE,EAAiB,yBAAEC,KAA6BC,EAAAA,EAAAA,IAAqB,CAC3Ed,KAAM,CACJhD,GAAO,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKO,GACTqC,KAAMM,EACNM,MAAO,GACPC,OAAQC,EAAAA,IAEVC,OAA6B,QAArBjC,KAAgC5B,IAoG1C,OAhGAY,EAAAA,EAAAA,YAAU,KACJyB,GAAUjC,IAAUJ,EAAa+C,GAASD,GAASA,EAAO,IACrDT,GAAUG,GAAgBxC,EACjCiD,GAAgBD,GAAgBA,EAAc,IACvCX,GAAUK,GAA0C,SAArBd,EACtCuB,GAAqBD,GAAqBA,EAAmB,IACtDb,GAAUO,GAAwC,QAArBhB,GACpCyB,GAAmBD,GAAmBA,EAAiB,GAEzD,GACC,CACDf,EACAjC,EACAoC,EACAE,EACAE,EACA5C,EACA4B,KAIFhB,EAAAA,EAAAA,YAAU,KACHZ,EACyB,OAArB4B,EAA2BmC,IACN,SAArBnC,EAA6BuC,IACR,QAArBvC,GAA4B0C,KAHnBf,GAKlB,GACC,CACDT,EACAE,EACAE,EACAE,EACApD,EACA4B,EACA2B,EACAQ,EACAI,EACAG,MAIF1D,EAAAA,EAAAA,YAAU,KAERoB,EACEwC,EAAAA,EAAiBC,QAAQ,CACvB1E,KAAOC,EAEkB,OAArB4B,EACc,OAAdkC,QAAc,IAAdA,OAAc,EAAdA,EAAgB/D,KACK,SAArB6B,EACmB,OAAnBsC,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnE,KACJ,OAAjBsE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBtE,KALR,OAAXuD,QAAW,IAAXA,OAAW,EAAXA,EAAavD,KAMjBC,YAAcA,EAEW,OAArB4B,EACA,UACqB,SAArBA,EACA,QACA,QALA,OAMJnB,GAAO,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKO,MAKoB,MAAlB,OAAX6C,QAAW,IAAXA,OAAW,EAAXA,EAAavD,KAAK2E,QAAenC,GAAS,GACzCA,GAAS,GAGsB,MAAlB,OAAduB,QAAc,IAAdA,OAAc,EAAdA,EAAgB/D,KAAK2E,QAAejC,GAAgB,GACnDA,GAAgB,GAGoB,MAAlB,OAAnByB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnE,KAAK2E,QAAe/B,GAAqB,GAC7DA,GAAqB,GAGa,MAAlB,OAAjB0B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBtE,KAAK2E,QAAe7B,GAAmB,GACzDA,GAAmB,EAAM,GAC7B,CACU,OAAXS,QAAW,IAAXA,OAAW,EAAXA,EAAavD,KACC,OAAd+D,QAAc,IAAdA,OAAc,EAAdA,EAAgB/D,KACG,OAAnBmE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnE,KACJ,OAAjBsE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBtE,KACnBiC,EACAhC,EACA4B,EACG,OAAH1B,QAAG,IAAHA,OAAG,EAAHA,EAAKO,MAGPG,EAAAA,EAAAA,YAAU,KACR+D,YAAW,KACTxC,GAAQ,EAAM,GACb,IAAK,GACP,KAGDtB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,CACY,OAARhB,QAAQ,IAARA,GAAwB,QAAhBmB,EAARnB,EAAU2E,sBAAc,IAAAxD,GAAxBA,EAA0BsD,QAAW1E,IAAekC,GAGnDlC,IACO,OAARC,QAAQ,IAARA,GAAwB,QAAhBoB,EAARpB,EAAU2E,sBAAc,IAAAvD,OAAhB,EAARA,EAA0BwD,KAAI,CAACpB,EAAMqB,KAAK,IAAAC,EAAA,OAChC,OAAR9E,QAAQ,IAARA,GAAwB,QAAhB8E,EAAR9E,EAAU2E,sBAAc,IAAAG,OAAhB,EAARA,EAA0BL,UAAWI,EAAQ,GAC3C/D,EAAAA,EAAAA,KAAA,OAAKqB,IAAKA,EAAInB,UACZF,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CACpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAkB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU2E,kBAJJE,IAQpB/D,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CAEpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAkB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU2E,gBAHfE,EAKR,MAnBH/D,EAAAA,EAAAA,KAACC,EAAAA,EAAc,IAuBhBhB,GACsB,OAArB4B,IACU,OAAR3B,QAAQ,IAARA,GAAsB,QAAdqB,EAARrB,EAAUgF,oBAAY,IAAA3D,GAAtBA,EAAwBoD,SAAUxC,EAG1B,OAARjC,QAAQ,IAARA,GAAsB,QAAdsB,EAARtB,EAAUgF,oBAAY,IAAA1D,OAAd,EAARA,EAAwBsD,KAAI,CAACpB,EAAMqB,KAAK,IAAAI,EAAA,OAC9B,OAARjF,QAAQ,IAARA,GAAsB,QAAdiF,EAARjF,EAAUgF,oBAAY,IAAAC,OAAd,EAARA,EAAwBR,UAAWI,EAAQ,GACzC/D,EAAAA,EAAAA,KAAA,OAAKqB,IAAKA,EAAInB,UACZF,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CACpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,MAJM6E,IAQpB/D,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CAEpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,IAHL6E,EAKR,KAlBH/D,EAAAA,EAAAA,KAACC,EAAAA,EAAc,KAsBlBhB,GACsB,SAArB4B,IACU,OAAR3B,QAAQ,IAARA,GAA2B,QAAnBuB,EAARvB,EAAUkF,yBAAiB,IAAA3D,GAA3BA,EAA6BkD,SAAUxC,EAG/B,OAARjC,QAAQ,IAARA,GAA2B,QAAnBwB,EAARxB,EAAUkF,yBAAiB,IAAA1D,OAAnB,EAARA,EAA6BoD,KAAI,CAACpB,EAAMqB,KAAK,IAAAM,EAAA,OACnC,OAARnF,QAAQ,IAARA,GAA2B,QAAnBmF,EAARnF,EAAUkF,yBAAiB,IAAAC,OAAnB,EAARA,EAA6BV,UAAWI,EAAQ,GAC9C/D,EAAAA,EAAAA,KAAA,OAAKqB,IAAKA,EAAInB,UACZF,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CACpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,MAJM6E,IAQpB/D,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CAEpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,IAHL6E,EAKR,KAlBH/D,EAAAA,EAAAA,KAACC,EAAAA,EAAc,KAsBlBhB,GACsB,QAArB4B,IACU,OAAR3B,QAAQ,IAARA,GAA2B,QAAnByB,EAARzB,EAAUoF,yBAAiB,IAAA3D,GAA3BA,EAA6BgD,SAAUxC,EAG/B,OAARjC,QAAQ,IAARA,GAA2B,QAAnB0B,EAAR1B,EAAUoF,yBAAiB,IAAA1D,OAAnB,EAARA,EAA6BkD,KAAI,CAACpB,EAAMqB,KAAK,IAAAQ,EAAA,OACnC,OAARrF,QAAQ,IAARA,GAA2B,QAAnBqF,EAARrF,EAAUoF,yBAAiB,IAAAC,OAAnB,EAARA,EAA6BZ,UAAWI,EAAQ,GAC9C/D,EAAAA,EAAAA,KAAA,OAAKqB,IAAKA,EAAInB,UACZF,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CACpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,MAJM6E,IAQpB/D,EAAAA,EAAAA,KAACiE,EAAAA,EAAqB,CAEpBjF,KAAM0D,EACNzD,YAAaA,EACbC,SAAU,IAHL6E,EAKR,KAlBH/D,EAAAA,EAAAA,KAACC,EAAAA,EAAc,OAuBzB,C,sECpRA,MAQA,EARuBA,KAEnBD,EAAAA,EAAAA,KAAA,OAAKwE,UAAWC,EAAAA,EAAOC,UAAUxE,UAC/BF,EAAAA,EAAAA,KAAA,OAAK2E,IAAI,4BAA4BC,IAAI,uB","sources":["Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/PostTypeConfiguration.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/Posts.jsx","Loader/QvipleLoaderGif.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nconst EachPost = React.lazy(() => import(\"./EachPost/EachPost\"));\nconst EachPoll = React.lazy(() => import(\"./EachPoll/EachPoll\"));\nconst EachQuestion = React.lazy(() => import(\"./EachQuestion/EachQuestion\"));\nconst EachPostAnnouncement = React.lazy(() =>\n  import(\"./EachPost/EachPostAnnouncement\")\n);\nconst PostTypeConfiguration = ({ post, profilePost, allPosts }) => {\n  const ids = useSelector((state) => state.idChange);\n  const [selectOptions, setSelectOptions] = useState(\n    !profilePost\n      ? [\"post_unfollow\"]\n      : ids?.id === post?.author\n      ? post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? [\"post_delete\", \"turn_off_comment\"]\n        : [\"post_visibility\", \"post_delete\", \"turn_off_comment\"]\n      : [\"post_unfollow\"]\n  );\n\n  useEffect(() => {\n    if (ids?.id === post?.author) {\n      post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? setSelectOptions([\"post_delete\", \"turn_off_comment\"])\n        : setSelectOptions([\n            \"post_visibility\",\n            \"post_delete\",\n            \"turn_off_comment\",\n          ]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post?.author, ids?.id, post?.postType]);\n\n  return (\n    <React.Suspense fallback={<QvipeLoaderGif />}>\n      {post?.postType === \"Post\" && (\n        <EachPost\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Poll\" && (\n        <EachPoll\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Question\" && (\n        <EachQuestion\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Announcement\" && (\n        <EachPostAnnouncement\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n    </React.Suspense>\n  );\n};\n\nexport default PostTypeConfiguration;\n","import React from \"react\";\nimport {\n  useDashAllPost,\n  useProfileAllPost,\n  useProfileAllSavedPost,\n  useProfileAllTagPost,\n} from \"../../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState, useEffect } from \"react\";\nimport { postChangeAction } from \"../../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../../constant/constant_value\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nimport PostTypeConfiguration from \"./PostTypeConfiguration\";\nimport { useTranslation } from \"react-i18next\";\nfunction Posts({ profilePost, profileSavedPost }) {\n  const { t } = useTranslation();\n  //for The redux storage and actions\n  const ids = useSelector((state) => state.idChange);\n  // const author = useSelector((state) => state.authChange);\n  const allPosts = useSelector((state) => state.postChange);\n  const dispatch = useDispatch();\n  // const insId = localStorage.getItem(\"user\");\n  const [load, setLoad] = useState(true);\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n\n  //for the fetch more or not after seeing all post\n  const [state, setState] = useState(true);\n  const [profileState, setProfileState] = useState(true);\n  const [profileSavedState, setProfileSavedState] = useState(true);\n  const [profileTagState, setProfileTagState] = useState(true);\n\n  //for setting the next page to fetch data\n  const [page, setPage] = useState(1);\n  const [profilePage, setProfilePage] = useState(1);\n  const [profileSavedPage, setProfileSavedPage] = useState(1);\n  const [profileTagPage, setProfileTagPage] = useState(1);\n\n  //for the rtk query to call api\n  const { allDashPost, allDashPostRefetch } = useDashAllPost({\n    data: {\n      id: ids?.id,\n      page: page,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !ids?.id ? true : profilePost,\n  });\n  const { allProfilePost, allProfilePostRefetch } = useProfileAllPost({\n    data: {\n      id: ids?.searchProfile?.id ? ids?.searchProfile?.id : ids?.id,\n      page: profilePage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !profilePost,\n  });\n\n  const { allProfileSavedPost, allProfileSavedPostRefetch } =\n    useProfileAllSavedPost({\n      data: {\n        id: ids?.id,\n        page: profileSavedPage,\n        limit: 10,\n        viewAs: instituteAs,\n      },\n      skip: !(profileSavedPost === \"save\") && !profilePost,\n    });\n\n  const { allProfileTagPost, allProfileTagPostRefetch } = useProfileAllTagPost({\n    data: {\n      id: ids?.id,\n      page: profileTagPage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !(profileSavedPost === \"tag\") && !profilePost,\n  });\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && state && !profilePost) setPage((page) => page + 1);\n    else if (inView && profileState && profilePost)\n      setProfilePage((profilePage) => profilePage + 1);\n    else if (inView && profileSavedState && profileSavedPost === \"save\")\n      setProfileSavedPage((profileSavedPage) => profileSavedPage + 1);\n    else if (inView && profileTagState && profileSavedPost === \"tag\") {\n      setProfileTagPage((profileTagPage) => profileTagPage + 1);\n    } else {\n    }\n  }, [\n    inView,\n    state,\n    profileState,\n    profileSavedState,\n    profileTagState,\n    profilePost,\n    profileSavedPost,\n  ]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    if (!profilePost) allDashPostRefetch();\n    else if (profileSavedPost === \"my\") allProfilePostRefetch();\n    else if (profileSavedPost === \"save\") allProfileSavedPostRefetch();\n    else if (profileSavedPost === \"tag\") allProfileTagPostRefetch();\n    else {\n    }\n  }, [\n    page,\n    profilePage,\n    profileSavedPage,\n    profileTagPage,\n    profilePost,\n    profileSavedPost,\n    allDashPostRefetch,\n    allProfilePostRefetch,\n    allProfileSavedPostRefetch,\n    allProfileTagPostRefetch,\n  ]);\n\n  //for the action pperform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    dispatch(\n      postChangeAction.addPost({\n        post: !profilePost\n          ? allDashPost?.post\n          : profileSavedPost === \"my\"\n          ? allProfilePost?.post\n          : profileSavedPost === \"save\"\n          ? allProfileSavedPost?.post\n          : allProfileTagPost?.post,\n        profilePost: !profilePost\n          ? \"dash\"\n          : profileSavedPost === \"my\"\n          ? \"profile\"\n          : profileSavedPost === \"save\"\n          ? \"saved\"\n          : \"taged\",\n        id: ids?.id,\n      })\n    );\n\n    //for next api is call or not dashboard\n    if (allDashPost?.post.length === 10) setState(true);\n    else setState(false);\n\n    //for next api is call or not profile\n    if (allProfilePost?.post.length === 10) setProfileState(true);\n    else setProfileState(false);\n\n    //for next api is call or not saved profile\n    if (allProfileSavedPost?.post.length === 10) setProfileSavedState(true);\n    else setProfileSavedState(false);\n\n    //for next api is call or not tag profile\n    if (allProfileTagPost?.post.length === 10) setProfileTagState(true);\n    else setProfileTagState(false);\n  }, [\n    allDashPost?.post,\n    allProfilePost?.post,\n    allProfileSavedPost?.post,\n    allProfileTagPost?.post,\n    dispatch,\n    profilePost,\n    profileSavedPost,\n    ids?.id,\n  ]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(false);\n    }, 5000);\n  }, []);\n  // console.info(\"this is all posts\", allPosts?.dashboardPosts);\n  return (\n    <div>\n      {!allPosts?.dashboardPosts?.length && !profilePost && load ? (\n        <QvipeLoaderGif />\n      ) : (\n        !profilePost &&\n        allPosts?.dashboardPosts?.map((data, index) =>\n          allPosts?.dashboardPosts?.length === index + 1 ? (\n            <div ref={ref} key={index}>\n              <PostTypeConfiguration\n                post={data}\n                profilePost={profilePost}\n                allPosts={allPosts?.dashboardPosts}\n              />\n            </div>\n          ) : (\n            <PostTypeConfiguration\n              key={index}\n              post={data}\n              profilePost={profilePost}\n              allPosts={allPosts?.dashboardPosts}\n            />\n          )\n        )\n      )}\n\n      {profilePost &&\n        profileSavedPost === \"my\" &&\n        (!allPosts?.profilePosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profilePosts?.map((data, index) =>\n            allPosts?.profilePosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n\n      {profilePost &&\n        profileSavedPost === \"save\" &&\n        (!allPosts?.profileSavedPosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profileSavedPosts?.map((data, index) =>\n            allPosts?.profileSavedPosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n\n      {profilePost &&\n        profileSavedPost === \"tag\" &&\n        (!allPosts?.profileTagedPosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profileTagedPosts?.map((data, index) =>\n            allPosts?.profileTagedPosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n    </div>\n  );\n}\n\nexport default Posts;\n","import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\n\nconst QvipeLoaderGif = () => {\n  return (\n    <div className={styles.loaderGif}>\n      <img src=\"/images/loader/loader.gif\" alt=\"for load an items\" />\n    </div>\n  );\n};\n\nexport default QvipeLoaderGif;\n"],"names":["EachPost","React","EachPoll","EachQuestion","EachPostAnnouncement","_ref","post","profilePost","allPosts","ids","useSelector","state","idChange","selectOptions","setSelectOptions","useState","id","author","postType","useEffect","_jsxs","fallback","_jsx","QvipeLoaderGif","children","_ids$searchProfile","_ids$searchProfile2","_allPosts$dashboardPo","_allPosts$dashboardPo2","_allPosts$profilePost","_allPosts$profilePost2","_allPosts$profileSave","_allPosts$profileSave2","_allPosts$profileTage","_allPosts$profileTage2","profileSavedPost","t","useTranslation","postChange","dispatch","useDispatch","load","setLoad","ref","inView","useInView","setState","profileState","setProfileState","profileSavedState","setProfileSavedState","profileTagState","setProfileTagState","page","setPage","profilePage","setProfilePage","profileSavedPage","setProfileSavedPage","profileTagPage","setProfileTagPage","allDashPost","allDashPostRefetch","useDashAllPost","data","limit","viewAs","instituteAs","skip","allProfilePost","allProfilePostRefetch","useProfileAllPost","searchProfile","allProfileSavedPost","allProfileSavedPostRefetch","useProfileAllSavedPost","allProfileTagPost","allProfileTagPostRefetch","useProfileAllTagPost","postChangeAction","addPost","length","setTimeout","dashboardPosts","map","index","_allPosts$dashboardPo3","PostTypeConfiguration","profilePosts","_allPosts$profilePost3","profileSavedPosts","_allPosts$profileSave3","profileTagedPosts","_allPosts$profileTage3","className","styles","loaderGif","src","alt"],"sourceRoot":""}