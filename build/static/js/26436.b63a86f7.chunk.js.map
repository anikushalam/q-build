{"version":3,"file":"static/js/26436.b63a86f7.chunk.js","mappings":"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","sources":["optimized/Ui/Input/FormTextarea.jsx","optimized/UserStaffMember/LibraryManager/BookReview/AddBookReview.jsx","optimized/Validation/functions/checkingRequiredField.js"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport style from \"../UiInput.module.css\";\n\nconst getRow = (value) => {\n  return value ? value?.split(\"\\n\")?.length : 2;\n};\nconst FormTextarea = ({\n  label,\n  name,\n  type,\n  value,\n  onChange,\n  placeholder,\n  errorShow,\n  disabled,\n  customFormInputContainer,\n  customFormInputLabel,\n  customFormInput,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className={style.form_input_container}\n      style={customFormInputContainer}\n    >\n      {label && (\n        <label\n          className={style.form_input_label}\n          htmlFor={name}\n          style={customFormInputLabel}\n        >\n          {label}\n          {errorShow && (\n            <span className={style.form_input_label_error}>\n              * {t(\"form_require_label\")}\n            </span>\n          )}\n        </label>\n      )}\n\n      <textarea\n        className={style.form_textarea_input}\n        type={type}\n        value={value}\n        onChange={onChange}\n        name={name}\n        placeholder={placeholder}\n        rows={getRow(value)}\n        disabled={disabled}\n        style={\n          customFormInput\n            ? {\n                ...customFormInput,\n                \"--textarea-height\": `${getRow(value) * 20}px`,\n              }\n            : {\n                \"--textarea-height\": `${getRow(value) * 20}px`,\n              }\n        }\n      />\n    </div>\n  );\n};\n\nexport default FormTextarea;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLibraryUpdateBookReview } from \"../../../Hooks/ApiHooks/LibraryManager/library-manager-api\";\nimport style from \"../../FinanceManager/Income/Income.module.css\";\nimport Modal from \"../../../Ui/Modal/Modal\";\nimport {\n  assestsFeedbackUrl,\n  assestsUserFinanceUrl,\n} from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport UserMemberContentWrapper from \"../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport FormTextarea from \"../../../Ui/Input/FormTextarea\";\nimport CreateButton from \"../../../Ui/Button/CreateButton\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../Validation/functions/checkingRequiredField\";\n\nconst AddBookReview = ({ onClose, onRefetch, bid, sid }) => {\n  const { t } = useTranslation();\n  const [state, setState] = useState({\n    description: \"\",\n    rating: 0,\n    title: \"\",\n  });\n  const [errorField, setErrorField] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [rating, setRating] = useState([\n    `${assestsFeedbackUrl}/grey-star.svg`,\n    `${assestsFeedbackUrl}/grey-star.svg`,\n    `${assestsFeedbackUrl}/grey-star.svg`,\n    `${assestsFeedbackUrl}/grey-star.svg`,\n    `${assestsFeedbackUrl}/grey-star.svg`,\n  ]);\n\n  const [libraryUpdateBookReview] = useLibraryUpdateBookReview();\n\n  const onInputChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onRating = (index) => {\n    let inp = [];\n    for (let i = 0; i < 5; i++) {\n      if (i <= index) inp.push(`${assestsFeedbackUrl}/yellow-star.svg`);\n      else inp.push(`${assestsFeedbackUrl}/grey-star.svg`);\n    }\n    setState((prev) => ({\n      ...prev,\n      rating: index + 1,\n    }));\n    setRating(() => inp);\n  };\n\n  const onReviewUpdate = () => {\n    let validation = requiredField(state, [\"rating\", \"title\"]);\n    if (existingRequiredField(validation) && sid && bid) {\n      setDisabled((pre) => !pre);\n      libraryUpdateBookReview({\n        bid: bid,\n        reviewData: {\n          ...state,\n          sid: sid,\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n          onClose();\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  return (\n    <>\n      <Modal onClose={onClose}>\n        <div className={style.modal_container}>\n          <UserMemberContentWrapper>\n            <div className={style.modal_container_outer_header}>\n              <div className={style.modal_container_header}>\n                <h6> {t(\"book_review\")}</h6>\n              </div>\n              <img\n                src={`${assestsUserFinanceUrl}/close.svg`}\n                alt=\"close icon\"\n                onClick={onClose}\n              />\n            </div>\n          </UserMemberContentWrapper>\n          <BorderBottom />\n          <UserMemberContentWrapper\n            customStyle={{\n              paddingTop: \"0\",\n            }}\n          >\n            <FormTextarea\n              label={t(\"description\")}\n              placeholder={t(\"description_placeholder\")}\n              name={\"description\"}\n              value={state.description}\n              type=\"text\"\n              onChange={onInputChange}\n              errorShow={errorField[\"description\"]}\n            />\n            <div\n              className={style.gsf_star_container}\n              style={{\n                marginTop: \"1.4rem\",\n              }}\n            >\n              {rating?.map((url, index) => (\n                <img\n                  key={index}\n                  src={url}\n                  alt=\"star icon\"\n                  onClick={() => onRating(index)}\n                />\n              ))}\n            </div>\n            <CreateButton label={\"review\"} onAction={onReviewUpdate} />\n          </UserMemberContentWrapper>\n        </div>\n      </Modal>\n      {disabled && <QvipleLoader />}\n    </>\n  );\n};\n\nexport default AddBookReview;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n"],"names":["getRow","value","_value$split","split","length","_ref","label","name","type","onChange","placeholder","errorShow","disabled","customFormInputContainer","customFormInputLabel","customFormInput","t","useTranslation","_jsxs","className","style","form_input_container","children","form_input_label","htmlFor","form_input_label_error","_jsx","form_textarea_input","rows","concat","onClose","onRefetch","bid","sid","state","setState","useState","description","rating","title","errorField","setErrorField","setDisabled","setRating","assestsFeedbackUrl","libraryUpdateBookReview","useLibraryUpdateBookReview","_Fragment","Modal","modal_container","UserMemberContentWrapper","modal_container_outer_header","modal_container_header","src","assestsUserFinanceUrl","alt","onClick","BorderBottom","customStyle","paddingTop","FormTextarea","e","prev","target","gsf_star_container","marginTop","map","url","index","inp","i","push","onRating","CreateButton","onAction","onReviewUpdate","validation","requiredField","existingRequiredField","pre","reviewData","then","catch","QvipleLoader","data","optional","arguments","undefined","error","obj","includes","required","req"],"sourceRoot":""}