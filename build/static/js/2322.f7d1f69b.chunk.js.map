{"version":3,"file":"static/js/2322.f7d1f69b.chunk.js","mappings":"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","sources":["Custom/Avatar/Avatar.jsx","Dashboard/CreatePost/PostFooterIcon.jsx","Dashboard/CreatePost/PostHeader.jsx","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Components/Mainbody/NewPost/NewPost.module.css?e8b8","Dashboard/InsDashboard/Components/Mainbody/NewPost/NewPost.js","webpack://mithkal-qviple/./src/Dashboard/UserDashboard/Components/Mainbody/Stats/Posts/components/VideoPlayer.module.css?811e","Dashboard/UserDashboard/Components/Mainbody/Stats/Posts/components/VideoPlayer.js","StaffTab/components/DividerTab/MainContent/StaffForm/FormToggle.jsx","webpack://mithkal-qviple/./src/Custom/Avatar/Avatar.module.css?c0f7","webpack://mithkal-qviple/./src/Dashboard/CreatePost/PostHeader.module.css?566f","webpack://mithkal-qviple/./src/StaffTab/components/DividerTab/MainContent/StaffForm/UniversalForm.module.css?aa28"],"sourcesContent":["import React from \"react\";\nimport style from \"./Avatar.module.css\";\n\nconst Avatar = ({ dynamicImage, customStyle }) => {\n  return (\n    <img\n      src={dynamicImage}\n      alt=\"Avatar icon\"\n      style={{ ...customStyle }}\n      className={style.avatar_image}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport style from \"./PostHeader.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PostFooterIcon = ({\n  onEditIocn,\n  activeIcon,\n  onPostTypeChange,\n  addFileToggle,\n  onAddFile,\n  acceptFormate,\n  onVideoIcon,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  const onClickIconHandler = (val) => {\n    onPostTypeChange(val);\n  };\n  return (\n    <>\n      <hr className={style.hr} />\n      <div className={style.iconsContainer}>\n        <div className={style.icons}>\n          <div>\n            <img\n              onClick={onEditIocn}\n              src=\"/images/edit-icon.svg\"\n              alt=\"eidt icon of post\"\n              title=\"Create Text Post\"\n            />\n            {activeIcon === 1 && <div className={style.border1}></div>}\n          </div>\n          {children}\n          <div>\n            <img\n              onClick={onVideoIcon}\n              src=\"/images/video-post-icon.svg\"\n              alt=\"video icon of post\"\n              title=\"Create Video Post\"\n            />\n            {activeIcon === 3 && <div className={style.border3}></div>}\n          </div>\n          <div>\n            <img\n              onClick={() => onClickIconHandler(\"newAnnouncement\")}\n              src=\"/images/voice-post-icon.svg\"\n              alt=\"announcement icon of post\"\n              title=\"Create Announcement\"\n            />\n            {activeIcon === 4 && <div className={style.border4}></div>}\n          </div>\n          <div>\n            <img\n              onClick={() => onClickIconHandler(\"newPoll\")}\n              src=\"/images/shorts-icon.svg\"\n              alt=\"poll icon of post\"\n              title=\"Create Poll Post\"\n            />\n            {activeIcon === 5 && <div className={style.border5}></div>}\n          </div>\n          <div>\n            <img\n              onClick={() => onClickIconHandler(\"newQuestion\")}\n              src=\"/images/document-icon.svg\"\n              alt=\"question icon of post\"\n              title=\"Create Question Post\"\n            />\n            {activeIcon === 6 && <div className={style.border6}></div>}\n          </div>\n        </div>\n        {addFileToggle ? (\n          <div>\n            <label htmlFor=\"document\" style={{ cursor: \"pointer\" }}>\n              <p className={style.addfiles}>{t(\"add_files\")}</p>\n            </label>\n\n            <input\n              className={style.upload}\n              multiple\n              id=\"document\"\n              name=\"file\"\n              onChange={onAddFile}\n              type=\"file\"\n              accept={acceptFormate}\n            />\n          </div>\n        ) : (\n          <p>{t(\"add_files\")}</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default PostFooterIcon;\n","import React from \"react\";\nimport Avatar from \"../../Custom/Avatar/Avatar\";\nimport style from \"./PostHeader.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport FormToggle from \"../../StaffTab/components/DividerTab/MainContent/StaffForm/FormToggle\";\n\nconst PostHeader = ({\n  postTitle,\n  onClose,\n  name,\n  privateImage,\n  setPrivateImage,\n  dynamicImage,\n  postStatusRef,\n  checkedToggle,\n  onToggleHandler,\n  announcement,\n  children,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={style.newPost}>\n      <div className={style.header}>\n        <h4>{postTitle}</h4>\n        <img\n          src=\"/images/close-post-icon.svg\"\n          onClick={onClose}\n          alt=\"close icon\"\n        />\n      </div>\n      <hr className={style.hr} />\n      <div className={style.content}>\n        <div className={style.title}>\n          <div className={style.imgContainer}>\n            <Avatar dynamicImage={dynamicImage} />\n          </div>\n\n          <div className={style.userName}>\n            <h6>{name}</h6>\n            <div className={style.public}>\n              <img\n                className={style.privacyIcon}\n                src={\n                  !privateImage\n                    ? \"/images/privacy-icon.svg\"\n                    : \"/images/post-private-icon.svg\"\n                }\n                alt=\"\"\n              />\n              <div className={style.select}>\n                <span className={style.arrow}></span>\n                <img\n                  className={style.arrowIcon}\n                  src=\"/images/dropdown-icon.svg\"\n                  alt=\"\"\n                />\n\n                <select\n                  name=\"cars\"\n                  id=\"cars\"\n                  ref={postStatusRef}\n                  onChange={(e) =>\n                    e.target.value === \"Anyone\"\n                      ? setPrivateImage(false)\n                      : setPrivateImage(true)\n                  }\n                >\n                  <option value=\"Anyone\">{t(\"public\")}</option>\n                  <option value=\"Private\">{t(\"private\")} </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          {!announcement && (\n            <FormToggle\n              labelHeading={t(\"turn_off_comment\")}\n              customContainer={{ padding: \"0\" }}\n              customLabel={{ fontWeight: \"500\" }}\n              checkedToggle={checkedToggle === \"On\" ? false : true}\n              onToggleHandler={onToggleHandler}\n            />\n          )}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default PostHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"postTitle\":\"NewPost_postTitle__mZ0gm\",\"postDesc\":\"NewPost_postDesc__JHFMV\",\"postTextarea\":\"NewPost_postTextarea__wpLXp\",\"hashTag\":\"NewPost_hashTag__g+Ebe\",\"btn\":\"NewPost_btn__qoAO4\",\"upload\":\"NewPost_upload__9zgjK\",\"Container\":\"NewPost_Container__QjHOc\",\"selectedImg\":\"NewPost_selectedImg__5Vyan\",\"upload_video\":\"NewPost_upload_video__gnKPZ\",\"tille\":\"NewPost_tille__oOSHy\",\"description\":\"NewPost_description__ZBNYj\",\"afterbtn\":\"NewPost_afterbtn__ZD4w2\",\"hashtag\":\"NewPost_hashtag__d-PPO\",\"public\":\"NewPost_public__Gz7UN\",\"privacyIcon\":\"NewPost_privacyIcon__YWpaD\",\"userName\":\"NewPost_userName__NxtUo\",\"select\":\"NewPost_select__jzOhf\",\"imgContainer\":\"NewPost_imgContainer__bdx4W\",\"arrowIcon\":\"NewPost_arrowIcon__iapHN\",\"mainbody\":\"NewPost_mainbody__aAiXk\",\"tagList\":\"NewPost_tagList__cC9OO\",\"border2\":\"NewPost_border2__HG5MO\",\"border3\":\"NewPost_border3__dOSt3\"};","import React, { useState, useRef, useEffect } from \"react\";\nimport style from \"./NewPost.module.css\";\nimport \"./NewPost.css\";\n// import Hashtag from \"../Stats/Posts/components/Hashtag\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  usePostWithImage,\n  usePostWithText,\n  usePostWithVideo,\n} from \"../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { imageShowUrl } from \"../../../../../services/BaseUrl\";\nimport LoaderButton from \"../../../../../Loader/LoaderButton\";\nimport { postChangeAction } from \"../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../constant/constant_value\";\nimport PostHeader from \"../../../../CreatePost/PostHeader\";\nimport PostFooterIcon from \"../../../../CreatePost/PostFooterIcon\";\nimport { useOneInstituteDashboard } from \"../../../../../hooks/dashboard/dashboard-api\";\nimport CustomSuspense from \"../../../../../Custom/SuspenseLoading/CustomSuspense\";\nimport VideoPlayer from \"../../../../UserDashboard/Components/Mainbody/Stats/Posts/components/VideoPlayer\";\nimport { Notfication } from \"../../../../../validation/Snackbar\";\nconst TagPeople = React.lazy(() =>\n  import(\"../../../../../Modal/TagModal/TagPeople\")\n);\n\nfunction NewPost({ postType, setPostType, onPostTypeChange }) {\n  const { t } = useTranslation();\n  const [imageList, setImageList] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [selectedVideo, setSelectedVideo] = useState(\"\");\n  const [disabled, setDisabled] = useState(\"\");\n  const [iconIndex, setIconIndex] = useState(\n    postType === \"text\" ? 1 : postType === \"video\" ? 3 : 2\n  );\n  const [allFiles, setAllFiles] = useState(\"\");\n  const postTitleRef = useRef(\"\");\n  const postDescriptionRef = useRef(\"\");\n  const postStatusRef = useRef(\"\");\n  const postCaptionRef = useRef(\"\");\n  const ids = useSelector((state) => state.idChange);\n  const dispatch = useDispatch();\n  const [postWithText] = usePostWithText();\n  const [postWithImage] = usePostWithImage();\n  const [postWithVideo] = usePostWithVideo();\n  const [privateImage, setPrivateImage] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openType, setOpenType] = useState(false);\n  const [postTagText, setPostTagText] = useState(\"\");\n  const [postTagSearch, setPostTagSearch] = useState(\"\");\n  const [allTaggedPeopleList, setAllTaggedPeopleList] = useState([]);\n  const [postTagDescription, setPostTagDescription] = useState(\"\");\n  const [postTagCaption, setPostTagCaption] = useState(\"\");\n  const [commentOn, setCommentOn] = useState(\"On\");\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const { oneInstituteDashboard, oneInstituteDashboardRefetch } =\n    useOneInstituteDashboard({\n      id: ids?.id,\n      skip: !ids?.id,\n    });\n  useEffect(() => {\n    if (ids?.id) oneInstituteDashboardRefetch();\n  }, [ids?.id, oneInstituteDashboardRefetch]);\n\n  const postTitleHandler = (e) => {\n    const lng = e.target.value?.length;\n    if (e.target.value[lng - 1] === \"@\") {\n      const lent = postTagText.length;\n      if (postTagText[lent - 1] === \" \" || postTagText === \"\") {\n        setOpen(true);\n        setOpenType(\"title\");\n      }\n    } else {\n    }\n    if (open) {\n      const searchSplit = e.target.value?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      setPostTagSearch(searchSplit[splitLeng - 1]);\n    }\n    setPostTagText(e.target.value);\n  };\n\n  const postDescritpionHandler = (e) => {\n    const lng = e.target.value?.length;\n    if (e.target.value[lng - 1] === \"@\") {\n      const lent = postTagDescription.length;\n      if (postTagDescription[lent - 1] === \" \" || postTagDescription === \"\") {\n        setOpen(true);\n        setOpenType(\"description\");\n      }\n    } else {\n    }\n    if (open) {\n      const searchSplit = e.target.value?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      setPostTagSearch(searchSplit[splitLeng - 1]);\n    }\n    setPostTagDescription(e.target.value);\n  };\n\n  const postCaptionHandler = (e) => {\n    const lng = e.target.value?.length;\n    if (e.target.value[lng - 1] === \"@\") {\n      const lent = postTagCaption.length;\n      if (postTagCaption[lent - 1] === \" \" || postTagCaption === \"\") {\n        setOpen(true);\n        setOpenType(\"caption\");\n      }\n    } else {\n    }\n    if (open) {\n      const searchSplit = e.target.value?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      setPostTagSearch(searchSplit[splitLeng - 1]);\n    }\n    setPostTagCaption(e.target.value);\n  };\n\n  const taggedPeoplehandler = (data) => {\n    setAllTaggedPeopleList([...allTaggedPeopleList, data]);\n    if (openType === \"title\") {\n      const searchSplit = postTagText?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      searchSplit[splitLeng - 1] = data.tagUserName;\n      const actualText = [\"\"];\n      let count = 0;\n      for (let text of searchSplit) {\n        if (count === 0) {\n          actualText[0] = text;\n        } else {\n          const me = `${actualText[0]}@${text}`;\n          actualText[0] = me;\n        }\n        ++count;\n      }\n      setPostTagText(actualText[0]);\n    } else if (openType === \"description\") {\n      const searchSplit = postTagDescription?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      searchSplit[splitLeng - 1] = data.tagUserName;\n      const actualText = [\"\"];\n      let count = 0;\n      for (let text of searchSplit) {\n        if (count === 0) {\n          actualText[0] = text;\n        } else {\n          const me = `${actualText[0]}@${text}`;\n          actualText[0] = me;\n        }\n        ++count;\n      }\n      setPostTagDescription(actualText[0]);\n    } else {\n      const searchSplit = postTagCaption?.split(\"@\");\n      const splitLeng = searchSplit.length;\n      searchSplit[splitLeng - 1] = data.tagUserName;\n      const actualText = [\"\"];\n      let count = 0;\n      for (let text of searchSplit) {\n        if (count === 0) {\n          actualText[0] = text;\n        } else {\n          const me = `${actualText[0]}@${text}`;\n          actualText[0] = me;\n        }\n        ++count;\n      }\n      setPostTagCaption(actualText[0]);\n    }\n  };\n\n  const imageChange = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setAllFiles(e.target.files);\n      setSelectedImage(e.target.files[0]);\n      const fileArray = Array.from(e.target.files).map((file) =>\n        URL.createObjectURL(file)\n      );\n\n      setImageList((prevList) => prevList.concat(fileArray));\n    }\n  };\n\n  const videoChange = (e) => {\n    if (e.target.files.length > 0) {\n      if (e.target.files[0]?.size > 50000000) {\n        setNotificationState({\n          msg: \"Please upload file size less than or equal to 50mb\",\n          run: true,\n        });\n      } else {\n        setAllFiles(e.target.files[0]);\n        let url = URL.createObjectURL(e.target.files[0]);\n        setSelectedVideo(url);\n      }\n    }\n  };\n\n  const postSubmitHandler = () => {\n    setDisabled(true);\n    if (!selectedImage && !selectedVideo) {\n      if (\n        postTitleRef.current.value !== \"\" &&\n        postDescriptionRef.current.value !== \"\"\n      )\n        postWithText({\n          id: ids?.id,\n          viewAs: instituteAs,\n          post: {\n            postTitle: postTitleRef.current.value,\n            postDescription: postDescriptionRef.current.value,\n            postStatus: postStatusRef.current.value,\n            people: allTaggedPeopleList,\n            comment_turned: commentOn,\n          },\n        })\n          .then((res) => {\n            dispatch(\n              postChangeAction.addCreatedPost({\n                post: res.data?.post,\n              })\n            );\n            onPostTypeChange(\"post\");\n            setDisabled(false);\n            oneInstituteDashboardRefetch();\n          })\n          .catch({});\n      else {\n        setDisabled(false);\n      }\n    } else if (selectedVideo && allFiles) {\n      const formData = new FormData();\n      const people = allTaggedPeopleList;\n      formData.append(\"postTitle\", postCaptionRef.current.value);\n      formData.append(\"postStatus\", postStatusRef.current.value);\n      formData.append(\"people\", JSON.stringify(people));\n      formData.append(\"comment_turned\", commentOn);\n      formData.append(\"file\", allFiles);\n      postWithVideo({\n        id: ids?.id,\n        viewAs: instituteAs,\n        post: formData,\n      })\n        .then((res) => {\n          dispatch(\n            postChangeAction.addCreatedPost({\n              post: res.data?.post,\n            })\n          );\n          onPostTypeChange(\"post\");\n          setDisabled(false);\n          oneInstituteDashboardRefetch();\n        })\n        .catch({});\n    } else {\n      const formData = new FormData();\n      const people = allTaggedPeopleList;\n      formData.append(\"postTitle\", postCaptionRef.current.value);\n      formData.append(\"postStatus\", postStatusRef.current.value);\n      formData.append(\"people\", JSON.stringify(people));\n      formData.append(\"comment_turned\", commentOn);\n      for (let fil of allFiles) {\n        formData.append(\"file\", fil);\n      }\n\n      postWithImage({\n        id: ids?.id,\n        viewAs: instituteAs,\n        post: formData,\n      })\n        .then((res) => {\n          dispatch(\n            postChangeAction.addCreatedPost({\n              post: res.data?.post,\n            })\n          );\n          onPostTypeChange(\"post\");\n          setDisabled(false);\n          oneInstituteDashboardRefetch();\n        })\n        .catch({});\n    }\n  };\n\n  // useEffect(() => {\n  //   if (postType === \"image\") {\n  //     onImageOpen();\n  //     console.info(\"this is my info\");\n  //   }\n  // }, [postType]);\n\n  const onResetState = () => {\n    setImageList([]);\n    setSelectedImage(\"\");\n    setSelectedVideo(\"\");\n    setAllFiles([]);\n    setPostTagCaption(\"\");\n    setAllTaggedPeopleList([]);\n    setCommentOn(\"On\");\n  };\n  const onEditIocn = () => {\n    setIconIndex(1);\n    setPostType(\"text\");\n    onResetState();\n  };\n\n  const onImageIcon = () => {\n    setIconIndex(2);\n    setPostType(\"image\");\n    onResetState();\n  };\n\n  const onVideoIcon = () => {\n    setIconIndex(3);\n    setPostType(\"video\");\n    onResetState();\n  };\n\n  const onToggleHandler = (e) => {\n    if (e.target.checked) {\n      setCommentOn(\"Off\");\n    } else {\n      setCommentOn(\"On\");\n    }\n  };\n\n  return (\n    <>\n      <PostHeader\n        postTitle={t(\"create_post\")}\n        onClose={() => onPostTypeChange(\"post\")}\n        dynamicImage={\n          oneInstituteDashboard?.institute?.photoId !== \"1\"\n            ? `${imageShowUrl}/${oneInstituteDashboard?.institute?.insProfilePhoto}`\n            : \"/images/ins_default_profile.svg\"\n        }\n        name={oneInstituteDashboard?.institute?.insName}\n        privateImage={privateImage}\n        setPrivateImage={setPrivateImage}\n        postStatusRef={postStatusRef}\n        onToggleHandler={onToggleHandler}\n        checkedToggle={commentOn}\n      >\n        {open && (\n          <div\n            className={style.tagList}\n            style={\n              openType === \"description\"\n                ? { marginTop: \"7vw\" }\n                : { marginTop: \"0\" }\n            }\n          >\n            <CustomSuspense>\n              <TagPeople\n                open={open}\n                setOpen={setOpen}\n                postTagSearch={postTagSearch}\n                setPostTagSearch={setPostTagSearch}\n                taggedPeoplehandler={taggedPeoplehandler}\n              />\n            </CustomSuspense>\n          </div>\n        )}\n\n        {postType === \"text\" && (\n          <div className={style.postTitle}>\n            <input\n              className={style.input}\n              type=\"text\"\n              placeholder={t(\"title_post\")}\n              ref={postTitleRef}\n              onChange={postTitleHandler}\n              value={postTagText}\n            />\n          </div>\n        )}\n\n        {postType === \"text\" && (\n          <div className={style.postDesc}>\n            <textarea\n              className={style.postTextarea}\n              rows=\"3\"\n              type=\"text\"\n              name=\"CreateInsPost\"\n              ref={postDescriptionRef}\n              placeholder={t(\"desc_post\")}\n              onChange={postDescritpionHandler}\n              value={postTagDescription}\n            />\n          </div>\n        )}\n        {postType === \"image\" && (\n          <div className={style.Container}>\n            <p className={style.description}>\n              <textarea\n                className={style.postTextarea}\n                rows=\"3\"\n                type=\"text\"\n                name=\"CreateInsPost\"\n                ref={postCaptionRef}\n                placeholder={t(\"caption_post\")}\n                onChange={postCaptionHandler}\n                value={postTagCaption}\n              />\n            </p>\n            {/* <p className={style.description}>\n            <div className={style.hashtag}>\n              <Hashtag text=\"naturephotography\" />\n              <Hashtag text=\"lake\" />\n              <Hashtag text=\"architecture\" />\n            </div>\n          </p> */}\n\n            <div className={style.selectedImg}>\n              {imageList.map((img, index) => (\n                <img key={index} alt=\"list\" src={img} />\n              ))}\n            </div>\n          </div>\n        )}\n\n        {postType === \"video\" && (\n          <div className={style.Container}>\n            <p className={style.description}>\n              <textarea\n                className={style.postTextarea}\n                rows=\"3\"\n                type=\"text\"\n                name=\"CreateInsPost\"\n                ref={postCaptionRef}\n                placeholder={t(\"caption_post\")}\n                onChange={postCaptionHandler}\n                value={postTagCaption}\n              />\n            </p>\n            {selectedVideo ? (\n              <div className={style.upload_video}>\n                <VideoPlayer video={selectedVideo} />\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        )}\n\n        <button\n          className={\n            selectedImage ? `${style.btn} ${style.afterbtn}` : style.btn\n          }\n          onClick={postSubmitHandler}\n          disabled={disabled}\n        >\n          <p>{t(\"post\")}</p>\n          {disabled && (\n            <div>\n              <LoaderButton />\n            </div>\n          )}\n        </button>\n        <PostFooterIcon\n          onEditIocn={onEditIocn}\n          onVideoIcon={onVideoIcon}\n          onPostTypeChange={onPostTypeChange}\n          activeIcon={iconIndex}\n          addFileToggle\n          onAddFile={iconIndex === 2 ? imageChange : videoChange}\n          acceptFormate={\n            iconIndex === 2\n              ? \"image/*, image/gif, image/jpeg, image/png\"\n              : \"video/*\"\n          }\n        >\n          <label htmlFor=\"img\" style={{ cursor: \"pointer\" }}>\n            <img\n              src=\"/images/img-post-icon.svg\"\n              onClick={onImageIcon}\n              alt=\"icon upload for post\"\n            />\n            {iconIndex === 2 && <div className={style.border2}></div>}\n          </label>\n\n          <input\n            className={style.upload}\n            id=\"img\"\n            name=\"file\"\n            multiple\n            onChange={iconIndex === 2 ? imageChange : () => {}}\n            // onClick={imageChange1}\n            type=\"file\"\n            accept=\"image/*, image/gif, image/jpeg, image/png\"\n          />\n        </PostFooterIcon>\n      </PostHeader>\n      {notificationState.run && (\n        <Notfication\n          msg={notificationState.msg}\n          run={notificationState.run}\n          setRun={() => setNotificationState({ msg: \"\", run: false })}\n          postiton=\"bottom\"\n          type=\"error\"\n        />\n      )}\n    </>\n  );\n}\n\nexport default NewPost;\n","// extracted by mini-css-extract-plugin\nexport default {\"video\":\"VideoPlayer_video__r0OQz\"};","import style from \"./VideoPlayer.module.css\";\nimport React from \"react\";\nimport ReactPlayer from \"react-player\";\n\nfunction VideoPlayerr({ video }) {\n  // const src = \"/videos/landing-video.mp4\";\n  return (\n    <div className={style.video}>\n      <ReactPlayer controls url={video} />\n    </div>\n  );\n}\n\nexport default VideoPlayerr;\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport style from \"./UniversalForm.module.css\";\nconst label = { inputProps: { \"aria-label\": \"Switch demo\" } };\n\nconst FormToggle = ({\n  customContainer,\n  customLabel,\n  labelDescription,\n  labelHeading,\n  defaultLabel,\n  checkedToggle,\n  onToggleHandler,\n  children,\n}) => {\n  return (\n    <div className={style.form_toggle_container} style={{ ...customContainer }}>\n      <div className={style.form_toggle_label}>\n        {defaultLabel ? (\n          <Switch {...label} defaultChecked disabled />\n        ) : (\n          <Switch\n            {...label}\n            checked={checkedToggle}\n            onChange={onToggleHandler}\n          />\n        )}\n\n        <span style={{ ...customLabel }}>{labelHeading}</span>\n      </div>\n      <div className={style.form_toggle_description}>{labelDescription}</div>\n      {children}\n    </div>\n  );\n};\n\nexport default FormToggle;\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar_image\":\"Avatar_avatar_image__orRwR\",\"custom_avatar_container\":\"Avatar_custom_avatar_container__f4BAI\",\"custom_avatar_one\":\"Avatar_custom_avatar_one__XYFtg\",\"custom_avatar_content\":\"Avatar_custom_avatar_content__E1nUO\"};","// extracted by mini-css-extract-plugin\nexport default {\"newPost\":\"PostHeader_newPost__6jEMR\",\"header\":\"PostHeader_header__nAWVN\",\"imgContainer\":\"PostHeader_imgContainer__cnIbK\",\"title\":\"PostHeader_title__S3tct\",\"public\":\"PostHeader_public__EImhy\",\"privacyIcon\":\"PostHeader_privacyIcon__+2tue\",\"select\":\"PostHeader_select__C-Piu\",\"arrow\":\"PostHeader_arrow__oZsjY\",\"arrowIcon\":\"PostHeader_arrowIcon__SawKs\",\"content\":\"PostHeader_content__FsI2m\",\"hr\":\"PostHeader_hr__mTrEp\",\"userName\":\"PostHeader_userName__jfN4e\",\"iconsContainer\":\"PostHeader_iconsContainer__2M-xr\",\"icons\":\"PostHeader_icons__MqfoZ\",\"border1\":\"PostHeader_border1__wMsIw\",\"border4\":\"PostHeader_border4__UyCNk\",\"border5\":\"PostHeader_border5__YtPZT\",\"border6\":\"PostHeader_border6__-EvMl\",\"border3\":\"PostHeader_border3__dMt41\",\"upload\":\"PostHeader_upload__D9cRU\"};","// extracted by mini-css-extract-plugin\nexport default {\"staff_form_container\":\"UniversalForm_staff_form_container__QRs6I\",\"staff_form_header_container\":\"UniversalForm_staff_form_header_container__+cQn3\",\"form_header_container\":\"UniversalForm_form_header_container__GVVNM\",\"form_header_list\":\"UniversalForm_form_header_list__fHs8S\",\"form_header_code\":\"UniversalForm_form_header_code__LsmbM\",\"form_toggle_description\":\"UniversalForm_form_toggle_description__281dv\",\"form_toggle_label\":\"UniversalForm_form_toggle_label__mbisD\",\"form_header_content\":\"UniversalForm_form_header_content__Y3p2k\",\"form_toggle_container\":\"UniversalForm_form_toggle_container__D0bu0\",\"form_checkbox_container\":\"UniversalForm_form_checkbox_container__bxzuK\",\"staff_form_header_container_actions\":\"UniversalForm_staff_form_header_container_actions__2Ynt9\",\"staff_header_text\":\"UniversalForm_staff_header_text__dQvPP\"};"],"names":["_ref","dynamicImage","customStyle","_jsx","src","alt","style","_objectSpread","className","avatar_image","onEditIocn","activeIcon","onPostTypeChange","addFileToggle","onAddFile","acceptFormate","onVideoIcon","children","t","useTranslation","onClickIconHandler","val","_jsxs","_Fragment","hr","iconsContainer","icons","onClick","title","border1","border3","border4","border5","border6","htmlFor","cursor","addfiles","upload","multiple","id","name","onChange","type","accept","postTitle","onClose","privateImage","setPrivateImage","postStatusRef","checkedToggle","onToggleHandler","announcement","newPost","header","content","imgContainer","Avatar","userName","public","privacyIcon","select","arrow","arrowIcon","ref","e","target","value","FormToggle","labelHeading","customContainer","padding","customLabel","fontWeight","TagPeople","React","_oneInstituteDashboar","_oneInstituteDashboar2","_oneInstituteDashboar3","postType","setPostType","_useState","useState","_useState2","_slicedToArray","imageList","setImageList","_useState3","_useState4","selectedImage","setSelectedImage","_useState5","_useState6","selectedVideo","setSelectedVideo","_useState7","_useState8","disabled","setDisabled","_useState9","_useState10","iconIndex","setIconIndex","_useState11","_useState12","allFiles","setAllFiles","postTitleRef","useRef","postDescriptionRef","postCaptionRef","ids","useSelector","state","idChange","dispatch","useDispatch","_usePostWithText","usePostWithText","postWithText","_usePostWithImage","usePostWithImage","postWithImage","_usePostWithVideo","usePostWithVideo","postWithVideo","_useState13","_useState14","_useState15","_useState16","open","setOpen","_useState17","_useState18","openType","setOpenType","_useState19","_useState20","postTagText","setPostTagText","_useState21","_useState22","postTagSearch","setPostTagSearch","_useState23","_useState24","allTaggedPeopleList","setAllTaggedPeopleList","_useState25","_useState26","postTagDescription","setPostTagDescription","_useState27","_useState28","postTagCaption","setPostTagCaption","_useState29","_useState30","commentOn","setCommentOn","_useState31","msg","run","_useState32","notificationState","setNotificationState","_useOneInstituteDashb","useOneInstituteDashboard","skip","oneInstituteDashboard","oneInstituteDashboardRefetch","useEffect","postCaptionHandler","_e$target$value5","lng","length","lent","_e$target$value6","searchSplit","split","splitLeng","imageChange","files","fileArray","Array","from","map","file","URL","createObjectURL","prevList","concat","onResetState","PostHeader","institute","photoId","imageShowUrl","insProfilePhoto","insName","checked","tagList","marginTop","CustomSuspense","taggedPeoplehandler","data","_toConsumableArray","tagUserName","_step","actualText","count","_iterator","_createForOfIteratorHelper","s","n","done","text","me","err","f","_step2","_iterator2","_step3","_iterator3","input","placeholder","_e$target$value","_e$target$value2","postDesc","postTextarea","rows","_e$target$value3","_e$target$value4","Container","description","selectedImg","img","index","upload_video","VideoPlayer","video","btn","afterbtn","formData","FormData","people","append","current","JSON","stringify","viewAs","instituteAs","post","then","res","_res$data2","postChangeAction","addCreatedPost","catch","_step4","_iterator4","fil","_res$data3","postDescription","postStatus","comment_turned","_res$data","LoaderButton","PostFooterIcon","_e$target$files$","size","url","border2","Notfication","setRun","postiton","ReactPlayer","controls","label","inputProps","labelDescription","defaultLabel","form_toggle_container","form_toggle_label","Switch","defaultChecked","form_toggle_description"],"sourceRoot":""}