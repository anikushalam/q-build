{"version":3,"file":"static/js/1669.1be59a52.chunk.js","mappings":"2LAKA,MA0BA,EA1BqBA,IAOd,IAPe,WACpBC,EAAU,iBACVC,EAAgB,aAChBC,EAAY,YACZC,EAAW,KACXC,EAAI,iBACJC,GACDN,EACC,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAMC,wBAAyBD,MAAO,IAAKL,GAAcO,UACvEJ,EAAAA,EAAAA,KAACK,EAAAA,EAAgB,CACfC,SACEN,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CACPC,GAAI,CAAEC,MAAO,yBACbC,SAAUf,EACVgB,QAASf,EACTE,KAAMA,IAGVc,MAAOlB,EACPc,GAAI,IAAKT,MAEP,C,kHCrBV,MAAMa,EAAQ,CAAEC,WAAY,CAAE,aAAc,gBA2F5C,EA1FmBpB,IAcZ,IAda,mBAClBqB,EAAkB,cAClBC,EAAa,gBACbC,EAAe,QACfC,EAAO,cACPC,EAAa,WACbC,EAAU,aACVC,EAAY,eACZC,EAAc,gBACdC,EAAe,iBACfC,EAAgB,SAChBC,EAAQ,WACRC,EAAU,UACVC,GACDjC,EACC,MAAM,EAAEkC,IAAMC,EAAAA,EAAAA,MACd,OACEC,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAM4B,4BAA4B1B,SAAA,EAChDyB,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAM6B,oCAAoC3B,SAAA,EACxDyB,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAM8B,sBAAsB5B,SAAA,EAC1CJ,EAAAA,EAAAA,KAAA,OACEiC,IAAI,2BACJC,IAAI,gBACJC,QAASA,IAAMnB,GAAiBoB,IAASA,OAE3CpC,EAAAA,EAAAA,KAAA,MAAAI,SAAKuB,EAAE,wBAERR,IACCU,EAAAA,EAAAA,MAAA,KACE5B,UAAWC,EAAAA,EAAMmC,kBACjBnC,MAAO,CACLO,MAAO,WACPL,SAAA,CAEDgB,GAEDpB,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,IACD1B,EACJD,QAASW,EACTZ,SAAUW,WAKlBrB,EAAAA,EAAAA,KAACuC,EAAAA,EAAY,IACZb,EAAY,MACXG,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAMsC,oBAAoBpC,SAAA,EACxCyB,EAAAA,EAAAA,MAAA,MAAI5B,UAAWC,EAAAA,EAAMuC,iBAAiBrC,SAAA,EACpCyB,EAAAA,EAAAA,MAAA,MAAAzB,SAAA,CACG,IACAuB,EAAE,oBAAoB,IAAEV,EAAQ,IAAEU,EAAE,UAAW,QAElD3B,EAAAA,EAAAA,KAAA,MAAAI,SAAKc,KACLlB,EAAAA,EAAAA,KAAA,MAAAI,SAAKuB,EAAE,qBACP3B,EAAAA,EAAAA,KAAA,MAAAI,SAAKuB,EAAE,0BAEI,YAAZV,IACCY,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAMwC,iBAAiBtC,SAAA,EACrCJ,EAAAA,EAAAA,KAAA,OACEiC,IAAI,2BACJU,MAAM,UACNT,IAAI,UACJC,QAASrB,KAEXd,EAAAA,EAAAA,KAAA,MAAAI,SAAKuB,EAAE,qBACP3B,EAAAA,EAAAA,KAAA,MAAAI,SAAKW,UAMG,YAAfU,GACCzB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAsB,CACrBC,YAAalB,EAAE,+BACfmB,cAAenB,EAAE,sCACjBoB,QAAS,CAAC,eAAgB,aAAc,cACxCZ,QAASZ,EACTyB,OAAO,gBACPC,aAAczB,EACd0B,qBAAsB,CACpBC,OAAQ,OACRC,aAAc,OACdC,MAAO,SAGT,OACA,C,iFC1FV,MAAMzC,EAAQ,CAAEC,WAAY,CAAE,aAAc,gBAmC5C,EAjCmBpB,IASZ,IATa,gBAClB6D,EAAe,YACfC,EAAW,iBACXC,EAAgB,aAChBC,EAAY,aACZC,EAAY,cACZC,EAAa,gBACbC,EAAe,SACfxD,GACDX,EACC,OACEoC,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAM2D,sBAAuB3D,MAAO,IAAKoD,GAAkBlD,SAAA,EACzEyB,EAAAA,EAAAA,MAAA,OAAK5B,UAAWC,EAAAA,EAAM4D,kBAAkB1D,SAAA,CACrCsD,GACC1D,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,IAAK1B,EAAOmD,gBAAc,EAACC,UAAQ,KAE1ChE,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,IACD1B,EACJD,QAASgD,EACTjD,SAAUkD,KAId5D,EAAAA,EAAAA,KAAA,QAAME,MAAO,IAAKqD,GAAcnD,SAAEqD,OAEnCD,IACCxD,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAM+D,wBAAwB7D,SAAEoD,IAEjDpD,IACG,C,0ICzBV,SAAe8D,EAAAA,EAAAA,IAA4BlE,EAAAA,EAAAA,KAAK,OAAQ,CACtDmE,EAAG,+FACD,wBCFJ,GAAeD,EAAAA,EAAAA,IAA4BlE,EAAAA,EAAAA,KAAK,OAAQ,CACtDmE,EAAG,wIACD,YCFJ,GAAeD,EAAAA,EAAAA,IAA4BlE,EAAAA,EAAAA,KAAK,OAAQ,CACtDmE,EAAG,kGACD,yB,gDCPJ,MAAMC,EAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,OAAQ,aA6BzGC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CACtCC,kBAAmBC,IAAQC,EAAAA,EAAAA,IAAsBD,IAAkB,YAATA,EAC1D3E,KAAM,cACN6E,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWE,eAAiBH,EAAOG,cAAoC,YAArBF,EAAWtE,OAAuBqE,EAAO,QAADI,QAASC,EAAAA,EAAAA,GAAWJ,EAAWtE,SAAU,GARvI6D,EAUlB7E,IAAA,IAAC,MACF2F,EAAK,WACLL,GACDtF,EAAA,OAAK4F,EAAAA,EAAAA,GAAS,CACb5E,OAAQ2E,EAAME,MAAQF,GAAOG,QAAQC,KAAKC,YACxCV,EAAWW,eAAiB,CAC9B,UAAW,CACTC,gBAAiBP,EAAME,KAAO,QAAHJ,OAAgC,YAArBH,EAAWtE,MAAsB2E,EAAME,KAAKC,QAAQK,OAAOC,cAAgBT,EAAME,KAAKC,QAAQO,QAAQC,YAAW,OAAAb,OAAME,EAAME,KAAKC,QAAQK,OAAOI,aAAY,MAAMC,EAAAA,EAAAA,IAA2B,YAArBlB,EAAWtE,MAAsB2E,EAAMG,QAAQK,OAAOM,OAASd,EAAMG,QAAQR,EAAWtE,OAAO0F,KAAMf,EAAMG,QAAQK,OAAOI,cAEzU,uBAAwB,CACtBL,gBAAiB,iBAGC,YAArBZ,EAAWtE,OAAuB,CACnC,CAAC,KAADyE,OAAMkB,EAAAA,EAAgBzF,QAAO,QAAAuE,OAAOkB,EAAAA,EAAgBnB,gBAAkB,CACpExE,OAAQ2E,EAAME,MAAQF,GAAOG,QAAQR,EAAWtE,OAAO0F,MAEzD,CAAC,KAADjB,OAAMkB,EAAAA,EAAgBpC,WAAa,CACjCvD,OAAQ2E,EAAME,MAAQF,GAAOG,QAAQK,OAAO5B,WAE9C,IACIqC,GAAkCrG,EAAAA,EAAAA,KAAKsG,EAAc,CAAC,GACtDC,GAA2BvG,EAAAA,EAAAA,KAAKwG,EAA0B,CAAC,GAC3DC,GAAwCzG,EAAAA,EAAAA,KAAK0G,EAA2B,CAAC,GAiJ/E,EAhJ8BC,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,IAAIC,EAAsBC,EAC1B,MAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAO+B,EACP9G,KAAM,iBAEF,YACFmH,EAAcZ,EAAkB,MAChC5F,EAAQ,UACRyG,KAAMC,EAAWZ,EAAW,cAC5BtB,GAAgB,EAChBmC,kBAAmBC,EAAwBZ,EAAwB,WACnE5F,EAAU,KACVyG,EAAO,SAAQ,UACfrH,GACE4E,EACJ0C,GAAQC,EAAAA,EAAAA,GAA8B3C,EAAOT,GACzC8C,EAAOjC,EAAgBoC,EAAwBF,EAC/CC,EAAoBnC,EAAgBoC,EAAwBJ,EAC5DlC,GAAaM,EAAAA,EAAAA,GAAS,CAAC,EAAGR,EAAO,CACrCpE,QACAwE,gBACAqC,SAEIG,EAvEkB1C,KACxB,MAAM,QACJ0C,EAAO,cACPxC,EAAa,MACbxE,EAAK,KACL6G,GACEvC,EACE2C,EAAQ,CACZ1C,KAAM,CAAC,OAAQC,GAAiB,gBAAiB,QAAFC,QAAUC,EAAAA,EAAAA,GAAW1E,IAAM,OAAAyE,QAAWC,EAAAA,EAAAA,GAAWmC,MAE5FK,GAAkBC,EAAAA,EAAAA,GAAeF,EAAOG,EAAAA,EAAyBJ,GACvE,OAAOpC,EAAAA,EAAAA,GAAS,CAAC,EAAGoC,EAASE,EAAgB,EA4D7BG,CAAkB/C,GAClC,OAAoB/E,EAAAA,EAAAA,KAAKqE,GAAcgB,EAAAA,EAAAA,GAAS,CAC9C0C,KAAM,WACNlH,YAAYwE,EAAAA,EAAAA,GAAS,CACnB,qBAAsBJ,GACrBpE,GACHqG,KAAmBP,EAAAA,aAAmBO,EAAM,CAC1Cc,SAA0D,OAA/ClB,EAAuBI,EAAKrC,MAAMmD,UAAoBlB,EAAuBQ,IAE1FL,YAA0BN,EAAAA,aAAmBS,EAAmB,CAC9DY,SAAwE,OAA7DjB,EAAwBK,EAAkBvC,MAAMmD,UAAoBjB,EAAwBO,IAEzGvC,WAAYA,EACZ8B,IAAKA,EACL5G,WAAWgI,EAAAA,EAAAA,GAAKR,EAAQzC,KAAM/E,IAC7BsH,EAAO,CACRE,QAASA,IAEb,G,qEC3GO,SAASI,EAAwBlD,GACtC,OAAOuD,EAAAA,EAAAA,GAAqB,cAAevD,EAC7C,CACA,MACA,GADwBwD,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,iBAAkB,YAAa,c,kBCL/I,SAASC,EAAgB3I,GAIrC,IAJsC,MACvCoF,EAAK,OACLwD,EAAM,eACNC,GACD7I,EACC,OAAO4I,EAAOE,QAAO,CAACC,EAAKC,KACzBD,EAAIC,GAAS5D,EAAM4D,GACfH,GAC0B,qBAAjBzD,EAAM4D,KACfD,EAAIC,GAASH,EAAeG,IAGzBD,IACN,CAAC,EACN,C,gNCVA,MAAMpE,EAAY,CAAC,UAAW,YAAa,kBAAmB,UAAW,WAAY,oBAAqB,WAAY,QAAS,iBAAkB,OAAQ,WAAY,WAAY,YAAa,SA+BjLsE,GAAuBpE,EAAAA,EAAAA,IAAO,QAAS,CAClDxE,KAAM,sBACN6E,KAAM,OACNC,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAAC,CACN,CAAC,MAADK,OAAOyD,EAAAA,EAAwB/H,QAAUkE,EAAOlE,OAC/CkE,EAAOE,KAAMF,EAAO,iBAADI,QAAkBC,EAAAA,EAAAA,GAAWJ,EAAW6D,kBAAmB,GATjDtE,EAWjCuE,IAAA,IAAC,MACFzD,EAAK,WACLL,GACD8D,EAAA,OAAKxD,EAAAA,EAAAA,GAAS,CACbyD,QAAS,cACTC,WAAY,SACZC,OAAQ,UAERC,cAAe,SACfC,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,CAAC,KAADlE,OAAMyD,EAAAA,EAAwB3E,WAAa,CACzCgF,OAAQ,YAEqB,UAA9BjE,EAAW6D,gBAA8B,CAC1CS,cAAe,cACfF,WAAY,GAEZC,aAAc,IACiB,QAA9BrE,EAAW6D,gBAA4B,CACxCS,cAAe,iBACfF,WAAY,IACmB,WAA9BpE,EAAW6D,gBAA+B,CAC3CS,cAAe,SACfF,WAAY,IACX,CACD,CAAC,MAADjE,OAAOyD,EAAAA,EAAwB/H,QAAU,CACvC,CAAC,KAADsE,OAAMyD,EAAAA,EAAwB3E,WAAa,CACzCvD,OAAQ2E,EAAME,MAAQF,GAAOG,QAAQC,KAAKxB,YAG9C,IACIsF,GAAoBhF,EAAAA,EAAAA,IAAO,OAAQ,CACvCxE,KAAM,sBACN6E,KAAM,WACNC,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOyE,UAHrBjF,EAIvBkF,IAAA,IAAC,MACFpE,GACDoE,EAAA,MAAM,CACL,CAAC,KAADtE,OAAMyD,EAAAA,EAAwBc,QAAU,CACtChJ,OAAQ2E,EAAME,MAAQF,GAAOG,QAAQkE,MAAMtD,MAE9C,IA2JD,EArJsCQ,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,IAAIpH,EAAMiK,EACV,MAAM7E,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAO+B,EACP9G,KAAM,yBAEF,UACFG,EAAS,gBACT0J,EAAkB,CAAC,EAAC,QACpBrJ,EACA0D,SAAU4F,EAAY,kBACtBC,EACAjJ,MAAOkJ,EAAS,eAChBlB,EAAiB,MACjBmB,SAAUC,EAAY,UACtBC,EAAY,CAAC,GACXpF,EACJ0C,GAAQC,EAAAA,EAAAA,GAA8B3C,EAAOT,GACzCkE,GAAiB4B,EAAAA,EAAAA,KACjBlG,EAAoF,OAAxEvE,EAAuB,MAAhBmK,EAAuBA,EAAetJ,EAAQuE,MAAMb,UAAoBvE,EAAyB,MAAlB6I,OAAyB,EAASA,EAAetE,SACnJ+F,EAA2B,MAAhBC,EAAuBA,EAAe1J,EAAQuE,MAAMkF,SAC/DI,EAAe,CACnBnG,WACA+F,YAEF,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAYK,SAAQC,IACzB,qBAAvB/J,EAAQuE,MAAMwF,IAA8C,qBAAfxF,EAAMwF,KAC5DF,EAAaE,GAAOxF,EAAMwF,GAC5B,IAEF,MAAMC,GAAMlC,EAAAA,EAAAA,GAAiB,CAC3BvD,QACAyD,iBACAD,OAAQ,CAAC,WAELtD,GAAaM,EAAAA,EAAAA,GAAS,CAAC,EAAGR,EAAO,CACrCb,WACA4E,iBACAmB,WACAN,MAAOa,EAAIb,QAEPhC,EArHkB1C,KACxB,MAAM,QACJ0C,EAAO,SACPzD,EAAQ,eACR4E,EAAc,MACda,EAAK,SACLM,GACEhF,EACE2C,EAAQ,CACZ1C,KAAM,CAAC,OAAQhB,GAAY,WAAY,iBAAFkB,QAAmBC,EAAAA,EAAAA,GAAWyD,IAAmBa,GAAS,QAASM,GAAY,YACpHnJ,MAAO,CAAC,QAASoD,GAAY,YAC7BuF,SAAU,CAAC,WAAYE,GAAS,UAElC,OAAO7B,EAAAA,EAAAA,GAAeF,EAAO6C,EAAAA,EAAmC9C,EAAQ,EAwGxDK,CAAkB/C,GAC5ByF,EAAwE,OAAjDd,EAAwBO,EAAUQ,YAAsBf,EAAwBC,EAAgBc,WAC7H,IAAI7J,EAAQkJ,EASZ,OARa,MAATlJ,GAAiBA,EAAMmH,OAAS2C,EAAAA,GAAeb,IACjDjJ,GAAqBZ,EAAAA,EAAAA,KAAK0K,EAAAA,GAAYrF,EAAAA,EAAAA,GAAS,CAC7CsF,UAAW,QACVH,EAAqB,CACtBvK,WAAWgI,EAAAA,EAAAA,GAAKR,EAAQ7G,MAA8B,MAAvB4J,OAA8B,EAASA,EAAoBvK,WAC1FG,SAAUQ,OAGMiB,EAAAA,EAAAA,MAAM6G,GAAsBrD,EAAAA,EAAAA,GAAS,CACvDpF,WAAWgI,EAAAA,EAAAA,GAAKR,EAAQzC,KAAM/E,GAC9B8E,WAAYA,EACZ8B,IAAKA,GACJU,EAAO,CACRnH,SAAU,CAAcuG,EAAAA,aAAmBrG,EAAS6J,GAAeJ,GAAwBlI,EAAAA,EAAAA,MAAM+I,EAAAA,EAAO,CACtGC,UAAW,MACX9B,WAAY,SACZ3I,SAAU,CAACQ,GAAoBiB,EAAAA,EAAAA,MAAMyH,EAAmB,CACtDvE,WAAYA,EACZ,eAAe,EACf9E,UAAWwH,EAAQ8B,SACnBnJ,SAAU,CAAC,SAAU,UAEpBQ,KAET,G,qEClKO,SAAS2J,EAAkC5F,GAChD,OAAOuD,EAAAA,EAAAA,GAAqB,sBAAuBvD,EACrD,CACA,MACA,GADgCwD,EAAAA,EAAAA,GAAuB,sBAAuB,CAAC,OAAQ,sBAAuB,oBAAqB,uBAAwB,WAAY,QAAS,QAAS,WAAY,Y,mCCJrM,SAAgB,qBAAuB,4CAA4C,4BAA8B,mDAAmD,sBAAwB,6CAA6C,iBAAmB,wCAAwC,iBAAmB,wCAAwC,wBAA0B,+CAA+C,kBAAoB,yCAAyC,oBAAsB,2CAA2C,sBAAwB,6CAA6C,wBAA0B,+CAA+C,oCAAsC,2DAA2D,kBAAoB,yC","sources":["StaffTab/components/DividerTab/MainContent/StaffForm/FormCheckbox.jsx","StaffTab/components/DividerTab/MainContent/StaffForm/FormHeader.jsx","StaffTab/components/DividerTab/MainContent/StaffForm/FormToggle.jsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://mithkal-qviple/./src/StaffTab/components/DividerTab/MainContent/StaffForm/UniversalForm.module.css?aa28"],"sourcesContent":["import React from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport style from \"./UniversalForm.module.css\";\n\nconst FormCheckbox = ({\n  checkLabel,\n  onCheckboxAction,\n  checkedValue,\n  customStyle,\n  name,\n  customStyleLabel,\n}) => {\n  return (\n    <div className={style.form_checkbox_container} style={{ ...customStyle }}>\n      <FormControlLabel\n        control={\n          <Checkbox\n            sx={{ color: \"rgba(18, 18, 18, 0.7)\" }}\n            onChange={onCheckboxAction}\n            checked={checkedValue}\n            name={name}\n          />\n        }\n        label={checkLabel}\n        sx={{ ...customStyleLabel }}\n      />\n    </div>\n  );\n};\n\nexport default FormCheckbox;\n","import React from \"react\";\nimport BorderBottom from \"../StaffAProfile/BorderBottom\";\nimport style from \"./UniversalForm.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport Switch from \"@mui/material/Switch\";\nimport CustomSelectDepartment from \"../../../../../JoiningForm/Student/Form/CustomSelectDepartment\";\nconst label = { inputProps: { \"aria-label\": \"Switch demo\" } };\nconst FormHeader = ({\n  RefreshCodeHandler,\n  staffJoinCode,\n  setStaffSetting,\n  asStaff,\n  availableCode,\n  is_install,\n  installTitle,\n  onInstallTitle,\n  installmentEdit,\n  onTextCaseFormat,\n  textCase,\n  isCaseOpen,\n  isStudent,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.staff_form_header_container}>\n      <div className={style.staff_form_header_container_actions}>\n        <div className={style.form_header_container}>\n          <img\n            src=\"/images/profile-prev.svg\"\n            alt=\"previous icon\"\n            onClick={() => setStaffSetting((pre) => !pre)}\n          />\n          <h6>{t(\"joining_process\")}</h6>\n        </div>\n        {is_install && (\n          <p\n            className={style.staff_header_text}\n            style={{\n              color: \"#0000ff\",\n            }}\n          >\n            {installTitle}\n\n            <Switch\n              {...label}\n              checked={installmentEdit}\n              onChange={onInstallTitle}\n            />\n          </p>\n        )}\n      </div>\n      <BorderBottom />\n      {isStudent ? null : (\n        <div className={style.form_header_content}>\n          <ul className={style.form_header_list}>\n            <li>\n              {\" \"}\n              {t(\"must_be_existing\")} {asStaff} {t(\"of_ins\")}{\" \"}\n            </li>\n            <li>{availableCode}</li>\n            <li>{t(\"fill_join_form\")}</li>\n            <li>{t(\"wait_for_approval\")}</li>\n          </ul>\n          {asStaff !== \"student\" && (\n            <div className={style.form_header_code}>\n              <img\n                src=\"/images/refresh-icon.svg\"\n                title=\"Refresh\"\n                alt=\"Refresh\"\n                onClick={RefreshCodeHandler}\n              />\n              <h6>{t(\"institute_code\")}</h6>\n              <h6>{staffJoinCode}</h6>\n            </div>\n          )}\n        </div>\n      )}\n\n      {isCaseOpen === \"student\" ? (\n        <CustomSelectDepartment\n          selectLabel={t(\"student_profile_text_format\")}\n          selectedValue={t(\"select_student_profile_text_format\")}\n          options={[\"Capital case\", \"Small case\", \"Title case\"]}\n          onClick={onTextCaseFormat}\n          viewAs=\"NORMAL_FILTER\"\n          defalutValue={textCase}\n          customStyleContainer={{\n            margin: \"auto\",\n            marginBottom: \"1rem\",\n            width: \"78%\",\n          }}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default FormHeader;\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport style from \"./UniversalForm.module.css\";\nconst label = { inputProps: { \"aria-label\": \"Switch demo\" } };\n\nconst FormToggle = ({\n  customContainer,\n  customLabel,\n  labelDescription,\n  labelHeading,\n  defaultLabel,\n  checkedToggle,\n  onToggleHandler,\n  children,\n}) => {\n  return (\n    <div className={style.form_toggle_container} style={{ ...customContainer }}>\n      <div className={style.form_toggle_label}>\n        {defaultLabel ? (\n          <Switch {...label} defaultChecked disabled />\n        ) : (\n          <Switch\n            {...label}\n            checked={checkedToggle}\n            onChange={onToggleHandler}\n          />\n        )}\n\n        <span style={{ ...customLabel }}>{labelHeading}</span>\n      </div>\n      {labelDescription && (\n        <div className={style.form_toggle_description}>{labelDescription}</div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default FormToggle;\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      alignItems: \"center\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","// extracted by mini-css-extract-plugin\nexport default {\"staff_form_container\":\"UniversalForm_staff_form_container__QRs6I\",\"staff_form_header_container\":\"UniversalForm_staff_form_header_container__+cQn3\",\"form_header_container\":\"UniversalForm_form_header_container__GVVNM\",\"form_header_list\":\"UniversalForm_form_header_list__fHs8S\",\"form_header_code\":\"UniversalForm_form_header_code__LsmbM\",\"form_toggle_description\":\"UniversalForm_form_toggle_description__281dv\",\"form_toggle_label\":\"UniversalForm_form_toggle_label__mbisD\",\"form_header_content\":\"UniversalForm_form_header_content__Y3p2k\",\"form_toggle_container\":\"UniversalForm_form_toggle_container__D0bu0\",\"form_checkbox_container\":\"UniversalForm_form_checkbox_container__bxzuK\",\"staff_form_header_container_actions\":\"UniversalForm_staff_form_header_container_actions__2Ynt9\",\"staff_header_text\":\"UniversalForm_staff_header_text__dQvPP\"};"],"names":["_ref","checkLabel","onCheckboxAction","checkedValue","customStyle","name","customStyleLabel","_jsx","className","style","form_checkbox_container","children","FormControlLabel","control","Checkbox","sx","color","onChange","checked","label","inputProps","RefreshCodeHandler","staffJoinCode","setStaffSetting","asStaff","availableCode","is_install","installTitle","onInstallTitle","installmentEdit","onTextCaseFormat","textCase","isCaseOpen","isStudent","t","useTranslation","_jsxs","staff_form_header_container","staff_form_header_container_actions","form_header_container","src","alt","onClick","pre","staff_header_text","Switch","BorderBottom","form_header_content","form_header_list","form_header_code","title","CustomSelectDepartment","selectLabel","selectedValue","options","viewAs","defalutValue","customStyleContainer","margin","marginBottom","width","customContainer","customLabel","labelDescription","labelHeading","defaultLabel","checkedToggle","onToggleHandler","form_toggle_container","form_toggle_label","defaultChecked","disabled","form_toggle_description","createSvgIcon","d","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","slot","overridesResolver","props","styles","ownerState","root","indeterminate","concat","capitalize","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","getCheckboxUtilityClass","useUtilityClasses","type","fontSize","clsx","generateUtilityClass","generateUtilityClasses","formControlState","states","muiFormControl","reduce","acc","state","FormControlLabelRoot","formControlLabelClasses","labelPlacement","_ref2","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","AsteriskComponent","asterisk","_ref3","error","_slotProps$typography","componentsProps","disabledProp","disableTypography","labelProp","required","requiredProp","slotProps","useFormControl","controlProps","forEach","key","fcs","getFormControlLabelUtilityClasses","typographySlotProps","typography","Typography","component","Stack","direction"],"sourceRoot":""}