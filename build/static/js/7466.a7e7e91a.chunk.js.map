{"version":3,"file":"static/js/7466.a7e7e91a.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/InstituteForget.jsx","optimized/Validation/Auth/invalidateAuthUsername.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useAuthUserForget } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst InstituteForget = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const [state, setState] = useState({\n    username: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForget] = useAuthUserForget();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, username: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.username))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authUserForget({\n          forgot: state,\n        })\n          .then((res) => {\n            let response = decryption(res?.data?.encrypt);\n            if (response?.institute?._id) {\n              navigate(\"/institute/forget/verify\", {\n                state: {\n                  uid: response?.institute?._id,\n                  phoneNumber: state.username,\n                },\n              });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Username\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forgot_password_heading\"\n        subTitle={t(\"forgot_passowrd_note\")}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            label={t(\"username\")}\n            placeholder={t(\"username_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n            validate={errorField[\"username\"]}\n            name=\"username\"\n            value={state.username}\n            onChange={onChangeHandler}\n          />\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"find_account\")}\n            customStyleButton={{\n              marginTop: \"4rem\",\n            }}\n          />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default InstituteForget;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","navigate","useNavigate","_useState","useState","username","_useState2","_slicedToArray","state","setState","_useState3","_useState4","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","_useAuthUserForget","useAuthUserForget","authUserForget","GetStarted","fontSize","onSubmit","e","preventDefault","validation","requiredField","existingRequiredField","pre","invalidateAuthUsername","forgot","then","res","_res$data","_response$institute","_response$institute2","response","decryption","data","encrypt","institute","_id","uid","phoneNumber","catch","err","concat","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","value","onChange","prev","_objectSpread","target","ButtonWithTypeSubmit","type","buttonText","customStyleButton","marginTop","NotifyEvent","eventState","eventStateHandler","specailSymbol","includes","invalidateAuthEmailOrMobile","length","typeOfAuth"],"sourceRoot":""}