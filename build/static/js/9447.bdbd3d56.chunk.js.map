{"version":3,"file":"static/js/9447.bdbd3d56.chunk.js","mappings":"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","sources":["services/Post/QueryMutationFunctionPost.js","services/Post/postApiDynamic.js","Post/Institute/Components/post-api.js"],"sourcesContent":["export const withQuery = (builder, url) => {\n  console.log(builder, url);\n  return builder.query({\n    query: () => `${url}`,\n  });\n};\n\nexport const withMutation = (builder, method, url) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${url}`,\n      method: `${method}`,\n      body: data,\n    }),\n  });\n};\nconst postUrl = \"/api/v1/ins/post\";\nconst postUrlUser = \"/api/v1/user/post\";\nconst postUrlUser1 = \"/api/v1/user/post/v2\";\nconst subUrlPost = \"/api/v1\";\nconst subUrlQuestion = \"/api/v1/post/question\";\nconst asUser = \"USER\";\n// const asInstitute=\"\"\nexport const dashboardPostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/${data.id}/all/posts?page=${data.page}&limit=${data.limit}`\n        // : `${postUrlUser}/${data.id}/all/user/posts?page=${data.page}&limit=${data.limit}`,\n    : `${postUrlUser1}/${data.id}/all/user/posts?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const profilePostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/${data.id}/all/profile/posts?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/${data.id}/all/user/profile/posts?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const profileSavedPostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/${data.id}/saved/all/posts?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/${data.id}/all/user/saved/posts?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const profileTagPostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/${data.id}/tag/all/posts?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/${data.id}/all/user/tag/posts?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const addTagPeopleFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/tag?search=${data.search}&page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/tag?search=${data.search}&page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const createPostTextFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/${data.id}`\n          : `${postUrlUser}/${data.id}`,\n      method: `${method}`,\n      body: data.post,\n    }),\n  });\n};\n\nexport const createPostImageFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/${data.id}/image`\n          : `${postUrlUser}/${data.id}/image`,\n      method: `${method}`,\n      body: data.post,\n    }),\n  });\n};\nexport const createPostVideoFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/${data.id}/video`\n          : `${postUrlUser}/${data.id}/video`,\n      method: `${method}`,\n      body: data.post,\n    }),\n  });\n};\n\nexport const createPostPollQuestionFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/question/poll/${data.id}`\n          : `${subUrlPost}/poll/question/${data.id}`,\n      method: `${method}`,\n      body: data.post,\n    }),\n  });\n};\n\nexport const createPostQuestionFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/question/${data.id}/text`\n          : `${subUrlQuestion}/${data.id}/text`,\n      method: `${method}`,\n      body: data.post,\n    }),\n  });\n};\n\nexport const updatePostFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/update/${data.pid}`\n          : `${postUrlUser}/update/${data.pid}`,\n      method: `${method}`,\n      body: data.postUpdate,\n    }),\n  });\n};\n\nexport const deletePostFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/${data.id}/deleted/${data.pid}`\n          : `${postUrlUser}/${data.id}/deleted/${data.pid}`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const deletePostQuestionFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/question/${data.id}/deleted/${data.pid}`\n          : `${subUrlQuestion}/${data.id}/deleted/${data.pid}`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const reactionPostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/reaction/${data.pid}?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/reaction/${data.pid}?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const likePostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/like/${data.pid}`\n        : `${postUrlUser}/like/${data.pid}`,\n  });\n};\nexport const savePostFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/save/${data.pid}`\n        : `${postUrlUser}/save/${data.pid}`,\n  });\n};\n\nexport const getAllAnswerFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlQuestion}/answer/${data.pid}?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const getAllCommentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/comment/${data.pid}?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/comment/${data.pid}?page=${data.page}&limit=${data.limit}`,\n  });\n};\nexport const postCommentFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/comment/${data.pid}`\n          : `${postUrlUser}/comment/${data.pid}`,\n      method: `${method}`,\n      body: data.comment,\n    }),\n  });\n};\nexport const getAllReplyCommentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/comment/child/${data.pcid}?page=${data.page}&limit=${data.limit}`\n        : `${postUrlUser}/comment/child/${data.pcid}?page=${data.page}&limit=${data.limit}`,\n  });\n};\nexport const postReplyCommentFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url:\n        data.viewAs !== asUser\n          ? `${postUrl}/comment/child/${data.pcid}`\n          : `${postUrlUser}/comment/child/${data.pcid}`,\n      method: `${method}`,\n      body: data.replyComment,\n    }),\n  });\n};\nexport const likeCommentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      data.viewAs !== asUser\n        ? `${postUrl}/${data.id}/comment/child/like/${data.cid}`\n        : `${postUrlUser}/${data.id}/comment/child/like/${data.cid}`,\n  });\n};\n\n//new\nexport const rePostKnowsFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${postUrlUser}/${data.id}/all/user/re/posts?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const postReportFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/user/${data.id}/user-post/${data.pid}/report`,\n      method: `${method}`,\n      body: data.reportPost,\n    }),\n  });\n};\n\nexport const postInstituteReportFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/ins/${data.id}/ins-post/${data.pid}/report`,\n      method: `${method}`,\n      body: data.reportPost,\n    }),\n  });\n};\n\nexport const pollAnswerFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/poll/question/vote/${data.pid}`,\n      method: `${method}`,\n      body: data.vote,\n    }),\n  });\n};\n\nexport const oneQuestionFunction = (builder) => {\n  return builder.query({\n    query: (pid) => `${subUrlQuestion}/one/${pid}/question`,\n  });\n};\n\nexport const questionLikeFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/like/${data.aid}`,\n  });\n};\n\nexport const questionDislikeFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/dislike/${data.aid}`,\n  });\n};\n\nexport const questionSaveFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/save/${data.pid}`,\n  });\n};\n\nexport const questionAnswerSaveFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/answer/save/${data.aid}`,\n  });\n};\n\nexport const questionHelpFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/help/to/other/${data.pid}`,\n  });\n};\n\nexport const questionAddAnswerFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlQuestion}/answer/new/${data.pid}?post_type=${data.postType}`,\n      method: `${method}`,\n      body: data.answer,\n    }),\n  });\n};\n\nexport const questionAnswerDeleteFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlQuestion}/${data.pid}/deleted/${data.aid}/answer`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const questionAllReplyAnswerFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlQuestion}/answer/reply/${data.paid}?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const questionAddReplyAnswerFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlQuestion}/answer/reply/new/${data.paid}`,\n      method: `${method}`,\n      body: data.replyAnswer,\n    }),\n  });\n};\n\nexport const questionAnswerRepostFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlQuestion}/answer/new/repost/${data.pid}?post_type=${data.postType}`,\n      method: `${method}`,\n      body: data.rePostAnswer,\n    }),\n  });\n};\n\nexport const questionRepostLikeFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlQuestion}/repost/${data.rpid}/like/${data.aid}`,\n  });\n};\n\nexport const profilePostQuestionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlPost}/user/${data.id}/know/query?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const commentOnOffFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/extra/${data.pid}/comment/feature`,\n      method: method,\n      body: data.commentFeature,\n    }),\n  });\n};\n\nexport const blockUserByUserFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/user/report/block/user?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\nexport const unblockUserByUserFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/user/unblock/user?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\nexport const blockInstituteByUserFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/user/report/block/institute?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\nexport const unblockInstituteByUserFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/user/unblock/institute?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\nexport const blockInstituteByInstituteFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/ins/report/block/institute?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\nexport const unblockInstituteByInstituteFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/ins/unblock/institute?blockId=${data.blockId}`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const reportAccountUserToUserFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/extra/${data.rid}/report/enduser/account/${data.id}?accountStatus=${data.accountStatus}`,\n      method: `${method}`,\n    }),\n  });\n};\n\nexport const postSuggestionListUserFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlPost}/prod/access/all/recommendation/ins/user/by/${data.id}?expand_search=${data.expand_search}`,\n  });\n};\n\nexport const getHashtagListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlPost}/hashtag/all/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n  });\n};\n\nexport const getOneHashtagDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `${subUrlPost}/hashtag/${data.hid}/query`,\n  });\n};\n\nexport const getOneHashtagPostListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `${subUrlPost}/hashtag/${data.hid}/query/post?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const followOneHashtagFunction = (builder, method) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `${subUrlPost}/hashtag/follow?hid=${data.hid}`,\n      method: `${method}`,\n    }),\n  });\n};\n","import { postApi } from \"./postApi\";\n\nimport { deleteMethod, patchMethod, postMethod } from \"../BaseUrl\";\nimport {\n  dashboardPostFunction,\n  profilePostFunction,\n  profileSavedPostFunction,\n  profileTagPostFunction,\n  addTagPeopleFunction,\n  createPostTextFunction,\n  createPostImageFunction,\n  createPostVideoFunction,\n  createPostPollQuestionFunction,\n  createPostQuestionFunction,\n  updatePostFunction,\n  deletePostFunction,\n  deletePostQuestionFunction,\n  reactionPostFunction,\n  likePostFunction,\n  savePostFunction,\n  getAllCommentFunction,\n  getAllAnswerFunction,\n  postCommentFunction,\n  getAllReplyCommentFunction,\n  postReplyCommentFunction,\n  likeCommentFunction,\n  rePostKnowsFunction,\n  postReportFunction,\n  pollAnswerFunction,\n  oneQuestionFunction,\n  questionLikeFunction,\n  questionDislikeFunction,\n  questionSaveFunction,\n  questionAnswerSaveFunction,\n  questionAddAnswerFunction,\n  questionAnswerDeleteFunction,\n  questionAllReplyAnswerFunction,\n  questionAddReplyAnswerFunction,\n  questionAnswerRepostFunction,\n  questionRepostLikeFunction,\n  profilePostQuestionFunction,\n  postInstituteReportFunction,\n  questionHelpFunction,\n  commentOnOffFunction,\n  blockUserByUserFunction,\n  unblockUserByUserFunction,\n  blockInstituteByUserFunction,\n  unblockInstituteByUserFunction,\n  blockInstituteByInstituteFunction,\n  unblockInstituteByInstituteFunction,\n  reportAccountUserToUserFunction,\n  postSuggestionListUserFunction,\n  getHashtagListFunction,\n  getOneHashtagDetailFunction,\n  getOneHashtagPostListFunction,\n  followOneHashtagFunction,\n} from \"./QueryMutationFunctionPost\";\nconst postApiDynamic = postApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getDashboardPost: dashboardPostFunction(builder),\n    getProfilePost: profilePostFunction(builder),\n    getProfileSavedPost: profileSavedPostFunction(builder),\n    getProfileTagPost: profileTagPostFunction(builder),\n    addTagPeople: addTagPeopleFunction(builder),\n    createPostWithText: createPostTextFunction(builder, postMethod),\n    createPostWithImage: createPostImageFunction(builder, postMethod),\n    createPostWithVideo: createPostVideoFunction(builder, postMethod),\n    createPostWithPollQuestion: createPostPollQuestionFunction(\n      builder,\n      postMethod\n    ),\n    createPostWithQuestion: createPostQuestionFunction(builder, postMethod),\n    createPostUpdate: updatePostFunction(builder, patchMethod),\n    createPostDelete: deletePostFunction(builder, deleteMethod),\n    createPostDeleteQuestion: deletePostQuestionFunction(builder, deleteMethod),\n    reactionPeoplePost: reactionPostFunction(builder),\n    likePost: likePostFunction(builder),\n    savePost: savePostFunction(builder),\n    allCommentPost: getAllCommentFunction(builder),\n    allAnswerPostQuestion: getAllAnswerFunction(builder),\n    oneCommentPost: postCommentFunction(builder, postMethod),\n    allReplyComment: getAllReplyCommentFunction(builder),\n    oneReplyComment: postReplyCommentFunction(builder, postMethod),\n    likeComment: likeCommentFunction(builder),\n    rePostKnows: rePostKnowsFunction(builder),\n    postReport: postReportFunction(builder, postMethod),\n    postInstituteReport: postInstituteReportFunction(builder, postMethod),\n    pollAnswer: pollAnswerFunction(builder, patchMethod),\n    oneQuestion: oneQuestionFunction(builder),\n    questionLike: questionLikeFunction(builder),\n    questionDislike: questionDislikeFunction(builder),\n    questionSave: questionSaveFunction(builder),\n    questionAnswerSave: questionAnswerSaveFunction(builder),\n    questionHelp: questionHelpFunction(builder),\n    questionAddAnswer: questionAddAnswerFunction(builder, postMethod),\n    questionAnswerDelete: questionAnswerDeleteFunction(builder, deleteMethod),\n    questionAllReplyAnswer: questionAllReplyAnswerFunction(builder),\n    questionAddReplyAnswer: questionAddReplyAnswerFunction(builder, postMethod),\n    questionAnswerRepost: questionAnswerRepostFunction(builder, postMethod),\n    questionRepostLike: questionRepostLikeFunction(builder),\n    profilePostQuestion: profilePostQuestionFunction(builder),\n    commentOnOff: commentOnOffFunction(builder, patchMethod),\n\n    blockUserByUser: blockUserByUserFunction(builder, patchMethod),\n    unblockUserByUser: unblockUserByUserFunction(builder, patchMethod),\n    blockInstituteByUser: blockInstituteByUserFunction(builder, patchMethod),\n    unblockInstituteByUser: unblockInstituteByUserFunction(\n      builder,\n      patchMethod\n    ),\n    blockInstituteByInstitute: blockInstituteByInstituteFunction(\n      builder,\n      patchMethod\n    ),\n    unblockInstituteByInstitute: unblockInstituteByInstituteFunction(\n      builder,\n      patchMethod\n    ),\n    reportAccountUserToUser: reportAccountUserToUserFunction(\n      builder,\n      postMethod\n    ),\n    postSuggestionListUser: postSuggestionListUserFunction(builder),\n    getHashtagList: getHashtagListFunction(builder),\n    getOneHashtagDetail: getOneHashtagDetailFunction(builder),\n    getOneHashtagPostList: getOneHashtagPostListFunction(builder),\n    followOneHashtag: followOneHashtagFunction(builder, patchMethod),\n  }),\n});\n\nexport const {\n  useGetDashboardPostQuery,\n  useGetProfilePostQuery,\n  useGetProfileSavedPostQuery,\n  useGetProfileTagPostQuery,\n  useAddTagPeopleQuery,\n  useCreatePostWithTextMutation,\n  useCreatePostWithImageMutation,\n  useCreatePostWithVideoMutation,\n  useCreatePostWithPollQuestionMutation,\n  useCreatePostWithQuestionMutation,\n  useCreatePostUpdateMutation,\n  useCreatePostDeleteMutation,\n  useCreatePostDeleteQuestionMutation,\n  useReactionPeoplePostQuery,\n  useLikePostQuery,\n  useSavePostQuery,\n  useAllCommentPostQuery,\n  useAllAnswerPostQuestionQuery,\n  useOneCommentPostMutation,\n  useAllReplyCommentQuery,\n  useOneReplyCommentMutation,\n  useLikeCommentQuery,\n  useRePostKnowsQuery,\n  usePostReportMutation,\n  usePostInstituteReportMutation,\n  usePollAnswerMutation,\n  useOneQuestionQuery,\n  useQuestionLikeQuery,\n  useQuestionDislikeQuery,\n  useQuestionSaveQuery,\n  useQuestionAnswerSaveQuery,\n  useQuestionHelpQuery,\n  useQuestionAddAnswerMutation,\n  useQuestionAnswerDeleteMutation,\n  useQuestionAllReplyAnswerQuery,\n  useQuestionAddReplyAnswerMutation,\n  useQuestionAnswerRepostMutation,\n  useQuestionRepostLikeQuery,\n  useProfilePostQuestionQuery,\n  useCommentOnOffMutation,\n\n  useBlockUserByUserMutation,\n  useUnblockUserByUserMutation,\n  useBlockInstituteByUserMutation,\n  useUnblockInstituteByUserMutation,\n  useBlockInstituteByInstituteMutation,\n  useUnblockInstituteByInstituteMutation,\n  useReportAccountUserToUserMutation,\n  usePostSuggestionListUserQuery,\n  useGetHashtagListQuery,\n  useGetOneHashtagDetailQuery,\n  useGetOneHashtagPostListQuery,\n  useFollowOneHashtagMutation,\n} = postApiDynamic;\n","import {\n  useGetDashboardPostQuery,\n  useGetProfilePostQuery,\n  useGetProfileSavedPostQuery,\n  useGetProfileTagPostQuery,\n  useAddTagPeopleQuery,\n  useCreatePostWithTextMutation,\n  useCreatePostWithImageMutation,\n  useCreatePostWithVideoMutation,\n  useCreatePostWithPollQuestionMutation,\n  useCreatePostWithQuestionMutation,\n  useCreatePostUpdateMutation,\n  useCreatePostDeleteMutation,\n  useCreatePostDeleteQuestionMutation,\n  useReactionPeoplePostQuery,\n  useLikePostQuery,\n  useSavePostQuery,\n  useAllCommentPostQuery,\n  useAllAnswerPostQuestionQuery,\n  useOneCommentPostMutation,\n  useAllReplyCommentQuery,\n  useOneReplyCommentMutation,\n  useLikeCommentQuery,\n  useRePostKnowsQuery,\n  usePostReportMutation,\n  usePollAnswerMutation,\n  useOneQuestionQuery,\n  useQuestionLikeQuery,\n  useQuestionDislikeQuery,\n  useQuestionSaveQuery,\n  useQuestionAnswerSaveQuery,\n  useQuestionAddAnswerMutation,\n  useQuestionAnswerDeleteMutation,\n  useQuestionAllReplyAnswerQuery,\n  useQuestionAddReplyAnswerMutation,\n  useQuestionAnswerRepostMutation,\n  useQuestionRepostLikeQuery,\n  useProfilePostQuestionQuery,\n  usePostInstituteReportMutation,\n  useQuestionHelpQuery,\n  useCommentOnOffMutation,\n  useBlockUserByUserMutation,\n  useUnblockUserByUserMutation,\n  useBlockInstituteByUserMutation,\n  useUnblockInstituteByUserMutation,\n  useBlockInstituteByInstituteMutation,\n  useUnblockInstituteByInstituteMutation,\n  useReportAccountUserToUserMutation,\n  usePostSuggestionListUserQuery,\n  useGetHashtagListQuery,\n  useGetOneHashtagDetailQuery,\n  useGetOneHashtagPostListQuery,\n  useFollowOneHashtagMutation,\n} from \"../../../services/Post/postApiDynamic\";\n\nexport const useDashAllPost = (id) => {\n  const { data, refetch } = useGetDashboardPostQuery(id.data, {\n    skip: id.skip,\n  });\n  return { allDashPost: data, allDashPostRefetch: refetch };\n};\nexport const useProfileAllPost = (id) => {\n  const { data, refetch } = useGetProfilePostQuery(id.data, { skip: id.skip });\n  return { allProfilePost: data, allProfilePostRefetch: refetch };\n};\n\nexport const useProfileAllSavedPost = (id) => {\n  const { data, refetch } = useGetProfileSavedPostQuery(id.data, {\n    skip: id.skip,\n  });\n  return { allProfileSavedPost: data, allProfileSavedPostRefetch: refetch };\n};\n\nexport const useProfileAllTagPost = (id) => {\n  const { data, refetch } = useGetProfileTagPostQuery(id.data, {\n    skip: id.skip,\n  });\n  return { allProfileTagPost: data, allProfileTagPostRefetch: refetch };\n};\n\nexport const useAddTagPeoplePost = (id) => {\n  const { data, refetch } = useAddTagPeopleQuery(id.data, {\n    skip: id.skip,\n  });\n  return { addSearchTagPeople: data, addSearchTagPeopleRefetch: refetch };\n};\n\nexport const usePostWithText = () => {\n  const [postWithText] = useCreatePostWithTextMutation();\n  return [postWithText];\n};\n\nexport const usePostWithImage = () => {\n  const [postWithImage] = useCreatePostWithImageMutation();\n  return [postWithImage];\n};\nexport const usePostWithVideo = () => {\n  const [postWithVideo] = useCreatePostWithVideoMutation();\n  return [postWithVideo];\n};\n\nexport const usePostWithPollQuestion = () => {\n  const [postWithPollQuestion] = useCreatePostWithPollQuestionMutation();\n  return [postWithPollQuestion];\n};\n\nexport const usePostWithQuestion = () => {\n  const [postWithQuestion] = useCreatePostWithQuestionMutation();\n  return [postWithQuestion];\n};\n\nexport const usePostVisibilityUpdate = () => {\n  const [postVisibilityUpdate] = useCreatePostUpdateMutation();\n  return [postVisibilityUpdate];\n};\n\nexport const usePostDelete = () => {\n  const [postDelete] = useCreatePostDeleteMutation();\n  return [postDelete];\n};\n\nexport const usePostDeleteQuestion = () => {\n  const [postDeleteQuestion] = useCreatePostDeleteQuestionMutation();\n  return [postDeleteQuestion];\n};\n\nexport const useAllPostReaction = (val) => {\n  const { data, refetch } = useReactionPeoplePostQuery(val);\n  return { allPostReactionPeople: data, allPostReactionPeopleRefetch: refetch };\n};\n\nexport const usePostLike = (value) => {\n  const { data, refetch } = useLikePostQuery(value.data, { skip: value.skip });\n  return { postLike: data, postLikeRefetch: refetch };\n};\n\nexport const usePostSave = (value) => {\n  const { data, refetch } = useSavePostQuery(value.data, { skip: value.skip });\n  return { postSave: data, postSaveRefetch: refetch };\n};\n\nexport const useOnePostAllComment = (val) => {\n  const { data, refetch } = useAllCommentPostQuery(val.data, {\n    skip: val.skip,\n  });\n  return { allPostComment: data, allPostCommentRefetch: refetch };\n};\n\nexport const useOnePostAllAnswerQuestion = (val) => {\n  const { data, refetch } = useAllAnswerPostQuestionQuery(val.data, {\n    skip: val.skip,\n  });\n  return { allPostAnswerQuestion: data, allPostAnswerQuestionRefetch: refetch };\n};\n\nexport const usePostComment = () => {\n  const [postComment] = useOneCommentPostMutation();\n  return [postComment];\n};\n\nexport const useOneCommentAllReply = (val) => {\n  const { data, refetch } = useAllReplyCommentQuery(val.data, {\n    skip: val.skip,\n  });\n  return { allReplyComment: data, allReplyCommentRefetch: refetch };\n};\n\nexport const useCommentReply = () => {\n  const [commentReply] = useOneReplyCommentMutation();\n  return [commentReply];\n};\n\nexport const useCommentLike = (val) => {\n  const { data, refetch } = useLikeCommentQuery(val.ids, { skip: val.skip });\n  return { commentLike: data, commentLikeRefetch: refetch };\n};\n\n//new\nexport const useRepostKnows = (data) => {\n  const { data: repostKnows, refetch: repostKnowsReftech } =\n    useRePostKnowsQuery(data);\n  return { repostKnows, repostKnowsReftech };\n};\n\nexport const usePostReport = () => {\n  const [postReport] = usePostReportMutation();\n  return [postReport];\n};\n\nexport const usePostInstituteReport = () => {\n  const [postInstituteReport] = usePostInstituteReportMutation();\n  return [postInstituteReport];\n};\n\nexport const usePollAnswer = () => {\n  const [pollAnswer] = usePollAnswerMutation();\n  return [pollAnswer];\n};\n\nexport const useOneQuestion = (id) => {\n  const { data: oneQuestion, refetch: oneQuestionReftech } =\n    useOneQuestionQuery(id.pid, { skip: id.skip });\n  return { oneQuestion, oneQuestionReftech };\n};\n\nexport const useQuestionLike = (id) => {\n  const { data: questionLike, refetch: questionLikeReftech } =\n    useQuestionLikeQuery(id.data, { skip: id.skip });\n  return { questionLike, questionLikeReftech };\n};\n\nexport const useQuestionDislike = (data) => {\n  const { data: questionDislike, refetch: questionDislikeReftech } =\n    useQuestionDislikeQuery(data);\n  return { questionDislike, questionDislikeReftech };\n};\nexport const useQuestionSave = (id) => {\n  const { data: questionSave, refetch: questionSaveReftech } =\n    useQuestionSaveQuery(id.data, { skip: id.skip });\n  return { questionSave, questionSaveReftech };\n};\n\nexport const useQuestionAnswerSave = (id) => {\n  const { data: questionAnswerSave, refetch: questionAnswerSaveReftech } =\n    useQuestionAnswerSaveQuery(id.data, { skip: id.skip });\n  return { questionAnswerSave, questionAnswerSaveReftech };\n};\n\nexport const useQuestionHelp = (id) => {\n  const { data: questionHelp, refetch: questionHelpReftech } =\n    useQuestionHelpQuery(id.data, { skip: id.skip });\n  return { questionHelp, questionHelpReftech };\n};\n\nexport const useQuestionAddAnswer = () => {\n  const [questionAddAnswer] = useQuestionAddAnswerMutation();\n  return [questionAddAnswer];\n};\n\nexport const useQuestionAnswerDelete = () => {\n  const [questionAnswerDelete] = useQuestionAnswerDeleteMutation();\n  return [questionAnswerDelete];\n};\n\nexport const useQuestionAllReplyAnswer = (data) => {\n  const {\n    data: questionAllReplyAnswer,\n    refetch: questionAllReplyAnswerRefetch,\n  } = useQuestionAllReplyAnswerQuery(data);\n  return { questionAllReplyAnswer, questionAllReplyAnswerRefetch };\n};\n\nexport const useQuestionAddReplyAnswer = () => {\n  const [questionAddReplyAnswer] = useQuestionAddReplyAnswerMutation();\n  return [questionAddReplyAnswer];\n};\n\nexport const useQuestionAnswerRepost = () => {\n  const [questionAnswerRepost] = useQuestionAnswerRepostMutation();\n  return [questionAnswerRepost];\n};\n\nexport const useQuestionRepostLike = (id) => {\n  const { data: questionRepostLike, refetch: questionRepostLikeRefetch } =\n    useQuestionRepostLikeQuery(id.data, { skip: id.skip1 });\n  return { questionRepostLike, questionRepostLikeRefetch };\n};\n\nexport const useProfilePostQuestion = (data) => {\n  const { data: profilePostQuestion, refetch: profilePostQuestionRefetch } =\n    useProfilePostQuestionQuery(data);\n  return { profilePostQuestion, profilePostQuestionRefetch };\n};\n\nexport const useCommentOnOff = () => {\n  const [commentOnOff] = useCommentOnOffMutation();\n  return [commentOnOff];\n};\n\nexport const useBlockUserByUser = () => {\n  const [blockUserByUser] = useBlockUserByUserMutation();\n  return [blockUserByUser];\n};\nexport const useUnblockUserByUser = () => {\n  const [unblockUserByUser] = useUnblockUserByUserMutation();\n  return [unblockUserByUser];\n};\nexport const useBlockInstituteByUser = () => {\n  const [blockInstituteByUser] = useBlockInstituteByUserMutation();\n  return [blockInstituteByUser];\n};\nexport const useUnblockInstituteByUser = () => {\n  const [unblockInstituteByUser] = useUnblockInstituteByUserMutation();\n  return [unblockInstituteByUser];\n};\nexport const useBlockInstituteByInstitute = () => {\n  const [blockInstituteByInstitute] = useBlockInstituteByInstituteMutation();\n  return [blockInstituteByInstitute];\n};\nexport const useUnblockInstituteByInstitute = () => {\n  const [unblockInstituteByInstitute] =\n    useUnblockInstituteByInstituteMutation();\n  return [unblockInstituteByInstitute];\n};\n\nexport const useReportAccountUserToUser = () => {\n  const [reportAccountUserToUser] = useReportAccountUserToUserMutation();\n  return [reportAccountUserToUser];\n};\n\nexport const usePostSuggestionListUser = (args) => {\n  const {\n    data: postSuggestionListUser,\n    refetch: postSuggestionListUserRefetch,\n  } = usePostSuggestionListUserQuery(args.data, { skip: args.skip });\n  return { postSuggestionListUser, postSuggestionListUserRefetch };\n};\n\nexport const useGetHashtagList = (args) => {\n  const { data: getHashtagList, refetch: getHashtagListRefetch } =\n    useGetHashtagListQuery(args.data, { skip: args.skip });\n  return { getHashtagList, getHashtagListRefetch };\n};\n\nexport const useGetOneHashtagDetail = (args) => {\n  const { data: getOneHashtagDetail, refetch: getOneHashtagDetailRefetch } =\n    useGetOneHashtagDetailQuery(args.data, { skip: args.skip });\n  return { getOneHashtagDetail, getOneHashtagDetailRefetch };\n};\n\nexport const useGetOneHashtagPostList = (args) => {\n  const { data: getOneHashtagPostList, refetch: getOneHashtagPostListRefetch } =\n    useGetOneHashtagPostListQuery(args.data, { skip: args.skip });\n  return { getOneHashtagPostList, getOneHashtagPostListRefetch };\n};\n\nexport const useFollowOneHashtag = () => {\n  const [followOneHashtag] = useFollowOneHashtagMutation();\n  return [followOneHashtag];\n};\n"],"names":["postUrl","postUrlUser","subUrlPost","subUrlQuestion","asUser","dashboardPostFunction","builder","query","data","viewAs","concat","id","page","limit","profilePostFunction","profileSavedPostFunction","profileTagPostFunction","addTagPeopleFunction","search","createPostTextFunction","method","mutation","url","body","post","createPostImageFunction","createPostVideoFunction","createPostPollQuestionFunction","createPostQuestionFunction","updatePostFunction","pid","postUpdate","deletePostFunction","deletePostQuestionFunction","reactionPostFunction","likePostFunction","savePostFunction","getAllAnswerFunction","getAllCommentFunction","postCommentFunction","comment","getAllReplyCommentFunction","pcid","postReplyCommentFunction","replyComment","likeCommentFunction","cid","rePostKnowsFunction","postReportFunction","reportPost","postInstituteReportFunction","pollAnswerFunction","vote","oneQuestionFunction","questionLikeFunction","aid","questionDislikeFunction","questionSaveFunction","questionAnswerSaveFunction","questionHelpFunction","questionAddAnswerFunction","postType","answer","questionAnswerDeleteFunction","questionAllReplyAnswerFunction","paid","questionAddReplyAnswerFunction","replyAnswer","questionAnswerRepostFunction","rePostAnswer","questionRepostLikeFunction","rpid","profilePostQuestionFunction","commentOnOffFunction","commentFeature","blockUserByUserFunction","blockId","unblockUserByUserFunction","blockInstituteByUserFunction","unblockInstituteByUserFunction","blockInstituteByInstituteFunction","unblockInstituteByInstituteFunction","reportAccountUserToUserFunction","rid","accountStatus","postSuggestionListUserFunction","expand_search","getHashtagListFunction","getOneHashtagDetailFunction","hid","getOneHashtagPostListFunction","followOneHashtagFunction","postApiDynamic","postApi","injectEndpoints","endpoints","getDashboardPost","getProfilePost","getProfileSavedPost","getProfileTagPost","addTagPeople","createPostWithText","postMethod","createPostWithImage","createPostWithVideo","createPostWithPollQuestion","createPostWithQuestion","createPostUpdate","patchMethod","createPostDelete","deleteMethod","createPostDeleteQuestion","reactionPeoplePost","likePost","savePost","allCommentPost","allAnswerPostQuestion","oneCommentPost","allReplyComment","oneReplyComment","likeComment","rePostKnows","postReport","postInstituteReport","pollAnswer","oneQuestion","questionLike","questionDislike","questionSave","questionAnswerSave","questionHelp","questionAddAnswer","questionAnswerDelete","questionAllReplyAnswer","questionAddReplyAnswer","questionAnswerRepost","questionRepostLike","profilePostQuestion","commentOnOff","blockUserByUser","unblockUserByUser","blockInstituteByUser","unblockInstituteByUser","blockInstituteByInstitute","unblockInstituteByInstitute","reportAccountUserToUser","postSuggestionListUser","getHashtagList","getOneHashtagDetail","getOneHashtagPostList","followOneHashtag","useGetDashboardPostQuery","useGetProfilePostQuery","useGetProfileSavedPostQuery","useGetProfileTagPostQuery","useAddTagPeopleQuery","useCreatePostWithTextMutation","useCreatePostWithImageMutation","useCreatePostWithVideoMutation","useCreatePostWithPollQuestionMutation","useCreatePostWithQuestionMutation","useCreatePostUpdateMutation","useCreatePostDeleteMutation","useCreatePostDeleteQuestionMutation","useLikePostQuery","useReactionPeoplePostQuery","useSavePostQuery","useAllCommentPostQuery","useAllAnswerPostQuestionQuery","useOneCommentPostMutation","useAllReplyCommentQuery","useOneReplyCommentMutation","useLikeCommentQuery","usePostReportMutation","useRePostKnowsQuery","usePostInstituteReportMutation","usePollAnswerMutation","useOneQuestionQuery","useQuestionLikeQuery","useQuestionSaveQuery","useQuestionDislikeQuery","useQuestionAnswerSaveQuery","useQuestionHelpQuery","useQuestionAddAnswerMutation","useQuestionAnswerRepostMutation","useQuestionAnswerDeleteMutation","useQuestionAllReplyAnswerQuery","useQuestionAddReplyAnswerMutation","useQuestionRepostLikeQuery","useCommentOnOffMutation","useProfilePostQuestionQuery","useBlockUserByUserMutation","useUnblockUserByUserMutation","useBlockInstituteByUserMutation","useUnblockInstituteByUserMutation","useBlockInstituteByInstituteMutation","useUnblockInstituteByInstituteMutation","useReportAccountUserToUserMutation","usePostSuggestionListUserQuery","useGetHashtagListQuery","useGetOneHashtagDetailQuery","useGetOneHashtagPostListQuery","useFollowOneHashtagMutation","useDashAllPost","_useGetDashboardPostQ","skip","allDashPost","allDashPostRefetch","refetch","useProfileAllPost","_useGetProfilePostQue","allProfilePost","allProfilePostRefetch","useProfileAllSavedPost","_useGetProfileSavedPo","allProfileSavedPost","allProfileSavedPostRefetch","useProfileAllTagPost","_useGetProfileTagPost","allProfileTagPost","allProfileTagPostRefetch","useAddTagPeoplePost","_useAddTagPeopleQuery","addSearchTagPeople","addSearchTagPeopleRefetch","usePostWithText","_useCreatePostWithTex","_slicedToArray","usePostWithImage","_useCreatePostWithIma","usePostWithVideo","_useCreatePostWithVid","usePostWithPollQuestion","_useCreatePostWithPol","usePostWithQuestion","_useCreatePostWithQue","usePostVisibilityUpdate","_useCreatePostUpdateM","usePostDelete","_useCreatePostDeleteM","usePostDeleteQuestion","_useCreatePostDeleteQ","usePostLike","value","_useLikePostQuery","postLike","postLikeRefetch","usePostSave","_useSavePostQuery","postSave","postSaveRefetch","useOnePostAllComment","val","_useAllCommentPostQue","allPostComment","allPostCommentRefetch","useOnePostAllAnswerQuestion","_useAllAnswerPostQues","allPostAnswerQuestion","allPostAnswerQuestionRefetch","usePostComment","_useOneCommentPostMut","useOneCommentAllReply","_useAllReplyCommentQu","allReplyCommentRefetch","useCommentReply","_useOneReplyCommentMu","useCommentLike","_useLikeCommentQuery","ids","commentLike","commentLikeRefetch","usePostReport","_usePostReportMutatio","usePostInstituteReport","_usePostInstituteRepo","usePollAnswer","_usePollAnswerMutatio","useOneQuestion","_useOneQuestionQuery","oneQuestionReftech","useQuestionLike","_useQuestionLikeQuery","questionLikeReftech","useQuestionSave","_useQuestionSaveQuery","questionSaveReftech","useQuestionAnswerSave","_useQuestionAnswerSav","questionAnswerSaveReftech","useQuestionHelp","_useQuestionHelpQuery","questionHelpReftech","useQuestionAddAnswer","_useQuestionAddAnswer","useQuestionAnswerRepost","_useQuestionAnswerRep","useQuestionRepostLike","_useQuestionRepostLik","skip1","questionRepostLikeRefetch","useCommentOnOff","_useCommentOnOffMutat","useBlockUserByUser","_useBlockUserByUserMu","useUnblockUserByUser","_useUnblockUserByUser","useBlockInstituteByUser","_useBlockInstituteByU","useUnblockInstituteByUser","_useUnblockInstituteB","useBlockInstituteByInstitute","_useBlockInstituteByI","useUnblockInstituteByInstitute","_useUnblockInstituteB3","useReportAccountUserToUser","_useReportAccountUser","usePostSuggestionListUser","args","_usePostSuggestionLis","postSuggestionListUserRefetch","useGetHashtagList","_useGetHashtagListQue","getHashtagListRefetch","useGetOneHashtagDetail","_useGetOneHashtagDeta","getOneHashtagDetailRefetch","useGetOneHashtagPostList","_useGetOneHashtagPost","getOneHashtagPostListRefetch","useFollowOneHashtag","_useFollowOneHashtagM"],"sourceRoot":""}