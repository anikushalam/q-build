{"version":3,"file":"static/js/70207.6d42d2c4.chunk.js","mappings":"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","sources":["optimized/InstituteMember/InstituteDepartment/FormSetting/FormSection/EditDepartmentFormSection.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/AddField/AddDepartmentField.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/AddField/EditAddDepartmentField.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/AddField/DepartmentStudentFormSettingCardMenu.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/DepartmentStudentFormSettingCard.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/FormSection/AddDepartmentFormSection.jsx","optimized/InstituteMember/InstituteDepartment/FormSetting/DepartmentStudentFormSetting.jsx","optimized/InstituteMember/InstituteDepartment/InstituteDepartment.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../../Validation/functions/checkingRequiredField\";\nimport Modal from \"../../../../Ui/Modal/Modal\";\nimport UserMemberContentWrapper from \"../../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../../Ui/Border/BorderBottom\";\nimport style from \"../../../../UserStaffMember/FinanceManager/Income/Income.module.css\";\nimport { assestsUserFinanceUrl } from \"../../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useDepartmentStudentUpdateSectionChecklist } from \"../../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\nimport QvipleLoader from \"../../../../Loader/QvipleLoader\";\nimport CreateButton from \"../../../../Ui/Button/CreateButton\";\nimport FormInput from \"../../../../Ui/Input/FormInput\";\nconst EditDepartmentFormSection = ({\n  onClose,\n  formId,\n  onRefetch,\n  sectionId,\n  data,\n}) => {\n  const { t } = useTranslation();\n  const [errorField, setErrorField] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const [state, setState] = useState({\n    section_name: \"\",\n    section_key: \"\",\n    section_visibilty: true,\n  });\n\n  useEffect(() => {\n    if (data) {\n      setState({\n        section_name: data?.section_name ?? \"\",\n        section_key: data?.section_key ?? \"\",\n        section_visibilty: data?.section_visibilty ?? true,\n      });\n    }\n  }, [data]);\n\n  const [departmentStudentUpdateSectionChecklist] =\n    useDepartmentStudentUpdateSectionChecklist();\n  const onChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onAdd = () => {\n    let validation = requiredField(state, []);\n    if (existingRequiredField(validation) && formId && sectionId) {\n      setDisabled((pre) => !pre);\n      departmentStudentUpdateSectionChecklist({\n        formId: formId,\n        bodyParameter: {\n          section_name: state.section_name,\n          section_key: getUnderScoreFormat(state.section_name),\n          section_visibilty: true,\n          fsid: sectionId,\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n          onClose();\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div className={style.modal_container}>\n        <UserMemberContentWrapper>\n          <div className={style.modal_container_outer_header}>\n            <div className={style.modal_container_header}>\n              <h6>{t(\"update_add_section\")}</h6>\n            </div>\n            <img\n              src={`${assestsUserFinanceUrl}/close.svg`}\n              alt=\"close icon\"\n              onClick={onClose}\n            />\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper\n          customStyle={{\n            paddingTop: \"0\",\n          }}\n        >\n          <FormInput\n            label={t(\"section_name\")}\n            placeholder={t(\"section_name_placeholder\")}\n            name={\"section_name\"}\n            value={state.section_name}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"section_name\"]}\n          />\n\n          <CreateButton label=\"update\" onAction={onAdd} />\n        </UserMemberContentWrapper>\n        {disabled && <QvipleLoader />}\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditDepartmentFormSection;\n\nconst getUnderScoreFormat = (val) => {\n  let st = val?.replaceAll(\" \", \"_\");\n  return st?.toLowerCase();\n};\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../../Validation/functions/checkingRequiredField\";\nimport Modal from \"../../../../Ui/Modal/Modal\";\nimport UserMemberContentWrapper from \"../../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../../Ui/Border/BorderBottom\";\nimport style from \"../../../../UserStaffMember/FinanceManager/Income/Income.module.css\";\nimport { assestsUserFinanceUrl } from \"../../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useDepartmentStudentSectionAddChecklist } from \"../../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\nimport QvipleLoader from \"../../../../Loader/QvipleLoader\";\nimport CreateButton from \"../../../../Ui/Button/CreateButton\";\nimport FormInput from \"../../../../Ui/Input/FormInput\";\nimport TileWrapper from \"../../../../Ui/Tab/Tile/TileWrapper\";\nimport TileCard from \"../../../../Ui/Tab/Tile/TileCard\";\nimport {\n  fTypes,\n  optionList,\n} from \"../../../../Constant/FormSetting/form_setting_constant\";\nconst AddDepartmentField = ({ onClose, formId, onRefetch, sectionId }) => {\n  const { t } = useTranslation();\n  const [errorField, setErrorField] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const [state, setState] = useState({\n    form_checklist_placeholder: \"\",\n    form_checklist_lable: \"\",\n    form_checklist_typo: \"\",\n    form_checklist_typo_option_pl: [],\n  });\n\n  const [departmentStudentSectionAddChecklist] =\n    useDepartmentStudentSectionAddChecklist();\n  const onChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onTile = (value) => {\n    if (optionList?.includes(value)) {\n      setState((prev) => ({\n        ...prev,\n        form_checklist_typo: value,\n        form_checklist_typo_option_pl: [{ value: \"\" }, { value: \"\" }],\n      }));\n    } else {\n      setState((prev) => ({\n        ...prev,\n        form_checklist_typo: value,\n        form_checklist_typo_option_pl: [],\n      }));\n    }\n  };\n\n  const onAddOption = () => {\n    setState((prev) => ({\n      ...prev,\n      form_checklist_typo_option_pl: [\n        ...prev.form_checklist_typo_option_pl,\n        { value: \"\" },\n      ],\n    }));\n  };\n  const onRemoveOption = (ind) => {\n    let mp = [...state.form_checklist_typo_option_pl];\n    let dp = [];\n    for (let i = 0; i < mp?.length; mp++) {\n      if (i === ind) {\n      } else {\n        dp.push(mp[i]);\n      }\n    }\n    setState((prev) => ({\n      ...prev,\n      form_checklist_typo_option_pl: dp,\n    }));\n  };\n\n  const onOptionChange = (e, optIndex) => {\n    const inputarr = [...state.form_checklist_typo_option_pl];\n    inputarr[optIndex].value = e.target.value;\n    setState((prev) => ({ ...prev, form_checklist_typo_option_pl: inputarr }));\n  };\n\n  const onAdd = () => {\n    let validation = requiredField(state, [\"form_checklist_typo_option_pl\"]);\n    if (existingRequiredField(validation) && formId && sectionId) {\n      setDisabled((pre) => !pre);\n      let choose_opt = [];\n\n      for (let s of state.form_checklist_typo_option_pl) {\n        if (s?.value) {\n          choose_opt.push(s?.value);\n        }\n      }\n\n      departmentStudentSectionAddChecklist({\n        formId: formId,\n        bodyParameter: {\n          fsid: sectionId,\n          checklist: [\n            {\n              form_checklist_name: state?.form_checklist_lable ?? \"\",\n              form_checklist_key: getUnderScoreFormat(\n                state.form_checklist_lable\n              ),\n              form_checklist_visibility: true,\n              form_checklist_placeholder:\n                state?.form_checklist_placeholder ?? \"\",\n              form_checklist_lable: state?.form_checklist_lable ?? \"\",\n              form_checklist_typo: state?.form_checklist_typo ?? \"\",\n              form_checklist_typo_option_pl: choose_opt,\n            },\n          ],\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n          onClose();\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      <div\n        className={style.modal_container}\n        style={{\n          maxWidth: \"45rem\",\n        }}\n      >\n        <UserMemberContentWrapper>\n          <div className={style.modal_container_outer_header}>\n            <div className={style.modal_container_header}>\n              <h6>{t(\"add_field\")}</h6>\n            </div>\n            <img\n              src={`${assestsUserFinanceUrl}/close.svg`}\n              alt=\"close icon\"\n              onClick={onClose}\n            />\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper\n          customStyle={{\n            paddingTop: \"0\",\n          }}\n        >\n          <TileWrapper\n            label=\"field_type\"\n            customTileContainer={{\n              flexWrap: \"wrap\",\n            }}\n          >\n            {fTypes?.map((tile) => (\n              <TileCard\n                key={tile?.key}\n                tile={tile}\n                onTile={onTile}\n                activeTile={state?.form_checklist_typo}\n              />\n            ))}\n          </TileWrapper>\n          <FormInput\n            label={t(\"field_label\")}\n            placeholder={t(\"field_label_placeholder\")}\n            name={\"form_checklist_lable\"}\n            value={state.form_checklist_lable}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"form_checklist_lable\"]}\n          />\n          <FormInput\n            label={t(\"field_placeholder\")}\n            placeholder={t(\"field_placeholder_placeholder\")}\n            name={\"form_checklist_placeholder\"}\n            value={state.form_checklist_placeholder}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"form_checklist_placeholder\"]}\n          />\n\n          {optionList?.includes(state.form_checklist_typo) ? (\n            <div\n              style={{\n                padding: \"1rem\",\n              }}\n            >\n              <div className={style.modal_container_header}>\n                <h6>{t(\"choices\")}</h6>\n              </div>\n\n              {state?.form_checklist_typo_option_pl?.map((pl, id) => (\n                <FormInput\n                  label={t(\"field_label\")}\n                  placeholder={t(\"field_label_placeholder\")}\n                  name={`${pl}${id}`}\n                  value={pl?.value}\n                  type={\"text\"}\n                  onChange={(e) => onOptionChange(e, id)}\n                  key={`${pl}${id}`}\n                  customFormInputLabel={{\n                    display: \"flex\",\n                    alignItmes: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <CreateButton\n                    label={t(\"remove\")}\n                    customStyle={{\n                      margin: \"0 0 0 0\",\n                      padding: \"0.1rem 0.5rem\",\n                      width: \"fit-content\",\n                      fontSize: \"12px\",\n                      fontWeight: \"400\",\n                    }}\n                    onAction={() => onRemoveOption(id)}\n                  />\n                </FormInput>\n              ))}\n              <CreateButton\n                label=\"add_option\"\n                customStyle={{\n                  paddingBlock: \"0.2rem\",\n                  margin: \"0\",\n                  marginTop: \"0.7rem\",\n                  width: \"fit-content\",\n                }}\n                onAction={onAddOption}\n              />\n            </div>\n          ) : null}\n\n          <CreateButton label=\"add\" onAction={onAdd} />\n        </UserMemberContentWrapper>\n        {disabled && <QvipleLoader />}\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddDepartmentField;\n\nconst getUnderScoreFormat = (val) => {\n  let st = val?.replaceAll(\" \", \"_\");\n  return st?.toLowerCase();\n};\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../../Validation/functions/checkingRequiredField\";\nimport Modal from \"../../../../Ui/Modal/Modal\";\nimport UserMemberContentWrapper from \"../../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../../Ui/Border/BorderBottom\";\nimport style from \"../../../../UserStaffMember/FinanceManager/Income/Income.module.css\";\nimport { assestsUserFinanceUrl } from \"../../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useInstituteStudentUpdateSectionChecklist } from \"../../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\nimport QvipleLoader from \"../../../../Loader/QvipleLoader\";\nimport CreateButton from \"../../../../Ui/Button/CreateButton\";\nimport FormInput from \"../../../../Ui/Input/FormInput\";\nimport TileWrapper from \"../../../../Ui/Tab/Tile/TileWrapper\";\nimport TileCard from \"../../../../Ui/Tab/Tile/TileCard\";\nimport {\n  fTypes,\n  optionList,\n} from \"../../../../Constant/FormSetting/form_setting_constant\";\nconst EditAddDepartmentField = ({\n  onClose,\n  formId,\n  onRefetch,\n  sectionId,\n  data,\n}) => {\n  const { t } = useTranslation();\n  const [errorField, setErrorField] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const [state, setState] = useState({\n    form_checklist_name: \"\",\n    form_checklist_key: \"\",\n    form_checklist_visibility: true,\n    form_checklist_placeholder: \"\",\n    form_checklist_lable: \"\",\n    form_checklist_typo: \"\",\n    form_checklist_typo_option_pl: [],\n  });\n\n  const [instituteStudentUpdateSectionChecklist] =\n    useInstituteStudentUpdateSectionChecklist();\n\n  useEffect(() => {\n    if (data) {\n      let dt = [];\n\n      for (let d of data?.form_checklist_typo_option_pl) {\n        dt.push({\n          value: d,\n        });\n      }\n      setState({\n        form_checklist_name: data?.form_checklist_name ?? \"\",\n        form_checklist_key: data?.form_checklist_key ?? \"\",\n        form_checklist_visibility: data?.form_checklist_visibility ?? false,\n        form_checklist_placeholder: data?.form_checklist_placeholder ?? \"\",\n        form_checklist_lable: data?.form_checklist_lable ?? \"\",\n        form_checklist_typo: data?.form_checklist_typo ?? \"\",\n        form_checklist_typo_option_pl: dt,\n      });\n    }\n  }, [data]);\n\n  const onChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onTile = (value) => {\n    if (optionList?.includes(value)) {\n      setState((prev) => ({\n        ...prev,\n        form_checklist_typo: value,\n        form_checklist_typo_option_pl: [\n          ...prev?.form_checklist_typo_option_pl,\n          { value: \"\" },\n        ],\n      }));\n    } else {\n      setState((prev) => ({\n        ...prev,\n        form_checklist_typo: value,\n        form_checklist_typo_option_pl: [],\n      }));\n    }\n  };\n\n  const onAddOption = () => {\n    setState((prev) => ({\n      ...prev,\n      form_checklist_typo_option_pl: [\n        ...prev.form_checklist_typo_option_pl,\n        { value: \"\" },\n      ],\n    }));\n  };\n  const onRemoveOption = (ind) => {\n    let mp = [...state.form_checklist_typo_option_pl];\n    let dp = [];\n    for (let i = 0; i < mp?.length; mp++) {\n      if (i === ind) {\n      } else {\n        dp.push(mp[i]);\n      }\n    }\n    setState((prev) => ({\n      ...prev,\n      form_checklist_typo_option_pl: dp,\n    }));\n  };\n\n  const onOptionChange = (e, optIndex) => {\n    const inputarr = [...state.form_checklist_typo_option_pl];\n    inputarr[optIndex].value = e.target.value;\n    setState((prev) => ({ ...prev, form_checklist_typo_option_pl: inputarr }));\n  };\n\n  const onAdd = () => {\n    let validation = requiredField(state, [\"form_checklist_typo_option_pl\"]);\n    if (existingRequiredField(validation) && formId && sectionId) {\n      setDisabled((pre) => !pre);\n      let choose_opt = [];\n\n      for (let s of state.form_checklist_typo_option_pl) {\n        if (s?.value) {\n          choose_opt.push(s?.value);\n        }\n      }\n\n      instituteStudentUpdateSectionChecklist({\n        formId: formId,\n        bodyParameter: {\n          fsid: sectionId,\n          checklist: [\n            {\n              form_checklist_name: state?.form_checklist_lable ?? \"\",\n              form_checklist_key: getUnderScoreFormat(\n                state.form_checklist_lable\n              ),\n              form_checklist_visibility: state.form_checklist_visibility,\n              form_checklist_placeholder:\n                state?.form_checklist_placeholder ?? \"\",\n              form_checklist_lable: state?.form_checklist_lable ?? \"\",\n              form_checklist_typo: state?.form_checklist_typo ?? \"\",\n              form_checklist_typo_option_pl: choose_opt,\n            },\n          ],\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n          onClose();\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      <div\n        className={style.modal_container}\n        style={{\n          maxWidth: \"45rem\",\n        }}\n      >\n        <UserMemberContentWrapper>\n          <div className={style.modal_container_outer_header}>\n            <div className={style.modal_container_header}>\n              <h6>{t(\"update_add_field\")}</h6>\n            </div>\n            <img\n              src={`${assestsUserFinanceUrl}/close.svg`}\n              alt=\"close icon\"\n              onClick={onClose}\n            />\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper\n          customStyle={{\n            paddingTop: \"0\",\n          }}\n        >\n          <TileWrapper\n            label=\"field_type\"\n            customTileContainer={{\n              flexWrap: \"wrap\",\n            }}\n          >\n            {fTypes?.map((tile) => (\n              <TileCard\n                key={tile?.key}\n                tile={tile}\n                onTile={onTile}\n                activeTile={state?.form_checklist_typo}\n              />\n            ))}\n          </TileWrapper>\n          <FormInput\n            label={t(\"field_label\")}\n            placeholder={t(\"field_label_placeholder\")}\n            name={\"form_checklist_lable\"}\n            value={state.form_checklist_lable}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"form_checklist_lable\"]}\n          />\n          <FormInput\n            label={t(\"field_placeholder\")}\n            placeholder={t(\"field_placeholder_placeholder\")}\n            name={\"form_checklist_placeholder\"}\n            value={state.form_checklist_placeholder}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"form_checklist_placeholder\"]}\n          />\n\n          {optionList?.includes(state.form_checklist_typo) ? (\n            <div\n              style={{\n                padding: \"1rem\",\n              }}\n            >\n              <div className={style.modal_container_header}>\n                <h6>{t(\"choices\")}</h6>\n              </div>\n\n              {state?.form_checklist_typo_option_pl?.map((pl, id) => (\n                <FormInput\n                  label={t(\"field_label\")}\n                  placeholder={t(\"field_label_placeholder\")}\n                  name={`${pl}${id}`}\n                  value={pl?.value}\n                  type={\"text\"}\n                  onChange={(e) => onOptionChange(e, id)}\n                  key={`${pl}${id}`}\n                  customFormInputLabel={{\n                    display: \"flex\",\n                    alignItmes: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <CreateButton\n                    label={t(\"remove\")}\n                    customStyle={{\n                      margin: \"0 0 0 0\",\n                      padding: \"0.1rem 0.5rem\",\n                      width: \"fit-content\",\n                      fontSize: \"12px\",\n                      fontWeight: \"400\",\n                    }}\n                    onAction={() => onRemoveOption(id)}\n                  />\n                </FormInput>\n              ))}\n              <CreateButton\n                label=\"add_option\"\n                customStyle={{\n                  paddingBlock: \"0.2rem\",\n                  margin: \"0\",\n                  marginTop: \"0.7rem\",\n                  width: \"fit-content\",\n                }}\n                onAction={onAddOption}\n              />\n            </div>\n          ) : null}\n\n          <CreateButton label=\"update\" onAction={onAdd} />\n        </UserMemberContentWrapper>\n        {disabled && <QvipleLoader />}\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditAddDepartmentField;\n\nconst getUnderScoreFormat = (val) => {\n  let st = val?.replaceAll(\" \", \"_\");\n  return st?.toLowerCase();\n};\n","import { useTranslation } from \"react-i18next\";\nimport ModalMenu from \"../../../../Ui/Modal/ModalMenu\";\nimport { useState } from \"react\";\nimport EditAddDepartmentField from \"./EditAddDepartmentField\";\n\nconst DepartmentStudentFormSettingCardMenu = ({ onClose, onRefetch, data }) => {\n  const { t } = useTranslation();\n  const [disabled, setDisabled] = useState(false);\n  const [step, setStep] = useState(\"\");\n\n  const onEditStep = () => {\n    setStep(1);\n  };\n  return (\n    <>\n      {step === 1 ? (\n        <EditAddDepartmentField\n          onClose={() => setStep(\"\")}\n          data={data}\n          onParentClose={onClose}\n          onRefetch={onRefetch}\n        />\n      ) : (\n        <ModalMenu onClose={onClose} disabled={disabled}>\n          <h6 onClick={onEditStep}>{t(\"edit\")}</h6>\n          <h6>{t(\"delete\")}</h6>\n        </ModalMenu>\n      )}\n    </>\n  );\n};\n\nexport default DepartmentStudentFormSettingCardMenu;\n","import BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport Switch from \"@mui/material/Switch\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport style from \"../../InstituteStudent/InstituteStudent.module.css\";\nimport CreateButton from \"../../../Ui/Button/CreateButton\";\nimport { useEffect, useState } from \"react\";\nimport EditDepartmentFormSection from \"./FormSection/EditDepartmentFormSection\";\nimport AddDepartmentField from \"./AddField/AddDepartmentField\";\n// import { assestsUserFinanceUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport DepartmentStudentFormSettingCardMenu from \"./AddField/DepartmentStudentFormSettingCardMenu\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport {\n  useDepartmentStudentToggleChecklist,\n  useDepartmentStudentUpdateSectionChecklist,\n} from \"../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\n\nconst label = { inputProps: { \"aria-label\": \"Switch demo\" } };\n\nconst DepartmentStudentFormSettingCard = ({ st, onRefetch, formId }) => {\n  const [add, setAdd] = useState(false);\n  const [addField, setAddField] = useState(false);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    setVisible(st?.section_visibilty);\n  }, [st?.section_visibilty]);\n\n  const [departmentStudentUpdateSectionChecklist] =\n    useDepartmentStudentUpdateSectionChecklist();\n\n  const [departmentStudentToggleChecklist] =\n    useDepartmentStudentToggleChecklist();\n  const onToggle = () => {\n    setAdd((pre) => !pre);\n  };\n  const onFieldToggle = () => {\n    setAddField((pre) => !pre);\n  };\n  const onMenuToggle = () => {\n    setOpenMenu((pre) => !pre);\n  };\n\n  const onToggleChanged = (e) => {\n    if (st?._id && formId) {\n      setDisabled((pre) => !pre);\n      departmentStudentUpdateSectionChecklist({\n        formId: formId,\n        bodyParameter: {\n          section_name: st?.section_name,\n          section_key: st?.section_key,\n          section_visibilty: e.target.checked,\n          fsid: st?._id,\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n        })\n        .catch({});\n    }\n  };\n  const onChecklistToggleChanged = (e, checkId) => {\n    if (st?._id && formId && checkId) {\n      setDisabled((pre) => !pre);\n      departmentStudentToggleChecklist({\n        formId: formId,\n        bodyParameter: {\n          checkID: checkId,\n          fsid: st?._id,\n          form_checklist_visibility: e.target.checked,\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n        })\n        .catch({});\n    }\n  };\n  return (\n    <>\n      <section className={style.sfsc_card}>\n        <div className={style.sfscc_outer}>\n          <div className={style.sfscc_container}>\n            <Switch {...label} checked={visible} onChange={onToggleChanged} />\n            <span>{st?.section_name ?? \"\"}</span>\n          </div>\n          {visible ? (\n            <CreateButton\n              label=\"edit\"\n              customStyle={{\n                paddingBlock: \"0.2rem\",\n                margin: \"0\",\n              }}\n              onAction={onToggle}\n            />\n          ) : null}\n        </div>\n\n        <div className={style.sfsccc_inner}>\n          {st?.form_checklist?.map((chd) => (\n            <div\n              className={style.sfscc_outer}\n              style={{\n                width: \"100%\",\n                opacity: visible ? \"1\" : \"0.7\",\n              }}\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    sx={{ color: \"rgba(18, 18, 18, 0.7)\" }}\n                    checked={chd?.form_checklist_visibility}\n                    onChange={(e) =>\n                      visible ? onChecklistToggleChanged(e, chd?._id) : null\n                    }\n                  />\n                }\n                label={chd?.form_checklist_lable}\n                // sx={{ ...customStyleLabel }}\n                key={chd?._id}\n              />\n\n              {/* <img\n                src={`${assestsUserFinanceUrl}/menu.svg`}\n                alt=\"menu icon\"\n                className={style.menu_con}\n                onClick={onMenuToggle}\n              /> */}\n            </div>\n          ))}\n          {visible ? (\n            <CreateButton\n              label=\"add_field\"\n              customStyle={{\n                paddingBlock: \"0.2rem\",\n                margin: \"0\",\n              }}\n              onAction={onFieldToggle}\n            />\n          ) : null}\n        </div>\n      </section>\n      <BorderBottom />\n      {addField && (\n        <AddDepartmentField\n          onClose={onFieldToggle}\n          formId={formId}\n          sectionId={st?._id}\n          onRefetch={onRefetch}\n        />\n      )}\n      {add && (\n        <EditDepartmentFormSection\n          onClose={onToggle}\n          formId={formId}\n          sectionId={st?._id}\n          onRefetch={onRefetch}\n          data={st}\n        />\n      )}\n      {disabled && <QvipleLoader />}\n      {openMenu && (\n        <DepartmentStudentFormSettingCardMenu onClose={onMenuToggle} />\n      )}\n    </>\n  );\n};\n\nexport default DepartmentStudentFormSettingCard;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../../../Validation/functions/checkingRequiredField\";\nimport Modal from \"../../../../Ui/Modal/Modal\";\nimport UserMemberContentWrapper from \"../../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../../Ui/Border/BorderBottom\";\nimport style from \"../../../../UserStaffMember/FinanceManager/Income/Income.module.css\";\nimport { assestsUserFinanceUrl } from \"../../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useDepartmentStudentAddSection } from \"../../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\nimport QvipleLoader from \"../../../../Loader/QvipleLoader\";\nimport CreateButton from \"../../../../Ui/Button/CreateButton\";\nimport FormInput from \"../../../../Ui/Input/FormInput\";\nconst AddDepartmentFormSection = ({ onClose, formId, onRefetch }) => {\n  const { t } = useTranslation();\n  const [errorField, setErrorField] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const [state, setState] = useState({\n    section_name: \"\",\n  });\n\n  const [departmentStudentAddSection] = useDepartmentStudentAddSection();\n  const onChange = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onAdd = () => {\n    let validation = requiredField(state, []);\n    if (existingRequiredField(validation) && formId) {\n      setDisabled((pre) => !pre);\n      departmentStudentAddSection({\n        formId: formId,\n        bodyParameter: {\n          form: [\n            {\n              section_name: state.section_name,\n              section_key: getUnderScoreFormat(state.section_name),\n              section_visibilty: true,\n            },\n          ],\n        },\n      })\n        .then(() => {\n          onRefetch();\n          setDisabled((pre) => !pre);\n          onClose();\n        })\n        .catch({});\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div className={style.modal_container}>\n        <UserMemberContentWrapper>\n          <div className={style.modal_container_outer_header}>\n            <div className={style.modal_container_header}>\n              <h6>{t(\"add_section\")}</h6>\n            </div>\n            <img\n              src={`${assestsUserFinanceUrl}/close.svg`}\n              alt=\"close icon\"\n              onClick={onClose}\n            />\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper\n          customStyle={{\n            paddingTop: \"0\",\n          }}\n        >\n          <FormInput\n            label={t(\"section_name\")}\n            placeholder={t(\"section_name_placeholder\")}\n            name={\"section_name\"}\n            value={state.section_name}\n            type={\"text\"}\n            onChange={onChange}\n            errorShow={errorField[\"section_name\"]}\n          />\n\n          <CreateButton label=\"add\" onAction={onAdd} />\n        </UserMemberContentWrapper>\n        {disabled && <QvipleLoader />}\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddDepartmentFormSection;\n\nconst getUnderScoreFormat = (val) => {\n  let st = val?.replaceAll(\" \", \"_\");\n  return st?.toLowerCase();\n};\n","import { useTranslation } from \"react-i18next\";\nimport style from \"../../../UserStaffMember/FinanceManager/FinanceManager.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport UserMemberContainerWrapper from \"../../../Ui/UserMember/UserMemberContainerWrapper\";\nimport UserMemberContentWrapper from \"../../../Ui/UserMember/UserMemberContentWrapper\";\nimport BorderBottom from \"../../../Ui/Border/BorderBottom\";\nimport DepartmentStudentFormSettingCard from \"./DepartmentStudentFormSettingCard\";\nimport {\n  useDepartmentStudentFormDetail,\n  useDepartmentStudentRearrangeSection,\n} from \"../../../Hooks/ApiHooks/InstituteStudent/institute-student-api\";\nimport CreateButton from \"../../../Ui/Button/CreateButton\";\nimport AddDepartmentFormSection from \"./FormSection/AddDepartmentFormSection\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport Loading from \"../../../Loader/Loading\";\n\nconst DepartmentStudentFormSetting = ({ formId }) => {\n  const { t } = useTranslation();\n  const [add, setAdd] = useState(false);\n  const [resuffle, setResuffle] = useState(false);\n  const [list, setList] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const onDragEventStart = (e, position) => {\n    dragItem.current = position;\n  };\n\n  const onDragEventEnter = (e, position) => {\n    dragOverItem.current = position;\n  };\n  const onDropItem = (e) => {\n    const listCopy = [...list];\n    const dragItemContentCls = listCopy[dragItem.current];\n    listCopy.splice(dragItem.current, 1);\n    listCopy.splice(dragOverItem.current, 0, dragItemContentCls);\n\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setList(listCopy);\n  };\n\n  const [departmentStudentRearrangeSection] =\n    useDepartmentStudentRearrangeSection();\n  const {\n    departmentStudentFormDetail,\n    departmentStudentFormDetailRefetch,\n    departmentStudentFormDetailLoading,\n  } = useDepartmentStudentFormDetail({\n    data: {\n      formId: formId,\n    },\n    skip: !formId,\n  });\n\n  useEffect(() => {\n    if (departmentStudentFormDetail) {\n      setList(departmentStudentFormDetail);\n    }\n  }, [departmentStudentFormDetail]);\n  //   console.info(\"departmentStudentFormDetail\", departmentStudentFormDetail);\n  const onToggle = () => {\n    setAdd((pre) => !pre);\n  };\n  const onResuffleToggle = () => {\n    setResuffle((pre) => !pre);\n  };\n  const onReshuffle = () => {\n    if (formId) {\n      setDisabled((pre) => !pre);\n      departmentStudentRearrangeSection({\n        formId: formId,\n        bodyParameter: {\n          shuffle_arr: list,\n        },\n      })\n        .then(() => {\n          departmentStudentFormDetailRefetch();\n          setDisabled((pre) => !pre);\n          setResuffle(false);\n        })\n        .catch({});\n    }\n  };\n  return (\n    <>\n      <UserMemberContainerWrapper>\n        <UserMemberContentWrapper>\n          <div className={style.fm_header_container}>\n            <h6>{t(\"student_form\")}</h6>\n            <div className={style.fm_flex}>\n              <CreateButton\n                label=\"add_section\"\n                customStyle={{\n                  paddingBlock: \"0.2rem\",\n                  margin: \"0\",\n                }}\n                onAction={onToggle}\n              />\n              <CreateButton\n                label={resuffle ? \"save_resuffle\" : \"resuffle\"}\n                customStyle={{\n                  paddingBlock: \"0.2rem\",\n                  margin: \"0\",\n                }}\n                onAction={resuffle ? onReshuffle : onResuffleToggle}\n              />\n              {resuffle && (\n                <CreateButton\n                  label={\"cancel_resuffle\"}\n                  customStyle={{\n                    paddingBlock: \"0.2rem\",\n                    margin: \"0\",\n                  }}\n                  onAction={onResuffleToggle}\n                />\n              )}\n            </div>\n          </div>\n        </UserMemberContentWrapper>\n        <BorderBottom />\n        <UserMemberContentWrapper>\n          {list?.map((st, index) => (\n            <div\n              key={st?._id}\n              draggable={resuffle}\n              onDragStart={(e) => onDragEventStart(e, index)}\n              onDragEnter={(e) => onDragEventEnter(e, index)}\n              onDragEnd={onDropItem}\n            >\n              <DepartmentStudentFormSettingCard\n                st={st}\n                onRefetch={departmentStudentFormDetailRefetch}\n                formId={formId}\n              />\n            </div>\n          ))}\n          {departmentStudentFormDetailLoading && <Loading />}\n        </UserMemberContentWrapper>\n      </UserMemberContainerWrapper>\n      {disabled && <QvipleLoader />}\n      {add && (\n        <AddDepartmentFormSection\n          onClose={onToggle}\n          formId={formId}\n          onRefetch={departmentStudentFormDetailRefetch}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DepartmentStudentFormSetting;\n","import { useLocation, useSearchParams } from \"react-router-dom\";\nimport InstituteNavbarConfig from \"../Config/InstituteNavbarConfig\";\nimport InstituteMemberConfig from \"../Config/InstituteMemberConfig\";\nimport GoBack from \"../../Shared/StaffStudentProfile/GoBack\";\nimport { Suspense, useEffect } from \"react\";\nimport QvipleLoader from \"../../Loader/QvipleLoader\";\nimport DepartmentStudentFormSetting from \"./FormSetting/DepartmentStudentFormSetting\";\nimport { useDepartmentProfile } from \"../../../hooks/member_tab/department-api\";\n\nconst InstituteDepartment = () => {\n  const [searchParams] = useSearchParams();\n  const getQuery = useLocation();\n  const { departmentProfile, departmentProfileRefetch } = useDepartmentProfile({\n    did: getQuery.state?.did,\n    skip: !getQuery.state?.did,\n  });\n  useEffect(() => {\n    if (getQuery.state?.did) {\n      departmentProfileRefetch();\n    }\n  }, [getQuery.state?.did, departmentProfileRefetch]);\n  return (\n    <InstituteNavbarConfig>\n      <InstituteMemberConfig>\n        <section\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <GoBack\n            customStyle={{\n              width: \"100%\",\n              marginTop: \"0\",\n              marginBottom: \"1rem\",\n            }}\n          />\n          <Suspense fallback={<QvipleLoader />}>\n            {searchParams.get(\"type\") === \"form\" ? (\n              <DepartmentStudentFormSetting\n                formId={departmentProfile?.department?.student_form_setting}\n              />\n            ) : null}\n          </Suspense>\n        </section>\n      </InstituteMemberConfig>\n    </InstituteNavbarConfig>\n  );\n};\n\nexport default InstituteDepartment;\n"],"names":["_ref","onClose","formId","onRefetch","sectionId","data","t","useTranslation","errorField","setErrorField","useState","disabled","setDisabled","state","setState","section_name","section_key","section_visibilty","useEffect","_data$section_name","_data$section_key","_data$section_visibil","departmentStudentUpdateSectionChecklist","useDepartmentStudentUpdateSectionChecklist","_jsx","Modal","children","_jsxs","className","style","modal_container","UserMemberContentWrapper","modal_container_outer_header","modal_container_header","src","concat","assestsUserFinanceUrl","alt","onClick","BorderBottom","customStyle","paddingTop","FormInput","label","placeholder","name","value","type","onChange","e","prev","target","errorShow","CreateButton","onAction","onAdd","validation","requiredField","existingRequiredField","pre","bodyParameter","getUnderScoreFormat","fsid","then","catch","QvipleLoader","val","st","replaceAll","toLowerCase","_state$form_checklist5","form_checklist_placeholder","form_checklist_lable","form_checklist_typo","form_checklist_typo_option_pl","departmentStudentSectionAddChecklist","useDepartmentStudentSectionAddChecklist","onTile","optionList","includes","maxWidth","TileWrapper","customTileContainer","flexWrap","fTypes","map","tile","TileCard","activeTile","key","padding","pl","id","onOptionChange","optIndex","inputarr","customFormInputLabel","display","alignItmes","justifyContent","margin","width","fontSize","fontWeight","ind","mp","dp","i","_mp","length","push","onRemoveOption","paddingBlock","marginTop","onAddOption","_state$form_checklist","_state$form_checklist2","_state$form_checklist3","_state$form_checklist4","choose_opt","s","checklist","form_checklist_name","form_checklist_key","form_checklist_visibility","instituteStudentUpdateSectionChecklist","useInstituteStudentUpdateSectionChecklist","_data$form_checklist_","_data$form_checklist_2","_data$form_checklist_3","_data$form_checklist_4","_data$form_checklist_5","_data$form_checklist_6","dt","d","step","setStep","_Fragment","EditAddDepartmentField","onParentClose","ModalMenu","onEditStep","inputProps","_st$section_name","_st$form_checklist","add","setAdd","addField","setAddField","openMenu","setOpenMenu","visible","setVisible","departmentStudentToggleChecklist","useDepartmentStudentToggleChecklist","onToggle","onFieldToggle","sfsc_card","sfscc_outer","sfscc_container","Switch","checked","_id","sfsccc_inner","form_checklist","chd","opacity","FormControlLabel","control","Checkbox","sx","color","onChecklistToggleChanged","checkId","checkID","AddDepartmentField","EditDepartmentFormSection","DepartmentStudentFormSettingCardMenu","onMenuToggle","departmentStudentAddSection","useDepartmentStudentAddSection","form","resuffle","setResuffle","list","setList","dragItem","useRef","dragOverItem","onDropItem","listCopy","dragItemContentCls","current","splice","departmentStudentRearrangeSection","useDepartmentStudentRearrangeSection","departmentStudentFormDetail","departmentStudentFormDetailRefetch","departmentStudentFormDetailLoading","useDepartmentStudentFormDetail","skip","onResuffleToggle","UserMemberContainerWrapper","fm_header_container","fm_flex","onReshuffle","shuffle_arr","index","draggable","onDragStart","onDragEventStart","position","onDragEnter","onDragEventEnter","onDragEnd","DepartmentStudentFormSettingCard","Loading","AddDepartmentFormSection","InstituteDepartment","_getQuery$state","_getQuery$state2","_getQuery$state4","_departmentProfile$de","searchParams","useSearchParams","getQuery","useLocation","departmentProfile","departmentProfileRefetch","useDepartmentProfile","did","_getQuery$state3","InstituteNavbarConfig","InstituteMemberConfig","GoBack","marginBottom","Suspense","fallback","get","DepartmentStudentFormSetting","department","student_form_setting"],"sourceRoot":""}