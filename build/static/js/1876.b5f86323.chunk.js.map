{"version":3,"file":"static/js/1876.b5f86323.chunk.js","mappings":"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","sources":["StaffTab/StudentTab/MainContent/Certificates/Leaving/Leaving.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CustomSuspense from \"../../../../../Custom/SuspenseLoading/CustomSuspense\";\nimport {\n  useGetEditable,\n  useStudentLeaving,\n} from \"../../../../../hooks/institute/institute-staff-student-api\";\nimport LoaderButton from \"../../../../../Loader/LoaderButton\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../CertificateDetail.module.css\";\nimport { Notfication } from \"../../../../../validation/Snackbar\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nconst CertificateModal = React.lazy(() =>\n  import(\"../CertificateModal/CertificateModal\")\n);\nconst Leaving = ({ student, viewAs, instituteId, status }) => {\n  const { t } = useTranslation();\n  const id = useSelector((state) => state.idChange.id);\n  const [addDisplay, setAddDisplay] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const navigate = useNavigate();\n  const params = useParams();\n  const [leavingData, setLeavingData] = useState({\n    number: \"\",\n    studentCertificateNo: \"\",\n    leaving_date: \"\",\n    bookNo: \"\",\n    studentUidaiNumber: \"\",\n    studentPreviousSchool: student?.studentPreviousSchool ?? \"\",\n    studentLeavingBehaviour: \"\",\n    studentLeavingStudy: \"\",\n    studentLeavingReason: \"\",\n    studentRemark: \"\",\n    instituteJoinDate: \"\",\n    instituteLeavingDate: \"\",\n    leaving_degree: \"\",\n    leaving_since_date: \"\",\n    leaving_course_duration: \"\",\n    elective_subject_one: \"\",\n    elective_subject_second: \"\",\n    leaving_project_work: \"\",\n    leaving_guide_name: \"\",\n  });\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const [studentLeaving] = useStudentLeaving();\n  const { getEditable, getEditableRefetch } = useGetEditable({\n    id: instituteId ? instituteId : id,\n    skip: viewAs === \"DESIGNATION_SIDE\" ? !instituteId : !id,\n  });\n\n  useEffect(() => {\n    if ((id, instituteId)) getEditableRefetch();\n  }, [id, instituteId, getEditableRefetch]);\n\n  const onLeavingHandler = () => {\n    setDisabled((pre) => !pre);\n    studentLeaving({\n      id: instituteId ? instituteId : id,\n      gr: leavingData.number,\n      leavingFeedback: leavingData,\n    })\n      .then((res) => {\n        setDisabled((pre) => !pre);\n        navigate(`/q/${params.username}/student/certificate/form`, {\n          state: {\n            student: res.data.student,\n            download: res.data.download,\n            instituteId: instituteId,\n            is_leaving: status,\n          },\n        });\n        // setStudent(res.data.student);\n        // setDownload(res.data.download);\n        // setToggle({\n        //   id: instituteId ? instituteId : id,\n        //   gr: leavingData.number,\n        //   leavingFeedback: leavingData,\n        // });\n        // if (status === \"leaving\") {\n        //   setLeavingForm({ ...leavingform, leaving: true, transfer: false });\n        // } else if (status === \"transfer\") {\n        //   setLeavingForm({ ...leavingform, leaving: false, transfer: true });\n        // }\n      })\n      .catch(() => {\n        setNotificationState({\n          msg: \"something went wrong\",\n          run: true,\n        });\n      });\n  };\n\n  return (\n    <div className={style.complaintDetails}>\n      <div className={style.detailsHeader}>\n        {status === \"transfer\" ? (\n          <p>{t(\"transfer_certificate\")}</p>\n        ) : (\n          <p>{t(\"leaving\")}</p>\n        )}\n        <img\n          src=\"/images/menu-dots-dark-icon.svg\"\n          alt=\"\"\n          onClick={() => setAddDisplay(true)}\n        />\n      </div>\n\n      <div className={style.detailsBody}>\n        <div className={style.gr}>\n          <input\n            type=\"tel\"\n            placeholder={t(\"enter_gr\")}\n            onChange={(e) =>\n              setLeavingData({ ...leavingData, number: e.target.value })\n            }\n            required\n          />\n        </div>\n\n        {leavingData?.number !== \"\" && (\n          <button\n            type=\"submit\"\n            disabled={disabled}\n            className={style.getBtn}\n            onClick={onLeavingHandler}\n          >\n            <p>{t(\"cer_preview\")}</p>\n            {disabled && <LoaderButton />}\n          </button>\n        )}\n      </div>\n\n      {addDisplay && (\n        <CustomSuspense>\n          <CertificateModal\n            hideModal={(w) => setAddDisplay(w)}\n            addDisplay={addDisplay}\n            editableData={getEditable?.detail}\n            viewAs={viewAs}\n            instituteId={instituteId}\n            onRefetch={getEditableRefetch}\n          />\n        </CustomSuspense>\n      )}\n      <Notfication\n        msg={notificationState.msg}\n        run={notificationState.run}\n        setRun={() => setNotificationState({ msg: \"\", run: false })}\n        postiton=\"bottom\"\n        type=\"error\"\n      />\n    </div>\n  );\n};\n\nexport default Leaving;\n"],"names":["CertificateModal","React","_ref","_student$studentPrevi","student","viewAs","instituteId","status","t","useTranslation","id","useSelector","state","idChange","_useState","useState","_useState2","_slicedToArray","addDisplay","setAddDisplay","_useState3","_useState4","disabled","setDisabled","navigate","useNavigate","params","useParams","_useState5","number","studentCertificateNo","leaving_date","bookNo","studentUidaiNumber","studentPreviousSchool","studentLeavingBehaviour","studentLeavingStudy","studentLeavingReason","studentRemark","instituteJoinDate","instituteLeavingDate","leaving_degree","leaving_since_date","leaving_course_duration","elective_subject_one","elective_subject_second","leaving_project_work","leaving_guide_name","_useState6","leavingData","setLeavingData","_useState7","msg","run","_useState8","notificationState","setNotificationState","_useStudentLeaving","useStudentLeaving","studentLeaving","_useGetEditable","useGetEditable","skip","getEditable","getEditableRefetch","useEffect","_jsxs","className","style","complaintDetails","children","detailsHeader","_jsx","src","alt","onClick","detailsBody","gr","type","placeholder","onChange","e","_objectSpread","target","value","required","getBtn","pre","leavingFeedback","then","res","concat","username","data","download","is_leaving","catch","LoaderButton","CustomSuspense","hideModal","w","editableData","detail","onRefetch","Notfication","setRun","postiton"],"sourceRoot":""}