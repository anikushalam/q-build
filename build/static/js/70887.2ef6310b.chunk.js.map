{"version":3,"file":"static/js/70887.2ef6310b.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/UserForgetVerify.jsx","optimized/Auth/Verification/OtpResendTimer.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Ui/Button/CreateButton.jsx","optimized/Utils/Snackbar/NotifyOverlay.jsx","optimized/Utils/Snackbar/NotifyEvent.jsx","optimized/Validation/Auth/invalidateAuthUsername.js","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/optimized/Ui/Button/Button.module.css?2226","webpack://mithkal-qviple/./src/optimized/Utils/Utils.module.css?d850"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport {\n  useAuthUserForgetOtp,\n  useAuthUserNumber,\n} from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport OtpResendTimer from \"../Verification/OtpResendTimer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { invalidateAuthEmailOrMobile } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst UserForgetVerify = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [state, setState] = useState({\n    userOtpCode: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForgetOtp] = useAuthUserForgetOtp();\n  const [authUserNumber] = useAuthUserNumber();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, userOtpCode: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation) && getQuery.state?.uid) {\n      setDisabled((pre) => !pre);\n      authUserForgetOtp({\n        uid: getQuery.state?.uid,\n        otp: state,\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.user) {\n            navigate(\"/user/forget/password\", {\n              state: {\n                uid: response?.user,\n              },\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid Otp\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onOtpResend = () => {\n    if (getQuery?.state?.phoneNumber) {\n      authUserNumber({\n        userPhoneNumber: `${getQuery?.state?.phoneNumber}`,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(`${getQuery?.state?.phoneNumber}`),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n\n          if (response?.userPhoneNumber) {\n            setSnackbar({\n              open: true,\n              msg: `Code will be resent to xxxx- ${`${getQuery?.state?.phoneNumber}`?.substring(\n                `${getQuery?.state?.phoneNumber}`?.length - 4\n              )}`,\n              variant: \"success\",\n            });\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forget_password_verification_code\"\n        subTitle={`${t(\"verification_code_note\")}${\n          getQuery.state?.type ?? \"\"\n        }${t(\"ending\")} ${`${getQuery?.state?.phoneNumber}`?.substring(\n          `${getQuery?.state?.phoneNumber}`?.length - 4\n        )}`}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            placeholder={t(\"verification_code\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-otp.svg`}\n            maxLength=\"4\"\n            validate={errorField[\"userOtpCode\"]}\n            name=\"userOtpCode\"\n            value={state.userOtpCode}\n            onChange={onChangeHandler}\n          />\n          <div className={style.auth_footer_container}>\n            <p className={style.auth_otp_text}>\n              {t(\"if_you_did_not_recieve_otp\")}\n              <OtpResendTimer onOtpResend={onOtpResend} />\n            </p>\n          </div>\n\n          <ButtonWithTypeSubmit\n            type=\"submit\"\n            buttonText={t(\"verify\")}\n            disabled={disabled}\n          />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default UserForgetVerify;\n","import React, { memo, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\n\nconst OtpResendTimer = ({ onOtpResend }) => {\n  const { t } = useTranslation();\n  const [timer, setTimer] = useState(\"\");\n  const Ref = useRef(null);\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    return {\n      total,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(seconds);\n    }\n  };\n\n  const clearTimer = (e) => {\n    setTimer(\"40\");\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 40);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickResetTimer = () => {\n    clearTimer(getDeadTime());\n  };\n  const ResendOtpHandler = () => {\n    if (!timer) {\n      onOtpResend();\n      onClickResetTimer();\n    }\n  };\n  return (\n    <>\n      <span className={style.auth_otp_resend} onClick={ResendOtpHandler}>\n        {\" \"}\n        {t(\"resend\")}{\" \"}\n      </span>\n      <span className={style.auth_otp_resend}>{timer}</span>\n    </>\n  );\n};\n\nexport default memo(OtpResendTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","import { useTranslation } from \"react-i18next\";\nimport style from \"./Button.module.css\";\nconst CreateButton = ({ label, count, onAction, customStyle, isTranslate }) => {\n  const { t } = useTranslation();\n\n  return isTranslate ? (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {label}\n    </div>\n  ) : (\n    <div\n      className={style.create_btn_container}\n      onClick={onAction}\n      style={customStyle}\n    >\n      {count > 0 ? <span>{count} </span> : null}\n      {t(label)}\n    </div>\n  );\n};\n\nexport default CreateButton;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport style from \"../Utils.module.css\";\nimport { assestsUtilityUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\n\nconst NotifyOverlay = ({ onClose, isVariant, isHide, children }) => {\n  // console.info(\"isHide\", isHide);\n  return ReactDOM.createPortal(\n    <div>\n      {/* <div className={style.notify_backdrop} onClick={onClose} /> */}\n      <div\n        className={isHide ? style.notify_hide_overlay : style.notify_overlay}\n      >\n        <div\n          className={style.notify_container}\n          style={{\n            \"--notify-bg-color\": isVariant,\n          }}\n        >\n          {children}\n          <img\n            src={`${assestsUtilityUrl}/close-white.svg`}\n            alt=\"close icon\"\n            onClick={onClose}\n            className={style.notify_close}\n          />\n          {/* <img src={`${assestsUtilsUrl}/close.svg`} alt=\"close icon\" /> */}\n        </div>\n      </div>\n    </div>,\n    document.getElementById(\"notify-alert\")\n  );\n};\n\nexport default NotifyOverlay;\n","import { useEffect, useState } from \"react\";\nimport NotifyOverlay from \"./NotifyOverlay\";\nimport style from \"../Utils.module.css\";\n\nconst variantType = {\n  success: \"green\",\n  error: \"#ed4a4a\",\n  warning: \"orange\",\n};\nconst NotifyEvent = ({ eventState, eventStateHandler }) => {\n  const [isHide, setIsHide] = useState(false);\n  const onClose = () => {\n    setIsHide(true);\n    let animationTimeout = setTimeout(() => {\n      eventStateHandler((prev) => ({\n        ...prev,\n        open: false,\n        msg: \"\",\n        variant: \"success\",\n      }));\n      setIsHide(false);\n    }, 500);\n    return () => clearTimeout(animationTimeout);\n  };\n\n  // useEffect(() => {\n  //   let identifire = setTimeout(() => {\n  //     onClose();\n  //   }, 3000);\n  //   return () => clearTimeout(identifire);\n  // }, []);\n\n  if (!eventState?.open) return null;\n  // console.info(\"dsbfsk,m,lk.,as\", isHide);\n  return (\n    <NotifyOverlay\n      onClose={onClose}\n      isVariant={variantType[eventState?.variant]}\n      isHide={isHide}\n    >\n      <h6 className={style.notify_message}>{eventState?.msg ?? \"\"}</h6>\n    </NotifyOverlay>\n  );\n};\n\nexport default NotifyEvent;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrapper\":\"Button_btn_wrapper__ihT7O\",\"btn_container\":\"Button_btn_container__OaH2t\",\"create_btn_container\":\"Button_create_btn_container__JuZrx\",\"upload_excel_file\":\"Button_upload_excel_file__a7d0K\",\"set_btn_container\":\"Button_set_btn_container__RvfRG\",\"ccb_button\":\"Button_ccb_button__Mjv4T\"};","// extracted by mini-css-extract-plugin\nexport default {\"notify_backdrop\":\"Utils_notify_backdrop__saL0O\",\"notify_overlay\":\"Utils_notify_overlay__GtPc5\",\"notify_hide_overlay\":\"Utils_notify_hide_overlay__MYvkC\",\"notify_overlay_animation\":\"Utils_notify_overlay_animation__pcASm\",\"notify_hide_overlay_animation\":\"Utils_notify_hide_overlay_animation__UKRcG\",\"notify_container\":\"Utils_notify_container__O8DBA\",\"notify_message\":\"Utils_notify_message__PHwKo\",\"notify_close\":\"Utils_notify_close__IwjyA\",\"modal_backdrop\":\"Utils_modal_backdrop__WBquw\",\"modal_overlay\":\"Utils_modal_overlay__Yy-AV\",\"modal_hide_overlay\":\"Utils_modal_hide_overlay__elt3A\",\"navbar_modal_hide_overlay\":\"Utils_navbar_modal_hide_overlay__yqj5q\",\"navbar_modal_overlay\":\"Utils_navbar_modal_overlay__6ub8g\",\"modal_hide_overlay_animation\":\"Utils_modal_hide_overlay_animation__d3TNp\",\"navbar_modal_overlay_animation\":\"Utils_navbar_modal_overlay_animation__Ypk9u\",\"navbar_modal_hide_overlay_animation\":\"Utils_navbar_modal_hide_overlay_animation__QLEse\",\"empty_container\":\"Utils_empty_container__-VyCI\",\"modal_overlay_animation\":\"Utils_modal_overlay_animation__zkjsk\"};"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","UserForgetVerify","_getQuery$state$type","_getQuery$state8","_ref3","_getQuery$state9","_ref4","_getQuery$state10","navigate","useNavigate","getQuery","useLocation","state","setState","useState","userOtpCode","disabled","setDisabled","errorField","setErrorField","snackbar","setSnackbar","open","msg","variant","authUserForgetOtp","useAuthUserForgetOtp","authUserNumber","useAuthUserNumber","GetStarted","concat","type","phoneNumber","substring","length","fontSize","onSubmit","e","_getQuery$state","preventDefault","validation","requiredField","_getQuery$state2","existingRequiredField","uid","pre","otp","then","res","_res$data","response","decryption","data","encrypt","user","catch","err","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","maxLength","validate","name","value","onChange","prev","target","auth_footer_container","auth_otp_text","OtpResendTimer","onOtpResend","_getQuery$state3","_getQuery$state4","_getQuery$state5","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","_res$data2","_getQuery$state6","_ref2","_getQuery$state7","ButtonWithTypeSubmit","buttonText","NotifyEvent","eventState","eventStateHandler","timer","setTimer","Ref","useRef","startTimer","total","seconds","Date","parse","Math","floor","getTimeRemaining","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","auth_otp_resend","onClick","ResendOtpHandler","minLength","isPassword","passwordVisible","setPasswordVisible","htmlFor","src","alt","onToggle","count","isTranslate","create_btn_container","onClose","isVariant","isHide","ReactDOM","notify_hide_overlay","notify_overlay","notify_container","assestsUtilityUrl","notify_close","document","getElementById","variantType","success","error","warning","_eventState$msg","setIsHide","NotifyOverlay","animationTimeout","setTimeout","clearTimeout","notify_message","specailSymbol","invalidateAuthUsername","username","includes","typeOfAuth","optional","arguments","undefined","obj","required","req"],"sourceRoot":""}