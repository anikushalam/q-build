{"version":3,"file":"static/js/95763.7fd6b254.chunk.js","mappings":"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","sources":["optimized/Services/PayrollManager/payroll_manager_query_mutation_function.js","optimized/Services/PayrollManager/payrollManagerApiDynamic.js","optimized/Hooks/ApiHooks/PayrollManager/payroll-manager-api.js","optimized/Loader/QvipleLoader.jsx","webpack://mithkal-qviple/./src/optimized/Loader/Loader.module.css?eebd"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\n// all of encrypted api only==========\nexport const payrollActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/ins/${data.instituteId}/payroll/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/payroll/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Payroll_Module\"],\n  });\n};\n\nexport const payrollDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/${data.pid}/dashboard?mod_id=${data?.mid}`,\n    transformResponse: (response) => {\n      let dt = decryption(response?.encrypt);\n      return dt?.payroll;\n    },\n    providesTags: [\"Payroll_Module\"],\n  });\n};\n\nexport const payrollUpdateEmployerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/payroll/employer/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Payroll_Module\"],\n  });\n};\n\n//\n\nexport const payrollAddSalaryHeadFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/new/salary/heads/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollAllSalaryHeadFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/${data?.pid}/all/salary/heads/query?page=${data.page}&limit=${data.limit}&search=${data.search}&type=${data.type}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_heads,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_heads,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryHeadFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/one/${data?.shid}/salary/heads/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryHeadAllStaffFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/staff/fund/heads/query?page=${data.page}&limit=${data.limit}&search=${data.search}&key=${data.key}&pid=${data.pid}&month=${data.month}&year=${data.year}&section=${data.section}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_staff,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_staff,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const payrollAddSalaryStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/${data?.pid}/new/salary/structure/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollAllSalaryStructureFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/${data?.pid}/all/salary/structure/query?page=${data.page}&limit=${data.limit}&search=${data.search}&type=${data.type}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_structure,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_structure,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneSalaryStructureFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/one/${data?.ssid}/salary/structure/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.struct,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollStaffEditSalaryStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/payroll/one/${data?.sid}/salary/structure/edit/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const payrollOneStaffSalaryDaysFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/one/${data?.sid}/salary/days/query?month=${data.month}&year=${data.year}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.salary_days,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollOneStaffAttendanceSheetFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/payroll/one/${data?.sid}/attendance/sheet/query?month=${data.month}&year=${data.year}`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.salary_days,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const payrollAlocationMonthListFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/payroll/${data?.pid}/monthly/funds/query`,\n    // keepUnusedDataFor: 0,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => response?.monthly,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// export const payrollAlocationStaffListFunction = (builder) => {\n//   return builder.query({\n//     query: (data) =>\n//       `/v2/payroll/staff/fund/heads/query?page=${data.page}&limit=${data.limit}&search=${data.search}&heads_key=${data.heads_key}&pid=${data.pid}`,\n//     // keepUnusedDataFor: 0,\n//     serializeQueryArgs: ({ endpointName }) => {\n//       return endpointName;\n//     },\n//     transformResponse: (response, meta, arg) => {\n//       if (arg?.search)\n//         return {\n//           search: true,\n//           list: response?.all_staff,\n//         };\n//       else\n//         return {\n//           page: arg?.page,\n//           list: response?.all_staff,\n//         };\n//     },\n//     merge: (currentCache, incomingData) => {\n//       if (incomingData?.search) return incomingData;\n//       else if (incomingData?.page === 1) return incomingData;\n//       else return void currentCache?.list?.push(...incomingData?.list);\n//     },\n\n//     forceRefetch({ currentArg, previousArg }) {\n//       return currentArg !== previousArg;\n//     },\n//   });\n// };\n","import { payrollManagerApi } from \"./payrollManagerApi\";\nimport {\n  payrollActivateModuleFunction,\n  payrollDashboardMasterFunction,\n  payrollUpdateEmployerFunction,\n  payrollUpdateModuleFunction,\n  payrollAddSalaryHeadFunction,\n  payrollAllSalaryHeadFunction,\n  payrollOneSalaryHeadFunction,\n  payrollAddSalaryStructureFunction,\n  payrollAllSalaryStructureFunction,\n  payrollOneSalaryStructureFunction,\n  payrollStaffEditSalaryStructureFunction,\n  payrollOneSalaryHeadAllStaffFunction,\n  payrollOneStaffSalaryDaysFunction,\n  payrollOneStaffAttendanceSheetFunction,\n  payrollAlocationMonthListFunction,\n} from \"./payroll_manager_query_mutation_function\";\n\nconst payrollManagerApiDynamic = payrollManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    payrollActivateModule: payrollActivateModuleFunction(builder),\n    payrollUpdateModule: payrollUpdateModuleFunction(builder),\n    payrollDashboardMaster: payrollDashboardMasterFunction(builder),\n    payrollUpdateEmployer: payrollUpdateEmployerFunction(builder),\n\n    payrollAddSalaryHead: payrollAddSalaryHeadFunction(builder),\n    payrollAllSalaryHead: payrollAllSalaryHeadFunction(builder),\n    payrollOneSalaryHead: payrollOneSalaryHeadFunction(builder),\n    payrollAddSalaryStructure: payrollAddSalaryStructureFunction(builder),\n    payrollAllSalaryStructure: payrollAllSalaryStructureFunction(builder),\n    payrollOneSalaryStructure: payrollOneSalaryStructureFunction(builder),\n    payrollStaffEditSalaryStructure:\n      payrollStaffEditSalaryStructureFunction(builder),\n\n    payrollOneSalaryHeadAllStaff: payrollOneSalaryHeadAllStaffFunction(builder),\n    payrollOneStaffSalaryDays: payrollOneStaffSalaryDaysFunction(builder),\n    payrollOneStaffAttendanceSheet:\n      payrollOneStaffAttendanceSheetFunction(builder),\n    payrollAlocationMonthList: payrollAlocationMonthListFunction(builder),\n  }),\n});\n\nexport const {\n  usePayrollActivateModuleMutation,\n  usePayrollUpdateModuleMutation,\n  usePayrollDashboardMasterQuery,\n  usePayrollUpdateEmployerMutation,\n\n  usePayrollAddSalaryHeadMutation,\n  usePayrollAllSalaryHeadQuery,\n  usePayrollOneSalaryHeadQuery,\n  usePayrollAddSalaryStructureMutation,\n  usePayrollAllSalaryStructureQuery,\n  usePayrollOneSalaryStructureQuery,\n  usePayrollStaffEditSalaryStructureMutation,\n  usePayrollOneSalaryHeadAllStaffQuery,\n  usePayrollOneStaffSalaryDaysQuery,\n  usePayrollOneStaffAttendanceSheetQuery,\n  usePayrollAlocationMonthListQuery,\n} = payrollManagerApiDynamic;\n","import {\n  usePayrollActivateModuleMutation,\n  usePayrollDashboardMasterQuery,\n  usePayrollUpdateEmployerMutation,\n  usePayrollUpdateModuleMutation,\n  usePayrollAddSalaryHeadMutation,\n  usePayrollAllSalaryHeadQuery,\n  usePayrollOneSalaryHeadQuery,\n  usePayrollAddSalaryStructureMutation,\n  usePayrollAllSalaryStructureQuery,\n  usePayrollOneSalaryStructureQuery,\n  usePayrollStaffEditSalaryStructureMutation,\n  usePayrollOneSalaryHeadAllStaffQuery,\n  usePayrollOneStaffSalaryDaysQuery,\n  usePayrollOneStaffAttendanceSheetQuery,\n  usePayrollAlocationMonthListQuery,\n} from \"../../../Services/PayrollManager/payrollManagerApiDynamic\";\n\nexport const usePayrollActivateModule = () => {\n  const [payrollActivateModule] = usePayrollActivateModuleMutation();\n  return [payrollActivateModule];\n};\nexport const usePayrollUpdateModule = () => {\n  const [payrollUpdateModule] = usePayrollUpdateModuleMutation();\n  return [payrollUpdateModule];\n};\n\nexport const usePayrollDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = usePayrollDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollDashboardMaster: data,\n    payrollDashboardMasterRefetch: refetch,\n    payrollDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const usePayrollUpdateEmployer = () => {\n  const [payrollUpdateEmployer] = usePayrollUpdateEmployerMutation();\n  return [payrollUpdateEmployer];\n};\n//\n\nexport const usePayrollAddSalaryHead = () => {\n  const [payrollAddSalaryHead] = usePayrollAddSalaryHeadMutation();\n  return [payrollAddSalaryHead];\n};\nexport const usePayrollAllSalaryHead = (args) => {\n  const { data, refetch, isFetching } = usePayrollAllSalaryHeadQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAllSalaryHead: data,\n    payrollAllSalaryHeadRefetch: refetch,\n    payrollAllSalaryHeadLoading: isFetching,\n  };\n};\nexport const usePayrollOneSalaryHead = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryHeadQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryHead: data,\n    payrollOneSalaryHeadRefetch: refetch,\n    payrollOneSalaryHeadLoading: isFetching,\n  };\n};\nexport const usePayrollAddSalaryStructure = () => {\n  const [payrollAddSalaryStructure] = usePayrollAddSalaryStructureMutation();\n  return [payrollAddSalaryStructure];\n};\nexport const usePayrollAllSalaryStructure = (args) => {\n  const { data, refetch, isFetching } = usePayrollAllSalaryStructureQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAllSalaryStructure: data,\n    payrollAllSalaryStructureRefetch: refetch,\n    payrollAllSalaryStructureLoading: isFetching,\n  };\n};\nexport const usePayrollOneSalaryStructure = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryStructureQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryStructure: data,\n    payrollOneSalaryStructureRefetch: refetch,\n    payrollOneSalaryStructureLoading: isFetching,\n  };\n};\nexport const usePayrollStaffEditSalaryStructure = () => {\n  const [payrollStaffEditSalaryStructure] =\n    usePayrollStaffEditSalaryStructureMutation();\n  return [payrollStaffEditSalaryStructure];\n};\n\nexport const usePayrollOneSalaryHeadAllStaff = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneSalaryHeadAllStaffQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneSalaryHeadAllStaff: data,\n    payrollOneSalaryHeadAllStaffRefetch: refetch,\n    payrollOneSalaryHeadAllStaffLoading: isFetching,\n  };\n};\n\nexport const usePayrollOneStaffSalaryDays = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneStaffSalaryDaysQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneStaffSalaryDays: data,\n    payrollOneStaffSalaryDaysRefetch: refetch,\n    payrollOneStaffSalaryDaysLoading: isFetching,\n  };\n};\n\nexport const usePayrollOneStaffAttendanceSheet = (args) => {\n  const { data, refetch, isFetching } = usePayrollOneStaffAttendanceSheetQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollOneStaffAttendanceSheet: data,\n    payrollOneStaffAttendanceSheetRefetch: refetch,\n    payrollOneStaffAttendanceSheetLoading: isFetching,\n  };\n};\nexport const usePayrollAlocationMonthList = (args) => {\n  const { data, refetch, isFetching } = usePayrollAlocationMonthListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    payrollAlocationMonthList: data,\n    payrollAlocationMonthListRefetch: refetch,\n    payrollAlocationMonthListLoading: isFetching,\n  };\n};\n","import style from \"./Loader.module.css\";\n\nconst QvipleLoader = () => {\n  return (\n    <div className={style.qviple_loader_backdrop}>\n      <div className={style.qviple_loader_container}>\n        <div className={style.qviple_loader_rotation} />\n      </div>\n    </div>\n  );\n};\n\nexport default QvipleLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"qviple_loader_backdrop\":\"Loader_qviple_loader_backdrop__ScdYl\",\"qviple_loader_container\":\"Loader_qviple_loader_container__SXQ9Y\",\"qviple_loader_rotation\":\"Loader_qviple_loader_rotation__ltsgT\",\"qviple_loader_rotation_animation\":\"Loader_qviple_loader_rotation_animation__gy3+j\",\"q_loading\":\"Loader_q_loading__bwe2c\",\"circle_loading\":\"Loader_circle_loading__m+ptB\",\"rotate_animation\":\"Loader_rotate_animation__IV2sY\"};"],"names":["payrollActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","bodyParameter","payrollUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","payrollDashboardMasterFunction","pid","mid","transformResponse","response","dt","decryption","encrypt","payroll","providesTags","payrollUpdateEmployerFunction","payrollAddSalaryHeadFunction","payrollAllSalaryHeadFunction","page","limit","search","type","serializeQueryArgs","_ref","endpointName","meta","arg","list","all_heads","merge","currentCache","incomingData","_currentCache$list","push","apply","_toConsumableArray","forceRefetch","_ref2","currentArg","previousArg","payrollOneSalaryHeadFunction","shid","_ref3","_ref4","payrollOneSalaryHeadAllStaffFunction","key","month","year","section","_ref5","all_staff","_currentCache$list2","_ref6","payrollAddSalaryStructureFunction","payrollAllSalaryStructureFunction","_ref7","all_structure","_currentCache$list3","_ref8","payrollOneSalaryStructureFunction","ssid","_ref9","struct","_ref10","payrollStaffEditSalaryStructureFunction","sid","payrollOneStaffSalaryDaysFunction","_ref11","salary_days","_ref12","payrollOneStaffAttendanceSheetFunction","_ref13","_ref14","payrollAlocationMonthListFunction","_ref15","monthly","_ref16","payrollManagerApiDynamic","payrollManagerApi","injectEndpoints","endpoints","payrollActivateModule","payrollUpdateModule","payrollDashboardMaster","payrollUpdateEmployer","payrollAddSalaryHead","payrollAllSalaryHead","payrollOneSalaryHead","payrollAddSalaryStructure","payrollAllSalaryStructure","payrollOneSalaryStructure","payrollStaffEditSalaryStructure","payrollOneSalaryHeadAllStaff","payrollOneStaffSalaryDays","payrollOneStaffAttendanceSheet","payrollAlocationMonthList","usePayrollActivateModuleMutation","usePayrollDashboardMasterQuery","usePayrollUpdateModuleMutation","usePayrollUpdateEmployerMutation","usePayrollAddSalaryHeadMutation","usePayrollAllSalaryHeadQuery","usePayrollOneSalaryHeadQuery","usePayrollAddSalaryStructureMutation","usePayrollAllSalaryStructureQuery","usePayrollOneSalaryStructureQuery","usePayrollOneSalaryHeadAllStaffQuery","usePayrollStaffEditSalaryStructureMutation","usePayrollOneStaffSalaryDaysQuery","usePayrollOneStaffAttendanceSheetQuery","usePayrollAlocationMonthListQuery","usePayrollActivateModule","_usePayrollActivateMo","_slicedToArray","usePayrollDashboardMaster","args","_usePayrollDashboardM","skip","payrollDashboardMasterRefetch","refetch","payrollDashboardMasterLoading","isFetching","usePayrollUpdateEmployer","_usePayrollUpdateEmpl","usePayrollAddSalaryHead","_usePayrollAddSalaryH","usePayrollAllSalaryHead","_usePayrollAllSalaryH","payrollAllSalaryHeadRefetch","payrollAllSalaryHeadLoading","usePayrollOneSalaryHead","_usePayrollOneSalaryH","payrollOneSalaryHeadRefetch","payrollOneSalaryHeadLoading","usePayrollAddSalaryStructure","_usePayrollAddSalaryS","usePayrollAllSalaryStructure","_usePayrollAllSalaryS","payrollAllSalaryStructureRefetch","payrollAllSalaryStructureLoading","usePayrollOneSalaryStructure","_usePayrollOneSalaryS","payrollOneSalaryStructureRefetch","payrollOneSalaryStructureLoading","usePayrollOneSalaryHeadAllStaff","_usePayrollOneSalaryH2","payrollOneSalaryHeadAllStaffRefetch","payrollOneSalaryHeadAllStaffLoading","usePayrollOneStaffSalaryDays","_usePayrollOneStaffSa","payrollOneStaffSalaryDaysRefetch","payrollOneStaffSalaryDaysLoading","usePayrollOneStaffAttendanceSheet","_usePayrollOneStaffAt","payrollOneStaffAttendanceSheetRefetch","payrollOneStaffAttendanceSheetLoading","usePayrollAlocationMonthList","_usePayrollAlocationM","payrollAlocationMonthListRefetch","payrollAlocationMonthListLoading","_jsx","className","style","qviple_loader_backdrop","children","qviple_loader_container","qviple_loader_rotation"],"sourceRoot":""}