{"version":3,"file":"static/js/9017.87126fe6.chunk.js","mappings":"2mEAqHaA,EAAyB,WACpC,IAAAC,GAA8BC,EAAAA,EAAAA,KAC9B,MAAO,EADyDC,EAAAA,EAAAA,GAAAF,EAAA,GAAtC,GAE5B,EAEaG,EAAmB,WAC9B,IAAAC,GAAwBC,EAAAA,EAAAA,KACxB,MAAO,EAD2CH,EAAAA,EAAAA,GAAAE,EAAA,GAA9B,GAEtB,EAEaE,EAAwB,SAACC,GACpC,IAAAC,GACEC,EAAAA,EAAAA,IAA6BF,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACvD,MAAO,CAAEC,mBAFuBJ,EAAxBE,KAEqBG,0BAFuCL,EAAlCM,QAGpC,EAEaC,EAAmB,SAACR,GAC/B,IAAAS,GACEC,EAAAA,EAAAA,IAA2BV,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACrD,MAAO,CAAEO,cAFkBF,EAAnBN,KAEgBS,qBAFkCH,EAA7BF,QAG/B,EAEaM,EAAqB,SAACb,GACjC,IAAAc,GACEC,EAAAA,EAAAA,IAA6Bf,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACvD,MAAO,CAAEY,gBAFoBF,EAArBX,KAEkBc,uBAFoCH,EAA/BP,QAGjC,EAEaW,EAAuB,SAAClB,GACnC,IAAAmB,GACEC,EAAAA,EAAAA,GAA+BpB,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACzD,MAAO,CAAEiB,kBAFsBF,EAAvBhB,KAEoBmB,yBAFsCH,EAAjCZ,QAGnC,EAEagB,EAAkB,WAC7B,IAAAC,GAAuBC,EAAAA,EAAAA,MACvB,MAAO,EADyC9B,EAAAA,EAAAA,GAAA6B,EAAA,GAA7B,GAErB,EACaE,EAA0B,WACrC,IAAAC,GAA+BC,EAAAA,EAAAA,MAC/B,MAAO,EADsDjC,EAAAA,EAAAA,GAAAgC,EAAA,GAAlC,GAE7B,EAEaE,EAAmB,SAAC7B,GAC/B,IAAA8B,GACEC,EAAAA,EAAAA,IAAsB/B,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAChD,MAAO,CAAE4B,kBAFsBF,EAAvB3B,KAEoB8B,yBAFsCH,EAAjCvB,QAGnC,EACa2B,EAAkB,SAAClC,GAC9B,IAAAmC,GACEC,EAAAA,EAAAA,IAAqBpC,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAC/C,MAAO,CAAEiC,iBAFqBF,EAAtBhC,KAEmBmC,wBAFqCH,EAAhC5B,QAGlC,EACagC,EAAmB,SAACvC,GAC/B,IAAAwC,GACEC,EAAAA,EAAAA,IAAsBzC,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAChD,MAAO,CAAEsC,kBAFsBF,EAAvBrC,KAEoBwC,yBAFsCH,EAAjCjC,QAGnC,EAEaqC,EAA8B,SAAC5C,GAC1C,IAAA6C,GAGIC,EAAAA,EAAAA,IAAiC9C,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAC7D,MAAO,CAAE2C,6BAH2BF,EAAlC1C,KAGqC6C,oCAFOH,EAA5CtC,QAGJ,EAEa0C,EAA8B,WACzC,IAAAC,GAAmCC,EAAAA,EAAAA,MACnC,MAAO,EAD2DxD,EAAAA,EAAAA,GAAAuD,EAAA,GAAnC,GAEjC,EACaE,EAA8B,WACzC,IAAAC,GAAmCC,EAAAA,EAAAA,MACnC,MAAO,EAD2D3D,EAAAA,EAAAA,GAAA0D,EAAA,GAAnC,GAEjC,EACaE,EAAoB,WAC/B,IAAAC,GAAyBC,EAAAA,EAAAA,MACzB,MAAO,EADuD9D,EAAAA,EAAAA,GAAA6D,EAAA,GAAzC,GAEvB,EACaE,EAA+B,WAC1C,IAAAC,GAAoCC,EAAAA,EAAAA,MACpC,MAAO,EADwDjE,EAAAA,EAAAA,GAAAgE,EAAA,GAA/B,GAElC,EACaE,EAA8B,WACzC,IAAAC,GAAmCC,EAAAA,EAAAA,MACnC,MAAO,EADsDpE,EAAAA,EAAAA,GAAAmE,EAAA,GAA9B,GAEjC,EACaE,EAAmB,SAAChE,GAC/B,IAAAiE,GACEC,EAAAA,EAAAA,IAAsBlE,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAChD,MAAO,CAAE+D,kBAFsBF,EAAvB9D,KAEoBiE,yBAFsCH,EAAjC1D,QAGnC,EAEa8D,EAAiC,WAC5C,IAAAC,GAA6BC,EAAAA,EAAAA,MAC7B,MAAO,EADwD5E,EAAAA,EAAAA,GAAA2E,EAAA,GAAtC,GAE3B,EACaE,EAAyB,WACpC,IAAAC,GAAuCC,EAAAA,EAAAA,MACvC,MAAO,EADiE/E,EAAAA,EAAAA,GAAA8E,EAAA,GAArC,GAErC,EAEaE,EAAqC,WAChD,IAAAC,GAAiCC,EAAAA,EAAAA,MACjC,MAAO,EAD4DlF,EAAAA,EAAAA,GAAAiF,EAAA,GAAtC,GAE/B,EAEaE,EAA0B,SAAC9E,GACtC,IAAA+E,GACEC,EAAAA,EAAAA,IAA0BhF,EAAKiF,KAAM,CAAE7E,KAAMJ,EAAKI,OACpD,MAAO,CAAE8E,qBAFyBH,EAA1B5E,KAEuBgF,4BAFyCJ,EAApCxE,QAGtC,EAEa6E,EAAsB,SAACpF,GAClC,IAAAqF,GACEC,EAAAA,EAAAA,IAAyBtF,EAAKuF,IAAK,CAAEnF,KAAMJ,EAAKI,OAClD,MAAO,CAAEoF,kBAFsBH,EAAvBlF,KAEoBsF,yBAFsCJ,EAAjC9E,QAGnC,EAEamF,EAAoC,WAC/C,IAAAC,GAA4BC,EAAAA,EAAAA,MAC5B,MAAO,EADuDjG,EAAAA,EAAAA,GAAAgG,EAAA,GAAtC,GAE1B,EAEaE,EAAgC,SAAC7F,GAC5C,IAAA8F,GAGIC,EAAAA,EAAAA,IAAmC/F,EAAKgG,IAAK,CAAE5F,KAAMJ,EAAKI,OAC9D,MAAO,CAAE6F,wBAHsBH,EAA7B3F,KAGgC+F,+BAFOJ,EAAvCvF,QAGJ,EAEa4F,EAA0B,WACrC,IAAAC,GAAsBC,EAAAA,EAAAA,MACtB,MAAO,EADgD1G,EAAAA,EAAAA,GAAAyG,EAAA,GAArC,GAEpB,EACaE,EAAwB,SAACtG,GACpC,IAAAuG,GACEC,EAAAA,EAAAA,IAA2BxG,EAAKuF,IAAK,CAAEnF,KAAMJ,EAAKI,OACpD,MAAO,CAAEqG,mBAFuBF,EAAxBpG,KAEqBuG,0BAFuCH,EAAlChG,QAGpC,EAEaoG,EAA2B,SAAC3G,GACvC,IAAA4G,GACEC,EAAAA,EAAAA,IAA8B7G,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACxD,MAAO,CAAE0G,sBAF0BF,EAA3BzG,KAEwB4G,6BAF0CH,EAArCrG,QAGvC,EACayG,EAA4B,SAAChH,GACxC,IAAAiH,GAGIC,EAAAA,EAAAA,IAA+BlH,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAC3D,MAAO,CAAE+G,uBAHqBF,EAA5B9G,KAG+BiH,8BAFOH,EAAtC1G,QAGJ,EACa8G,EAA8B,SAACrH,GAC1C,IAAAsH,GAGIC,EAAAA,EAAAA,IAAiCvH,EAAKwH,IAAK,CAAEpH,KAAMJ,EAAKI,OAC5D,MAAO,CAAEqH,yBAHuBH,EAA9BnH,KAGiCuH,gCAFOJ,EAAxC/G,QAGJ,EAgCaoH,EAA0B,SAAC3H,GACtC,IAAA4H,GACEC,EAAAA,EAAAA,IAA6B7H,EAAK8H,SAAU,CAAE1H,KAAMJ,EAAKI,OAC3D,MAAO,CAAE2H,qBAFyBH,EAA1BzH,KAEuB6H,4BAFyCJ,EAApCrH,QAGtC,EACa0H,EAAsB,WACjC,IAAAC,GAA2BC,EAAAA,EAAAA,MAC3B,MAAO,EADiDxI,EAAAA,EAAAA,GAAAuI,EAAA,GAAjC,GAEzB,EAEaE,EAAwC,WACnD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD0C3I,EAAAA,EAAAA,GAAA0I,EAAA,GADb,GAGtC,EACaE,EAAuC,WAClD,IAAAC,GACEC,EAAAA,EAAAA,KACF,MAAO,EADyC9I,EAAAA,EAAAA,GAAA6I,EAAA,GADb,GAGrC,EAYaE,EAA6B,WACxC,IAAAC,GAAkCC,EAAAA,EAAAA,MAClC,MAAO,EAD+DjJ,EAAAA,EAAAA,GAAAgJ,EAAA,GAAxC,GAEhC,EAEaE,EAAyB,SAAC7I,GACrC,IAAA8I,GACEC,EAAAA,EAAAA,IAA4B/I,EAAKgJ,IAAK,CAAE5I,KAAMJ,EAAKI,OACrD,MAAO,CAAE6I,oBAFwBH,EAAzB3I,KAEsB+I,2BAFwCJ,EAAnCvI,QAGrC,EAEa4I,EAA4B,SAACnJ,GACxC,IAAAoJ,GAGIC,EAAAA,EAAAA,IAA+BrJ,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAC3D,MAAO,CAAEkJ,uBAHqBF,EAA5BjJ,KAG+BoJ,8BAFOH,EAAtC7I,QAGJ,EAgBaiJ,EAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoC/J,EAAAA,EAAAA,GAAA8J,EAAA,GADR,GAGrC,EAQaE,EAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoClK,EAAAA,EAAAA,GAAAiK,EAAA,GADR,GAGrC,EAEaE,EAAiC,WAC5C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADmCrK,EAAAA,EAAAA,GAAAoK,EAAA,GADR,GAGpC,EAEaE,EAAiC,SAACjK,GAC7C,IAAAkK,GAGIC,EAAAA,EAAAA,IAAoCnK,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAChE,MAAO,CAAEgK,4BAH0BF,EAAjC/J,KAGoCkK,mCAFOH,EAA3C3J,QAGJ,EAEa+J,EAA8B,WACzC,IAAAC,GAAmCC,EAAAA,EAAAA,MACnC,MAAO,EADiE7K,EAAAA,EAAAA,GAAA4K,EAAA,GAAzC,GAEjC,EAEaE,EAAiC,WAC5C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADmChL,EAAAA,EAAAA,GAAA+K,EAAA,GADR,GAGpC,EAEaE,EAAiC,WAC5C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADmCnL,EAAAA,EAAAA,GAAAkL,EAAA,GADR,GAGpC,EAaaE,EAAkC,SAAC/K,GAC9C,IAAAgL,GAGIC,EAAAA,EAAAA,IAAqCjL,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACjE,MAAO,CAAE8K,6BAH2BF,EAAlC7K,KAGqCgL,oCAFOH,EAA5CzK,QAGJ,EAEa6K,EAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoC3L,EAAAA,EAAAA,GAAA0L,EAAA,GADR,GAGrC,EAEaE,EAAqC,WAChD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADuC9L,EAAAA,EAAAA,GAAA6L,EAAA,GADR,GAGxC,EAEaE,EAAqC,WAChD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADuCjM,EAAAA,EAAAA,GAAAgM,EAAA,GADR,GAGxC,EAEaE,EAA0B,SAAC7L,GACtC,IAAA8L,GACEC,EAAAA,EAAAA,IAA6B/L,EAAKuF,IAAK,CAAEnF,KAAMJ,EAAKI,OACtD,MAAO,CAAE4L,qBAFyBF,EAA1B3L,KAEuB8L,4BAFyCH,EAApCvL,QAGtC,EAEa2L,GAA6B,WACxC,IAAAC,GAAkCC,EAAAA,EAAAA,MAClC,MAAO,EAD+DzM,EAAAA,EAAAA,GAAAwM,EAAA,GAAxC,GAEhC,EAgEaE,GAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoC5M,EAAAA,EAAAA,GAAA2M,EAAA,GADR,GAGrC,EAEaE,GAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoC/M,EAAAA,EAAAA,GAAA8M,EAAA,GADR,GAGrC,EAcaE,GAAwC,WACnD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD0ClN,EAAAA,EAAAA,GAAAiN,EAAA,GADR,GAG3C,EAmBaE,GAAgC,WAC3C,IAAAC,GAAqCC,EAAAA,EAAAA,MACrC,MAAO,EADqErN,EAAAA,EAAAA,GAAAoN,EAAA,GAA3C,GAEnC,EACaE,GAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoCxN,EAAAA,EAAAA,GAAAuN,EAAA,GADR,GAGrC,EAOaE,GAAiC,WAC5C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADmC3N,EAAAA,EAAAA,GAAA0N,EAAA,GADR,GAGpC,EAEaE,GAA+B,WAC1C,IAAAC,GAAoCC,EAAAA,EAAAA,MACpC,MAAO,EADmE9N,EAAAA,EAAAA,GAAA6N,EAAA,GAA1C,GAElC,EAEaE,GAA2B,SAAC1N,GACvC,IAAA2N,GACEC,EAAAA,EAAAA,IAA8B5N,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACxD,MAAO,CAAEyN,sBAF0BF,EAA3BxN,KAEwB2N,6BAF0CH,EAArCpN,QAGvC,EAQawN,GAAwB,SAAC/N,GACpC,IAAAgO,GACEC,EAAAA,EAAAA,IAA2BjO,EAAKgJ,IAAK,CAAE5I,KAAMJ,EAAKI,OACpD,MAAO,CAAE8N,mBAFuBF,EAAxB7N,KAEqBgO,0BAFuCH,EAAlCzN,QAGpC,EAEa6N,GAAsC,WACjD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADwC3O,EAAAA,EAAAA,GAAA0O,EAAA,GADR,GAGzC,EAEaE,GAA+B,SAACvO,GAC3C,IAAAwO,GAGIC,EAAAA,EAAAA,IAAkCzO,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAC9D,MAAO,CAAEsO,0BAHwBF,EAA/BrO,KAGkCwO,iCAFOH,EAAzCjO,QAGJ,EAEaqO,GAA2B,WACtC,IAAAC,GAAgCC,EAAAA,EAAAA,MAChC,MAAO,EAD2DnP,EAAAA,EAAAA,GAAAkP,EAAA,GAAtC,GAE9B,EAEaE,GAAkC,WAC7C,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADoCtP,EAAAA,EAAAA,GAAAqP,EAAA,GADR,GAGrC,EAEaE,GAA4C,WACvD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD8CzP,EAAAA,EAAAA,GAAAwP,EAAA,GADR,GAG/C,EAEaE,GAAuB,WAClC,IAAAC,GAA4BC,EAAAA,EAAAA,MAC5B,MAAO,EADmD5P,EAAAA,EAAAA,GAAA2P,EAAA,GAAlC,GAE1B,EACaE,GAA6C,WACxD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD+C/P,EAAAA,EAAAA,GAAA8P,EAAA,GADR,GAGhD,EAEaE,GAAuC,SAAC3P,GACnD,IAAA4P,GAGIC,EAAAA,EAAAA,IAA0C7P,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACtE,MAAO,CACL0P,kCAJuCF,EAAvCzP,KAKA4P,yCAJiDH,EAAjDrP,QAMJ,EAEayP,GAA4C,WACvD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD8CvQ,EAAAA,EAAAA,GAAAsQ,EAAA,GADR,GAG/C,EAGaE,GAA2B,WACtC,IAAAC,GAAgCC,EAAAA,EAAAA,MAChC,MAAO,EADkE1Q,EAAAA,EAAAA,GAAAyQ,EAAA,GAA7C,GAE9B,EAEaE,GAAkB,SAACtQ,GAC9B,IAAAuQ,GACEC,EAAAA,EAAAA,IAA+BxQ,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OACzD,MAAO,CAAEqQ,iBAFqBF,EAAtBpQ,KAEmBuQ,wBAFqCH,EAAhChQ,QAGlC,EAEaoQ,GAAmC,SAAC3Q,GAC/C,IAAA4Q,GAGIC,EAAAA,EAAAA,IAAsC7Q,EAAKG,KAAM,CAAEC,KAAMJ,EAAKI,OAClE,MAAO,CACL0Q,8BAJmCF,EAAnCzQ,KAKA4Q,qCAJ6CH,EAA7CrQ,QAMJ,EAGayQ,GAAyB,WACpC,IAAAC,GAA8BC,EAAAA,EAAAA,MAC9B,MAAO,EADuDvR,EAAAA,EAAAA,GAAAsR,EAAA,GAApC,GAE5B,EAEaE,GAA8C,WACzD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADgD1R,EAAAA,EAAAA,GAAAyR,EAAA,GADR,GAGjD,EACaE,GAAuC,WAClD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADyC7R,EAAAA,EAAAA,GAAA4R,EAAA,GADR,GAG1C,EAEaE,GAA+B,WAC1C,IAAAC,GAAoCC,EAAAA,EAAAA,MACpC,MAAO,EADmEhS,EAAAA,EAAAA,GAAA+R,EAAA,GAA1C,GAElC,EAEaE,GAAwC,WACnD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD0CnS,EAAAA,EAAAA,GAAAkS,EAAA,GADR,GAG3C,EAEaE,GAAsC,WACjD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADwCtS,EAAAA,EAAAA,GAAAqS,EAAA,GADR,GAGzC,EACaE,GAA4C,WACvD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EAD8CzS,EAAAA,EAAAA,GAAAwS,EAAA,GADR,GAG/C,EACaE,GAAsC,WACjD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADwC5S,EAAAA,EAAAA,GAAA2S,EAAA,GADR,GAGzC,EAEaE,GAAsC,WACjD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADwC/S,EAAAA,EAAAA,GAAA8S,EAAA,GADR,GAGzC,EAaaE,GAA8B,WACzC,IAAAC,GAAmCC,EAAAA,EAAAA,MACnC,MAAO,EADiElT,EAAAA,EAAAA,GAAAiT,EAAA,GAAzC,GAEjC,EACaE,GAAuC,WAClD,IAAAC,GACEC,EAAAA,EAAAA,MACF,MAAO,EADyCrT,EAAAA,EAAAA,GAAAoT,EAAA,GADR,GAG1C,C,4/DC9oBaE,E,QAAsBC,EAAgBC,gBAAgB,CACjEC,UAAW,SAACC,GAAO,MAAM,CACvBC,uBAAuBC,EAAAA,EAAAA,IAAkBF,GACzCG,eAAeC,EAAAA,EAAAA,IAAsBJ,GACrCK,sBAAsBC,EAAAA,EAAAA,IAAeN,GACrCO,oBAAoBC,EAAAA,EAAAA,IAAaR,GACjCS,sBAAsBC,EAAAA,EAAAA,IAAeV,GACrCW,wBAAwBC,EAAAA,EAAAA,IAAoBZ,GAC5Ca,8BAA8BA,EAAAA,EAAAA,IAA6Bb,GAE3Dc,wBAAwBC,EAAAA,EAAAA,IAA6Bf,GACrDgB,cAAcC,EAAAA,EAAAA,IAAUjB,GACxBkB,mBAAmBC,EAAAA,EAAAA,IAAenB,GAClCoB,eAAeC,EAAAA,EAAAA,IAAarB,GAC5BsB,cAAcC,EAAAA,EAAAA,IAAYvB,GAC1BwB,eAAeC,EAAAA,EAAAA,IAAazB,GAC5B0B,0BAA0BC,EAAAA,EAAAA,IAAgB3B,GAC1C4B,oBAAoBC,EAAAA,EAAAA,IAAW7B,GAC/B8B,oBAAoBC,EAAAA,EAAAA,IAAsB/B,GAC1CgC,0BAA0BC,EAAAA,EAAAA,IAAqBjC,GAC/CkC,gBAAgBC,EAAAA,EAAAA,IAAYnC,GAC5BoC,eAAeC,EAAAA,EAAAA,IAAWrC,GAC1BsC,eAAeC,EAAAA,EAAAA,IAAavC,GAC5BwC,uBAAuBC,EAAAA,EAAAA,IAAczC,GACrC0C,sBAAsBC,EAAAA,EAAAA,IAAa3C,GACnC4C,sBAAsBC,EAAAA,EAAAA,IAAc7C,GACpC8C,uBAAuBC,EAAAA,EAAAA,IAAc/C,GACrCgD,mBAAmBC,EAAAA,EAAAA,IAAejD,GAClCkD,kBAAkBC,EAAAA,EAAAA,IAAcnD,GAChCoD,uBAAuBC,EAAAA,EAAAA,IAAiBrD,GACxCsD,4BAA4BC,EAAAA,EAAAA,IAAiBvD,GAC7CwD,sBAAsBC,EAAAA,EAAAA,IAA6BzD,GACnD5M,oBAAoBsQ,EAAAA,EAAAA,IAA2B1D,GAC/CvM,uBAAuBkQ,EAAAA,EAAAA,IAA8B3D,GACrDlM,wBAAwB8P,EAAAA,EAAAA,IAA+B5D,GACvD5L,0BAA0ByP,EAAAA,EAAAA,IAAiC7D,GAC3D8D,YAAYC,EAAAA,EAAAA,IAAmB/D,GAC/BgE,mBAAmBC,EAAAA,EAAAA,IAA0BjE,GAC7CkE,eAAeC,EAAAA,EAAAA,IAAsBnE,GACrCoE,kBAAkBC,EAAAA,EAAAA,IAAyBrE,GAC3CsE,yBAAyBC,EAAAA,EAAAA,IAAgCvE,GACzDwE,wBAAwBC,EAAAA,EAAAA,IAA+BzE,GACvDtL,sBAAsBgQ,EAAAA,EAAAA,IAA6B1E,GACnD2E,kBAAkBC,EAAAA,EAAAA,IAAyB5E,GAC3C6E,oCACEC,EAAAA,EAAAA,IAA2C9E,GAC7C+E,mCACEC,EAAAA,EAAAA,IAA0ChF,GAE5CiF,uBAAuBC,EAAAA,EAAAA,IAA8BlF,GACrDmF,0BAA0BC,EAAAA,EAAAA,IAAiCpF,GAC3DqF,yBAAyBC,EAAAA,EAAAA,IAAgCtF,GACzDpK,qBAAqB2P,EAAAA,EAAAA,IAA4BvF,GACjD/J,wBAAwBuP,EAAAA,EAAAA,IAA8BxF,GACtDyF,wBAAwBC,EAAAA,EAAAA,IAA8B1F,GACtD2F,2BAA2BC,EAAAA,EAAAA,IAAiC5F,GAC5D6F,2BAA2BC,EAAAA,EAAAA,IAAiC9F,GAC5D+F,8BAA8BC,EAAAA,EAAAA,IAAqChG,GACnEiG,sBAAsBC,EAAAA,EAAAA,IAA4BlG,GAClDmG,8BAA8BC,EAAAA,EAAAA,IAAqCpG,GACnEqG,6BAA6BC,EAAAA,EAAAA,IAAmCtG,GAChEjJ,6BAA6BwP,EAAAA,EAAAA,IAAoCvG,GACjEwG,0BAA0BC,EAAAA,EAAAA,IAAiCzG,GAC3D0G,6BAA6BC,EAAAA,EAAAA,IAAoC3G,GACjE4G,6BAA6BC,EAAAA,EAAAA,IAAoC7G,GACjE8G,gCACEC,EAAAA,EAAAA,IAAuC/G,GACzCgH,gCACEC,EAAAA,EAAAA,IAAuCjH,GACzCkH,8BAA8BC,EAAAA,EAAAA,IAAqCnH,GACnEnI,8BAA8BuP,EAAAA,EAAAA,IAAqCpH,GACnEqH,iCACEC,EAAAA,EAAAA,IAAwCtH,GAC1CuH,iCACEC,EAAAA,EAAAA,IAAwCxH,GAC1CrH,sBAAsB8O,EAAAA,EAAAA,IAA6BzH,GACnD0H,yBAAyBC,EAAAA,EAAAA,IAAgC3H,GACzD4H,6BAA6BC,EAAAA,EAAAA,IAAoC7H,GACjE8H,yBAAyBC,EAAAA,EAAAA,IAAgC/H,GACzDgI,4BAA4BC,EAAAA,EAAAA,IAAmCjI,GAC/DkI,wCACEC,EAAAA,EAAAA,IAA+CnI,GACjDoI,+BACEC,EAAAA,EAAAA,IAAsCrI,GACxCsI,mCACEC,EAAAA,EAAAA,IAA0CvI,GAC5CwI,mCACEC,EAAAA,EAAAA,IAA0CzI,GAC5C0I,uCACEC,EAAAA,EAAAA,IAA8C3I,GAChD4I,8BAA8BC,EAAAA,EAAAA,IAAqC7I,GACnE8I,8BAA8BC,EAAAA,EAAAA,IAAqC/I,GACnEgJ,0BAA0BC,EAAAA,EAAAA,IAAiCjJ,GAC3DkJ,0BAA0BC,EAAAA,EAAAA,IAAiCnJ,GAC3DoJ,yBAAyBC,EAAAA,EAAAA,IAAgCrJ,GACzDsJ,oCACEC,EAAAA,EAAAA,IAA2CvJ,GAE7CwJ,4BAA4BC,EAAAA,EAAAA,IAAmCzJ,GAC/D0J,gCACEC,EAAAA,EAAAA,IAAuC3J,GACzC4J,4BAA4BC,EAAAA,EAAAA,IAAmC7J,GAC/D8J,8BAA8BC,EAAAA,EAAAA,IAAqC/J,GACnEgK,6BAA6BC,EAAAA,EAAAA,IAAoCjK,GACjEkK,6BAA6BC,EAAAA,EAAAA,IAAoCnK,GACjEoK,2BAA2BC,EAAAA,EAAAA,IAAkCrK,GAC7DxF,uBAAuB8P,EAAAA,EAAAA,IAA8BtK,GACrDuK,oBAAoBC,EAAAA,EAAAA,IAA2BxK,GAC/CnF,oBAAoB4P,EAAAA,EAAAA,IAA2BzK,GAC/C0K,kCACEC,EAAAA,EAAAA,IAAyC3K,GAE3C3E,2BAA2BuP,EAAAA,EAAAA,IAAkC5K,GAC7D6K,uBAAuBC,EAAAA,EAAAA,IAA8B9K,GACrD+K,8BAA8BC,EAAAA,EAAAA,IAAqChL,GACnEiL,wCACEC,EAAAA,EAAAA,IAA+ClL,GACjDmL,mBAAmBC,EAAAA,EAAAA,IAA0BpL,GAC7CqL,yCACEC,EAAAA,EAAAA,IAAgDtL,GAClDvD,mCACE8O,EAAAA,EAAAA,IAA0CvL,GAC5CwL,wCACEC,EAAAA,EAAAA,IAA+CzL,GACjDvC,+BACEiO,EAAAA,EAAAA,IAAsC1L,GACxC2L,qBAAqBC,EAAAA,EAAAA,IAA4B5L,GACjD6L,0CACEC,EAAAA,EAAAA,IAAiD9L,GACnD+L,mCACEC,EAAAA,EAAAA,IAA0ChM,GAC5CiM,2BAA2BC,EAAAA,EAAAA,IAAkClM,GAC7DmM,oCACEC,EAAAA,EAAAA,IAA2CpM,GAC7CqM,kCACEC,EAAAA,EAAAA,IAAyCtM,GAC3CuM,wCACEC,EAAAA,EAAAA,IAA+CxM,GACjDyM,kCACEC,EAAAA,EAAAA,IAAyC1M,GAC3C2M,kCACEC,EAAAA,EAAAA,IAAyC5M,GAC3C6M,+BACEC,EAAAA,EAAAA,IAAsC9M,GACxC+M,0BAA0BC,EAAAA,EAAAA,IAAiChN,GAC3DiN,mCACEC,EAAAA,EAAAA,IAA0ClN,GAC7C,IAID3T,EAuHEuT,EAvHFvT,iCACAI,EAsHEmT,EAtHFnT,yBACAI,EAqHE+S,EArHF/S,6BACAQ,EAoHEuS,EApHFvS,2BACAK,EAmHEkS,EAnHFlS,6BACAyP,EAkHEyC,EAlHFzC,+BACAH,EAiHE4C,EAjHF5C,wCACAjP,EAgHE6R,EAhHF7R,+BACAK,EA+GEwR,EA/GFxR,wBACAG,EA8GEqR,EA9GFrR,6BACAG,EA6GEkR,EA7GFlR,sBACAK,EA4GE6Q,EA5GF7Q,qBACAK,EA2GEwQ,EA3GFxQ,sBACAK,EA0GEmQ,EA1GFnQ,iCACAK,EAyGE8P,EAzGF9P,8BACAG,EAwGE2P,EAxGF3P,8BACAG,EAuGEwP,EAvGFxP,oCACAG,EAsGEqP,EAtGFrP,0BACAG,EAqGEkP,EArGFlP,yBACAG,EAoGE+O,EApGF/O,sBACAK,EAmGE0O,EAnGF1O,iCACAG,EAkGEuO,EAlGFvO,gCAEAG,GAgGEoO,EAjGFuN,6BAiGEvN,EAhGFpO,kCACAG,EA+FEiO,EA/FFjO,0BACAM,EA8FE2N,EA9FF3N,yBACAM,EA6FEqN,EA7FFrN,iCACAG,EA4FEkN,EA5FFlN,mCACAM,EA2FE4M,EA3FF5M,gCACAG,EA0FEyM,EA1FFzM,2BACAK,EAyFEoM,EAzFFpM,8BACAK,EAwFE+L,EAxFF/L,+BACAK,EAuFE0L,EAvFF1L,iCAOAM,GAgFEoL,EAtFFwN,sBAsFExN,EArFFyN,0BAqFEzN,EApFF0N,sBAoFE1N,EAnFF2N,4BAmFE3N,EAlFF4N,mCAkFE5N,EAjFF6N,kCAiFE7N,EAhFFpL,8BACAM,EA+EE8K,EA/EF9K,4BACAG,EA8EE2K,EA9EF3K,8CACAG,EA6EEwK,EA7EFxK,6CAGAG,GA0EEqK,EA5EF8N,8BA4EE9N,EA3EF+N,oCA2EE/N,EA1EFrK,oCACAG,EAyEEkK,EAzEFlK,4BACAM,EAwEE4J,EAxEF5J,+BAIAK,GAoEEuJ,EAvEFgO,kCAuEEhO,EAtEFiO,qCAsEEjO,EArEFkO,qCAqEElO,EApEFvJ,yCAEAG,GAkEEoJ,EAnEFmO,6BAmEEnO,EAlEFpJ,yCACAG,EAiEEiJ,EAjEFjJ,uCACAG,EAgEE8I,EAhEF9I,oCACAK,EA+DEyI,EA/DFzI,oCACAG,EA8DEsI,EA9DFtI,uCACAG,EA6DEmI,EA7DFnI,uCAGAQ,GA0DE2H,EA5DFoO,0CA4DEpO,EA3DFqO,0CA2DErO,EA1DF3H,yCACAL,EAyDEgI,EAzDFhI,qCACAQ,EAwDEwH,EAxDFxH,2CACAG,GAuDEqH,EAvDFrH,2CACAG,GAsDEkH,EAtDFlH,6BACAK,GAqDE6G,EArDF7G,mCASAG,IA4CE0G,EApDFsO,oCAoDEtO,EAnDFuO,mCAmDEvO,EAlDFwO,mCAkDExO,EAjDFyO,+CAiDEzO,EAhDF0O,yCAgDE1O,EA/CF2O,6CA+CE3O,EA9CF4O,0CA8CE5O,EA7CF6O,iDA6CE7O,EA5CF1G,yCACAG,GA2CEuG,EA3CFvG,wCAIAG,IAuCEoG,EA1CF8O,oCA0CE9O,EAzCF+O,oCAyCE/O,EAxCFgP,mCAwCEhP,EAvCFpG,+CAGAG,IAoCEiG,EAtCFiP,mCAsCEjP,EArCFkP,0CAqCElP,EApCFjG,uCACAG,GAmCE8F,EAnCF9F,wCAEAG,IAiCE2F,EAlCFmP,uCAkCEnP,EAjCF3F,wCACAG,GAgCEwF,EAhCFxF,qCACAG,GA+BEqF,EA/BFrF,8BAEAK,IA6BEgF,EA9BFoP,2BA8BEpP,EA7BFhF,4BACAK,GA4BE2E,EA5BF3E,4CACAG,GA2BEwE,EA3BFxE,kCACAK,GA0BEmE,EA1BFnE,iCACAG,GAyBEgE,EAzBFhE,wCACAG,GAwBE6D,EAxBF7D,kDACAG,GAuBE0D,EAvBF1D,6BACAG,GAsBEuD,EAtBFvD,mDAEAG,GAoBEoD,EApBFpD,0CACAK,GAmBE+C,EAnBF/C,kDAEAW,GAiBEoC,EAjBFpC,sCAGAK,GAcE+B,EAdF/B,+BAGAG,GAWE4B,EAXF5B,oDACAG,GAUEyB,EAVFzB,6CACAG,GASEsB,EATFtB,qCACAG,GAQEmB,EARFnB,8CACAG,GAOEgB,EAPFhB,4CACAG,GAMEa,EANFb,kDACAG,GAKEU,EALFV,4CACAG,GAIEO,EAJFP,4CAEAG,IAEEI,EAHFqP,sCAGErP,EAFFJ,qCACAG,GACEC,EADFD,4C","sources":["hooks/member_tab/admission-api.js","services/admission/admissionApiDynamic.js"],"sourcesContent":["import {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllAppAtInstituteQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchCancelStatusModeMutation,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetAllClassesQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useGetAllDepartmentQuery,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetNewApplicationMutation,\n  useGetOneApplicationQuery,\n  useGetUserCancelMutation,\n  useGetUserConfirmMutation,\n  useNewUserApplyMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useRetrieveMarkCompleteMutation,\n  useRetrieveNewClassAllotMutation,\n  useRetrievePaidRemainFeeMutation,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n  useGetDailyCollectionByAdmissionQuery,\n  useEditStudentGrNumberMutation,\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} from \"../../services/admission/admissionApiDynamic\";\n\nexport const useAssignAdmissionHead = () => {\n  const [assignAdmissionHead] = useActivateAdmissionHeadMutation();\n  return [assignAdmissionHead];\n};\n\nexport const useEditAdmission = () => {\n  const [editAdmission] = useEditAdmissionMutation();\n  return [editAdmission];\n};\n\nexport const useGetAdmissionDetail = (args) => {\n  const { data: getAdmissionDetail, refetch: getAdmissionDetailRefetch } =\n    useFetchAdmissionDetailQuery(args.data, { skip: args.skip });\n  return { getAdmissionDetail, getAdmissionDetailRefetch };\n};\n\nexport const useAllOngoingApp = (args) => {\n  const { data: allOngoingApp, refetch: allOngoingAppRefetch } =\n    useFetchAllOngoingAppQuery(args.data, { skip: args.skip });\n  return { allOngoingApp, allOngoingAppRefetch };\n};\n\nexport const useAllCompletedApp = (args) => {\n  const { data: allCompletedApp, refetch: allCompletedAppRefetch } =\n    useFetchAllCompletedAppQuery(args.data, { skip: args.skip });\n  return { allCompletedApp, allCompletedAppRefetch };\n};\n\nexport const useAllAppAtInstitute = (args) => {\n  const { data: allAppAtInstitute, refetch: allAppAtInstituteRefetch } =\n    useFetchAllAppAtInstituteQuery(args.data, { skip: args.skip });\n  return { allAppAtInstitute, allAppAtInstituteRefetch };\n};\n\nexport const useNewUserApply = () => {\n  const [newUserApply] = useNewUserApplyMutation();\n  return [newUserApply];\n};\nexport const useCreateNewApplication = () => {\n  const [createNewApplication] = useGetNewApplicationMutation();\n  return [createNewApplication];\n};\n\nexport const useGetAllRequest = (args) => {\n  const { data: getAllRequestList, refetch: getAllRequestListRefetch } =\n    useGetAllRequestQuery(args.data, { skip: args.skip });\n  return { getAllRequestList, getAllRequestListRefetch };\n};\nexport const useGetAllSelect = (args) => {\n  const { data: getAllSelectList, refetch: getAllSelectListRefetch } =\n    useGetAllSelectQuery(args.data, { skip: args.skip });\n  return { getAllSelectList, getAllSelectListRefetch };\n};\nexport const useGetAllConfirm = (args) => {\n  const { data: getAllConfirmList, refetch: getAllConfirmListRefetch } =\n    useGetAllConfirmQuery(args.data, { skip: args.skip });\n  return { getAllConfirmList, getAllConfirmListRefetch };\n};\n\nexport const useGetAllConfirmMultiselect = (args) => {\n  const {\n    data: getAllConfirmListMulitselect,\n    refetch: getAllConfirmListMulitselectRefetch,\n  } = useGetAllConfirmMultiselectQuery(args.data, { skip: args.skip });\n  return { getAllConfirmListMulitselect, getAllConfirmListMulitselectRefetch };\n};\n\nexport const useSelectAdmissionApplicant = () => {\n  const [selectAdmissionApplicant] = useFetchUserSelectAppMutation();\n  return [selectAdmissionApplicant];\n};\nexport const useCancelAdmissionApplicant = () => {\n  const [cancelAdmissionApplicant] = useFetchUserCancelAppMutation();\n  return [cancelAdmissionApplicant];\n};\nexport const useStudentPayMode = () => {\n  const [studentPayMode] = useFetchUserSelectStatusAppMutation();\n  return [studentPayMode];\n};\nexport const useApplicantAdmissionConfirm = () => {\n  const [confirmAppliacntAdmission] = useGetUserConfirmMutation();\n  return [confirmAppliacntAdmission];\n};\nexport const useApplicantAdmissionCancel = () => {\n  const [cancelAppliacntAdmission] = useGetUserCancelMutation();\n  return [cancelAppliacntAdmission];\n};\nexport const useGetAllClasses = (args) => {\n  const { data: getAllClassesList, refetch: getAllClassesListRefetch } =\n    useGetAllClassesQuery(args.data, { skip: args.skip });\n  return { getAllClassesList, getAllClassesListRefetch };\n};\n\nexport const useApplicantAdmissionAllotSeat = () => {\n  const [applicantAllotSeat] = useRetrieveNewClassAllotMutation();\n  return [applicantAllotSeat];\n};\nexport const useApplicationComplete = () => {\n  const [completeAdmissionApplication] = useRetrieveMarkCompleteMutation();\n  return [completeAdmissionApplication];\n};\n\nexport const useApplicantAdmissionRemainingFees = () => {\n  const [applicantRemainingFees] = useRetrievePaidRemainFeeMutation();\n  return [applicantRemainingFees];\n};\n\nexport const useOneApplicationDetail = (args) => {\n  const { data: oneApplicationDetail, refetch: oneApplicationDetailRefetch } =\n    useGetOneApplicationQuery(args.apid, { skip: args.skip });\n  return { oneApplicationDetail, oneApplicationDetailRefetch };\n};\n\nexport const useGetAllDepartment = (args) => {\n  const { data: allDepartmentList, refetch: allDepartmentListRefetch } =\n    useGetAllDepartmentQuery(args.aid, { skip: args.skip });\n  return { allDepartmentList, allDepartmentListRefetch };\n};\n\nexport const useCancelStudentApplicationStatus = () => {\n  const [cancelApplication] = useFetchCancelStatusModeMutation();\n  return [cancelApplication];\n};\n\nexport const useRenderStudentAdmissionFees = (args) => {\n  const {\n    data: sudentAdmissionFeesList,\n    refetch: sudentAdmissionFeesListRefetch,\n  } = useRenderStudentAdmissionFeesQuery(args.sid, { skip: args.skip });\n  return { sudentAdmissionFeesList, sudentAdmissionFeesListRefetch };\n};\n\nexport const useCollectApplicantDocs = () => {\n  const [collectDocs] = useCollectApplicantDocsMutation();\n  return [collectDocs];\n};\nexport const useAdmissionBatchList = (args) => {\n  const { data: admissionBatchList, refetch: admissionBatchListRefetch } =\n    useAdmissionBatchListQuery(args.aid, { skip: args.skip });\n  return { admissionBatchList, admissionBatchListRefetch };\n};\n\nexport const useAdmissionAllottedList = (args) => {\n  const { data: admissionAllottedList, refetch: admissionAllottedListRefetch } =\n    useAdmissionAllottedListQuery(args.data, { skip: args.skip });\n  return { admissionAllottedList, admissionAllottedListRefetch };\n};\nexport const useAdmissionCancelledList = (args) => {\n  const {\n    data: admissionCancelledList,\n    refetch: admissionCancelledListRefetch,\n  } = useAdmissionCancelledListQuery(args.data, { skip: args.skip });\n  return { admissionCancelledList, admissionCancelledListRefetch };\n};\nexport const useAdmissionClassMasterList = (args) => {\n  const {\n    data: admissionClassMasterList,\n    refetch: admissionClassMasterListRefetch,\n  } = useAdmissionClassMasterListQuery(args.did, { skip: args.skip });\n  return { admissionClassMasterList, admissionClassMasterListRefetch };\n};\n\nexport const useAddEnquiry = () => {\n  const [addEnquiry] = useAddEnquiryMutation();\n  return [addEnquiry];\n};\n\nexport const useGetAllEnquiryList = (args) => {\n  const { data: getAllEnquiryList, refetch: getAllEnquiryListRefetch } =\n    useGetAllEnquiryListQuery(args.data, { skip: args.skip });\n  return { getAllEnquiryList, getAllEnquiryListRefetch };\n};\nexport const useGetOneEnquiry = (args) => {\n  const { data: oneEnquiryDetail, refetch: oneEnquiryDetailRefetch } =\n    useGetOneEnquiryQuery(args.eid, { skip: args.skip });\n  return { oneEnquiryDetail, oneEnquiryDetailRefetch };\n};\n\nexport const useOneEnquiryAction = () => {\n  const [oneEnquiryAction] = useOneEnquiryActionMutation();\n  return [oneEnquiryAction];\n};\n\nexport const useDirectJoinFormAdmission = () => {\n  const [directJoinFormAdmission] = useDirectJoinFormAdmissionMutation();\n  return [directJoinFormAdmission];\n};\nexport const useSubmitAmountToFinanace = () => {\n  const [submitAmountToFinanace] = useSubmitAmountToFinanaceMutation();\n  return [submitAmountToFinanace];\n};\n\nexport const useGetAccountWithNumber = (args) => {\n  const { data: getAccountWithNumber, refetch: getAccountWithNumberRefetch } =\n    useGetAccountWithNumberQuery(args.phoneKey, { skip: args.skip });\n  return { getAccountWithNumber, getAccountWithNumberRefetch };\n};\nexport const useEditFeeStructure = () => {\n  const [editFeeStructure] = useEditFeeStructureMutation();\n  return [editFeeStructure];\n};\n\nexport const useConfirmStudentModeByAdmissionAdmin = () => {\n  const [confirmStudentModeByAdmission] =\n    useConfirmStudentModeByAdmissionAdminMutation();\n  return [confirmStudentModeByAdmission];\n};\nexport const useRejectStudentModeByAdmissionAdmin = () => {\n  const [rejectStudentModeByAdmission] =\n    useRejectStudentModeByAdmissionAdminMutation();\n  return [rejectStudentModeByAdmission];\n};\n\nexport const useGetReceiptByAdmission = (args) => {\n  const { data: getReceiptByAdmission, refetch: getReceiptByAdmissionRefetch } =\n    useGetReceiptByAdmissionQuery(args.data, { skip: args.skip });\n  return { getReceiptByAdmission, getReceiptByAdmissionRefetch };\n};\n\nexport const useReceiptActionByAdmission = () => {\n  const [receiptActionByAdmission] = useReceiptActionByAdmissionMutation();\n  return [receiptActionByAdmission];\n};\nexport const useReApplyReceiptByStudent = () => {\n  const [reApplyReceiptByStudent] = useReApplyReceiptByStudentMutation();\n  return [reApplyReceiptByStudent];\n};\n\nexport const useGetFeeReceiptDetail = (args) => {\n  const { data: getFeeReceiptDetail, refetch: getFeeReceiptDetailRefetch } =\n    useGetFeeReceiptDetailQuery(args.rid, { skip: args.skip });\n  return { getFeeReceiptDetail, getFeeReceiptDetailRefetch };\n};\n\nexport const useGetDocumentByAdmission = (args) => {\n  const {\n    data: getDocumentByAdmission,\n    refetch: getDocumentByAdmissionRefetch,\n  } = useGetDocumentByAdmissionQuery(args.data, { skip: args.skip });\n  return { getDocumentByAdmission, getDocumentByAdmissionRefetch };\n};\n\nexport const useAddDocumentByAdmission = () => {\n  const [addDocumentByAdmission] = useAddDocumentByAdmissionMutation();\n  return [addDocumentByAdmission];\n};\nexport const useUpdateDocumentByAdmission = () => {\n  const [updateDocumentByAdmission] = useUpdateDocumentByAdmissionMutation();\n  return [updateDocumentByAdmission];\n};\n\nexport const useDeleteDocumentByAdmission = () => {\n  const [deleteDocumentByAdmission] = useDeleteDocumentByAdmissionMutation();\n  return [deleteDocumentByAdmission];\n};\n\nexport const useRefundAmountByAdmissionAdmin = () => {\n  const [refundAmountByAdmissionAdmin] =\n    useRefundAmountByAdmissionAdminMutation();\n  return [refundAmountByAdmissionAdmin];\n};\n\nexport const useGetRefundByAdmission = (args) => {\n  const { data: getRefundByAdmission, refetch: getRefundByAdmissionRefetch } =\n    useGetRefundByAdmissionQuery(args.data, { skip: args.skip });\n  return { getRefundByAdmission, getRefundByAdmissionRefetch };\n};\n\nexport const useUpdateRemarkByAdmissionAdmin = () => {\n  const [updateRemarkByAdmissionAdmin] =\n    useUpdateRemarkByAdmissionAdminMutation();\n  return [updateRemarkByAdmissionAdmin];\n};\n\nexport const useExportFilterDataByAdmission = () => {\n  const [exportFilterDataByAdmission] =\n    useExportFilterDataByAdmissionMutation();\n  return [exportFilterDataByAdmission];\n};\n\nexport const useGetAllExcelByAdmissionAdmin = (args) => {\n  const {\n    data: getAllExcelByAdmissionAdmin,\n    refetch: getAllExcelByAdmissionAdminRefetch,\n  } = useGetAllExcelByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getAllExcelByAdmissionAdmin, getAllExcelByAdmissionAdminRefetch };\n};\n\nexport const usePayAdmissionFeeByStudent = () => {\n  const [payAdmissionFeeByStudent] = usePayAdmissionFeeByStudentMutation();\n  return [payAdmissionFeeByStudent];\n};\n\nexport const useUpdateExcelByAdmissionAdmin = () => {\n  const [updateExcelByAdmissionAdmin] =\n    useUpdateExcelByAdmissionAdminMutation();\n  return [updateExcelByAdmissionAdmin];\n};\n\nexport const useDeleteExcelByAdmissionAdmin = () => {\n  const [deleteExcelByAdmissionAdmin] =\n    useDeleteExcelByAdmissionAdminMutation();\n  return [deleteExcelByAdmissionAdmin];\n};\n\nexport const useUpdateDocumentByAdmissionAdmin = () => {\n  const [updateDocumentByAdmissionAdmin] =\n    useUpdateDocumentByAdmissionAdminMutation();\n  return [updateDocumentByAdmissionAdmin];\n};\n\nexport const useDeleteDocumentByAdmissionAdmin = () => {\n  const [deleteDocumentByAdmissionAdmin] =\n    useDeleteDocumentByAdmissionAdminMutation();\n  return [deleteDocumentByAdmissionAdmin];\n};\nexport const useGetModeratorByAdmissionAdmin = (args) => {\n  const {\n    data: getModeratorByAdmissionAdmin,\n    refetch: getModeratorByAdmissionAdminRefetch,\n  } = useGetModeratorByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getModeratorByAdmissionAdmin, getModeratorByAdmissionAdminRefetch };\n};\n\nexport const useAddModeratorByAdmissionAdmin = () => {\n  const [addModeratorByAdmissionAdmin] =\n    useAddModeratorByAdmissionAdminMutation();\n  return [addModeratorByAdmissionAdmin];\n};\n\nexport const useUpdateModeratorByAdmissionAdmin = () => {\n  const [updateModeratorByAdmissionAdmin] =\n    useUpdateModeratorByAdmissionAdminMutation();\n  return [updateModeratorByAdmissionAdmin];\n};\n\nexport const useDeleteModeratorByAdmissionAdmin = () => {\n  const [deleteModeratorByAdmissionAdmin] =\n    useDeleteModeratorByAdmissionAdminMutation();\n  return [deleteModeratorByAdmissionAdmin];\n};\n\nexport const useAdmissionGetSiteInfo = (args) => {\n  const { data: admissionGetSiteInfo, refetch: admissionGetSiteInfoRefetch } =\n    useAdmissionGetSiteInfoQuery(args.aid, { skip: args.skip });\n  return { admissionGetSiteInfo, admissionGetSiteInfoRefetch };\n};\n\nexport const useAdmissionUpdateSiteInfo = () => {\n  const [admissionUpdateSiteInfo] = useAdmissionUpdateSiteInfoMutation();\n  return [admissionUpdateSiteInfo];\n};\n\n//////////////\nexport const useGetScholarshipListAdmission = (args) => {\n  const {\n    data: getScholarshipListAdmission,\n    refetch: getScholarshipListAdmissionRefetch,\n  } = useGetScholarshipListAdmissionQuery(args.data, { skip: args.skip });\n  return { getScholarshipListAdmission, getScholarshipListAdmissionRefetch };\n};\n\nexport const useAddScholarshipAdmission = () => {\n  const [addScholarshipAdmission] = useAddScholarshipAdmissionMutation();\n  return [addScholarshipAdmission];\n};\nexport const useGetOneScholarshipAdmission = (args) => {\n  const {\n    data: getOneScholarshipAdmission,\n    refetch: getOneScholarshipAdmissionRefetch,\n  } = useGetOneScholarshipAdmissionQuery(args.sid, { skip: args.skip });\n  return { getOneScholarshipAdmission, getOneScholarshipAdmissionRefetch };\n};\n\nexport const useGetOneScholarshipAllCandidateAdmission = (args) => {\n  const {\n    data: getOneScholarshipAllCandidateAdmission,\n    refetch: getOneScholarshipAllCandidateAdmissionRefetch,\n  } = useGetOneScholarshipAllCandidateAdmissionQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    getOneScholarshipAllCandidateAdmission,\n    getOneScholarshipAllCandidateAdmissionRefetch,\n  };\n};\n\nexport const useOneSchloarshipActionAdmission = () => {\n  const [oneSchloarshipActionAdmission] =\n    useOneSchloarshipActionAdmissionMutation();\n  return [oneSchloarshipActionAdmission];\n};\n\nexport const useAddScholarshipFundCorpusAdmission = () => {\n  const [addScholarshipFundCorpusAdmission] =\n    useAddScholarshipFundCorpusAdmissionMutation();\n  return [addScholarshipFundCorpusAdmission];\n};\nexport const useGetScholarshipFundCorpusAdmission = (args) => {\n  const {\n    data: getScholarshipFundCorpusAdmission,\n    refetch: getScholarshipFundCorpusAdmissionRefetch,\n  } = useGetScholarshipFundCorpusAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getScholarshipFundCorpusAdmission,\n    getScholarshipFundCorpusAdmissionRefetch,\n  };\n};\n\nexport const useAddMoreScholarshipFundCorpusAdmission = () => {\n  const [addMoreScholarshipFundCorpusAdmission] =\n    useAddMoreScholarshipFundCorpusAdmissionMutation();\n  return [addMoreScholarshipFundCorpusAdmission];\n};\n\nexport const useUpdateApplicationByAdmission = () => {\n  const [updateApplicationByAdmission] =\n    useUpdateApplicationByAdmissionMutation();\n  return [updateApplicationByAdmission];\n};\n\nexport const useDeleteApplicationByAdmission = () => {\n  const [deleteApplicationByAdmission] =\n    useDeleteApplicationByAdmissionMutation();\n  return [deleteApplicationByAdmission];\n};\nexport const useForgetPasswordProtection = () => {\n  const [forgetPasswordProtection] = useForgetPasswordProtectionMutation();\n  return [forgetPasswordProtection];\n};\nexport const usePasswordProtectionToggle = () => {\n  const [passwordProtectionToggle] = usePasswordProtectionToggleMutation();\n  return [passwordProtectionToggle];\n};\nexport const usePasswordProtectionLogin = () => {\n  const [passwordProtectionLogin] = usePasswordProtectionLoginMutation();\n  return [passwordProtectionLogin];\n};\n\nexport const useUpdateFeeStructureByAppliationWise = () => {\n  const [updateFeeStructureByAppliationWise] =\n    useUpdateFeeStructureByAppliationWiseMutation();\n  return [updateFeeStructureByAppliationWise];\n};\n\nexport const useGetRefundedListByAdmission = (args) => {\n  const {\n    data: getRefundedListByAdmission,\n    refetch: getRefundedListByAdmissionRefetch,\n  } = useGetRefundedListByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getRefundedListByAdmission,\n    getRefundedListByAdmissionRefetch,\n  };\n};\n\nexport const useDirectJoinWithPayAdmission = () => {\n  const [directJoinFormWithPayAdmission] =\n    useDirectJoinFormWithPayAdmissionMutation();\n  return [directJoinFormWithPayAdmission];\n};\n\nexport const useCollectSetOffAdmissionFees = () => {\n  const [collectSetOffAdmissionFees] = useCollectSetOffAdmissionFeesMutation();\n  return [collectSetOffAdmissionFees];\n};\nexport const useAdmissionDocsActionByStudent = () => {\n  const [admissionDocsActionByStudent] =\n    useAdmissionDocsActionByStudentMutation();\n  return [admissionDocsActionByStudent];\n};\n\nexport const useScholarShipExcelByAdmission = () => {\n  const [scholarShipExcelByAdmission] =\n    useScholarShipExcelByAdmissionMutation();\n  return [scholarShipExcelByAdmission];\n};\nexport const useScholarShipExcelByInstitute = () => {\n  const [scholarShipExcelByInstitute] =\n    useScholarShipExcelByInstituteMutation();\n  return [scholarShipExcelByInstitute];\n};\n\nexport const useAddScholarNumberAdmission = () => {\n  const [addScholarNumberAdmission] = useAddScholarNumberAdmissionMutation();\n  return [addScholarNumberAdmission];\n};\n\nexport const useStudentDepartmentFees = (args) => {\n  const { data: studentDepartmentFees, refetch: studentDepartmentFeesRefetch } =\n    useStudentDepartmentFeesQuery(args.data, { skip: args.skip });\n  return { studentDepartmentFees, studentDepartmentFeesRefetch };\n};\n\nexport const useStudentBacklogFees = (args) => {\n  const { data: studentBacklogFees, refetch: studentBacklogFeesRefetch } =\n    useStudentBacklogFeesQuery(args.data, { skip: args.skip });\n  return { studentBacklogFees, studentBacklogFeesRefetch };\n};\n\nexport const useInternalFeeReceipt = (args) => {\n  const { data: internalFeeReceipt, refetch: internalFeeReceiptRefetch } =\n    useInternalFeeReceiptQuery(args.rid, { skip: args.skip });\n  return { internalFeeReceipt, internalFeeReceiptRefetch };\n};\n\nexport const useDropAdmissionFeesCardByAdmission = () => {\n  const [dropAdmissionFeesCardByAdmission] =\n    useDropAdmissionFeesCardByAdmissionMutation();\n  return [dropAdmissionFeesCardByAdmission];\n};\n\nexport const useAllApplicationByAdmission = (args) => {\n  const {\n    data: allApplicationByAdmission,\n    refetch: allApplicationByAdmissionRefetch,\n  } = useAllApplicationByAdmissionQuery(args.data, { skip: args.skip });\n  return { allApplicationByAdmission, allApplicationByAdmissionRefetch };\n};\n\nexport const useAddNewFeesByAdmission = () => {\n  const [addNewFeesByAdmission] = useAddNewFeesByAdmissionMutation();\n  return [addNewFeesByAdmission];\n};\n\nexport const useCollectNewAddFeesByAdmission = () => {\n  const [collectNewAddFeesByAdmission] =\n    useCollectNewAddFeesByAdmissionMutation();\n  return [collectNewAddFeesByAdmission];\n};\n\nexport const useGovernmentCollectNewAddFeesByAdmission = () => {\n  const [governmentCollectNewAddFeesByAdmission] =\n    useGovernmentCollectNewAddFeesByAdmissionMutation();\n  return [governmentCollectNewAddFeesByAdmission];\n};\n\nexport const useAdmissionReminder = () => {\n  const [admissionReminder] = useAdmissionReminderMutation();\n  return [admissionReminder];\n};\nexport const useAdmissionInstallmentEditFeesByAdmission = () => {\n  const [admissionInstallmentEditFeesByAdmission] =\n    useAdmissionInstallmentEditFeesByAdmissionMutation();\n  return [admissionInstallmentEditFeesByAdmission];\n};\n\nexport const useGetPendingCustomFilterByAdmission = (args) => {\n  const {\n    data: getPendingCustomFilterByAdmission,\n    refetch: getPendingCustomFilterByAdmissionRefetch,\n  } = useGetPendingCustomFilterByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getPendingCustomFilterByAdmission,\n    getPendingCustomFilterByAdmissionRefetch,\n  };\n};\n\nexport const useGetBatchStandardWithMultipleDepartment = () => {\n  const [getBatchStandardWithMultipleDepartment] =\n    useGetBatchStandardWithMultipleDepartmentMutation();\n  return [getBatchStandardWithMultipleDepartment];\n};\n\n// with new filter type\nexport const useAllAdmissionRemaining = () => {\n  const [allAdmissionRemaining] = useFetchAdmissionRemainingArrayMutation();\n  return [allAdmissionRemaining];\n};\n\nexport const useAllRemaining = (args) => {\n  const { data: allRemainingList, refetch: allRemainingListRefetch } =\n    useFetchAllRemainingArrayQuery(args.data, { skip: args.skip });\n  return { allRemainingList, allRemainingListRefetch };\n};\n\nexport const useGetDailyCollectionByAdmission = (args) => {\n  const {\n    data: getDailyCollectionByAdmission,\n    refetch: getDailyCollectionByAdmissionRefetch,\n  } = useGetDailyCollectionByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getDailyCollectionByAdmission,\n    getDailyCollectionByAdmissionRefetch,\n  };\n};\n\n// student gr edit\nexport const useEditStudentGrNumber = () => {\n  const [editStudentGrNumber] = useEditStudentGrNumberMutation();\n  return [editStudentGrNumber];\n};\n//\nexport const useAdmissionRevertBackSelectedToApplication = () => {\n  const [admissionRevertBackSelectedToApplication] =\n    useAdmissionRevertBackSelectedToApplicationMutation();\n  return [admissionRevertBackSelectedToApplication];\n};\nexport const useAdmissionRevertBackDocsToSelected = () => {\n  const [admissionRevertBackDocsToSelected] =\n    useAdmissionRevertBackDocsToSelectedMutation();\n  return [admissionRevertBackDocsToSelected];\n};\n\nexport const useRemoveFeesInstallmentCard = () => {\n  const [removeFeesInstallmentCard] = useRemoveFeesInstallmentCardMutation();\n  return [removeFeesInstallmentCard];\n};\n\nexport const useTransferApplicatToOtherApplication = () => {\n  const [transferApplicatToOtherApplication] =\n    useTransferApplicatToOtherApplicationMutation();\n  return [transferApplicatToOtherApplication];\n};\n\nexport const useExistStudentFeesExcelByAdmission = () => {\n  const [existStudentFeesExcelByAdmission] =\n    useExistStudentFeesExcelByAdmissionMutation();\n  return [existStudentFeesExcelByAdmission];\n};\nexport const useStudentValidaForApplicationByAdmission = () => {\n  const [studentValidaForApplicationByAdmission] =\n    useStudentValidaForApplicationByAdmissionMutation();\n  return [studentValidaForApplicationByAdmission];\n};\nexport const useStudentBankValidationByAdmission = () => {\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmissionMutation();\n  return [studentBankValidationByAdmission];\n};\n\nexport const useMarkCompleteToOngoingApplication = () => {\n  const [markCompleteToOngoingApplication] =\n    useMarkCompleteToOngoingApplicationMutation();\n  return [markCompleteToOngoingApplication];\n};\n\nexport const useGetReminderHistoryByAdmission = (args) => {\n  const {\n    data: getReminderHistoryByAdmission,\n    refetch: getReminderHistoryByAdmissionRefetch,\n  } = useGetReminderHistoryByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getReminderHistoryByAdmission,\n    getReminderHistoryByAdmissionRefetch,\n  };\n};\n\nexport const useGetOsReminderStudentList = () => {\n  const [getOsReminderStudentList] = useGetOsReminderStudentListMutation();\n  return [getOsReminderStudentList];\n};\nexport const useStudentScholarshipNumberDublicate = () => {\n  const [studentScholarshipNumberDublicate] =\n    useStudentScholarshipNumberDublicateMutation();\n  return [studentScholarshipNumberDublicate];\n};\n","import {\n  activateAdmission,\n  editAdmissionFunction,\n  fetchAdmission,\n  fetchOngoing,\n  fetchCompleted,\n  fetchRemainingArray,\n  fetchAdmissionRemainingArray,\n  atInstituteSearchApplication,\n  userApply,\n  newApplication,\n  fetchRequest,\n  fetchSelect,\n  fetchConfirm,\n  fetchConfirmAll,\n  userSelect,\n  userCancelApplication,\n  userSelectStatusMode,\n  userConfirm,\n  userCancel,\n  fetchClasses,\n  newClassAllot,\n  markComplete,\n  oneStudentFee,\n  paidRemainFee,\n  oneApplication,\n  allDepartment,\n  cancelStatusMode,\n  studentAdmission,\n  collectApplicantDocsFunction,\n  admissionBatchListFunction,\n  admissionAllottedListFunction,\n  admissionCancelledListFunction,\n  admissionClassMasterListFunction,\n  addEnquiryFunction,\n  getAllEnquiryListFunction,\n  getOneEnquiryFunction,\n  oneEnquiryActionFunction,\n  directJoinFormAdmissionFunction,\n  submitAmountToFinanaceFunction,\n  getAccountWithNumberFunction,\n  editFeeStructureFunction,\n  confirmStudentModeByAdmissionAdminFunction,\n  rejectStudentModeByAdmissionAdminFunction,\n  getReceiptByAdmissionFunction,\n  receiptActionByAdmissionFunction,\n  reApplyReceiptByStudentFunction,\n  getFeeReceiptDetailFunction,\n  getDocumentByAdmissionFuction,\n  addDocumentByAdmissionFuction,\n  updateDocumentByAdmissionFuction,\n  deleteDocumentByAdmissionFuction,\n  refundAmountByAdmissionAdminFunction,\n  getRefundByAdmissionFuction,\n  updateRemarkByAdmissionAdminFunction,\n  exportFilterDataByAdmissionFuction,\n  getAllExcelByAdmissionAdminFunction,\n  payAdmissionFeeByStudentFunction,\n  updateExcelByAdmissionAdminFunction,\n  deleteExcelByAdmissionAdminFunction,\n  updateDocumentByAdmissionAdminFunction,\n  deleteDocumentByAdmissionAdminFunction,\n  addModeratorByAdmissionAdminFunction,\n  getModeratorByAdmissionAdminFunction,\n  updateModeratorByAdmissionAdminFunction,\n  deleteModeratorByAdmissionAdminFunction,\n  admissionGetSiteInfoFunction,\n  admissionUpdateSiteInfoFunction,\n  getScholarshipListAdmissionFunction,\n  addScholarshipAdmissionFunction,\n  getOneScholarshipAdmissionFunction,\n  getOneScholarshipAllCandidateAdmissionFunction,\n  oneSchloarshipActionAdmissionFunction,\n  addScholarshipFundCorpusAdmissionFunction,\n  getScholarshipFundCorpusAdmissionFunction,\n  addMoreScholarshipFundCorpusAdmissionFunction,\n  updateApplicationByAdmissionFunction,\n  deleteApplicationByAdmissionFunction,\n  forgetPasswordProtectionFunction,\n  passwordProtectionToggleFunction,\n  passwordProtectionLoginFunction,\n  updateFeeStructureByAppliationWiseFunction,\n  getRefundedListByAdmissionFunction,\n  directJoinFormWithPayAdmissionFunction,\n  collectSetOffAdmissionFeesFunction,\n  admissionDocsActionByStudentFunction,\n  scholarShipExcelByAdmissionFunction,\n  scholarShipExcelByInstituteFunction,\n  addScholarNumberAdmissionFunction,\n  studentDepartmentFeesFunction,\n  studentBacklogFeesFunction,\n  internalFeeReceiptFunction,\n  dropAdmissionFeesCardByAdmissionFunction,\n  allApplicationByAdmissionFunction,\n  addNewFeesByAdmissionFunction,\n  collectNewAddFeesByAdmissionFunction,\n  governmentCollectNewAddFeesByAdmissionFunction,\n  admissionReminderFunction,\n  admissionInstallmentEditFeesByAdmissionFunction,\n  getPendingCustomFilterByAdmissionFunction,\n  getBatchStandardWithMultipleDepartmentFunction,\n  getDailyCollectionByAdmissionFunction,\n  editStudentGrNumberFunction,\n  //\n  admissionRevertBackSelectedToApplicationFunction,\n  admissionRevertBackDocsToSelectedFunction,\n  removeFeesInstallmentCardFunction,\n  transferApplicatToOtherApplicationFunction,\n  existStudentFeesExcelByAdmissionFunction,\n  studentValidaForApplicationByAdmissionFunction,\n  studentBankValidationByAdmissionFunction,\n  markCompleteToOngoingApplicationFunction,\n  getReminderHistoryByAdmissionFunction,\n  getOsReminderStudentListFunction,\n  studentScholarshipNumberDublicateFunction,\n} from \"./admissionBuilderAPI\";\nimport { admissionNewApi } from \"./admissionNewApi\";\n\n//////////eeghfrwjeghw\nexport const admissionApiDynamic = admissionNewApi.injectEndpoints({\n  endpoints: (builder) => ({\n    activateAdmissionHead: activateAdmission(builder),\n    editAdmission: editAdmissionFunction(builder),\n    fetchAdmissionDetail: fetchAdmission(builder),\n    fetchAllOngoingApp: fetchOngoing(builder),\n    fetchAllCompletedApp: fetchCompleted(builder),\n    fetchAllRemainingArray: fetchRemainingArray(builder),\n    fetchAdmissionRemainingArray: fetchAdmissionRemainingArray(builder),\n\n    fetchAllAppAtInstitute: atInstituteSearchApplication(builder),\n    newUserApply: userApply(builder),\n    getNewApplication: newApplication(builder),\n    getAllRequest: fetchRequest(builder),\n    getAllSelect: fetchSelect(builder),\n    getAllConfirm: fetchConfirm(builder),\n    getAllConfirmMultiselect: fetchConfirmAll(builder),\n    fetchUserSelectApp: userSelect(builder),\n    fetchUserCancelApp: userCancelApplication(builder),\n    fetchUserSelectStatusApp: userSelectStatusMode(builder),\n    getUserConfirm: userConfirm(builder),\n    getUserCancel: userCancel(builder),\n    getAllClasses: fetchClasses(builder),\n    retrieveNewClassAllot: newClassAllot(builder),\n    retrieveMarkComplete: markComplete(builder),\n    getOneViewStudentFee: oneStudentFee(builder),\n    retrievePaidRemainFee: paidRemainFee(builder),\n    getOneApplication: oneApplication(builder),\n    getAllDepartment: allDepartment(builder),\n    fetchCancelStatusMode: cancelStatusMode(builder),\n    renderStudentAdmissionFees: studentAdmission(builder),\n    collectApplicantDocs: collectApplicantDocsFunction(builder),\n    admissionBatchList: admissionBatchListFunction(builder),\n    admissionAllottedList: admissionAllottedListFunction(builder),\n    admissionCancelledList: admissionCancelledListFunction(builder),\n    admissionClassMasterList: admissionClassMasterListFunction(builder),\n    addEnquiry: addEnquiryFunction(builder),\n    getAllEnquiryList: getAllEnquiryListFunction(builder),\n    getOneEnquiry: getOneEnquiryFunction(builder),\n    oneEnquiryAction: oneEnquiryActionFunction(builder),\n    directJoinFormAdmission: directJoinFormAdmissionFunction(builder),\n    submitAmountToFinanace: submitAmountToFinanaceFunction(builder),\n    getAccountWithNumber: getAccountWithNumberFunction(builder),\n    editFeeStructure: editFeeStructureFunction(builder),\n    confirmStudentModeByAdmissionAdmin:\n      confirmStudentModeByAdmissionAdminFunction(builder),\n    rejectStudentModeByAdmissionAdmin:\n      rejectStudentModeByAdmissionAdminFunction(builder),\n\n    getReceiptByAdmission: getReceiptByAdmissionFunction(builder),\n    receiptActionByAdmission: receiptActionByAdmissionFunction(builder),\n    reApplyReceiptByStudent: reApplyReceiptByStudentFunction(builder),\n    getFeeReceiptDetail: getFeeReceiptDetailFunction(builder),\n    getDocumentByAdmission: getDocumentByAdmissionFuction(builder),\n    addDocumentByAdmission: addDocumentByAdmissionFuction(builder),\n    updateDocumentByAdmission: updateDocumentByAdmissionFuction(builder),\n    deleteDocumentByAdmission: deleteDocumentByAdmissionFuction(builder),\n    refundAmountByAdmissionAdmin: refundAmountByAdmissionAdminFunction(builder),\n    getRefundByAdmission: getRefundByAdmissionFuction(builder),\n    updateRemarkByAdmissionAdmin: updateRemarkByAdmissionAdminFunction(builder),\n    exportFilterDataByAdmission: exportFilterDataByAdmissionFuction(builder),\n    getAllExcelByAdmissionAdmin: getAllExcelByAdmissionAdminFunction(builder),\n    payAdmissionFeeByStudent: payAdmissionFeeByStudentFunction(builder),\n    updateExcelByAdmissionAdmin: updateExcelByAdmissionAdminFunction(builder),\n    deleteExcelByAdmissionAdmin: deleteExcelByAdmissionAdminFunction(builder),\n    updateDocumentByAdmissionAdmin:\n      updateDocumentByAdmissionAdminFunction(builder),\n    deleteDocumentByAdmissionAdmin:\n      deleteDocumentByAdmissionAdminFunction(builder),\n    addModeratorByAdmissionAdmin: addModeratorByAdmissionAdminFunction(builder),\n    getModeratorByAdmissionAdmin: getModeratorByAdmissionAdminFunction(builder),\n    updateModeratorByAdmissionAdmin:\n      updateModeratorByAdmissionAdminFunction(builder),\n    deleteModeratorByAdmissionAdmin:\n      deleteModeratorByAdmissionAdminFunction(builder),\n    admissionGetSiteInfo: admissionGetSiteInfoFunction(builder),\n    admissionUpdateSiteInfo: admissionUpdateSiteInfoFunction(builder),\n    getScholarshipListAdmission: getScholarshipListAdmissionFunction(builder),\n    addScholarshipAdmission: addScholarshipAdmissionFunction(builder),\n    getOneScholarshipAdmission: getOneScholarshipAdmissionFunction(builder),\n    getOneScholarshipAllCandidateAdmission:\n      getOneScholarshipAllCandidateAdmissionFunction(builder),\n    oneSchloarshipActionAdmission:\n      oneSchloarshipActionAdmissionFunction(builder),\n    addScholarshipFundCorpusAdmission:\n      addScholarshipFundCorpusAdmissionFunction(builder),\n    getScholarshipFundCorpusAdmission:\n      getScholarshipFundCorpusAdmissionFunction(builder),\n    addMoreScholarshipFundCorpusAdmission:\n      addMoreScholarshipFundCorpusAdmissionFunction(builder),\n    updateApplicationByAdmission: updateApplicationByAdmissionFunction(builder),\n    deleteApplicationByAdmission: deleteApplicationByAdmissionFunction(builder),\n    forgetPasswordProtection: forgetPasswordProtectionFunction(builder),\n    passwordProtectionToggle: passwordProtectionToggleFunction(builder),\n    passwordProtectionLogin: passwordProtectionLoginFunction(builder),\n    updateFeeStructureByAppliationWise:\n      updateFeeStructureByAppliationWiseFunction(builder),\n\n    getRefundedListByAdmission: getRefundedListByAdmissionFunction(builder),\n    directJoinFormWithPayAdmission:\n      directJoinFormWithPayAdmissionFunction(builder),\n    collectSetOffAdmissionFees: collectSetOffAdmissionFeesFunction(builder),\n    admissionDocsActionByStudent: admissionDocsActionByStudentFunction(builder),\n    scholarShipExcelByAdmission: scholarShipExcelByAdmissionFunction(builder),\n    scholarShipExcelByInstitute: scholarShipExcelByInstituteFunction(builder),\n    addScholarNumberAdmission: addScholarNumberAdmissionFunction(builder),\n    studentDepartmentFees: studentDepartmentFeesFunction(builder),\n    studentBacklogFees: studentBacklogFeesFunction(builder),\n    internalFeeReceipt: internalFeeReceiptFunction(builder),\n    dropAdmissionFeesCardByAdmission:\n      dropAdmissionFeesCardByAdmissionFunction(builder),\n\n    allApplicationByAdmission: allApplicationByAdmissionFunction(builder),\n    addNewFeesByAdmission: addNewFeesByAdmissionFunction(builder),\n    collectNewAddFeesByAdmission: collectNewAddFeesByAdmissionFunction(builder),\n    governmentCollectNewAddFeesByAdmission:\n      governmentCollectNewAddFeesByAdmissionFunction(builder),\n    admissionReminder: admissionReminderFunction(builder),\n    admissionInstallmentEditFeesByAdmission:\n      admissionInstallmentEditFeesByAdmissionFunction(builder),\n    getPendingCustomFilterByAdmission:\n      getPendingCustomFilterByAdmissionFunction(builder),\n    getBatchStandardWithMultipleDepartment:\n      getBatchStandardWithMultipleDepartmentFunction(builder),\n    getDailyCollectionByAdmission:\n      getDailyCollectionByAdmissionFunction(builder),\n    editStudentGrNumber: editStudentGrNumberFunction(builder),\n    admissionRevertBackSelectedToApplication:\n      admissionRevertBackSelectedToApplicationFunction(builder),\n    admissionRevertBackDocsToSelected:\n      admissionRevertBackDocsToSelectedFunction(builder),\n    removeFeesInstallmentCard: removeFeesInstallmentCardFunction(builder),\n    transferApplicatToOtherApplication:\n      transferApplicatToOtherApplicationFunction(builder),\n    existStudentFeesExcelByAdmission:\n      existStudentFeesExcelByAdmissionFunction(builder),\n    studentValidaForApplicationByAdmission:\n      studentValidaForApplicationByAdmissionFunction(builder),\n    studentBankValidationByAdmission:\n      studentBankValidationByAdmissionFunction(builder),\n    markCompleteToOngoingApplication:\n      markCompleteToOngoingApplicationFunction(builder),\n    getReminderHistoryByAdmission:\n      getReminderHistoryByAdmissionFunction(builder),\n    getOsReminderStudentList: getOsReminderStudentListFunction(builder),\n    studentScholarshipNumberDublicate:\n      studentScholarshipNumberDublicateFunction(builder),\n  }),\n});\n\nexport const {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchAllAppAtInstituteQuery,\n  useNewUserApplyMutation,\n  useGetNewApplicationMutation,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetUserConfirmMutation,\n  useGetUserCancelMutation,\n  useGetAllClassesQuery,\n  useRetrieveNewClassAllotMutation,\n  useRetrieveMarkCompleteMutation,\n  useGetOneViewStudentFeeQuery,\n  useRetrievePaidRemainFeeMutation,\n  useGetOneApplicationQuery,\n  useGetAllDepartmentQuery,\n  useFetchCancelStatusModeMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n\n  useGetDailyCollectionByAdmissionQuery,\n\n  //\n  useEditStudentGrNumberMutation,\n\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} = admissionApiDynamic;\n"],"names":["useAssignAdmissionHead","_useActivateAdmission","useActivateAdmissionHeadMutation","_slicedToArray","useEditAdmission","_useEditAdmissionMuta","useEditAdmissionMutation","useGetAdmissionDetail","args","_useFetchAdmissionDet","useFetchAdmissionDetailQuery","data","skip","getAdmissionDetail","getAdmissionDetailRefetch","refetch","useAllOngoingApp","_useFetchAllOngoingAp","useFetchAllOngoingAppQuery","allOngoingApp","allOngoingAppRefetch","useAllCompletedApp","_useFetchAllCompleted","useFetchAllCompletedAppQuery","allCompletedApp","allCompletedAppRefetch","useAllAppAtInstitute","_useFetchAllAppAtInst","useFetchAllAppAtInstituteQuery","allAppAtInstitute","allAppAtInstituteRefetch","useNewUserApply","_useNewUserApplyMutat","useNewUserApplyMutation","useCreateNewApplication","_useGetNewApplication","useGetNewApplicationMutation","useGetAllRequest","_useGetAllRequestQuer","useGetAllRequestQuery","getAllRequestList","getAllRequestListRefetch","useGetAllSelect","_useGetAllSelectQuery","useGetAllSelectQuery","getAllSelectList","getAllSelectListRefetch","useGetAllConfirm","_useGetAllConfirmQuer","useGetAllConfirmQuery","getAllConfirmList","getAllConfirmListRefetch","useGetAllConfirmMultiselect","_useGetAllConfirmMult","useGetAllConfirmMultiselectQuery","getAllConfirmListMulitselect","getAllConfirmListMulitselectRefetch","useSelectAdmissionApplicant","_useFetchUserSelectAp","useFetchUserSelectAppMutation","useCancelAdmissionApplicant","_useFetchUserCancelAp","useFetchUserCancelAppMutation","useStudentPayMode","_useFetchUserSelectSt","useFetchUserSelectStatusAppMutation","useApplicantAdmissionConfirm","_useGetUserConfirmMut","useGetUserConfirmMutation","useApplicantAdmissionCancel","_useGetUserCancelMuta","useGetUserCancelMutation","useGetAllClasses","_useGetAllClassesQuer","useGetAllClassesQuery","getAllClassesList","getAllClassesListRefetch","useApplicantAdmissionAllotSeat","_useRetrieveNewClassA","useRetrieveNewClassAllotMutation","useApplicationComplete","_useRetrieveMarkCompl","useRetrieveMarkCompleteMutation","useApplicantAdmissionRemainingFees","_useRetrievePaidRemai","useRetrievePaidRemainFeeMutation","useOneApplicationDetail","_useGetOneApplication","useGetOneApplicationQuery","apid","oneApplicationDetail","oneApplicationDetailRefetch","useGetAllDepartment","_useGetAllDepartmentQ","useGetAllDepartmentQuery","aid","allDepartmentList","allDepartmentListRefetch","useCancelStudentApplicationStatus","_useFetchCancelStatus","useFetchCancelStatusModeMutation","useRenderStudentAdmissionFees","_useRenderStudentAdmi","useRenderStudentAdmissionFeesQuery","sid","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","useCollectApplicantDocs","_useCollectApplicantD","useCollectApplicantDocsMutation","useAdmissionBatchList","_useAdmissionBatchLis","useAdmissionBatchListQuery","admissionBatchList","admissionBatchListRefetch","useAdmissionAllottedList","_useAdmissionAllotted","useAdmissionAllottedListQuery","admissionAllottedList","admissionAllottedListRefetch","useAdmissionCancelledList","_useAdmissionCancelle","useAdmissionCancelledListQuery","admissionCancelledList","admissionCancelledListRefetch","useAdmissionClassMasterList","_useAdmissionClassMas","useAdmissionClassMasterListQuery","did","admissionClassMasterList","admissionClassMasterListRefetch","useGetAccountWithNumber","_useGetAccountWithNum","useGetAccountWithNumberQuery","phoneKey","getAccountWithNumber","getAccountWithNumberRefetch","useEditFeeStructure","_useEditFeeStructureM","useEditFeeStructureMutation","useConfirmStudentModeByAdmissionAdmin","_useConfirmStudentMod","useConfirmStudentModeByAdmissionAdminMutation","useRejectStudentModeByAdmissionAdmin","_useRejectStudentMode","useRejectStudentModeByAdmissionAdminMutation","useReApplyReceiptByStudent","_useReApplyReceiptByS","useReApplyReceiptByStudentMutation","useGetFeeReceiptDetail","_useGetFeeReceiptDeta","useGetFeeReceiptDetailQuery","rid","getFeeReceiptDetail","getFeeReceiptDetailRefetch","useGetDocumentByAdmission","_useGetDocumentByAdmi","useGetDocumentByAdmissionQuery","getDocumentByAdmission","getDocumentByAdmissionRefetch","useRefundAmountByAdmissionAdmin","_useRefundAmountByAdm","useRefundAmountByAdmissionAdminMutation","useUpdateRemarkByAdmissionAdmin","_useUpdateRemarkByAdm","useUpdateRemarkByAdmissionAdminMutation","useExportFilterDataByAdmission","_useExportFilterDataB","useExportFilterDataByAdmissionMutation","useGetAllExcelByAdmissionAdmin","_useGetAllExcelByAdmi","useGetAllExcelByAdmissionAdminQuery","getAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminRefetch","usePayAdmissionFeeByStudent","_usePayAdmissionFeeBy","usePayAdmissionFeeByStudentMutation","useUpdateExcelByAdmissionAdmin","_useUpdateExcelByAdmi","useUpdateExcelByAdmissionAdminMutation","useDeleteExcelByAdmissionAdmin","_useDeleteExcelByAdmi","useDeleteExcelByAdmissionAdminMutation","useGetModeratorByAdmissionAdmin","_useGetModeratorByAdm","useGetModeratorByAdmissionAdminQuery","getModeratorByAdmissionAdmin","getModeratorByAdmissionAdminRefetch","useAddModeratorByAdmissionAdmin","_useAddModeratorByAdm","useAddModeratorByAdmissionAdminMutation","useUpdateModeratorByAdmissionAdmin","_useUpdateModeratorBy","useUpdateModeratorByAdmissionAdminMutation","useDeleteModeratorByAdmissionAdmin","_useDeleteModeratorBy","useDeleteModeratorByAdmissionAdminMutation","useAdmissionGetSiteInfo","_useAdmissionGetSiteI","useAdmissionGetSiteInfoQuery","admissionGetSiteInfo","admissionGetSiteInfoRefetch","useAdmissionUpdateSiteInfo","_useAdmissionUpdateSi","useAdmissionUpdateSiteInfoMutation","useUpdateApplicationByAdmission","_useUpdateApplication","useUpdateApplicationByAdmissionMutation","useDeleteApplicationByAdmission","_useDeleteApplication","useDeleteApplicationByAdmissionMutation","useUpdateFeeStructureByAppliationWise","_useUpdateFeeStructur","useUpdateFeeStructureByAppliationWiseMutation","useCollectSetOffAdmissionFees","_useCollectSetOffAdmi","useCollectSetOffAdmissionFeesMutation","useAdmissionDocsActionByStudent","_useAdmissionDocsActi","useAdmissionDocsActionByStudentMutation","useScholarShipExcelByInstitute","_useScholarShipExcelB3","useScholarShipExcelByInstituteMutation","useAddScholarNumberAdmission","_useAddScholarNumberA","useAddScholarNumberAdmissionMutation","useStudentDepartmentFees","_useStudentDepartment","useStudentDepartmentFeesQuery","studentDepartmentFees","studentDepartmentFeesRefetch","useInternalFeeReceipt","_useInternalFeeReceip","useInternalFeeReceiptQuery","internalFeeReceipt","internalFeeReceiptRefetch","useDropAdmissionFeesCardByAdmission","_useDropAdmissionFees","useDropAdmissionFeesCardByAdmissionMutation","useAllApplicationByAdmission","_useAllApplicationByA","useAllApplicationByAdmissionQuery","allApplicationByAdmission","allApplicationByAdmissionRefetch","useAddNewFeesByAdmission","_useAddNewFeesByAdmis","useAddNewFeesByAdmissionMutation","useCollectNewAddFeesByAdmission","_useCollectNewAddFees","useCollectNewAddFeesByAdmissionMutation","useGovernmentCollectNewAddFeesByAdmission","_useGovernmentCollect","useGovernmentCollectNewAddFeesByAdmissionMutation","useAdmissionReminder","_useAdmissionReminder","useAdmissionReminderMutation","useAdmissionInstallmentEditFeesByAdmission","_useAdmissionInstallm","useAdmissionInstallmentEditFeesByAdmissionMutation","useGetPendingCustomFilterByAdmission","_useGetPendingCustomF","useGetPendingCustomFilterByAdmissionQuery","getPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionRefetch","useGetBatchStandardWithMultipleDepartment","_useGetBatchStandardW","useGetBatchStandardWithMultipleDepartmentMutation","useAllAdmissionRemaining","_useFetchAdmissionRem","useFetchAdmissionRemainingArrayMutation","useAllRemaining","_useFetchAllRemaining","useFetchAllRemainingArrayQuery","allRemainingList","allRemainingListRefetch","useGetDailyCollectionByAdmission","_useGetDailyCollectio","useGetDailyCollectionByAdmissionQuery","getDailyCollectionByAdmission","getDailyCollectionByAdmissionRefetch","useEditStudentGrNumber","_useEditStudentGrNumb","useEditStudentGrNumberMutation","useAdmissionRevertBackSelectedToApplication","_useAdmissionRevertBa","useAdmissionRevertBackSelectedToApplicationMutation","useAdmissionRevertBackDocsToSelected","_useAdmissionRevertBa3","useAdmissionRevertBackDocsToSelectedMutation","useRemoveFeesInstallmentCard","_useRemoveFeesInstall","useRemoveFeesInstallmentCardMutation","useTransferApplicatToOtherApplication","_useTransferApplicatT","useTransferApplicatToOtherApplicationMutation","useExistStudentFeesExcelByAdmission","_useExistStudentFeesE","useExistStudentFeesExcelByAdmissionMutation","useStudentValidaForApplicationByAdmission","_useStudentValidaForA","useStudentValidaForApplicationByAdmissionMutation","useStudentBankValidationByAdmission","_useStudentBankValida","useStudentBankValidationByAdmissionMutation","useMarkCompleteToOngoingApplication","_useMarkCompleteToOng","useMarkCompleteToOngoingApplicationMutation","useGetOsReminderStudentList","_useGetOsReminderStud","useGetOsReminderStudentListMutation","useStudentScholarshipNumberDublicate","_useStudentScholarshi","useStudentScholarshipNumberDublicateMutation","admissionApiDynamic","admissionNewApi","injectEndpoints","endpoints","builder","activateAdmissionHead","activateAdmission","editAdmission","editAdmissionFunction","fetchAdmissionDetail","fetchAdmission","fetchAllOngoingApp","fetchOngoing","fetchAllCompletedApp","fetchCompleted","fetchAllRemainingArray","fetchRemainingArray","fetchAdmissionRemainingArray","fetchAllAppAtInstitute","atInstituteSearchApplication","newUserApply","userApply","getNewApplication","newApplication","getAllRequest","fetchRequest","getAllSelect","fetchSelect","getAllConfirm","fetchConfirm","getAllConfirmMultiselect","fetchConfirmAll","fetchUserSelectApp","userSelect","fetchUserCancelApp","userCancelApplication","fetchUserSelectStatusApp","userSelectStatusMode","getUserConfirm","userConfirm","getUserCancel","userCancel","getAllClasses","fetchClasses","retrieveNewClassAllot","newClassAllot","retrieveMarkComplete","markComplete","getOneViewStudentFee","oneStudentFee","retrievePaidRemainFee","paidRemainFee","getOneApplication","oneApplication","getAllDepartment","allDepartment","fetchCancelStatusMode","cancelStatusMode","renderStudentAdmissionFees","studentAdmission","collectApplicantDocs","collectApplicantDocsFunction","admissionBatchListFunction","admissionAllottedListFunction","admissionCancelledListFunction","admissionClassMasterListFunction","addEnquiry","addEnquiryFunction","getAllEnquiryList","getAllEnquiryListFunction","getOneEnquiry","getOneEnquiryFunction","oneEnquiryAction","oneEnquiryActionFunction","directJoinFormAdmission","directJoinFormAdmissionFunction","submitAmountToFinanace","submitAmountToFinanaceFunction","getAccountWithNumberFunction","editFeeStructure","editFeeStructureFunction","confirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmissionAdminFunction","rejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmissionAdminFunction","getReceiptByAdmission","getReceiptByAdmissionFunction","receiptActionByAdmission","receiptActionByAdmissionFunction","reApplyReceiptByStudent","reApplyReceiptByStudentFunction","getFeeReceiptDetailFunction","getDocumentByAdmissionFuction","addDocumentByAdmission","addDocumentByAdmissionFuction","updateDocumentByAdmission","updateDocumentByAdmissionFuction","deleteDocumentByAdmission","deleteDocumentByAdmissionFuction","refundAmountByAdmissionAdmin","refundAmountByAdmissionAdminFunction","getRefundByAdmission","getRefundByAdmissionFuction","updateRemarkByAdmissionAdmin","updateRemarkByAdmissionAdminFunction","exportFilterDataByAdmission","exportFilterDataByAdmissionFuction","getAllExcelByAdmissionAdminFunction","payAdmissionFeeByStudent","payAdmissionFeeByStudentFunction","updateExcelByAdmissionAdmin","updateExcelByAdmissionAdminFunction","deleteExcelByAdmissionAdmin","deleteExcelByAdmissionAdminFunction","updateDocumentByAdmissionAdmin","updateDocumentByAdmissionAdminFunction","deleteDocumentByAdmissionAdmin","deleteDocumentByAdmissionAdminFunction","addModeratorByAdmissionAdmin","addModeratorByAdmissionAdminFunction","getModeratorByAdmissionAdminFunction","updateModeratorByAdmissionAdmin","updateModeratorByAdmissionAdminFunction","deleteModeratorByAdmissionAdmin","deleteModeratorByAdmissionAdminFunction","admissionGetSiteInfoFunction","admissionUpdateSiteInfo","admissionUpdateSiteInfoFunction","getScholarshipListAdmission","getScholarshipListAdmissionFunction","addScholarshipAdmission","addScholarshipAdmissionFunction","getOneScholarshipAdmission","getOneScholarshipAdmissionFunction","getOneScholarshipAllCandidateAdmission","getOneScholarshipAllCandidateAdmissionFunction","oneSchloarshipActionAdmission","oneSchloarshipActionAdmissionFunction","addScholarshipFundCorpusAdmission","addScholarshipFundCorpusAdmissionFunction","getScholarshipFundCorpusAdmission","getScholarshipFundCorpusAdmissionFunction","addMoreScholarshipFundCorpusAdmission","addMoreScholarshipFundCorpusAdmissionFunction","updateApplicationByAdmission","updateApplicationByAdmissionFunction","deleteApplicationByAdmission","deleteApplicationByAdmissionFunction","forgetPasswordProtection","forgetPasswordProtectionFunction","passwordProtectionToggle","passwordProtectionToggleFunction","passwordProtectionLogin","passwordProtectionLoginFunction","updateFeeStructureByAppliationWise","updateFeeStructureByAppliationWiseFunction","getRefundedListByAdmission","getRefundedListByAdmissionFunction","directJoinFormWithPayAdmission","directJoinFormWithPayAdmissionFunction","collectSetOffAdmissionFees","collectSetOffAdmissionFeesFunction","admissionDocsActionByStudent","admissionDocsActionByStudentFunction","scholarShipExcelByAdmission","scholarShipExcelByAdmissionFunction","scholarShipExcelByInstitute","scholarShipExcelByInstituteFunction","addScholarNumberAdmission","addScholarNumberAdmissionFunction","studentDepartmentFeesFunction","studentBacklogFees","studentBacklogFeesFunction","internalFeeReceiptFunction","dropAdmissionFeesCardByAdmission","dropAdmissionFeesCardByAdmissionFunction","allApplicationByAdmissionFunction","addNewFeesByAdmission","addNewFeesByAdmissionFunction","collectNewAddFeesByAdmission","collectNewAddFeesByAdmissionFunction","governmentCollectNewAddFeesByAdmission","governmentCollectNewAddFeesByAdmissionFunction","admissionReminder","admissionReminderFunction","admissionInstallmentEditFeesByAdmission","admissionInstallmentEditFeesByAdmissionFunction","getPendingCustomFilterByAdmissionFunction","getBatchStandardWithMultipleDepartment","getBatchStandardWithMultipleDepartmentFunction","getDailyCollectionByAdmissionFunction","editStudentGrNumber","editStudentGrNumberFunction","admissionRevertBackSelectedToApplication","admissionRevertBackSelectedToApplicationFunction","admissionRevertBackDocsToSelected","admissionRevertBackDocsToSelectedFunction","removeFeesInstallmentCard","removeFeesInstallmentCardFunction","transferApplicatToOtherApplication","transferApplicatToOtherApplicationFunction","existStudentFeesExcelByAdmission","existStudentFeesExcelByAdmissionFunction","studentValidaForApplicationByAdmission","studentValidaForApplicationByAdmissionFunction","studentBankValidationByAdmission","studentBankValidationByAdmissionFunction","markCompleteToOngoingApplication","markCompleteToOngoingApplicationFunction","getReminderHistoryByAdmission","getReminderHistoryByAdmissionFunction","getOsReminderStudentList","getOsReminderStudentListFunction","studentScholarshipNumberDublicate","studentScholarshipNumberDublicateFunction","useGetOneViewStudentFeeQuery","useAddEnquiryMutation","useGetAllEnquiryListQuery","useGetOneEnquiryQuery","useOneEnquiryActionMutation","useDirectJoinFormAdmissionMutation","useSubmitAmountToFinanaceMutation","useGetReceiptByAdmissionQuery","useReceiptActionByAdmissionMutation","useAddDocumentByAdmissionMutation","useUpdateDocumentByAdmissionMutation","useDeleteDocumentByAdmissionMutation","useGetRefundByAdmissionQuery","useUpdateDocumentByAdmissionAdminMutation","useDeleteDocumentByAdmissionAdminMutation","useGetScholarshipListAdmissionQuery","useAddScholarshipAdmissionMutation","useGetOneScholarshipAdmissionQuery","useGetOneScholarshipAllCandidateAdmissionQuery","useOneSchloarshipActionAdmissionMutation","useAddScholarshipFundCorpusAdmissionMutation","useGetScholarshipFundCorpusAdmissionQuery","useAddMoreScholarshipFundCorpusAdmissionMutation","useForgetPasswordProtectionMutation","usePasswordProtectionToggleMutation","usePasswordProtectionLoginMutation","useGetRefundedListByAdmissionQuery","useDirectJoinFormWithPayAdmissionMutation","useScholarShipExcelByAdmissionMutation","useStudentBacklogFeesQuery","useGetReminderHistoryByAdmissionQuery"],"sourceRoot":""}