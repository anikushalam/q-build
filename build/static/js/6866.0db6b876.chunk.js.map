{"version":3,"file":"static/js/6866.0db6b876.chunk.js","mappings":"+MA6CA,UApC0B,SAAHA,GAAyC,IAAnCC,EAAGD,EAAHC,IAAKC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAClCC,GAAMC,EAAAA,EAAAA,MAAND,EACFE,EAAgB,CAACF,EAAE,SAAUA,EAAE,WAC/BG,GAAMC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IACjDC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,GAAFF,EAAA,GAAaA,EAAA,IAC5BG,GAAsBC,EAAAA,EAAAA,MAAfC,GAAkCJ,EAAAA,EAAAA,GAAAE,EAAA,GAAvB,GACVG,GAAyBC,EAAAA,EAAAA,IAAqB,CACpDC,IAAQ,OAAHd,QAAG,IAAHA,OAAG,EAAHA,EAAKc,IACVC,MAAM,IAFAH,qBAsBR,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,cAAenB,EACfoB,qBArBuB,SAACC,GACX,SAAXA,GACFxB,EAAaF,GACbC,GAAS,IACW,WAAXyB,IACTZ,GAAY,SAACa,GAAG,OAAMA,CAAG,IACzBV,EAAY,CACVjB,IAAKA,IAEJ4B,MAAK,WACJV,IACAJ,GAAY,SAACa,GAAG,OAAMA,CAAG,IACzB1B,GAAS,EACX,IACC4B,MAAM,CAAC,GAGd,GAOF,C,qEC1CA,EAAiC,sCAAjC,EAAkF,gCAAlF,EAAyL,mC,WCyBzL,EAvBsB,SAAH9B,GAAiD,IAA3CyB,EAAazB,EAAbyB,cAAeC,EAAoB1B,EAApB0B,qBACtC,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCX,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,KAEhBV,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,EAAkBC,SAClB,OAAbT,QAAa,IAAbA,OAAa,EAAbA,EAAeU,KAAI,SAACR,EAAQS,GAAK,OAChCb,EAAAA,EAAAA,KAAA,OACEc,MAAOV,EAEPW,QAAS,SAACC,GACRA,EAAEC,iBACFd,EAAqBC,EACvB,EAAEO,SAEDP,GANIS,EAOD,QAKhB,C","sources":["Department/Institute/Components/DepartmentOption/OneRowClassOption.jsx","webpack://mithkal-qviple/./src/Department/Institute/Components/OptionWrapper.module.css?ac61","Department/Institute/Components/OptionWrapper.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  useOneClassDelete,\n  useOneViewDepartment,\n} from \"../DepartmentApi/depart-api\";\nimport { useTranslation } from \"react-i18next\";\nimport OptionWrapper from \"../OptionWrapper\";\n\nconst OneRowClassOption = ({ cid, setClick, editOneClass }) => {\n  const { t } = useTranslation();\n  const selectoptions = [t(\"edit_\"), t(\"delete\")];\n  const ids = useSelector((state) => state.idChange);\n  const [disabled, setDisabled] = useState(false);\n  const [classDelete] = useOneClassDelete();\n  const { oneDepartmentRefetch } = useOneViewDepartment({\n    did: ids?.did,\n    skip: false,\n  });\n  const selectClassHandler = (option) => {\n    if (option === \"Edit\") {\n      editOneClass(cid);\n      setClick(false);\n    } else if (option === \"Delete\") {\n      setDisabled((pre) => !pre);\n      classDelete({\n        cid: cid,\n      })\n        .then(() => {\n          oneDepartmentRefetch();\n          setDisabled((pre) => !pre);\n          setClick(false);\n        })\n        .catch({});\n    } else {\n    }\n  };\n  return (\n    <OptionWrapper\n      selectOptions={selectoptions}\n      onClickOptionHandler={selectClassHandler}\n    />\n  );\n};\n\nexport default OneRowClassOption;\n","// extracted by mini-css-extract-plugin\nexport default {\"profileToolTip\":\"OptionWrapper_profileToolTip__M2lzl\",\"triangle\":\"OptionWrapper_triangle__WKhAY\",\"triangleDisplay\":\"OptionWrapper_triangleDisplay__FgAqr\",\"profilelist\":\"OptionWrapper_profilelist__YbG++\"};","import React from \"react\";\nimport style from \"./OptionWrapper.module.css\";\n\nconst OptionWrapper = ({ selectOptions, onClickOptionHandler }) => {\n  return (\n    <div className={style.profileToolTip}>\n      <div className={style.triangle}></div>\n\n      <div className={style.profilelist}>\n        {selectOptions?.map((option, index) => (\n          <div\n            value={option}\n            key={index}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickOptionHandler(option);\n            }}\n          >\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default OptionWrapper;\n"],"names":["_ref","cid","setClick","editOneClass","t","useTranslation","selectoptions","ids","useSelector","state","idChange","_useState","useState","_useState2","_slicedToArray","setDisabled","_useOneClassDelete","useOneClassDelete","classDelete","oneDepartmentRefetch","useOneViewDepartment","did","skip","_jsx","OptionWrapper","selectOptions","onClickOptionHandler","option","pre","then","catch","_jsxs","className","style","children","map","index","value","onClick","e","preventDefault"],"sourceRoot":""}