{"version":3,"file":"static/js/19029.7ef0a0ee.chunk.js","mappings":"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","sources":["Custom/Button/ButtonWithAction.jsx","Dashboard/InsDashboard/Modals/DisplayPerson/AddDisplay.jsx","Loader/LoaderButton.jsx","webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Modals/DisplayPerson/AddDisplay.module.css?acc6"],"sourcesContent":["import React from \"react\";\nimport LoaderButton from \"../../Loader/LoaderButton\";\nimport style from \"./ButtonWithTypeSubmit.module.css\";\nconst ButtonWithAction = ({\n  buttonText,\n  disabled,\n  customStyleButton,\n  customStyleButtonText,\n  onAction,\n  shwoLoader,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      style={{ ...customStyleButton }}\n      className={style.button_main}\n      onClick={onAction}\n    >\n      <span style={{ ...customStyleButtonText }}>{buttonText}</span>\n      {disabled && shwoLoader && (\n        <div style={{ marginTop: \"0.7vw\" }}>\n          <LoaderButton />\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default ButtonWithAction;\n","import React, { useState } from \"react\";\nimport style from \"./AddDisplay.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { Dialog } from \"@mui/material\";\nimport \"./AddDisplay.css\";\nimport CustomSuspense from \"../../../../Custom/SuspenseLoading/CustomSuspense\";\nimport { useAddDisplayPerson } from \"../../../../hooks/dashboard/dashboard-api\";\nimport { useSelector } from \"react-redux\";\nimport ButtonWithAction from \"../../../../Custom/Button/ButtonWithAction\";\nconst AssignStaffModal = React.lazy(() =>\n  import(\"../../../../Department/Institute/AssignStaff/AssignStaffModal\")\n);\nfunction AddDisplay({ addDisplay, hideModal, onRefetchDisplayList }) {\n  const { t } = useTranslation();\n  const [click, setClick] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const id = useSelector((state) => state.idChange.id);\n  const [addDisplayData, setAddDisplayData] = useState({\n    displayTitle: \"\",\n    displayUser: \"\",\n    displayUserName: \"\",\n    displayStaff: \"\",\n  });\n  const handleOptions = (val) => {\n    setAddDisplayData({\n      ...addDisplayData,\n      displayUser: val?.user._id,\n      displayUserName: val?.user.userLegalName,\n      displayStaff: val?._id,\n    });\n  };\n  const [addDisplayPerson] = useAddDisplayPerson();\n  const handleClick = () => {\n    if (addDisplayData.displayUser) {\n      setDisabled((pre) => !pre);\n      addDisplayPerson({\n        id: id,\n        addData: addDisplayData,\n      })\n        .then(() => {\n          onRefetchDisplayList();\n          hideModal(false);\n          setDisabled((pre) => !pre);\n        })\n        .catch({});\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={addDisplay} onClose={() => hideModal(false)}>\n        <div className={style.addDisplay}>\n          <div className={style.title}>\n            <h6>{t(\"add_display\")}</h6>\n\n            <img\n              src=\"/images/close-post-icon.svg\"\n              onClick={() => hideModal(false)}\n              alt=\"\"\n            />\n          </div>\n          <div className={style.content}>\n            <div className={style.item}>\n              <label>{t(\"add_title\")}</label>\n              <input\n                type=\"text\"\n                placeholder={t(\"add_title_details\")}\n                value={addDisplayData.title}\n                onChange={(e) =>\n                  setAddDisplayData({\n                    ...addDisplayData,\n                    displayTitle: e.target.value,\n                  })\n                }\n              />\n            </div>\n\n            <div className={style.item1}>\n              <h6>{t(\"select_candite\")}</h6>\n              <div\n                className={style.select}\n                onClick={() => {\n                  setClick(!click);\n                }}\n              >\n                <p>\n                  {\" \"}\n                  {addDisplayData.displayUserName === \"\"\n                    ? t(\"select_cadite_details\")\n                    : addDisplayData.displayUserName}\n                </p>\n                <img src=\"/images/select-icon.svg\" alt=\"\" />\n              </div>\n            </div>\n            <ButtonWithAction\n              buttonText={t(\"add_details\")}\n              onAction={handleClick}\n              disabled={disabled}\n              shwoLoader={true}\n            />\n          </div>\n        </div>\n        <CustomSuspense>\n          {click && (\n            <AssignStaffModal\n              assignHead={click}\n              headSelect={handleOptions}\n              title={t(\"assign_display\")}\n              onClose={() => setClick((pre) => !pre)}\n            />\n          )}\n        </CustomSuspense>\n      </Dialog>\n    </>\n  );\n}\n\nexport default AddDisplay;\n","import React from \"react\";\nimport { Oval } from \"react-loader-spinner\";\nimport \"./LoaderButton.css\";\nconst LoaderButton = () => {\n  return (\n    <Oval\n      ariaLabel=\"loading-indicator\"\n      height={20}\n      width={20}\n      // strokeWidth={5}\n      color=\"white\"\n      secondaryColor=\"#1c023b\"\n    />\n  );\n};\n\nexport default LoaderButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"addDisplay\":\"AddDisplay_addDisplay__9qpWF\",\"title\":\"AddDisplay_title__hJ7Ra\",\"content\":\"AddDisplay_content__eardR\",\"item\":\"AddDisplay_item__1YmlA\",\"item1\":\"AddDisplay_item1__IbsKM\",\"select\":\"AddDisplay_select__7xu4p\",\"profileToolTip\":\"AddDisplay_profileToolTip__-Iygl\",\"triangle\":\"AddDisplay_triangle__WIVE8\",\"triangleDisplay\":\"AddDisplay_triangleDisplay__Y2YDp\",\"optionLang\":\"AddDisplay_optionLang__OkqBG\",\"profilelist\":\"AddDisplay_profilelist__Yj6za\"};"],"names":["_ref","buttonText","disabled","customStyleButton","customStyleButtonText","onAction","shwoLoader","_jsxs","style","className","button_main","onClick","children","_jsx","marginTop","LoaderButton","AssignStaffModal","React","addDisplay","hideModal","onRefetchDisplayList","t","useTranslation","click","setClick","useState","setDisabled","id","useSelector","state","idChange","addDisplayData","setAddDisplayData","displayTitle","displayUser","displayUserName","displayStaff","addDisplayPerson","useAddDisplayPerson","_Fragment","Dialog","open","onClose","title","src","alt","content","item","type","placeholder","value","onChange","e","target","item1","select","ButtonWithAction","handleClick","pre","addData","then","catch","CustomSuspense","assignHead","headSelect","val","user","_id","userLegalName","Oval","ariaLabel","height","width","color","secondaryColor"],"sourceRoot":""}