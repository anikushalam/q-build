{"version":3,"file":"static/js/96506.f018d9d9.chunk.js","mappings":"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","sources":["webpack://mithkal-qviple/./src/Dashboard/InsDashboard/Modals/Batch/CreateBatch.module.css?ebe7","Dashboard/InsDashboard/Modals/Batch/CreateBatch.jsx","Loader/LoaderButton.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"DModal\":\"CreateBatch_DModal__2iMTy\",\"title\":\"CreateBatch_title__LulDN\",\"input\":\"CreateBatch_input__RdV9d\",\"mid\":\"CreateBatch_mid__yU8C5\",\"text\":\"CreateBatch_text__euMit\",\"btn\":\"CreateBatch_btn__eYOMg\",\"notFound\":\"CreateBatch_notFound__OncWH\",\"item\":\"CreateBatch_item__wsJYa\",\"select\":\"CreateBatch_select__Q0Pd6\",\"tooltip\":\"CreateBatch_tooltip__96AjT\",\"tooltip2\":\"CreateBatch_tooltip2__zIHQM\",\"profileToolTip\":\"CreateBatch_profileToolTip__LWyun\",\"triangle\":\"CreateBatch_triangle__L5VAj\",\"triangleDisplay\":\"CreateBatch_triangleDisplay__cJ+Vf\",\"profilelist\":\"CreateBatch_profilelist__b+Ejh\",\"subject_tile_container\":\"CreateBatch_subject_tile_container__Ne1cL\",\"subject_tile\":\"CreateBatch_subject_tile__8SHbA\",\"subject_tile_active\":\"CreateBatch_subject_tile_active__3H4Uz\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport \"../AddDisplay.css\";\nimport style from \"./CreateBatch.module.css\";\nimport { Dialog } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useOneBatchEdit,\n  useOneDepartmentAddBatch,\n  useOneDepartmentAddIdenticalBatch,\n  useOneDepartmentSetCurrentBatch,\n} from \"../../../../Department/Institute/Components/DepartmentApi/depart-api\";\nimport LoaderButton from \"../../../../Loader/LoaderButton\";\nimport StringLength from \"../../../../Custom/Validation/StringLength\";\n\nfunction Options({ options, switchOption }) {\n  return (\n    <div className={style.profileToolTip}>\n      <div className={style.triangle}></div>\n\n      <div className={style.profilelist}>\n        {options?.map((option, index) => (\n          <div value={option} onClick={() => switchOption(option)} key={index}>\n            {option}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction OptionsPreviousBatch({ options, switchOption }) {\n  return (\n    <div className={style.profileToolTip}>\n      <div className={style.triangle}></div>\n\n      <div className={style.profilelist}>\n        {options?.map((option, index) => (\n          <div value={option} onClick={() => switchOption(option)} key={index}>\n            {option.batchName}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction CreateBatch({\n  departmentModal,\n  hideModal,\n  id,\n  did,\n  data,\n  edit,\n  setEdit,\n  editBatch,\n  onDepartmentRefetch,\n  is_promote,\n}) {\n  const { t } = useTranslation();\n  const [batch, setBBatch] = useState(t(\"batch-type-2\"));\n  const batchNameRef = useRef(\"\");\n  const [batchName, setBatchName] = useState(\"\");\n  const [click, setClick] = useState({\n    batch: false,\n    pastBatch: false,\n  });\n  // const selectOptions = [t(\"batch-type-1\")];\n  const selectOptions = [t(\"batch-type-1\"), t(\"batch-type-2\")];\n  const [pastBatch, setPastBatch] = useState(true);\n  const [pastBatchOption, setPastBatchOption] = useState(\"2020-21\");\n  const [pastBatchOptionId, setPastBatchOptionId] = useState(\"\");\n  const [withDesignationHead, setWithDesignationHead] = useState(\"No\");\n  const [disabled, setDisabled] = useState(false);\n  const [fillAllDetail, setFillAllDetail] = useState(true);\n  const [selectOptions2, setSelectOptions2] = useState(data);\n\n  useEffect(() => {\n    if (data) {\n      setSelectOptions2(data);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (edit) setBatchName(editBatch?.batchName);\n  }, [edit]);\n  const handlePastBatch = (option) => {\n    setPastBatchOption(option.batchName);\n    setPastBatchOptionId(option._id);\n  };\n\n  const switchClass = (option) => {\n    setBBatch(option);\n    if (option !== \"Completely New Batch\") {\n      setPastBatch(true);\n    } else {\n      setPastBatch(false);\n    }\n  };\n  const [addBatch] = useOneDepartmentAddBatch();\n  const [batchEdit] = useOneBatchEdit();\n  const [addIdenticalBatch] = useOneDepartmentAddIdenticalBatch();\n  const [setBatch] = useOneDepartmentSetCurrentBatch();\n\n  const batchSubmitHandler = () => {\n    if (batchNameRef.current.value) {\n      setDisabled(true);\n      if (edit) {\n        batchEdit({\n          batch: { batchName: batchNameRef.current.value },\n          bid: is_promote ? is_promote : editBatch?.bid,\n        })\n          .then(() => {\n            hideModal(false);\n            setDisabled(false);\n            setEdit(false);\n            batchNameRef.current.value = \"\";\n            onDepartmentRefetch();\n          })\n          .catch({});\n      } else if (batch === \"Completely New Batch\") {\n        addBatch({\n          batch: { batchName: batchNameRef.current.value },\n          id: id,\n          did: did,\n        })\n          .then((res) => {\n            if (res?.data?.batch) {\n              hideModal(false);\n              setDisabled(false);\n              batchNameRef.current.value = \"\";\n              onDepartmentRefetch();\n            }\n          })\n          .catch({});\n      } else {\n        addIdenticalBatch({\n          batch: {\n            batchName: batchNameRef.current.value,\n            with_designation: withDesignationHead,\n          },\n          bid: pastBatchOptionId,\n        })\n          .then((res) => {\n            // console.info(res);\n            if (res) {\n              setBatch({\n                did: did,\n                bid: res.data.batchId,\n                batch: \"\",\n              })\n                .then(() => {\n                  onDepartmentRefetch();\n                  hideModal(false);\n                  setDisabled(false);\n                  batchNameRef.current.value = \"\";\n                })\n                .catch({});\n            }\n          })\n          .catch({});\n      }\n    } else {\n      setFillAllDetail(false);\n    }\n  };\n\n  const onClose = () => {\n    hideModal(false);\n    batchNameRef.current.value = \"\";\n    setEdit(false);\n  };\n  return (\n    <Dialog open={departmentModal}>\n      <div className={style.DModal}>\n        <div className={style.title}>\n          {!edit ? (\n            <h5>{t(\"create-n-batch-place\")}</h5>\n          ) : (\n            <h5> {t(\"edit_batch\")} </h5>\n          )}\n          <img src=\"/images/close-post-icon.svg\" onClick={onClose} alt=\"\" />\n        </div>\n        <div hidden={fillAllDetail} className={style.notFound}>\n          {!edit\n            ? t(\"fill_details_to_create_batch\")\n            : t(\"fill_details_to_edit_batch\")}\n        </div>\n\n        {!edit && (\n          <div className={style.item}>\n            <h6>{t(\"batch-type-place\")}</h6>\n            <section className={style.subject_tile_container}>\n              <div\n                className={\n                  batch === \"Preformed Structured Batch\"\n                    ? style.subject_tile_active\n                    : style.subject_tile\n                }\n                onClick={() => switchClass(\"Preformed Structured Batch\")}\n              >\n                {t(\"batch-type-2\")}\n              </div>\n              <div\n                className={\n                  batch === \"Completely New Batch\"\n                    ? style.subject_tile_active\n                    : style.subject_tile\n                }\n                onClick={() => switchClass(\"Completely New Batch\")}\n              >\n                {t(\"batch-type-1\")}\n              </div>\n            </section>\n          </div>\n        )}\n        {pastBatch && !edit && (\n          <>\n            <div\n              className={style.item}\n              onClick={() =>\n                setClick({ ...click, pastBatch: !click.pastBatch })\n              }\n            >\n              <h6>{t(\"select-past-batch-place\")}</h6>\n              <div className={style.select}>\n                <p>{pastBatchOption}</p>\n                <img src=\"/images/select-icon.svg\" alt=\"select icon\" />\n              </div>\n              {click.pastBatch && (\n                <div className={style.tooltip2}>\n                  <OptionsPreviousBatch\n                    options={selectOptions2}\n                    switchOption={handlePastBatch}\n                  />\n                </div>\n              )}\n            </div>\n            <div className={style.item}>\n              <h6>{t(\"without_designation\")}</h6>\n              <section className={style.subject_tile_container}>\n                <div\n                  className={\n                    withDesignationHead === \"Yes\"\n                      ? style.subject_tile_active\n                      : style.subject_tile\n                  }\n                  onClick={() => setWithDesignationHead(\"Yes\")}\n                >\n                  Yes\n                </div>\n                <div\n                  className={\n                    withDesignationHead === \"No\"\n                      ? style.subject_tile_active\n                      : style.subject_tile\n                  }\n                  onClick={() => setWithDesignationHead(\"No\")}\n                >\n                  No\n                </div>\n              </section>\n            </div>\n          </>\n        )}\n\n        <div className={style.input}>\n          <h6>{t(\"batch-name-place\")}</h6>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. 2022-23\"\n            required\n            ref={batchNameRef}\n            maxLength={30}\n            onChange={(e) => {\n              if (e.target.value?.length <= 30) {\n                setBatchName(e.target.value);\n                setFillAllDetail(true);\n              }\n            }}\n            defaultValue={batchName}\n          />\n          <StringLength maxLength={30} valueLength={batchName} />\n        </div>\n        <button\n          className={style.btn}\n          onClick={batchSubmitHandler}\n          disabled={disabled}\n        >\n          {!edit ? <p>{t(\"create\")}</p> : <p>Update</p>}\n          {disabled && (\n            <div>\n              <LoaderButton />\n            </div>\n          )}\n        </button>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default CreateBatch;\n","import React from \"react\";\nimport { Oval } from \"react-loader-spinner\";\nimport \"./LoaderButton.css\";\nconst LoaderButton = () => {\n  return (\n    <Oval\n      ariaLabel=\"loading-indicator\"\n      height={20}\n      width={20}\n      // strokeWidth={5}\n      color=\"white\"\n      secondaryColor=\"#1c023b\"\n    />\n  );\n};\n\nexport default LoaderButton;\n"],"names":["OptionsPreviousBatch","_ref2","options","switchOption","_jsxs","className","style","profileToolTip","children","_jsx","triangle","profilelist","map","option","index","value","onClick","batchName","_ref3","departmentModal","hideModal","id","did","data","edit","setEdit","editBatch","onDepartmentRefetch","is_promote","t","useTranslation","batch","setBBatch","useState","batchNameRef","useRef","setBatchName","click","setClick","pastBatch","setPastBatch","pastBatchOption","setPastBatchOption","pastBatchOptionId","setPastBatchOptionId","withDesignationHead","setWithDesignationHead","disabled","setDisabled","fillAllDetail","setFillAllDetail","selectOptions2","setSelectOptions2","useEffect","switchClass","addBatch","useOneDepartmentAddBatch","batchEdit","useOneBatchEdit","addIdenticalBatch","useOneDepartmentAddIdenticalBatch","setBatch","useOneDepartmentSetCurrentBatch","Dialog","open","DModal","title","src","onClose","current","alt","hidden","notFound","item","subject_tile_container","subject_tile_active","subject_tile","_Fragment","select","tooltip2","_id","input","type","placeholder","required","ref","maxLength","onChange","e","_e$target$value","target","length","defaultValue","StringLength","valueLength","btn","batchSubmitHandler","bid","then","catch","res","_res$data","with_designation","batchId","LoaderButton","Oval","ariaLabel","height","width","color","secondaryColor"],"sourceRoot":""}