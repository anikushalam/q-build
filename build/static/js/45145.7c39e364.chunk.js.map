{"version":3,"file":"static/js/45145.7c39e364.chunk.js","mappings":"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","sources":["services/admission/admissionBuilderAPI.js","services/admission/admissionApiDynamic.js","hooks/member_tab/admission-api.js"],"sourcesContent":["export const activateAdmission = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/ins/${data.id}/admission/query`,\n      method: \"POST\",\n      body: data.fActivate,\n    }),\n  });\n};\n\nexport const editAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/edit/staff/admission/staff/${data.osid}?nsid=${data.nsid}`,\n      method: \"PATCH\",\n    }),\n  });\n};\n\nexport const fetchAdmission = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/dashboard/query?mod_id=${data.mod_id}`,\n  });\n};\n\nexport const fetchOngoing = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/admission/${ad.aid}/all/ongoing/application?page=${ad.page}&limit=${ad.limit}`,\n  });\n};\n\nexport const fetchCompleted = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/admission/${ad.aid}/all/completed/application/detail?page=${ad.page}&limit=${ad.limit}`,\n  });\n};\n\nexport const atInstituteSearchApplication = (builder) => {\n  return builder.query({\n    query: (ins) =>\n      `/admission/${ins.id}/application/list/array?page=${ins.page}&limit=${ins.limit}`,\n  });\n};\n\nexport const userApply = (builder) => {\n  return builder.mutation({\n    query: (apply) => ({\n      url: `/admission/${apply.uid}/user/${apply.aid}/apply`,\n      method: \"POST\",\n      body: apply.apply_data,\n    }),\n  });\n};\n\nexport const newApplication = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/new/application`,\n      method: \"POST\",\n      body: data.new_Data,\n    }),\n  });\n};\n\nexport const fetchRequest = (builder) => {\n  return builder.query({\n    query: (req) =>\n      `/admission/${req.id}/request/application?page=${req.page}&limit=${req.limit}&search=${req.search}`,\n  });\n};\n\nexport const fetchSelect = (builder) => {\n  return builder.query({\n    query: (sel) =>\n      `/admission/${sel.id}/selected/application?page=${sel.page}&limit=${sel.limit}&search=${sel.search}`,\n  });\n};\n\nexport const fetchConfirm = (builder) => {\n  return builder.query({\n    query: (con) =>\n      `/admission/${con.id}/confirmed/application?page=${con.page}&limit=${con.limit}&search=${con.search}`,\n  });\n};\n\nexport const fetchConfirmAll = (builder) => {\n  return builder.query({\n    query: (con) =>\n      `/admission/${con.id}/confirmed/application/all/payload?search=${con.search}`,\n  });\n};\n\nexport const userSelect = (builder) => {\n  return builder.mutation({\n    query: (select) => ({\n      url: `/admission/${select.sid}/student/${select.aid}/select`,\n      method: \"POST\",\n      body: select.selectApplicant,\n    }),\n  });\n};\n\nexport const userCancelApplication = (builder) => {\n  return builder.mutation({\n    query: (select) => ({\n      url: `/admission/${select.sid}/student/${select.aid}/cancel/app`,\n      method: \"POST\",\n    }),\n  });\n};\n\nexport const userSelectStatusMode = (builder) => {\n  return builder.mutation({\n    query: (mode) => ({\n      url: `/admission/${mode.sid}/student/pay/mode/${mode.aid}/apply/status/${mode.statusId}`,\n      method: \"POST\",\n      body: mode.confirmPayload,\n    }),\n  });\n};\n\nexport const userConfirm = (builder) => {\n  return builder.mutation({\n    query: (confirm) => ({\n      url: `/admission/${confirm.sid}/student/${confirm.aid}/pay/offline/confirm?receipt_status=${confirm?.receipt_status}`,\n      method: \"POST\",\n      body: confirm.confirm_data,\n    }),\n  });\n};\n\nexport const userCancel = (builder) => {\n  return builder.mutation({\n    query: (cancel) => ({\n      url: `/admission/${cancel.sid}/student/${cancel.aid}/pay/refund`,\n      method: \"POST\",\n      body: cancel.cancel_data,\n    }),\n  });\n};\n\nexport const fetchClasses = (builder) => {\n  return builder.query({\n    query: (classes) =>\n      `/admission/${classes.aid}/application/class/${classes.bid}?page=${classes.page}&search=${classes.search}&limit=${classes.limit}`,\n  });\n};\n\nexport const newClassAllot = (builder) => {\n  return builder.mutation({\n    query: (allot) => ({\n      url: `/admission/student/${allot.aid}/allot/class/${allot.cid}`,\n      method: \"POST\",\n      body: allot.allotClass,\n    }),\n  });\n};\n\nexport const markComplete = (builder) => {\n  return builder.mutation({\n    query: (aid) => ({\n      url: `/admission/${aid}/application/complete`,\n      method: \"PATCH\",\n    }),\n  });\n};\n\n//depreciated\nexport const oneStudentFee = (builder) => {\n  return builder.query({\n    query: (view) => `/admission/${view}/student/view/fee`,\n  });\n};\n\nexport const paidRemainFee = (builder) => {\n  return builder.mutation({\n    query: (paid) => ({\n      url: `/admission/${paid.aid}/paid/remaining/fee/${paid.sid}/student/${paid.appId}?receipt_status=${paid?.receipt_status}`,\n      method: \"POST\",\n      body: paid.remain_data,\n    }),\n  });\n};\n\nexport const oneApplication = (builder) => {\n  return builder.query({\n    query: (one) => `/admission/${one}/application/query`,\n  });\n};\n\nexport const allDepartment = (builder) => {\n  return builder.query({\n    query: (depart) => `/admission/${depart}/all/department`,\n  });\n};\n\nexport const cancelStatusMode = (builder) => {\n  return builder.mutation({\n    query: (cancel) => ({\n      url: `/admission/${cancel.status}/status/cancel/app/${cancel.appId}/student/${cancel.sid}`,\n      method: \"PATCH\",\n    }),\n  });\n};\n\nexport const studentAdmission = (builder) => {\n  return builder.query({\n    query: (student) => `/admission/${student}/fees`,\n  });\n};\n\nexport const collectApplicantDocsFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/student/${data.aid}/collect/docs`,\n      method: \"POST\",\n    }),\n  });\n};\n\nexport const admissionBatchListFunction = (builder) => {\n  return builder.query({\n    query: (aid) => `/admission/${aid}/application/batch`,\n  });\n};\n\nexport const admissionAllottedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/allotted/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n  });\n};\n\nexport const admissionCancelledListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/cancelled/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n  });\n};\n\nexport const admissionClassMasterListFunction = (builder) => {\n  return builder.query({\n    query: (did) => `/admission/${did}/all/classmaster`,\n  });\n};\n\nexport const addEnquiryFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${\n        data.aid\n      }/new/inquiry?flow_status=${`By Admission Admin`}`,\n      method: \"POST\",\n      body: data.enquiry,\n    }),\n  });\n};\n\nexport const getAllEnquiryListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/inquiry?status=${data.status}&page=${data.page}&limit=${data.limit}&appId=${data?.appId}`,\n  });\n};\n\nexport const getOneEnquiryFunction = (builder) => {\n  return builder.query({\n    query: (eid) => `/admission/${eid}/one/inquiry`,\n  });\n};\n\nexport const oneEnquiryActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.eid}/inquiry/remark`,\n      method: \"PATCH\",\n      body: data.enquiryRemark,\n    }),\n  });\n};\n\nexport const directJoinFormAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/auth/direct/confirm/join/${data.phoneNumber}/apply/${data.aid}?existingUser=${data.uid}`,\n      method: \"POST\",\n      body: data.addStudent,\n    }),\n  });\n};\n\nexport const submitAmountToFinanaceFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/finance/${data.aid}/admission/request`,\n      method: \"POST\",\n      body: data.submitAmount,\n    }),\n  });\n};\n\nexport const getAccountWithNumberFunction = (builder) => {\n  return builder.query({\n    query: (phoneKey) => `/auth/select/account?phoneKey=${phoneKey}`,\n  });\n};\n\nexport const editFeeStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/student/${data.sid}/edit/structure`,\n      method: \"PATCH\",\n      body: data.editStructure,\n    }),\n  });\n};\n\nexport const confirmStudentModeByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/select/student/mode/${data.sid}`,\n      method: \"POST\",\n    }),\n  });\n};\nexport const rejectStudentModeByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/cancel/select/student/${data.sid}`,\n      method: \"POST\",\n    }),\n  });\n};\n\nexport const getReceiptByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/receipts/by?page=${data.page}&limit=${data.limit}&filter_by=${data.filterBy}&over_filter=${data.over_filter}&search=${data.search}`,\n  });\n};\n\nexport const receiptActionByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      // when student side offline flow then use it\n      // url: `/admission/${data.aid}/one/receipts/${data.rid}/status?reqId=${data.reqId}&status=${data.status}`,\n      url: `/admission/${data.aid}/one/receipts/${data.rid}/status/decheque/query?reqId=${data.reqId}&status=${data.status}`,\n      method: \"PATCH\",\n      body: data.receiptAction,\n    }),\n  });\n};\n\nexport const reApplyReceiptByStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      // when student side offline flow then use it\n      // url: `/admission/${data.sid}/re/apply/receipts/${data.rid}`,\n      url: `/admission/${data.sid}/re/apply/receipts/${data.rid}/decheque/query`,\n      method: \"PATCH\",\n      body: data.receiptReapply,\n    }),\n  });\n};\n\nexport const getFeeReceiptDetailFunction = (builder) => {\n  return builder.query({\n    query: (rid) => `/finance/${rid}/one/receipt`,\n  });\n};\n\nexport const getDocumentByAdmissionFuction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/document/array?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const addDocumentByAdmissionFuction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/add/document/flow`,\n      method: \"POST\",\n      body: data.document,\n    }),\n  });\n};\n\nexport const updateDocumentByAdmissionFuction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/edit/document/flow`,\n      method: \"PATCH\",\n      body: data.editDocument,\n    }),\n  });\n};\nexport const deleteDocumentByAdmissionFuction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/delete/document/${data.did}`,\n      method: \"DELETE\",\n    }),\n  });\n};\n\nexport const refundAmountByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/paid/remaining/fee/${data.sid}/student/${data.appId}/refund/by`,\n      method: \"PATCH\",\n      body: data.refundData,\n    }),\n  });\n};\n\nexport const getRefundByAdmissionFuction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/refund/array?page=${data.page}&limit=${\n        data.limit\n      }&search=${data?.search ?? \"\"}`,\n  });\n};\n\nexport const updateRemarkByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.applicatonCardId}/remark/query`,\n      method: \"PATCH\",\n      body: data.remarkByAdmission,\n    }),\n  });\n};\n\nexport const exportFilterDataByAdmissionFuction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/feed/filter/pending/fee/${data.aid}?gender=${data.gender}&category=${data.caste}&is_all=${data.is_all}&all_depart=${data.all_depart}&batch_status=${data.batch_status}`,\n      method: \"PATCH\",\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const getAllExcelByAdmissionAdminFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/export/excel/array?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const payAdmissionFeeByStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/go/offline/receipt/${data.appId}`,\n      method: \"PATCH\",\n      body: data.offlinePay,\n    }),\n  });\n};\n\nexport const updateExcelByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/export/excel/${data.xlsxId}/edit`,\n      method: \"PATCH\",\n      body: data.excelUpdate,\n    }),\n  });\n};\n\nexport const deleteExcelByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/export/excel/${data.xlsxId}/destroy/query`,\n      method: \"DELETE\",\n    }),\n  });\n};\n\nexport const updateDocumentByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/edit/document/flow`,\n      method: \"PATCH\",\n      body: data.documentUpdate,\n    }),\n  });\n};\n\nexport const deleteDocumentByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/delete/document/${data.docId}`,\n      method: \"DELETE\",\n    }),\n  });\n};\n\nexport const addModeratorByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/role/permission/${data.aid}/new/app/mod?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: \"POST\",\n      body: data.addModerator,\n    }),\n  });\n};\n\nexport const getModeratorByAdmissionAdminFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/role/permission/${data.aid}/all/moderator?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const updateModeratorByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/role/permission/update/app/mod/${data.modId}?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: \"PATCH\",\n      body: data.updateModerator,\n    }),\n  });\n};\nexport const deleteModeratorByAdmissionAdminFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/role/permission/${data.aid}/destroy/app/mod/${data.modId}`,\n      method: \"DELETE\",\n    }),\n  });\n};\n\nexport const admissionGetSiteInfoFunction = (builder) => {\n  return builder.query({\n    query: (aid) => `/site/info/admission/${aid}`,\n  });\n};\n\nexport const admissionUpdateSiteInfoFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/site/info/admission/${data.aid}`,\n      method: `PATCH`,\n      body: data.updateSiteInfo,\n    }),\n  });\n};\n///////////////\n\nexport const getScholarshipListAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/scholarship?page=${data.page}&limit=${data.limit}&status=${data.status}`,\n  });\n};\n\nexport const addScholarshipAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/new/scholarship`,\n      method: `POST`,\n      body: data.addScholarship,\n    }),\n  });\n};\n\nexport const getOneScholarshipAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (sid) => `/admission/${sid}/scholarship/query`,\n  });\n};\n\nexport const getOneScholarshipAllCandidateAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.sid}/all/allotted/candidates/government?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n  });\n};\n\nexport const oneSchloarshipActionAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/status/query`,\n      method: `PATCH`,\n      // body: data.updateSiteInfo,\n    }),\n  });\n};\n\nexport const addScholarshipFundCorpusAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/scholarship/new/corpus/${data.sid}?user_query=${data.user_query}`,\n      method: `POST`,\n      body: data.addCorpus,\n    }),\n  });\n};\n\nexport const addMoreScholarshipFundCorpusAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/new/income/${data.fcid}?user_query=${data.user_query}`,\n      method: `POST`,\n      body: data.addCorpus,\n    }),\n  });\n};\nexport const getScholarshipFundCorpusAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.sid}/one/fund/corpus/history?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const updateApplicationByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/edit/${data.appId}`,\n      method: `PATCH`,\n      body: data.updateApplication,\n    }),\n  });\n};\nexport const deleteApplicationByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/destroy/${data.appId}`,\n      method: `DELETE`,\n    }),\n  });\n};\n\nexport const forgetPasswordProtectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/auth/reset/new/password/${data.faid}?flow=${data.flow}`,\n      method: `PATCH`,\n      body: data.forgetPassword,\n    }),\n  });\n};\n\nexport const passwordProtectionToggleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/auth/enable/password/protection/${data.faid}?flow=${data.flow}`,\n      method: `PATCH`,\n    }),\n  });\n};\n\nexport const passwordProtectionLoginFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/auth/login/designation`,\n      method: `POST`,\n      body: data.loginPassword,\n    }),\n  });\n};\n\nexport const updateFeeStructureByAppliationWiseFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/retro/structure/${data.appId}/one/student/${data.sid}/query`,\n      method: `PATCH`,\n      body: data.updateStrucutre,\n    }),\n  });\n};\n\nexport const getRefundedListByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/${data.aid}/all/refunded/array?page=${data.page}&limit=${data.limit}`,\n  });\n};\n\nexport const directJoinFormWithPayAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.uid}/user/${data.aid}/apply/direct/online`,\n      method: `POST`,\n      body: data.apply_data,\n    }),\n  });\n};\nexport const collectSetOffAdmissionFeesFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rcid}/set/off/${data.sid}/query`,\n      method: `PATCH`,\n      body: data.setOffData,\n    }),\n  });\n};\n\nexport const admissionDocsActionByStudentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/student/${data.aid}/docs/confirm/status/${data.stId}?flow=${data.flow}`,\n      method: `PATCH`,\n    }),\n  });\n};\n\nexport const scholarShipExcelByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/excel/to/json/${data.aid}/query/scholarship/${data.scid}`,\n      method: `PATCH`,\n      body: data.excelFile,\n    }),\n  });\n};\n\nexport const scholarShipExcelByInstituteFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/excel/to/json/${data.id}/query/scholarship/gr/batch`,\n      method: `PATCH`,\n      body: data.excelFile,\n    }),\n  });\n};\n\nexport const addScholarNumberAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rcid}/add/scholar/number/query`,\n      method: `PATCH`,\n      body: data.scholarData,\n    }),\n  });\n};\n\nexport const studentDepartmentFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/fees/student/${data.sid}/internal/fees/query?page=${data.page}&limit=${data.limit}`,\n  });\n};\nexport const studentBacklogFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/fees/student/${data.sid}/backlog/fees/query?page=${data.page}&limit=${data.limit}`,\n  });\n};\nexport const internalFeeReceiptFunction = (builder) => {\n  return builder.query({\n    query: (rid) => `/fees/student/one/receipt/${rid}/query`,\n  });\n};\n\nexport const dropAdmissionFeesCardByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rid}/drop/fees/${data.sid}/query`,\n      method: `PATCH`,\n    }),\n  });\n};\nexport const allApplicationByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/filter/by/${data.id}/three/function/query?departId=${\n        data.departId\n      }&masterId=${data.masterId}&batchId=${data?.batchId ?? \"\"}`,\n  });\n  // &batchId=${data.batchId}\n};\n\nexport const addNewFeesByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/add/fees/card/query`,\n      method: `POST`,\n      body: data.addFees,\n    }),\n  });\n};\n\nexport const collectNewAddFeesByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/paid/already/card/remaining/fee/${data.sid}/student/${data.appId}?receipt_status=${data?.receipt_status}`,\n      method: `POST`,\n      body: data.remain_data,\n    }),\n  });\n};\n\nexport const governmentCollectNewAddFeesByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/paid/already/card/government/grant/fee/${data.sid}/student/${data.appId}`,\n      method: `POST`,\n      body: data.governmentData,\n    }),\n  });\n};\n\nexport const admissionReminderFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/trigger/alarm?alarm_mode=${data.alarm_mode}&content=${data.content}`,\n      method: \"POST\",\n      body: data.reminderData,\n    }),\n  });\n};\n\nexport const admissionInstallmentEditFeesByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/access/fees/editable/query?flow=${data.flow}`,\n      method: \"PATCH\",\n      body: data.editAccess,\n    }),\n  });\n};\n\n// for filter\nexport const getPendingCustomFilterByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/pending/custom/filter/${data?.aid}/query?flow=${data.flow}`,\n  });\n};\n\nexport const getBatchStandardWithMultipleDepartmentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/pending/custom/filter/master/batch/query`,\n      method: `PATCH`,\n      body: data.departmentList,\n    }),\n  });\n};\n\nexport const fetchRemainingArray = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/admission/${ad.aid}/all/remaining/applicable/array?page=${\n        ad.page\n      }&limit=${ad.limit}&search=${ad.search}&flow=${\n        ad.flow ?? \"Applicable_Fees_Query\"\n      }`,\n  });\n  // return builder.mutation({\n  //   query: (data) => ({\n  //     url: `/admission/${data.aid}/all/remaining/array?page=${\n  //       data.page\n  //     }&limit=${data.limit}&search=${data.search}&flow=${\n  //       data.flow ?? \"All_Pending_Fees_Query\"\n  //     }`,\n  //     method: `PATCH`,\n  //     body: data.filterData,\n  //   }),\n  // });\n};\n\nexport const fetchAdmissionRemainingArray = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/all/remaining/array?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search}&flow=${\n        data.flow ?? \"All_Pending_Fees_Query\"\n      }&filter_by=${data.filter_by}`,\n      method: `PATCH`,\n      body: data.filterData,\n    }),\n  });\n};\n\nexport const getDailyCollectionByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/feed/filter/by/date/collection/${data?.appId}/query?valid_date=${data.valid_date}`,\n  });\n};\n\n/// edit student Gr number request\nexport const editStudentGrNumberFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/edit/${data.sid}/gr/unique/query`,\n      method: `PATCH`,\n      body: data.grNumberContent,\n    }),\n  });\n};\n\n/// admission for revert back\nexport const admissionRevertBackSelectedToApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/student/${data.aid}/revert/back/select/query`,\n      method: `POST`,\n      body: data.revertData,\n    }),\n  });\n};\n\n/// edit student Gr number request\nexport const admissionRevertBackDocsToSelectedFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/student/${data.aid}/collect/revert/back/docs/query`,\n      method: `POST`,\n      body: data.revertData,\n    }),\n  });\n};\n\nexport const removeFeesInstallmentCardFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rid}/card/removal/query?raid=${data.raid}`,\n      method: `PATCH`,\n    }),\n  });\n};\n\nexport const transferApplicatToOtherApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/transfer/apps/query`,\n      method: `PATCH`,\n      body: data.transferApplicantData,\n    }),\n  });\n};\n\nexport const existStudentFeesExcelByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/excel/to/json/${data.aid}/fees/query`,\n      method: `PATCH`,\n      body: data.excelFile,\n    }),\n  });\n};\n\nexport const studentValidaForApplicationByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.uid}/user/${data.aid}/apply/valid/query`,\n      method: `POST`,\n    }),\n  });\n};\n\nexport const studentBankValidationByAdmissionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/finance/${data.fid}/valid/bank/query/${data.aid}?flow=${data?.flow}`,\n      method: `PATCH`,\n    }),\n  });\n};\n\nexport const markCompleteToOngoingApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/application/incomplete`,\n      method: `PATCH`,\n    }),\n  });\n};\n\nexport const getReminderHistoryByAdmissionFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/extra/all/filtered/alarm/${data.id}/query?page=${data.page}&limit=${data.limit}`,\n  });\n};\nexport const getOsReminderStudentListFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/all/outstanding/query`,\n      method: `PATCH`,\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const studentScholarshipNumberDublicateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/finance/valid/scholar/query?num=${data.num}`,\n      method: `PATCH`,\n    }),\n  });\n};\n","import {\n  activateAdmission,\n  editAdmissionFunction,\n  fetchAdmission,\n  fetchOngoing,\n  fetchCompleted,\n  fetchRemainingArray,\n  fetchAdmissionRemainingArray,\n  atInstituteSearchApplication,\n  userApply,\n  newApplication,\n  fetchRequest,\n  fetchSelect,\n  fetchConfirm,\n  fetchConfirmAll,\n  userSelect,\n  userCancelApplication,\n  userSelectStatusMode,\n  userConfirm,\n  userCancel,\n  fetchClasses,\n  newClassAllot,\n  markComplete,\n  oneStudentFee,\n  paidRemainFee,\n  oneApplication,\n  allDepartment,\n  cancelStatusMode,\n  studentAdmission,\n  collectApplicantDocsFunction,\n  admissionBatchListFunction,\n  admissionAllottedListFunction,\n  admissionCancelledListFunction,\n  admissionClassMasterListFunction,\n  addEnquiryFunction,\n  getAllEnquiryListFunction,\n  getOneEnquiryFunction,\n  oneEnquiryActionFunction,\n  directJoinFormAdmissionFunction,\n  submitAmountToFinanaceFunction,\n  getAccountWithNumberFunction,\n  editFeeStructureFunction,\n  confirmStudentModeByAdmissionAdminFunction,\n  rejectStudentModeByAdmissionAdminFunction,\n  getReceiptByAdmissionFunction,\n  receiptActionByAdmissionFunction,\n  reApplyReceiptByStudentFunction,\n  getFeeReceiptDetailFunction,\n  getDocumentByAdmissionFuction,\n  addDocumentByAdmissionFuction,\n  updateDocumentByAdmissionFuction,\n  deleteDocumentByAdmissionFuction,\n  refundAmountByAdmissionAdminFunction,\n  getRefundByAdmissionFuction,\n  updateRemarkByAdmissionAdminFunction,\n  exportFilterDataByAdmissionFuction,\n  getAllExcelByAdmissionAdminFunction,\n  payAdmissionFeeByStudentFunction,\n  updateExcelByAdmissionAdminFunction,\n  deleteExcelByAdmissionAdminFunction,\n  updateDocumentByAdmissionAdminFunction,\n  deleteDocumentByAdmissionAdminFunction,\n  addModeratorByAdmissionAdminFunction,\n  getModeratorByAdmissionAdminFunction,\n  updateModeratorByAdmissionAdminFunction,\n  deleteModeratorByAdmissionAdminFunction,\n  admissionGetSiteInfoFunction,\n  admissionUpdateSiteInfoFunction,\n  getScholarshipListAdmissionFunction,\n  addScholarshipAdmissionFunction,\n  getOneScholarshipAdmissionFunction,\n  getOneScholarshipAllCandidateAdmissionFunction,\n  oneSchloarshipActionAdmissionFunction,\n  addScholarshipFundCorpusAdmissionFunction,\n  getScholarshipFundCorpusAdmissionFunction,\n  addMoreScholarshipFundCorpusAdmissionFunction,\n  updateApplicationByAdmissionFunction,\n  deleteApplicationByAdmissionFunction,\n  forgetPasswordProtectionFunction,\n  passwordProtectionToggleFunction,\n  passwordProtectionLoginFunction,\n  updateFeeStructureByAppliationWiseFunction,\n  getRefundedListByAdmissionFunction,\n  directJoinFormWithPayAdmissionFunction,\n  collectSetOffAdmissionFeesFunction,\n  admissionDocsActionByStudentFunction,\n  scholarShipExcelByAdmissionFunction,\n  scholarShipExcelByInstituteFunction,\n  addScholarNumberAdmissionFunction,\n  studentDepartmentFeesFunction,\n  studentBacklogFeesFunction,\n  internalFeeReceiptFunction,\n  dropAdmissionFeesCardByAdmissionFunction,\n  allApplicationByAdmissionFunction,\n  addNewFeesByAdmissionFunction,\n  collectNewAddFeesByAdmissionFunction,\n  governmentCollectNewAddFeesByAdmissionFunction,\n  admissionReminderFunction,\n  admissionInstallmentEditFeesByAdmissionFunction,\n  getPendingCustomFilterByAdmissionFunction,\n  getBatchStandardWithMultipleDepartmentFunction,\n  getDailyCollectionByAdmissionFunction,\n  editStudentGrNumberFunction,\n  //\n  admissionRevertBackSelectedToApplicationFunction,\n  admissionRevertBackDocsToSelectedFunction,\n  removeFeesInstallmentCardFunction,\n  transferApplicatToOtherApplicationFunction,\n  existStudentFeesExcelByAdmissionFunction,\n  studentValidaForApplicationByAdmissionFunction,\n  studentBankValidationByAdmissionFunction,\n  markCompleteToOngoingApplicationFunction,\n  getReminderHistoryByAdmissionFunction,\n  getOsReminderStudentListFunction,\n  studentScholarshipNumberDublicateFunction,\n} from \"./admissionBuilderAPI\";\nimport { admissionNewApi } from \"./admissionNewApi\";\n\n//////////eeghfrwjeghw\nexport const admissionApiDynamic = admissionNewApi.injectEndpoints({\n  endpoints: (builder) => ({\n    activateAdmissionHead: activateAdmission(builder),\n    editAdmission: editAdmissionFunction(builder),\n    fetchAdmissionDetail: fetchAdmission(builder),\n    fetchAllOngoingApp: fetchOngoing(builder),\n    fetchAllCompletedApp: fetchCompleted(builder),\n    fetchAllRemainingArray: fetchRemainingArray(builder),\n    fetchAdmissionRemainingArray: fetchAdmissionRemainingArray(builder),\n\n    fetchAllAppAtInstitute: atInstituteSearchApplication(builder),\n    newUserApply: userApply(builder),\n    getNewApplication: newApplication(builder),\n    getAllRequest: fetchRequest(builder),\n    getAllSelect: fetchSelect(builder),\n    getAllConfirm: fetchConfirm(builder),\n    getAllConfirmMultiselect: fetchConfirmAll(builder),\n    fetchUserSelectApp: userSelect(builder),\n    fetchUserCancelApp: userCancelApplication(builder),\n    fetchUserSelectStatusApp: userSelectStatusMode(builder),\n    getUserConfirm: userConfirm(builder),\n    getUserCancel: userCancel(builder),\n    getAllClasses: fetchClasses(builder),\n    retrieveNewClassAllot: newClassAllot(builder),\n    retrieveMarkComplete: markComplete(builder),\n    getOneViewStudentFee: oneStudentFee(builder),\n    retrievePaidRemainFee: paidRemainFee(builder),\n    getOneApplication: oneApplication(builder),\n    getAllDepartment: allDepartment(builder),\n    fetchCancelStatusMode: cancelStatusMode(builder),\n    renderStudentAdmissionFees: studentAdmission(builder),\n    collectApplicantDocs: collectApplicantDocsFunction(builder),\n    admissionBatchList: admissionBatchListFunction(builder),\n    admissionAllottedList: admissionAllottedListFunction(builder),\n    admissionCancelledList: admissionCancelledListFunction(builder),\n    admissionClassMasterList: admissionClassMasterListFunction(builder),\n    addEnquiry: addEnquiryFunction(builder),\n    getAllEnquiryList: getAllEnquiryListFunction(builder),\n    getOneEnquiry: getOneEnquiryFunction(builder),\n    oneEnquiryAction: oneEnquiryActionFunction(builder),\n    directJoinFormAdmission: directJoinFormAdmissionFunction(builder),\n    submitAmountToFinanace: submitAmountToFinanaceFunction(builder),\n    getAccountWithNumber: getAccountWithNumberFunction(builder),\n    editFeeStructure: editFeeStructureFunction(builder),\n    confirmStudentModeByAdmissionAdmin:\n      confirmStudentModeByAdmissionAdminFunction(builder),\n    rejectStudentModeByAdmissionAdmin:\n      rejectStudentModeByAdmissionAdminFunction(builder),\n\n    getReceiptByAdmission: getReceiptByAdmissionFunction(builder),\n    receiptActionByAdmission: receiptActionByAdmissionFunction(builder),\n    reApplyReceiptByStudent: reApplyReceiptByStudentFunction(builder),\n    getFeeReceiptDetail: getFeeReceiptDetailFunction(builder),\n    getDocumentByAdmission: getDocumentByAdmissionFuction(builder),\n    addDocumentByAdmission: addDocumentByAdmissionFuction(builder),\n    updateDocumentByAdmission: updateDocumentByAdmissionFuction(builder),\n    deleteDocumentByAdmission: deleteDocumentByAdmissionFuction(builder),\n    refundAmountByAdmissionAdmin: refundAmountByAdmissionAdminFunction(builder),\n    getRefundByAdmission: getRefundByAdmissionFuction(builder),\n    updateRemarkByAdmissionAdmin: updateRemarkByAdmissionAdminFunction(builder),\n    exportFilterDataByAdmission: exportFilterDataByAdmissionFuction(builder),\n    getAllExcelByAdmissionAdmin: getAllExcelByAdmissionAdminFunction(builder),\n    payAdmissionFeeByStudent: payAdmissionFeeByStudentFunction(builder),\n    updateExcelByAdmissionAdmin: updateExcelByAdmissionAdminFunction(builder),\n    deleteExcelByAdmissionAdmin: deleteExcelByAdmissionAdminFunction(builder),\n    updateDocumentByAdmissionAdmin:\n      updateDocumentByAdmissionAdminFunction(builder),\n    deleteDocumentByAdmissionAdmin:\n      deleteDocumentByAdmissionAdminFunction(builder),\n    addModeratorByAdmissionAdmin: addModeratorByAdmissionAdminFunction(builder),\n    getModeratorByAdmissionAdmin: getModeratorByAdmissionAdminFunction(builder),\n    updateModeratorByAdmissionAdmin:\n      updateModeratorByAdmissionAdminFunction(builder),\n    deleteModeratorByAdmissionAdmin:\n      deleteModeratorByAdmissionAdminFunction(builder),\n    admissionGetSiteInfo: admissionGetSiteInfoFunction(builder),\n    admissionUpdateSiteInfo: admissionUpdateSiteInfoFunction(builder),\n    getScholarshipListAdmission: getScholarshipListAdmissionFunction(builder),\n    addScholarshipAdmission: addScholarshipAdmissionFunction(builder),\n    getOneScholarshipAdmission: getOneScholarshipAdmissionFunction(builder),\n    getOneScholarshipAllCandidateAdmission:\n      getOneScholarshipAllCandidateAdmissionFunction(builder),\n    oneSchloarshipActionAdmission:\n      oneSchloarshipActionAdmissionFunction(builder),\n    addScholarshipFundCorpusAdmission:\n      addScholarshipFundCorpusAdmissionFunction(builder),\n    getScholarshipFundCorpusAdmission:\n      getScholarshipFundCorpusAdmissionFunction(builder),\n    addMoreScholarshipFundCorpusAdmission:\n      addMoreScholarshipFundCorpusAdmissionFunction(builder),\n    updateApplicationByAdmission: updateApplicationByAdmissionFunction(builder),\n    deleteApplicationByAdmission: deleteApplicationByAdmissionFunction(builder),\n    forgetPasswordProtection: forgetPasswordProtectionFunction(builder),\n    passwordProtectionToggle: passwordProtectionToggleFunction(builder),\n    passwordProtectionLogin: passwordProtectionLoginFunction(builder),\n    updateFeeStructureByAppliationWise:\n      updateFeeStructureByAppliationWiseFunction(builder),\n\n    getRefundedListByAdmission: getRefundedListByAdmissionFunction(builder),\n    directJoinFormWithPayAdmission:\n      directJoinFormWithPayAdmissionFunction(builder),\n    collectSetOffAdmissionFees: collectSetOffAdmissionFeesFunction(builder),\n    admissionDocsActionByStudent: admissionDocsActionByStudentFunction(builder),\n    scholarShipExcelByAdmission: scholarShipExcelByAdmissionFunction(builder),\n    scholarShipExcelByInstitute: scholarShipExcelByInstituteFunction(builder),\n    addScholarNumberAdmission: addScholarNumberAdmissionFunction(builder),\n    studentDepartmentFees: studentDepartmentFeesFunction(builder),\n    studentBacklogFees: studentBacklogFeesFunction(builder),\n    internalFeeReceipt: internalFeeReceiptFunction(builder),\n    dropAdmissionFeesCardByAdmission:\n      dropAdmissionFeesCardByAdmissionFunction(builder),\n\n    allApplicationByAdmission: allApplicationByAdmissionFunction(builder),\n    addNewFeesByAdmission: addNewFeesByAdmissionFunction(builder),\n    collectNewAddFeesByAdmission: collectNewAddFeesByAdmissionFunction(builder),\n    governmentCollectNewAddFeesByAdmission:\n      governmentCollectNewAddFeesByAdmissionFunction(builder),\n    admissionReminder: admissionReminderFunction(builder),\n    admissionInstallmentEditFeesByAdmission:\n      admissionInstallmentEditFeesByAdmissionFunction(builder),\n    getPendingCustomFilterByAdmission:\n      getPendingCustomFilterByAdmissionFunction(builder),\n    getBatchStandardWithMultipleDepartment:\n      getBatchStandardWithMultipleDepartmentFunction(builder),\n    getDailyCollectionByAdmission:\n      getDailyCollectionByAdmissionFunction(builder),\n    editStudentGrNumber: editStudentGrNumberFunction(builder),\n    admissionRevertBackSelectedToApplication:\n      admissionRevertBackSelectedToApplicationFunction(builder),\n    admissionRevertBackDocsToSelected:\n      admissionRevertBackDocsToSelectedFunction(builder),\n    removeFeesInstallmentCard: removeFeesInstallmentCardFunction(builder),\n    transferApplicatToOtherApplication:\n      transferApplicatToOtherApplicationFunction(builder),\n    existStudentFeesExcelByAdmission:\n      existStudentFeesExcelByAdmissionFunction(builder),\n    studentValidaForApplicationByAdmission:\n      studentValidaForApplicationByAdmissionFunction(builder),\n    studentBankValidationByAdmission:\n      studentBankValidationByAdmissionFunction(builder),\n    markCompleteToOngoingApplication:\n      markCompleteToOngoingApplicationFunction(builder),\n    getReminderHistoryByAdmission:\n      getReminderHistoryByAdmissionFunction(builder),\n    getOsReminderStudentList: getOsReminderStudentListFunction(builder),\n    studentScholarshipNumberDublicate:\n      studentScholarshipNumberDublicateFunction(builder),\n  }),\n});\n\nexport const {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchAllAppAtInstituteQuery,\n  useNewUserApplyMutation,\n  useGetNewApplicationMutation,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetUserConfirmMutation,\n  useGetUserCancelMutation,\n  useGetAllClassesQuery,\n  useRetrieveNewClassAllotMutation,\n  useRetrieveMarkCompleteMutation,\n  useGetOneViewStudentFeeQuery,\n  useRetrievePaidRemainFeeMutation,\n  useGetOneApplicationQuery,\n  useGetAllDepartmentQuery,\n  useFetchCancelStatusModeMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n\n  useGetDailyCollectionByAdmissionQuery,\n\n  //\n  useEditStudentGrNumberMutation,\n\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} = admissionApiDynamic;\n","import {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllAppAtInstituteQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchCancelStatusModeMutation,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetAllClassesQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useGetAllDepartmentQuery,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetNewApplicationMutation,\n  useGetOneApplicationQuery,\n  useGetUserCancelMutation,\n  useGetUserConfirmMutation,\n  useNewUserApplyMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useRetrieveMarkCompleteMutation,\n  useRetrieveNewClassAllotMutation,\n  useRetrievePaidRemainFeeMutation,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n  useGetDailyCollectionByAdmissionQuery,\n  useEditStudentGrNumberMutation,\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} from \"../../services/admission/admissionApiDynamic\";\n\nexport const useAssignAdmissionHead = () => {\n  const [assignAdmissionHead] = useActivateAdmissionHeadMutation();\n  return [assignAdmissionHead];\n};\n\nexport const useEditAdmission = () => {\n  const [editAdmission] = useEditAdmissionMutation();\n  return [editAdmission];\n};\n\nexport const useGetAdmissionDetail = (args) => {\n  const { data: getAdmissionDetail, refetch: getAdmissionDetailRefetch } =\n    useFetchAdmissionDetailQuery(args.data, { skip: args.skip });\n  return { getAdmissionDetail, getAdmissionDetailRefetch };\n};\n\nexport const useAllOngoingApp = (args) => {\n  const { data: allOngoingApp, refetch: allOngoingAppRefetch } =\n    useFetchAllOngoingAppQuery(args.data, { skip: args.skip });\n  return { allOngoingApp, allOngoingAppRefetch };\n};\n\nexport const useAllCompletedApp = (args) => {\n  const { data: allCompletedApp, refetch: allCompletedAppRefetch } =\n    useFetchAllCompletedAppQuery(args.data, { skip: args.skip });\n  return { allCompletedApp, allCompletedAppRefetch };\n};\n\nexport const useAllAppAtInstitute = (args) => {\n  const { data: allAppAtInstitute, refetch: allAppAtInstituteRefetch } =\n    useFetchAllAppAtInstituteQuery(args.data, { skip: args.skip });\n  return { allAppAtInstitute, allAppAtInstituteRefetch };\n};\n\nexport const useNewUserApply = () => {\n  const [newUserApply] = useNewUserApplyMutation();\n  return [newUserApply];\n};\nexport const useCreateNewApplication = () => {\n  const [createNewApplication] = useGetNewApplicationMutation();\n  return [createNewApplication];\n};\n\nexport const useGetAllRequest = (args) => {\n  const { data: getAllRequestList, refetch: getAllRequestListRefetch } =\n    useGetAllRequestQuery(args.data, { skip: args.skip });\n  return { getAllRequestList, getAllRequestListRefetch };\n};\nexport const useGetAllSelect = (args) => {\n  const { data: getAllSelectList, refetch: getAllSelectListRefetch } =\n    useGetAllSelectQuery(args.data, { skip: args.skip });\n  return { getAllSelectList, getAllSelectListRefetch };\n};\nexport const useGetAllConfirm = (args) => {\n  const { data: getAllConfirmList, refetch: getAllConfirmListRefetch } =\n    useGetAllConfirmQuery(args.data, { skip: args.skip });\n  return { getAllConfirmList, getAllConfirmListRefetch };\n};\n\nexport const useGetAllConfirmMultiselect = (args) => {\n  const {\n    data: getAllConfirmListMulitselect,\n    refetch: getAllConfirmListMulitselectRefetch,\n  } = useGetAllConfirmMultiselectQuery(args.data, { skip: args.skip });\n  return { getAllConfirmListMulitselect, getAllConfirmListMulitselectRefetch };\n};\n\nexport const useSelectAdmissionApplicant = () => {\n  const [selectAdmissionApplicant] = useFetchUserSelectAppMutation();\n  return [selectAdmissionApplicant];\n};\nexport const useCancelAdmissionApplicant = () => {\n  const [cancelAdmissionApplicant] = useFetchUserCancelAppMutation();\n  return [cancelAdmissionApplicant];\n};\nexport const useStudentPayMode = () => {\n  const [studentPayMode] = useFetchUserSelectStatusAppMutation();\n  return [studentPayMode];\n};\nexport const useApplicantAdmissionConfirm = () => {\n  const [confirmAppliacntAdmission] = useGetUserConfirmMutation();\n  return [confirmAppliacntAdmission];\n};\nexport const useApplicantAdmissionCancel = () => {\n  const [cancelAppliacntAdmission] = useGetUserCancelMutation();\n  return [cancelAppliacntAdmission];\n};\nexport const useGetAllClasses = (args) => {\n  const { data: getAllClassesList, refetch: getAllClassesListRefetch } =\n    useGetAllClassesQuery(args.data, { skip: args.skip });\n  return { getAllClassesList, getAllClassesListRefetch };\n};\n\nexport const useApplicantAdmissionAllotSeat = () => {\n  const [applicantAllotSeat] = useRetrieveNewClassAllotMutation();\n  return [applicantAllotSeat];\n};\nexport const useApplicationComplete = () => {\n  const [completeAdmissionApplication] = useRetrieveMarkCompleteMutation();\n  return [completeAdmissionApplication];\n};\n\nexport const useApplicantAdmissionRemainingFees = () => {\n  const [applicantRemainingFees] = useRetrievePaidRemainFeeMutation();\n  return [applicantRemainingFees];\n};\n\nexport const useOneApplicationDetail = (args) => {\n  const { data: oneApplicationDetail, refetch: oneApplicationDetailRefetch } =\n    useGetOneApplicationQuery(args.apid, { skip: args.skip });\n  return { oneApplicationDetail, oneApplicationDetailRefetch };\n};\n\nexport const useGetAllDepartment = (args) => {\n  const { data: allDepartmentList, refetch: allDepartmentListRefetch } =\n    useGetAllDepartmentQuery(args.aid, { skip: args.skip });\n  return { allDepartmentList, allDepartmentListRefetch };\n};\n\nexport const useCancelStudentApplicationStatus = () => {\n  const [cancelApplication] = useFetchCancelStatusModeMutation();\n  return [cancelApplication];\n};\n\nexport const useRenderStudentAdmissionFees = (args) => {\n  const {\n    data: sudentAdmissionFeesList,\n    refetch: sudentAdmissionFeesListRefetch,\n  } = useRenderStudentAdmissionFeesQuery(args.sid, { skip: args.skip });\n  return { sudentAdmissionFeesList, sudentAdmissionFeesListRefetch };\n};\n\nexport const useCollectApplicantDocs = () => {\n  const [collectDocs] = useCollectApplicantDocsMutation();\n  return [collectDocs];\n};\nexport const useAdmissionBatchList = (args) => {\n  const { data: admissionBatchList, refetch: admissionBatchListRefetch } =\n    useAdmissionBatchListQuery(args.aid, { skip: args.skip });\n  return { admissionBatchList, admissionBatchListRefetch };\n};\n\nexport const useAdmissionAllottedList = (args) => {\n  const { data: admissionAllottedList, refetch: admissionAllottedListRefetch } =\n    useAdmissionAllottedListQuery(args.data, { skip: args.skip });\n  return { admissionAllottedList, admissionAllottedListRefetch };\n};\nexport const useAdmissionCancelledList = (args) => {\n  const {\n    data: admissionCancelledList,\n    refetch: admissionCancelledListRefetch,\n  } = useAdmissionCancelledListQuery(args.data, { skip: args.skip });\n  return { admissionCancelledList, admissionCancelledListRefetch };\n};\nexport const useAdmissionClassMasterList = (args) => {\n  const {\n    data: admissionClassMasterList,\n    refetch: admissionClassMasterListRefetch,\n  } = useAdmissionClassMasterListQuery(args.did, { skip: args.skip });\n  return { admissionClassMasterList, admissionClassMasterListRefetch };\n};\n\nexport const useAddEnquiry = () => {\n  const [addEnquiry] = useAddEnquiryMutation();\n  return [addEnquiry];\n};\n\nexport const useGetAllEnquiryList = (args) => {\n  const { data: getAllEnquiryList, refetch: getAllEnquiryListRefetch } =\n    useGetAllEnquiryListQuery(args.data, { skip: args.skip });\n  return { getAllEnquiryList, getAllEnquiryListRefetch };\n};\nexport const useGetOneEnquiry = (args) => {\n  const { data: oneEnquiryDetail, refetch: oneEnquiryDetailRefetch } =\n    useGetOneEnquiryQuery(args.eid, { skip: args.skip });\n  return { oneEnquiryDetail, oneEnquiryDetailRefetch };\n};\n\nexport const useOneEnquiryAction = () => {\n  const [oneEnquiryAction] = useOneEnquiryActionMutation();\n  return [oneEnquiryAction];\n};\n\nexport const useDirectJoinFormAdmission = () => {\n  const [directJoinFormAdmission] = useDirectJoinFormAdmissionMutation();\n  return [directJoinFormAdmission];\n};\nexport const useSubmitAmountToFinanace = () => {\n  const [submitAmountToFinanace] = useSubmitAmountToFinanaceMutation();\n  return [submitAmountToFinanace];\n};\n\nexport const useGetAccountWithNumber = (args) => {\n  const { data: getAccountWithNumber, refetch: getAccountWithNumberRefetch } =\n    useGetAccountWithNumberQuery(args.phoneKey, { skip: args.skip });\n  return { getAccountWithNumber, getAccountWithNumberRefetch };\n};\nexport const useEditFeeStructure = () => {\n  const [editFeeStructure] = useEditFeeStructureMutation();\n  return [editFeeStructure];\n};\n\nexport const useConfirmStudentModeByAdmissionAdmin = () => {\n  const [confirmStudentModeByAdmission] =\n    useConfirmStudentModeByAdmissionAdminMutation();\n  return [confirmStudentModeByAdmission];\n};\nexport const useRejectStudentModeByAdmissionAdmin = () => {\n  const [rejectStudentModeByAdmission] =\n    useRejectStudentModeByAdmissionAdminMutation();\n  return [rejectStudentModeByAdmission];\n};\n\nexport const useGetReceiptByAdmission = (args) => {\n  const { data: getReceiptByAdmission, refetch: getReceiptByAdmissionRefetch } =\n    useGetReceiptByAdmissionQuery(args.data, { skip: args.skip });\n  return { getReceiptByAdmission, getReceiptByAdmissionRefetch };\n};\n\nexport const useReceiptActionByAdmission = () => {\n  const [receiptActionByAdmission] = useReceiptActionByAdmissionMutation();\n  return [receiptActionByAdmission];\n};\nexport const useReApplyReceiptByStudent = () => {\n  const [reApplyReceiptByStudent] = useReApplyReceiptByStudentMutation();\n  return [reApplyReceiptByStudent];\n};\n\nexport const useGetFeeReceiptDetail = (args) => {\n  const { data: getFeeReceiptDetail, refetch: getFeeReceiptDetailRefetch } =\n    useGetFeeReceiptDetailQuery(args.rid, { skip: args.skip });\n  return { getFeeReceiptDetail, getFeeReceiptDetailRefetch };\n};\n\nexport const useGetDocumentByAdmission = (args) => {\n  const {\n    data: getDocumentByAdmission,\n    refetch: getDocumentByAdmissionRefetch,\n  } = useGetDocumentByAdmissionQuery(args.data, { skip: args.skip });\n  return { getDocumentByAdmission, getDocumentByAdmissionRefetch };\n};\n\nexport const useAddDocumentByAdmission = () => {\n  const [addDocumentByAdmission] = useAddDocumentByAdmissionMutation();\n  return [addDocumentByAdmission];\n};\nexport const useUpdateDocumentByAdmission = () => {\n  const [updateDocumentByAdmission] = useUpdateDocumentByAdmissionMutation();\n  return [updateDocumentByAdmission];\n};\n\nexport const useDeleteDocumentByAdmission = () => {\n  const [deleteDocumentByAdmission] = useDeleteDocumentByAdmissionMutation();\n  return [deleteDocumentByAdmission];\n};\n\nexport const useRefundAmountByAdmissionAdmin = () => {\n  const [refundAmountByAdmissionAdmin] =\n    useRefundAmountByAdmissionAdminMutation();\n  return [refundAmountByAdmissionAdmin];\n};\n\nexport const useGetRefundByAdmission = (args) => {\n  const { data: getRefundByAdmission, refetch: getRefundByAdmissionRefetch } =\n    useGetRefundByAdmissionQuery(args.data, { skip: args.skip });\n  return { getRefundByAdmission, getRefundByAdmissionRefetch };\n};\n\nexport const useUpdateRemarkByAdmissionAdmin = () => {\n  const [updateRemarkByAdmissionAdmin] =\n    useUpdateRemarkByAdmissionAdminMutation();\n  return [updateRemarkByAdmissionAdmin];\n};\n\nexport const useExportFilterDataByAdmission = () => {\n  const [exportFilterDataByAdmission] =\n    useExportFilterDataByAdmissionMutation();\n  return [exportFilterDataByAdmission];\n};\n\nexport const useGetAllExcelByAdmissionAdmin = (args) => {\n  const {\n    data: getAllExcelByAdmissionAdmin,\n    refetch: getAllExcelByAdmissionAdminRefetch,\n  } = useGetAllExcelByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getAllExcelByAdmissionAdmin, getAllExcelByAdmissionAdminRefetch };\n};\n\nexport const usePayAdmissionFeeByStudent = () => {\n  const [payAdmissionFeeByStudent] = usePayAdmissionFeeByStudentMutation();\n  return [payAdmissionFeeByStudent];\n};\n\nexport const useUpdateExcelByAdmissionAdmin = () => {\n  const [updateExcelByAdmissionAdmin] =\n    useUpdateExcelByAdmissionAdminMutation();\n  return [updateExcelByAdmissionAdmin];\n};\n\nexport const useDeleteExcelByAdmissionAdmin = () => {\n  const [deleteExcelByAdmissionAdmin] =\n    useDeleteExcelByAdmissionAdminMutation();\n  return [deleteExcelByAdmissionAdmin];\n};\n\nexport const useUpdateDocumentByAdmissionAdmin = () => {\n  const [updateDocumentByAdmissionAdmin] =\n    useUpdateDocumentByAdmissionAdminMutation();\n  return [updateDocumentByAdmissionAdmin];\n};\n\nexport const useDeleteDocumentByAdmissionAdmin = () => {\n  const [deleteDocumentByAdmissionAdmin] =\n    useDeleteDocumentByAdmissionAdminMutation();\n  return [deleteDocumentByAdmissionAdmin];\n};\nexport const useGetModeratorByAdmissionAdmin = (args) => {\n  const {\n    data: getModeratorByAdmissionAdmin,\n    refetch: getModeratorByAdmissionAdminRefetch,\n  } = useGetModeratorByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getModeratorByAdmissionAdmin, getModeratorByAdmissionAdminRefetch };\n};\n\nexport const useAddModeratorByAdmissionAdmin = () => {\n  const [addModeratorByAdmissionAdmin] =\n    useAddModeratorByAdmissionAdminMutation();\n  return [addModeratorByAdmissionAdmin];\n};\n\nexport const useUpdateModeratorByAdmissionAdmin = () => {\n  const [updateModeratorByAdmissionAdmin] =\n    useUpdateModeratorByAdmissionAdminMutation();\n  return [updateModeratorByAdmissionAdmin];\n};\n\nexport const useDeleteModeratorByAdmissionAdmin = () => {\n  const [deleteModeratorByAdmissionAdmin] =\n    useDeleteModeratorByAdmissionAdminMutation();\n  return [deleteModeratorByAdmissionAdmin];\n};\n\nexport const useAdmissionGetSiteInfo = (args) => {\n  const { data: admissionGetSiteInfo, refetch: admissionGetSiteInfoRefetch } =\n    useAdmissionGetSiteInfoQuery(args.aid, { skip: args.skip });\n  return { admissionGetSiteInfo, admissionGetSiteInfoRefetch };\n};\n\nexport const useAdmissionUpdateSiteInfo = () => {\n  const [admissionUpdateSiteInfo] = useAdmissionUpdateSiteInfoMutation();\n  return [admissionUpdateSiteInfo];\n};\n\n//////////////\nexport const useGetScholarshipListAdmission = (args) => {\n  const {\n    data: getScholarshipListAdmission,\n    refetch: getScholarshipListAdmissionRefetch,\n  } = useGetScholarshipListAdmissionQuery(args.data, { skip: args.skip });\n  return { getScholarshipListAdmission, getScholarshipListAdmissionRefetch };\n};\n\nexport const useAddScholarshipAdmission = () => {\n  const [addScholarshipAdmission] = useAddScholarshipAdmissionMutation();\n  return [addScholarshipAdmission];\n};\nexport const useGetOneScholarshipAdmission = (args) => {\n  const {\n    data: getOneScholarshipAdmission,\n    refetch: getOneScholarshipAdmissionRefetch,\n  } = useGetOneScholarshipAdmissionQuery(args.sid, { skip: args.skip });\n  return { getOneScholarshipAdmission, getOneScholarshipAdmissionRefetch };\n};\n\nexport const useGetOneScholarshipAllCandidateAdmission = (args) => {\n  const {\n    data: getOneScholarshipAllCandidateAdmission,\n    refetch: getOneScholarshipAllCandidateAdmissionRefetch,\n  } = useGetOneScholarshipAllCandidateAdmissionQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    getOneScholarshipAllCandidateAdmission,\n    getOneScholarshipAllCandidateAdmissionRefetch,\n  };\n};\n\nexport const useOneSchloarshipActionAdmission = () => {\n  const [oneSchloarshipActionAdmission] =\n    useOneSchloarshipActionAdmissionMutation();\n  return [oneSchloarshipActionAdmission];\n};\n\nexport const useAddScholarshipFundCorpusAdmission = () => {\n  const [addScholarshipFundCorpusAdmission] =\n    useAddScholarshipFundCorpusAdmissionMutation();\n  return [addScholarshipFundCorpusAdmission];\n};\nexport const useGetScholarshipFundCorpusAdmission = (args) => {\n  const {\n    data: getScholarshipFundCorpusAdmission,\n    refetch: getScholarshipFundCorpusAdmissionRefetch,\n  } = useGetScholarshipFundCorpusAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getScholarshipFundCorpusAdmission,\n    getScholarshipFundCorpusAdmissionRefetch,\n  };\n};\n\nexport const useAddMoreScholarshipFundCorpusAdmission = () => {\n  const [addMoreScholarshipFundCorpusAdmission] =\n    useAddMoreScholarshipFundCorpusAdmissionMutation();\n  return [addMoreScholarshipFundCorpusAdmission];\n};\n\nexport const useUpdateApplicationByAdmission = () => {\n  const [updateApplicationByAdmission] =\n    useUpdateApplicationByAdmissionMutation();\n  return [updateApplicationByAdmission];\n};\n\nexport const useDeleteApplicationByAdmission = () => {\n  const [deleteApplicationByAdmission] =\n    useDeleteApplicationByAdmissionMutation();\n  return [deleteApplicationByAdmission];\n};\nexport const useForgetPasswordProtection = () => {\n  const [forgetPasswordProtection] = useForgetPasswordProtectionMutation();\n  return [forgetPasswordProtection];\n};\nexport const usePasswordProtectionToggle = () => {\n  const [passwordProtectionToggle] = usePasswordProtectionToggleMutation();\n  return [passwordProtectionToggle];\n};\nexport const usePasswordProtectionLogin = () => {\n  const [passwordProtectionLogin] = usePasswordProtectionLoginMutation();\n  return [passwordProtectionLogin];\n};\n\nexport const useUpdateFeeStructureByAppliationWise = () => {\n  const [updateFeeStructureByAppliationWise] =\n    useUpdateFeeStructureByAppliationWiseMutation();\n  return [updateFeeStructureByAppliationWise];\n};\n\nexport const useGetRefundedListByAdmission = (args) => {\n  const {\n    data: getRefundedListByAdmission,\n    refetch: getRefundedListByAdmissionRefetch,\n  } = useGetRefundedListByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getRefundedListByAdmission,\n    getRefundedListByAdmissionRefetch,\n  };\n};\n\nexport const useDirectJoinWithPayAdmission = () => {\n  const [directJoinFormWithPayAdmission] =\n    useDirectJoinFormWithPayAdmissionMutation();\n  return [directJoinFormWithPayAdmission];\n};\n\nexport const useCollectSetOffAdmissionFees = () => {\n  const [collectSetOffAdmissionFees] = useCollectSetOffAdmissionFeesMutation();\n  return [collectSetOffAdmissionFees];\n};\nexport const useAdmissionDocsActionByStudent = () => {\n  const [admissionDocsActionByStudent] =\n    useAdmissionDocsActionByStudentMutation();\n  return [admissionDocsActionByStudent];\n};\n\nexport const useScholarShipExcelByAdmission = () => {\n  const [scholarShipExcelByAdmission] =\n    useScholarShipExcelByAdmissionMutation();\n  return [scholarShipExcelByAdmission];\n};\nexport const useScholarShipExcelByInstitute = () => {\n  const [scholarShipExcelByInstitute] =\n    useScholarShipExcelByInstituteMutation();\n  return [scholarShipExcelByInstitute];\n};\n\nexport const useAddScholarNumberAdmission = () => {\n  const [addScholarNumberAdmission] = useAddScholarNumberAdmissionMutation();\n  return [addScholarNumberAdmission];\n};\n\nexport const useStudentDepartmentFees = (args) => {\n  const { data: studentDepartmentFees, refetch: studentDepartmentFeesRefetch } =\n    useStudentDepartmentFeesQuery(args.data, { skip: args.skip });\n  return { studentDepartmentFees, studentDepartmentFeesRefetch };\n};\n\nexport const useStudentBacklogFees = (args) => {\n  const { data: studentBacklogFees, refetch: studentBacklogFeesRefetch } =\n    useStudentBacklogFeesQuery(args.data, { skip: args.skip });\n  return { studentBacklogFees, studentBacklogFeesRefetch };\n};\n\nexport const useInternalFeeReceipt = (args) => {\n  const { data: internalFeeReceipt, refetch: internalFeeReceiptRefetch } =\n    useInternalFeeReceiptQuery(args.rid, { skip: args.skip });\n  return { internalFeeReceipt, internalFeeReceiptRefetch };\n};\n\nexport const useDropAdmissionFeesCardByAdmission = () => {\n  const [dropAdmissionFeesCardByAdmission] =\n    useDropAdmissionFeesCardByAdmissionMutation();\n  return [dropAdmissionFeesCardByAdmission];\n};\n\nexport const useAllApplicationByAdmission = (args) => {\n  const {\n    data: allApplicationByAdmission,\n    refetch: allApplicationByAdmissionRefetch,\n  } = useAllApplicationByAdmissionQuery(args.data, { skip: args.skip });\n  return { allApplicationByAdmission, allApplicationByAdmissionRefetch };\n};\n\nexport const useAddNewFeesByAdmission = () => {\n  const [addNewFeesByAdmission] = useAddNewFeesByAdmissionMutation();\n  return [addNewFeesByAdmission];\n};\n\nexport const useCollectNewAddFeesByAdmission = () => {\n  const [collectNewAddFeesByAdmission] =\n    useCollectNewAddFeesByAdmissionMutation();\n  return [collectNewAddFeesByAdmission];\n};\n\nexport const useGovernmentCollectNewAddFeesByAdmission = () => {\n  const [governmentCollectNewAddFeesByAdmission] =\n    useGovernmentCollectNewAddFeesByAdmissionMutation();\n  return [governmentCollectNewAddFeesByAdmission];\n};\n\nexport const useAdmissionReminder = () => {\n  const [admissionReminder] = useAdmissionReminderMutation();\n  return [admissionReminder];\n};\nexport const useAdmissionInstallmentEditFeesByAdmission = () => {\n  const [admissionInstallmentEditFeesByAdmission] =\n    useAdmissionInstallmentEditFeesByAdmissionMutation();\n  return [admissionInstallmentEditFeesByAdmission];\n};\n\nexport const useGetPendingCustomFilterByAdmission = (args) => {\n  const {\n    data: getPendingCustomFilterByAdmission,\n    refetch: getPendingCustomFilterByAdmissionRefetch,\n  } = useGetPendingCustomFilterByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getPendingCustomFilterByAdmission,\n    getPendingCustomFilterByAdmissionRefetch,\n  };\n};\n\nexport const useGetBatchStandardWithMultipleDepartment = () => {\n  const [getBatchStandardWithMultipleDepartment] =\n    useGetBatchStandardWithMultipleDepartmentMutation();\n  return [getBatchStandardWithMultipleDepartment];\n};\n\n// with new filter type\nexport const useAllAdmissionRemaining = () => {\n  const [allAdmissionRemaining] = useFetchAdmissionRemainingArrayMutation();\n  return [allAdmissionRemaining];\n};\n\nexport const useAllRemaining = (args) => {\n  const { data: allRemainingList, refetch: allRemainingListRefetch } =\n    useFetchAllRemainingArrayQuery(args.data, { skip: args.skip });\n  return { allRemainingList, allRemainingListRefetch };\n};\n\nexport const useGetDailyCollectionByAdmission = (args) => {\n  const {\n    data: getDailyCollectionByAdmission,\n    refetch: getDailyCollectionByAdmissionRefetch,\n  } = useGetDailyCollectionByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getDailyCollectionByAdmission,\n    getDailyCollectionByAdmissionRefetch,\n  };\n};\n\n// student gr edit\nexport const useEditStudentGrNumber = () => {\n  const [editStudentGrNumber] = useEditStudentGrNumberMutation();\n  return [editStudentGrNumber];\n};\n//\nexport const useAdmissionRevertBackSelectedToApplication = () => {\n  const [admissionRevertBackSelectedToApplication] =\n    useAdmissionRevertBackSelectedToApplicationMutation();\n  return [admissionRevertBackSelectedToApplication];\n};\nexport const useAdmissionRevertBackDocsToSelected = () => {\n  const [admissionRevertBackDocsToSelected] =\n    useAdmissionRevertBackDocsToSelectedMutation();\n  return [admissionRevertBackDocsToSelected];\n};\n\nexport const useRemoveFeesInstallmentCard = () => {\n  const [removeFeesInstallmentCard] = useRemoveFeesInstallmentCardMutation();\n  return [removeFeesInstallmentCard];\n};\n\nexport const useTransferApplicatToOtherApplication = () => {\n  const [transferApplicatToOtherApplication] =\n    useTransferApplicatToOtherApplicationMutation();\n  return [transferApplicatToOtherApplication];\n};\n\nexport const useExistStudentFeesExcelByAdmission = () => {\n  const [existStudentFeesExcelByAdmission] =\n    useExistStudentFeesExcelByAdmissionMutation();\n  return [existStudentFeesExcelByAdmission];\n};\nexport const useStudentValidaForApplicationByAdmission = () => {\n  const [studentValidaForApplicationByAdmission] =\n    useStudentValidaForApplicationByAdmissionMutation();\n  return [studentValidaForApplicationByAdmission];\n};\nexport const useStudentBankValidationByAdmission = () => {\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmissionMutation();\n  return [studentBankValidationByAdmission];\n};\n\nexport const useMarkCompleteToOngoingApplication = () => {\n  const [markCompleteToOngoingApplication] =\n    useMarkCompleteToOngoingApplicationMutation();\n  return [markCompleteToOngoingApplication];\n};\n\nexport const useGetReminderHistoryByAdmission = (args) => {\n  const {\n    data: getReminderHistoryByAdmission,\n    refetch: getReminderHistoryByAdmissionRefetch,\n  } = useGetReminderHistoryByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getReminderHistoryByAdmission,\n    getReminderHistoryByAdmissionRefetch,\n  };\n};\n\nexport const useGetOsReminderStudentList = () => {\n  const [getOsReminderStudentList] = useGetOsReminderStudentListMutation();\n  return [getOsReminderStudentList];\n};\nexport const useStudentScholarshipNumberDublicate = () => {\n  const [studentScholarshipNumberDublicate] =\n    useStudentScholarshipNumberDublicateMutation();\n  return [studentScholarshipNumberDublicate];\n};\n"],"names":["activateAdmission","builder","mutation","query","data","url","concat","id","method","body","fActivate","editAdmissionFunction","osid","nsid","fetchAdmission","aid","mod_id","fetchOngoing","ad","page","limit","fetchCompleted","atInstituteSearchApplication","ins","userApply","apply","uid","apply_data","newApplication","new_Data","fetchRequest","req","search","fetchSelect","sel","fetchConfirm","con","fetchConfirmAll","userSelect","select","sid","selectApplicant","userCancelApplication","userSelectStatusMode","mode","statusId","confirmPayload","userConfirm","confirm","receipt_status","confirm_data","userCancel","cancel","cancel_data","fetchClasses","classes","bid","newClassAllot","allot","cid","allotClass","markComplete","oneStudentFee","view","paidRemainFee","paid","appId","remain_data","oneApplication","one","allDepartment","depart","cancelStatusMode","status","studentAdmission","student","collectApplicantDocsFunction","admissionBatchListFunction","admissionAllottedListFunction","admissionCancelledListFunction","admissionClassMasterListFunction","did","addEnquiryFunction","enquiry","getAllEnquiryListFunction","getOneEnquiryFunction","eid","oneEnquiryActionFunction","enquiryRemark","directJoinFormAdmissionFunction","phoneNumber","addStudent","submitAmountToFinanaceFunction","submitAmount","getAccountWithNumberFunction","phoneKey","editFeeStructureFunction","editStructure","confirmStudentModeByAdmissionAdminFunction","rejectStudentModeByAdmissionAdminFunction","getReceiptByAdmissionFunction","filterBy","over_filter","receiptActionByAdmissionFunction","rid","reqId","receiptAction","reApplyReceiptByStudentFunction","receiptReapply","getFeeReceiptDetailFunction","getDocumentByAdmissionFuction","addDocumentByAdmissionFuction","document","updateDocumentByAdmissionFuction","editDocument","deleteDocumentByAdmissionFuction","refundAmountByAdmissionAdminFunction","refundData","getRefundByAdmissionFuction","_data$search","updateRemarkByAdmissionAdminFunction","applicatonCardId","remarkByAdmission","exportFilterDataByAdmissionFuction","gender","caste","is_all","all_depart","batch_status","pendingData","getAllExcelByAdmissionAdminFunction","payAdmissionFeeByStudentFunction","offlinePay","updateExcelByAdmissionAdminFunction","xlsxId","excelUpdate","deleteExcelByAdmissionAdminFunction","updateDocumentByAdmissionAdminFunction","documentUpdate","deleteDocumentByAdmissionAdminFunction","docId","addModeratorByAdmissionAdminFunction","_data$active_tab","active_tab","addModerator","getModeratorByAdmissionAdminFunction","updateModeratorByAdmissionAdminFunction","_data$active_tab2","modId","updateModerator","deleteModeratorByAdmissionAdminFunction","admissionGetSiteInfoFunction","admissionUpdateSiteInfoFunction","updateSiteInfo","getScholarshipListAdmissionFunction","addScholarshipAdmissionFunction","addScholarship","getOneScholarshipAdmissionFunction","getOneScholarshipAllCandidateAdmissionFunction","oneSchloarshipActionAdmissionFunction","addScholarshipFundCorpusAdmissionFunction","user_query","addCorpus","addMoreScholarshipFundCorpusAdmissionFunction","fcid","getScholarshipFundCorpusAdmissionFunction","updateApplicationByAdmissionFunction","updateApplication","deleteApplicationByAdmissionFunction","forgetPasswordProtectionFunction","faid","flow","forgetPassword","passwordProtectionToggleFunction","passwordProtectionLoginFunction","loginPassword","updateFeeStructureByAppliationWiseFunction","updateStrucutre","getRefundedListByAdmissionFunction","directJoinFormWithPayAdmissionFunction","collectSetOffAdmissionFeesFunction","rcid","setOffData","admissionDocsActionByStudentFunction","stId","scholarShipExcelByAdmissionFunction","scid","excelFile","scholarShipExcelByInstituteFunction","addScholarNumberAdmissionFunction","scholarData","studentDepartmentFeesFunction","studentBacklogFeesFunction","internalFeeReceiptFunction","dropAdmissionFeesCardByAdmissionFunction","allApplicationByAdmissionFunction","_data$batchId","departId","masterId","batchId","addNewFeesByAdmissionFunction","addFees","collectNewAddFeesByAdmissionFunction","governmentCollectNewAddFeesByAdmissionFunction","governmentData","admissionReminderFunction","alarm_mode","content","reminderData","admissionInstallmentEditFeesByAdmissionFunction","editAccess","getPendingCustomFilterByAdmissionFunction","getBatchStandardWithMultipleDepartmentFunction","departmentList","fetchRemainingArray","_ad$flow","fetchAdmissionRemainingArray","_data$flow","filter_by","filterData","getDailyCollectionByAdmissionFunction","valid_date","editStudentGrNumberFunction","grNumberContent","admissionRevertBackSelectedToApplicationFunction","revertData","admissionRevertBackDocsToSelectedFunction","removeFeesInstallmentCardFunction","raid","transferApplicatToOtherApplicationFunction","transferApplicantData","existStudentFeesExcelByAdmissionFunction","studentValidaForApplicationByAdmissionFunction","studentBankValidationByAdmissionFunction","fid","markCompleteToOngoingApplicationFunction","getReminderHistoryByAdmissionFunction","getOsReminderStudentListFunction","studentScholarshipNumberDublicateFunction","num","admissionApiDynamic","admissionNewApi","injectEndpoints","endpoints","activateAdmissionHead","editAdmission","fetchAdmissionDetail","fetchAllOngoingApp","fetchAllCompletedApp","fetchAllRemainingArray","fetchAllAppAtInstitute","newUserApply","getNewApplication","getAllRequest","getAllSelect","getAllConfirm","getAllConfirmMultiselect","fetchUserSelectApp","fetchUserCancelApp","fetchUserSelectStatusApp","getUserConfirm","getUserCancel","getAllClasses","retrieveNewClassAllot","retrieveMarkComplete","getOneViewStudentFee","retrievePaidRemainFee","getOneApplication","getAllDepartment","fetchCancelStatusMode","renderStudentAdmissionFees","collectApplicantDocs","admissionBatchList","admissionAllottedList","admissionCancelledList","admissionClassMasterList","addEnquiry","getAllEnquiryList","getOneEnquiry","oneEnquiryAction","directJoinFormAdmission","submitAmountToFinanace","getAccountWithNumber","editFeeStructure","confirmStudentModeByAdmissionAdmin","rejectStudentModeByAdmissionAdmin","getReceiptByAdmission","receiptActionByAdmission","reApplyReceiptByStudent","getFeeReceiptDetail","getDocumentByAdmission","addDocumentByAdmission","updateDocumentByAdmission","deleteDocumentByAdmission","refundAmountByAdmissionAdmin","getRefundByAdmission","updateRemarkByAdmissionAdmin","exportFilterDataByAdmission","getAllExcelByAdmissionAdmin","payAdmissionFeeByStudent","updateExcelByAdmissionAdmin","deleteExcelByAdmissionAdmin","updateDocumentByAdmissionAdmin","deleteDocumentByAdmissionAdmin","addModeratorByAdmissionAdmin","getModeratorByAdmissionAdmin","updateModeratorByAdmissionAdmin","deleteModeratorByAdmissionAdmin","admissionGetSiteInfo","admissionUpdateSiteInfo","getScholarshipListAdmission","addScholarshipAdmission","getOneScholarshipAdmission","getOneScholarshipAllCandidateAdmission","oneSchloarshipActionAdmission","addScholarshipFundCorpusAdmission","getScholarshipFundCorpusAdmission","addMoreScholarshipFundCorpusAdmission","updateApplicationByAdmission","deleteApplicationByAdmission","forgetPasswordProtection","passwordProtectionToggle","passwordProtectionLogin","updateFeeStructureByAppliationWise","getRefundedListByAdmission","directJoinFormWithPayAdmission","collectSetOffAdmissionFees","admissionDocsActionByStudent","scholarShipExcelByAdmission","scholarShipExcelByInstitute","addScholarNumberAdmission","studentDepartmentFees","studentBacklogFees","internalFeeReceipt","dropAdmissionFeesCardByAdmission","allApplicationByAdmission","addNewFeesByAdmission","collectNewAddFeesByAdmission","governmentCollectNewAddFeesByAdmission","admissionReminder","admissionInstallmentEditFeesByAdmission","getPendingCustomFilterByAdmission","getBatchStandardWithMultipleDepartment","getDailyCollectionByAdmission","editStudentGrNumber","admissionRevertBackSelectedToApplication","admissionRevertBackDocsToSelected","removeFeesInstallmentCard","transferApplicatToOtherApplication","existStudentFeesExcelByAdmission","studentValidaForApplicationByAdmission","studentBankValidationByAdmission","markCompleteToOngoingApplication","getReminderHistoryByAdmission","getOsReminderStudentList","studentScholarshipNumberDublicate","useActivateAdmissionHeadMutation","useEditAdmissionMutation","useFetchAdmissionDetailQuery","useFetchAllOngoingAppQuery","useFetchAllCompletedAppQuery","useFetchAllRemainingArrayQuery","useFetchAdmissionRemainingArrayMutation","useFetchAllAppAtInstituteQuery","useNewUserApplyMutation","useGetNewApplicationMutation","useGetAllRequestQuery","useGetAllSelectQuery","useGetAllConfirmQuery","useGetAllConfirmMultiselectQuery","useFetchUserSelectAppMutation","useFetchUserCancelAppMutation","useFetchUserSelectStatusAppMutation","useGetUserConfirmMutation","useGetUserCancelMutation","useGetAllClassesQuery","useRetrieveNewClassAllotMutation","useRetrieveMarkCompleteMutation","useGetOneViewStudentFeeQuery","useRetrievePaidRemainFeeMutation","useGetOneApplicationQuery","useGetAllDepartmentQuery","useFetchCancelStatusModeMutation","useRenderStudentAdmissionFeesQuery","useCollectApplicantDocsMutation","useAdmissionBatchListQuery","useAdmissionAllottedListQuery","useAdmissionCancelledListQuery","useAdmissionClassMasterListQuery","useAddEnquiryMutation","useGetAllEnquiryListQuery","useGetOneEnquiryQuery","useOneEnquiryActionMutation","useDirectJoinFormAdmissionMutation","useSubmitAmountToFinanaceMutation","useGetAccountWithNumberQuery","useEditFeeStructureMutation","useConfirmStudentModeByAdmissionAdminMutation","useRejectStudentModeByAdmissionAdminMutation","useGetReceiptByAdmissionQuery","useReceiptActionByAdmissionMutation","useReApplyReceiptByStudentMutation","useGetFeeReceiptDetailQuery","useGetDocumentByAdmissionQuery","useAddDocumentByAdmissionMutation","useUpdateDocumentByAdmissionMutation","useDeleteDocumentByAdmissionMutation","useRefundAmountByAdmissionAdminMutation","useGetRefundByAdmissionQuery","useUpdateRemarkByAdmissionAdminMutation","useExportFilterDataByAdmissionMutation","useGetAllExcelByAdmissionAdminQuery","usePayAdmissionFeeByStudentMutation","useUpdateExcelByAdmissionAdminMutation","useDeleteExcelByAdmissionAdminMutation","useUpdateDocumentByAdmissionAdminMutation","useDeleteDocumentByAdmissionAdminMutation","useAddModeratorByAdmissionAdminMutation","useGetModeratorByAdmissionAdminQuery","useUpdateModeratorByAdmissionAdminMutation","useDeleteModeratorByAdmissionAdminMutation","useAdmissionGetSiteInfoQuery","useAdmissionUpdateSiteInfoMutation","useGetScholarshipListAdmissionQuery","useAddScholarshipAdmissionMutation","useGetOneScholarshipAdmissionQuery","useGetOneScholarshipAllCandidateAdmissionQuery","useOneSchloarshipActionAdmissionMutation","useAddScholarshipFundCorpusAdmissionMutation","useGetScholarshipFundCorpusAdmissionQuery","useAddMoreScholarshipFundCorpusAdmissionMutation","useUpdateApplicationByAdmissionMutation","useDeleteApplicationByAdmissionMutation","useForgetPasswordProtectionMutation","usePasswordProtectionToggleMutation","usePasswordProtectionLoginMutation","useUpdateFeeStructureByAppliationWiseMutation","useGetRefundedListByAdmissionQuery","useDirectJoinFormWithPayAdmissionMutation","useCollectSetOffAdmissionFeesMutation","useAdmissionDocsActionByStudentMutation","useScholarShipExcelByAdmissionMutation","useScholarShipExcelByInstituteMutation","useAddScholarNumberAdmissionMutation","useStudentDepartmentFeesQuery","useStudentBacklogFeesQuery","useInternalFeeReceiptQuery","useDropAdmissionFeesCardByAdmissionMutation","useAllApplicationByAdmissionQuery","useAddNewFeesByAdmissionMutation","useCollectNewAddFeesByAdmissionMutation","useGovernmentCollectNewAddFeesByAdmissionMutation","useAdmissionReminderMutation","useAdmissionInstallmentEditFeesByAdmissionMutation","useGetPendingCustomFilterByAdmissionQuery","useGetBatchStandardWithMultipleDepartmentMutation","useGetDailyCollectionByAdmissionQuery","useEditStudentGrNumberMutation","useAdmissionRevertBackSelectedToApplicationMutation","useAdmissionRevertBackDocsToSelectedMutation","useRemoveFeesInstallmentCardMutation","useTransferApplicatToOtherApplicationMutation","useExistStudentFeesExcelByAdmissionMutation","useStudentValidaForApplicationByAdmissionMutation","useStudentBankValidationByAdmissionMutation","useMarkCompleteToOngoingApplicationMutation","useGetReminderHistoryByAdmissionQuery","useGetOsReminderStudentListMutation","useStudentScholarshipNumberDublicateMutation","useAssignAdmissionHead","assignAdmissionHead","useEditAdmission","useGetAdmissionDetail","args","getAdmissionDetail","refetch","getAdmissionDetailRefetch","skip","useAllOngoingApp","allOngoingApp","allOngoingAppRefetch","useAllCompletedApp","allCompletedApp","allCompletedAppRefetch","useAllAppAtInstitute","allAppAtInstitute","allAppAtInstituteRefetch","useCreateNewApplication","createNewApplication","useGetAllRequest","getAllRequestList","getAllRequestListRefetch","useGetAllSelect","getAllSelectList","getAllSelectListRefetch","useGetAllConfirm","getAllConfirmList","getAllConfirmListRefetch","useGetAllConfirmMultiselect","getAllConfirmListMulitselect","getAllConfirmListMulitselectRefetch","useSelectAdmissionApplicant","selectAdmissionApplicant","useCancelAdmissionApplicant","cancelAdmissionApplicant","useStudentPayMode","studentPayMode","useApplicantAdmissionConfirm","confirmAppliacntAdmission","useApplicantAdmissionCancel","cancelAppliacntAdmission","useGetAllClasses","getAllClassesList","getAllClassesListRefetch","useApplicantAdmissionAllotSeat","applicantAllotSeat","useApplicationComplete","completeAdmissionApplication","useApplicantAdmissionRemainingFees","applicantRemainingFees","useOneApplicationDetail","oneApplicationDetail","oneApplicationDetailRefetch","apid","useGetAllDepartment","allDepartmentList","allDepartmentListRefetch","useCancelStudentApplicationStatus","cancelApplication","useRenderStudentAdmissionFees","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","useCollectApplicantDocs","collectDocs","useAdmissionBatchList","admissionBatchListRefetch","useAdmissionAllottedList","admissionAllottedListRefetch","useAdmissionCancelledList","admissionCancelledListRefetch","useAdmissionClassMasterList","admissionClassMasterListRefetch","useAddEnquiry","useGetAllEnquiryList","getAllEnquiryListRefetch","useGetOneEnquiry","oneEnquiryDetail","oneEnquiryDetailRefetch","useOneEnquiryAction","useEditFeeStructure","useConfirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmission","useRejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmission","useReApplyReceiptByStudent","useGetFeeReceiptDetail","getFeeReceiptDetailRefetch","useGetDocumentByAdmission","getDocumentByAdmissionRefetch","useRefundAmountByAdmissionAdmin","useUpdateRemarkByAdmissionAdmin","useExportFilterDataByAdmission","useGetAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminRefetch","usePayAdmissionFeeByStudent","useUpdateExcelByAdmissionAdmin","useDeleteExcelByAdmissionAdmin","useGetModeratorByAdmissionAdmin","getModeratorByAdmissionAdminRefetch","useAddModeratorByAdmissionAdmin","useUpdateModeratorByAdmissionAdmin","useDeleteModeratorByAdmissionAdmin","useAdmissionGetSiteInfo","admissionGetSiteInfoRefetch","useAdmissionUpdateSiteInfo","useUpdateApplicationByAdmission","useDeleteApplicationByAdmission","useUpdateFeeStructureByAppliationWise","useCollectSetOffAdmissionFees","useAdmissionDocsActionByStudent","useScholarShipExcelByInstitute","useAddScholarNumberAdmission","useStudentDepartmentFees","studentDepartmentFeesRefetch","useInternalFeeReceipt","internalFeeReceiptRefetch","useDropAdmissionFeesCardByAdmission","useAllApplicationByAdmission","allApplicationByAdmissionRefetch","useAddNewFeesByAdmission","useCollectNewAddFeesByAdmission","useGovernmentCollectNewAddFeesByAdmission","useAdmissionReminder","useAdmissionInstallmentEditFeesByAdmission","useGetPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionRefetch","useGetBatchStandardWithMultipleDepartment","useAllAdmissionRemaining","allAdmissionRemaining","useAllRemaining","allRemainingList","allRemainingListRefetch","useGetDailyCollectionByAdmission","getDailyCollectionByAdmissionRefetch","useEditStudentGrNumber","useAdmissionRevertBackSelectedToApplication","useAdmissionRevertBackDocsToSelected","useRemoveFeesInstallmentCard","useTransferApplicatToOtherApplication","useExistStudentFeesExcelByAdmission","useStudentValidaForApplicationByAdmission","useStudentBankValidationByAdmission","useMarkCompleteToOngoingApplication","useGetOsReminderStudentList","useStudentScholarshipNumberDublicate"],"sourceRoot":""}