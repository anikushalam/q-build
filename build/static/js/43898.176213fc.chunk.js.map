{"version":3,"file":"static/js/43898.176213fc.chunk.js","mappings":"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","sources":["optimized/UserStaffMember/PayrollManager/PayrollFundAllocation/PayrollFundAllocationMonthCard.jsx","optimized/UserStaffMember/PayrollManager/PayrollFundAllocation/PayrollFundAllocation.jsx"],"sourcesContent":["import { Link, useLocation, useParams } from \"react-router-dom\";\nimport { assestsUserFinanceUrl } from \"../../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../../StoreManager/StoreManager.module.css\";\nimport QvipleLoader from \"../../../Loader/QvipleLoader\";\nimport { useState } from \"react\";\nimport { pdfCdnUrl } from \"../../../Services/UrlConfig/BaseUrl\";\nimport { usePayrollAllocationFundExportExcel } from \"../../../Hooks/ApiHooks/PayrollManager/payroll-manager-api\";\n\nconst PayrollFundAllocationMonthCard = ({\n  mt,\n  amountObj,\n  financialYear,\n  pid,\n}) => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const getQuery = useLocation();\n  const [disabled, setDisabled] = useState(false);\n\n  const [payrollAllocationFundExportExcel] =\n    usePayrollAllocationFundExportExcel();\n  const onExportExcel = (e) => {\n    e.preventDefault();\n    setDisabled((pre) => !pre);\n    payrollAllocationFundExportExcel({\n      pid: pid,\n      bodyParameter: {\n        month: mt?.value,\n        year: financialYear,\n      },\n    })\n      .then((res) => {\n        if (res?.data?.data) {\n          setDisabled((pre) => !pre);\n          const newWindow = window.open(\n            // `${pdfCdnUrl}/${res?.data?.data}`,\n            `https://qviple-dev.s3.ap-south-1.amazonaws.com/${res?.data?.data}`,\n            \"_blank\",\n            \"noopener,noreferrer\"\n          );\n          if (newWindow) newWindow.opener = null;\n        } else {\n          setDisabled((pre) => !pre);\n        }\n      })\n      .catch({});\n  };\n  return (\n    <>\n      <Link\n        to={`/q/${params.username}/member/staff/payroll?type=allocation-staff`}\n        state={{\n          ...getQuery.state,\n          headCard: mt,\n          financialYear: financialYear,\n        }}\n      >\n        <div className={style.smc_card}>\n          <div className={style.smc_card_contatiner}>\n            <img\n              src={`${assestsUserFinanceUrl}/category.svg`}\n              alt=\"categor icon\"\n            />\n            <div className={style.smc_card_contatiner_inner}>\n              <h6>{mt?.name ?? \"\"}</h6>\n              <p>\n                {t(\"amount\")} {\": \"} {amountObj && amountObj[mt?.value]}\n              </p>\n            </div>\n          </div>\n          <img\n            src={`${assestsUserFinanceUrl}/receipt.svg`}\n            alt=\"receipt icon\"\n            title=\"Download Fees Receipt\"\n            style={{\n              width: \"auto\",\n              height: \"2rem\",\n            }}\n            onClick={onExportExcel}\n          />\n        </div>\n      </Link>\n      {disabled && <QvipleLoader />}\n    </>\n  );\n};\n\nexport default PayrollFundAllocationMonthCard;\n","import { useTranslation } from \"react-i18next\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { useCalendar } from \"../../../Hooks/CustomHooks/use-calendar\";\nimport { useState } from \"react\";\nimport style from \"../../FinanceManager/FinanceManager.module.css\";\nimport dayjs from \"dayjs\";\nimport SelectFinancialYear from \"../SelectFinancialYear\";\nimport PayrollFundAllocationMonthCard from \"./PayrollFundAllocationMonthCard\";\nimport { usePayrollAlocationMonthList } from \"../../../Hooks/ApiHooks/PayrollManager/payroll-manager-api\";\nconst PayrollFundAllocation = ({ pid, instituteId }) => {\n  const { t } = useTranslation();\n  const getQuery = useLocation();\n  const [searchParams] = useSearchParams();\n  const { selectedDate, setSelectedDate } = useCalendar();\n  const [financialYear, setFinancialYear] = useState(false);\n\n  const { payrollAlocationMonthList } = usePayrollAlocationMonthList({\n    data: {\n      pid: pid,\n    },\n    skip: !pid,\n  });\n  const onYearToggle = () => {\n    setFinancialYear((pre) => !pre);\n  };\n\n  const onYearChoose = (value) => {\n    setSelectedDate(\n      (prev) => new Date(`${prev.getMonth() + 1} ${prev.getDate()} ${value}`)\n    );\n    onYearToggle();\n  };\n\n  // console.info(\"payrollAlocationMonthList\", payrollAlocationMonthList);\n  return (\n    <>\n      <div\n        className={style.fm_header_container}\n        style={{\n          marginTop: \"1rem\",\n        }}\n      >\n        <div className={style.fm_header_start_container}></div>\n        <div className={style.fm_header_start_container}>\n          <h6\n            style={{\n              cursor: \"pointer\",\n            }}\n            onClick={onYearToggle}\n          >\n            {t(\"financial_year\")} : {dayjs(selectedDate).format(\"YYYY\")}\n          </h6>\n        </div>\n      </div>\n      {monthList?.map((mt, index) => (\n        <PayrollFundAllocationMonthCard\n          key={mt?.name}\n          mt={mt}\n          index={index}\n          amountObj={payrollAlocationMonthList}\n          financialYear={dayjs(selectedDate).format(\"YYYY\")}\n          pid={pid}\n        />\n      ))}\n      {financialYear && (\n        <SelectFinancialYear\n          onClose={onYearToggle}\n          onYearChoose={onYearChoose}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PayrollFundAllocation;\n\nconst monthList = [\n  {\n    name: \"April\",\n    value: \"04\",\n  },\n  {\n    name: \"May\",\n    value: \"05\",\n  },\n  {\n    name: \"June\",\n    value: \"06\",\n  },\n  {\n    name: \"July\",\n    value: \"07\",\n  },\n  {\n    name: \"August\",\n    value: \"08\",\n  },\n  {\n    name: \"September\",\n    value: \"09\",\n  },\n  {\n    name: \"October\",\n    value: \"10\",\n  },\n  {\n    name: \"November\",\n    value: \"11\",\n  },\n  {\n    name: \"December\",\n    value: \"12\",\n  },\n  {\n    name: \"January\",\n    value: \"01\",\n  },\n  {\n    name: \"February\",\n    value: \"02\",\n  },\n  {\n    name: \"March\",\n    value: \"03\",\n  },\n];\n"],"names":["_ref","_mt$name","mt","amountObj","financialYear","pid","t","useTranslation","params","useParams","getQuery","useLocation","disabled","setDisabled","useState","payrollAllocationFundExportExcel","usePayrollAllocationFundExportExcel","_jsxs","_Fragment","children","_jsx","Link","to","concat","username","state","headCard","className","style","smc_card","smc_card_contatiner","src","assestsUserFinanceUrl","alt","smc_card_contatiner_inner","name","value","title","width","height","onClick","e","preventDefault","pre","bodyParameter","month","year","then","res","_res$data","data","_res$data2","newWindow","window","open","opener","catch","QvipleLoader","instituteId","searchParams","useSearchParams","selectedDate","setSelectedDate","useCalendar","setFinancialYear","payrollAlocationMonthList","usePayrollAlocationMonthList","skip","onYearToggle","fm_header_container","marginTop","fm_header_start_container","cursor","dayjs","format","monthList","map","index","PayrollFundAllocationMonthCard","SelectFinancialYear","onClose","onYearChoose","prev","Date","getMonth","getDate"],"sourceRoot":""}