{"version":3,"file":"static/js/73032.62d05f51.chunk.js","mappings":"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","sources":["services/admission/admissionApiDynamic.js","hooks/member_tab/admission-api.js"],"sourcesContent":["import {\n  activateAdmission,\n  editAdmissionFunction,\n  fetchAdmission,\n  fetchOngoing,\n  fetchCompleted,\n  fetchRemainingArray,\n  fetchAdmissionRemainingArray,\n  atInstituteSearchApplication,\n  userApply,\n  newApplication,\n  fetchRequest,\n  fetchSelect,\n  fetchConfirm,\n  fetchConfirmAll,\n  userSelect,\n  userCancelApplication,\n  userSelectStatusMode,\n  userConfirm,\n  userCancel,\n  fetchClasses,\n  newClassAllot,\n  markComplete,\n  oneStudentFee,\n  paidRemainFee,\n  oneApplication,\n  allDepartment,\n  cancelStatusMode,\n  studentAdmission,\n  collectApplicantDocsFunction,\n  admissionBatchListFunction,\n  admissionAllottedListFunction,\n  admissionCancelledListFunction,\n  admissionClassMasterListFunction,\n  addEnquiryFunction,\n  getAllEnquiryListFunction,\n  getOneEnquiryFunction,\n  oneEnquiryActionFunction,\n  directJoinFormAdmissionFunction,\n  submitAmountToFinanaceFunction,\n  getAccountWithNumberFunction,\n  editFeeStructureFunction,\n  confirmStudentModeByAdmissionAdminFunction,\n  rejectStudentModeByAdmissionAdminFunction,\n  getReceiptByAdmissionFunction,\n  receiptActionByAdmissionFunction,\n  reApplyReceiptByStudentFunction,\n  getFeeReceiptDetailFunction,\n  getDocumentByAdmissionFuction,\n  addDocumentByAdmissionFuction,\n  updateDocumentByAdmissionFuction,\n  deleteDocumentByAdmissionFuction,\n  refundAmountByAdmissionAdminFunction,\n  getRefundByAdmissionFuction,\n  updateRemarkByAdmissionAdminFunction,\n  exportFilterDataByAdmissionFuction,\n  getAllExcelByAdmissionAdminFunction,\n  payAdmissionFeeByStudentFunction,\n  updateExcelByAdmissionAdminFunction,\n  deleteExcelByAdmissionAdminFunction,\n  updateDocumentByAdmissionAdminFunction,\n  deleteDocumentByAdmissionAdminFunction,\n  addModeratorByAdmissionAdminFunction,\n  getModeratorByAdmissionAdminFunction,\n  updateModeratorByAdmissionAdminFunction,\n  deleteModeratorByAdmissionAdminFunction,\n  admissionGetSiteInfoFunction,\n  admissionUpdateSiteInfoFunction,\n  getScholarshipListAdmissionFunction,\n  addScholarshipAdmissionFunction,\n  getOneScholarshipAdmissionFunction,\n  getOneScholarshipAllCandidateAdmissionFunction,\n  oneSchloarshipActionAdmissionFunction,\n  addScholarshipFundCorpusAdmissionFunction,\n  getScholarshipFundCorpusAdmissionFunction,\n  addMoreScholarshipFundCorpusAdmissionFunction,\n  updateApplicationByAdmissionFunction,\n  deleteApplicationByAdmissionFunction,\n  forgetPasswordProtectionFunction,\n  passwordProtectionToggleFunction,\n  passwordProtectionLoginFunction,\n  updateFeeStructureByAppliationWiseFunction,\n  getRefundedListByAdmissionFunction,\n  directJoinFormWithPayAdmissionFunction,\n  collectSetOffAdmissionFeesFunction,\n  admissionDocsActionByStudentFunction,\n  scholarShipExcelByAdmissionFunction,\n  scholarShipExcelByInstituteFunction,\n  addScholarNumberAdmissionFunction,\n  studentDepartmentFeesFunction,\n  studentBacklogFeesFunction,\n  internalFeeReceiptFunction,\n  dropAdmissionFeesCardByAdmissionFunction,\n  allApplicationByAdmissionFunction,\n  addNewFeesByAdmissionFunction,\n  collectNewAddFeesByAdmissionFunction,\n  governmentCollectNewAddFeesByAdmissionFunction,\n  admissionReminderFunction,\n  admissionInstallmentEditFeesByAdmissionFunction,\n  getPendingCustomFilterByAdmissionFunction,\n  getBatchStandardWithMultipleDepartmentFunction,\n  getDailyCollectionByAdmissionFunction,\n  editStudentGrNumberFunction,\n  //\n  admissionRevertBackSelectedToApplicationFunction,\n  admissionRevertBackDocsToSelectedFunction,\n  removeFeesInstallmentCardFunction,\n  transferApplicatToOtherApplicationFunction,\n  existStudentFeesExcelByAdmissionFunction,\n  studentValidaForApplicationByAdmissionFunction,\n  studentBankValidationByAdmissionFunction,\n  markCompleteToOngoingApplicationFunction,\n  getReminderHistoryByAdmissionFunction,\n  getOsReminderStudentListFunction,\n  studentScholarshipNumberDublicateFunction,\n} from \"./admissionBuilderAPI\";\nimport { admissionNewApi } from \"./admissionNewApi\";\n\n//////////eeghfrwjeghw\nexport const admissionApiDynamic = admissionNewApi.injectEndpoints({\n  endpoints: (builder) => ({\n    activateAdmissionHead: activateAdmission(builder),\n    editAdmission: editAdmissionFunction(builder),\n    fetchAdmissionDetail: fetchAdmission(builder),\n    fetchAllOngoingApp: fetchOngoing(builder),\n    fetchAllCompletedApp: fetchCompleted(builder),\n    fetchAllRemainingArray: fetchRemainingArray(builder),\n    fetchAdmissionRemainingArray: fetchAdmissionRemainingArray(builder),\n\n    fetchAllAppAtInstitute: atInstituteSearchApplication(builder),\n    newUserApply: userApply(builder),\n    getNewApplication: newApplication(builder),\n    getAllRequest: fetchRequest(builder),\n    getAllSelect: fetchSelect(builder),\n    getAllConfirm: fetchConfirm(builder),\n    getAllConfirmMultiselect: fetchConfirmAll(builder),\n    fetchUserSelectApp: userSelect(builder),\n    fetchUserCancelApp: userCancelApplication(builder),\n    fetchUserSelectStatusApp: userSelectStatusMode(builder),\n    getUserConfirm: userConfirm(builder),\n    getUserCancel: userCancel(builder),\n    getAllClasses: fetchClasses(builder),\n    retrieveNewClassAllot: newClassAllot(builder),\n    retrieveMarkComplete: markComplete(builder),\n    getOneViewStudentFee: oneStudentFee(builder),\n    retrievePaidRemainFee: paidRemainFee(builder),\n    getOneApplication: oneApplication(builder),\n    getAllDepartment: allDepartment(builder),\n    fetchCancelStatusMode: cancelStatusMode(builder),\n    renderStudentAdmissionFees: studentAdmission(builder),\n    collectApplicantDocs: collectApplicantDocsFunction(builder),\n    admissionBatchList: admissionBatchListFunction(builder),\n    admissionAllottedList: admissionAllottedListFunction(builder),\n    admissionCancelledList: admissionCancelledListFunction(builder),\n    admissionClassMasterList: admissionClassMasterListFunction(builder),\n    addEnquiry: addEnquiryFunction(builder),\n    getAllEnquiryList: getAllEnquiryListFunction(builder),\n    getOneEnquiry: getOneEnquiryFunction(builder),\n    oneEnquiryAction: oneEnquiryActionFunction(builder),\n    directJoinFormAdmission: directJoinFormAdmissionFunction(builder),\n    submitAmountToFinanace: submitAmountToFinanaceFunction(builder),\n    getAccountWithNumber: getAccountWithNumberFunction(builder),\n    editFeeStructure: editFeeStructureFunction(builder),\n    confirmStudentModeByAdmissionAdmin:\n      confirmStudentModeByAdmissionAdminFunction(builder),\n    rejectStudentModeByAdmissionAdmin:\n      rejectStudentModeByAdmissionAdminFunction(builder),\n\n    getReceiptByAdmission: getReceiptByAdmissionFunction(builder),\n    receiptActionByAdmission: receiptActionByAdmissionFunction(builder),\n    reApplyReceiptByStudent: reApplyReceiptByStudentFunction(builder),\n    getFeeReceiptDetail: getFeeReceiptDetailFunction(builder),\n    getDocumentByAdmission: getDocumentByAdmissionFuction(builder),\n    addDocumentByAdmission: addDocumentByAdmissionFuction(builder),\n    updateDocumentByAdmission: updateDocumentByAdmissionFuction(builder),\n    deleteDocumentByAdmission: deleteDocumentByAdmissionFuction(builder),\n    refundAmountByAdmissionAdmin: refundAmountByAdmissionAdminFunction(builder),\n    getRefundByAdmission: getRefundByAdmissionFuction(builder),\n    updateRemarkByAdmissionAdmin: updateRemarkByAdmissionAdminFunction(builder),\n    exportFilterDataByAdmission: exportFilterDataByAdmissionFuction(builder),\n    getAllExcelByAdmissionAdmin: getAllExcelByAdmissionAdminFunction(builder),\n    payAdmissionFeeByStudent: payAdmissionFeeByStudentFunction(builder),\n    updateExcelByAdmissionAdmin: updateExcelByAdmissionAdminFunction(builder),\n    deleteExcelByAdmissionAdmin: deleteExcelByAdmissionAdminFunction(builder),\n    updateDocumentByAdmissionAdmin:\n      updateDocumentByAdmissionAdminFunction(builder),\n    deleteDocumentByAdmissionAdmin:\n      deleteDocumentByAdmissionAdminFunction(builder),\n    addModeratorByAdmissionAdmin: addModeratorByAdmissionAdminFunction(builder),\n    getModeratorByAdmissionAdmin: getModeratorByAdmissionAdminFunction(builder),\n    updateModeratorByAdmissionAdmin:\n      updateModeratorByAdmissionAdminFunction(builder),\n    deleteModeratorByAdmissionAdmin:\n      deleteModeratorByAdmissionAdminFunction(builder),\n    admissionGetSiteInfo: admissionGetSiteInfoFunction(builder),\n    admissionUpdateSiteInfo: admissionUpdateSiteInfoFunction(builder),\n    getScholarshipListAdmission: getScholarshipListAdmissionFunction(builder),\n    addScholarshipAdmission: addScholarshipAdmissionFunction(builder),\n    getOneScholarshipAdmission: getOneScholarshipAdmissionFunction(builder),\n    getOneScholarshipAllCandidateAdmission:\n      getOneScholarshipAllCandidateAdmissionFunction(builder),\n    oneSchloarshipActionAdmission:\n      oneSchloarshipActionAdmissionFunction(builder),\n    addScholarshipFundCorpusAdmission:\n      addScholarshipFundCorpusAdmissionFunction(builder),\n    getScholarshipFundCorpusAdmission:\n      getScholarshipFundCorpusAdmissionFunction(builder),\n    addMoreScholarshipFundCorpusAdmission:\n      addMoreScholarshipFundCorpusAdmissionFunction(builder),\n    updateApplicationByAdmission: updateApplicationByAdmissionFunction(builder),\n    deleteApplicationByAdmission: deleteApplicationByAdmissionFunction(builder),\n    forgetPasswordProtection: forgetPasswordProtectionFunction(builder),\n    passwordProtectionToggle: passwordProtectionToggleFunction(builder),\n    passwordProtectionLogin: passwordProtectionLoginFunction(builder),\n    updateFeeStructureByAppliationWise:\n      updateFeeStructureByAppliationWiseFunction(builder),\n\n    getRefundedListByAdmission: getRefundedListByAdmissionFunction(builder),\n    directJoinFormWithPayAdmission:\n      directJoinFormWithPayAdmissionFunction(builder),\n    collectSetOffAdmissionFees: collectSetOffAdmissionFeesFunction(builder),\n    admissionDocsActionByStudent: admissionDocsActionByStudentFunction(builder),\n    scholarShipExcelByAdmission: scholarShipExcelByAdmissionFunction(builder),\n    scholarShipExcelByInstitute: scholarShipExcelByInstituteFunction(builder),\n    addScholarNumberAdmission: addScholarNumberAdmissionFunction(builder),\n    studentDepartmentFees: studentDepartmentFeesFunction(builder),\n    studentBacklogFees: studentBacklogFeesFunction(builder),\n    internalFeeReceipt: internalFeeReceiptFunction(builder),\n    dropAdmissionFeesCardByAdmission:\n      dropAdmissionFeesCardByAdmissionFunction(builder),\n\n    allApplicationByAdmission: allApplicationByAdmissionFunction(builder),\n    addNewFeesByAdmission: addNewFeesByAdmissionFunction(builder),\n    collectNewAddFeesByAdmission: collectNewAddFeesByAdmissionFunction(builder),\n    governmentCollectNewAddFeesByAdmission:\n      governmentCollectNewAddFeesByAdmissionFunction(builder),\n    admissionReminder: admissionReminderFunction(builder),\n    admissionInstallmentEditFeesByAdmission:\n      admissionInstallmentEditFeesByAdmissionFunction(builder),\n    getPendingCustomFilterByAdmission:\n      getPendingCustomFilterByAdmissionFunction(builder),\n    getBatchStandardWithMultipleDepartment:\n      getBatchStandardWithMultipleDepartmentFunction(builder),\n    getDailyCollectionByAdmission:\n      getDailyCollectionByAdmissionFunction(builder),\n    editStudentGrNumber: editStudentGrNumberFunction(builder),\n    admissionRevertBackSelectedToApplication:\n      admissionRevertBackSelectedToApplicationFunction(builder),\n    admissionRevertBackDocsToSelected:\n      admissionRevertBackDocsToSelectedFunction(builder),\n    removeFeesInstallmentCard: removeFeesInstallmentCardFunction(builder),\n    transferApplicatToOtherApplication:\n      transferApplicatToOtherApplicationFunction(builder),\n    existStudentFeesExcelByAdmission:\n      existStudentFeesExcelByAdmissionFunction(builder),\n    studentValidaForApplicationByAdmission:\n      studentValidaForApplicationByAdmissionFunction(builder),\n    studentBankValidationByAdmission:\n      studentBankValidationByAdmissionFunction(builder),\n    markCompleteToOngoingApplication:\n      markCompleteToOngoingApplicationFunction(builder),\n    getReminderHistoryByAdmission:\n      getReminderHistoryByAdmissionFunction(builder),\n    getOsReminderStudentList: getOsReminderStudentListFunction(builder),\n    studentScholarshipNumberDublicate:\n      studentScholarshipNumberDublicateFunction(builder),\n  }),\n});\n\nexport const {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchAllAppAtInstituteQuery,\n  useNewUserApplyMutation,\n  useGetNewApplicationMutation,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetUserConfirmMutation,\n  useGetUserCancelMutation,\n  useGetAllClassesQuery,\n  useRetrieveNewClassAllotMutation,\n  useRetrieveMarkCompleteMutation,\n  useGetOneViewStudentFeeQuery,\n  useRetrievePaidRemainFeeMutation,\n  useGetOneApplicationQuery,\n  useGetAllDepartmentQuery,\n  useFetchCancelStatusModeMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n\n  useGetDailyCollectionByAdmissionQuery,\n\n  //\n  useEditStudentGrNumberMutation,\n\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} = admissionApiDynamic;\n","import {\n  useActivateAdmissionHeadMutation,\n  useEditAdmissionMutation,\n  useFetchAdmissionDetailQuery,\n  useFetchAllAppAtInstituteQuery,\n  useFetchAllCompletedAppQuery,\n  useFetchAllOngoingAppQuery,\n  useFetchAllRemainingArrayQuery,\n  useFetchAdmissionRemainingArrayMutation,\n  useFetchCancelStatusModeMutation,\n  useFetchUserSelectAppMutation,\n  useFetchUserCancelAppMutation,\n  useFetchUserSelectStatusAppMutation,\n  useGetAllClassesQuery,\n  useGetAllConfirmQuery,\n  useGetAllConfirmMultiselectQuery,\n  useGetAllDepartmentQuery,\n  useGetAllRequestQuery,\n  useGetAllSelectQuery,\n  useGetNewApplicationMutation,\n  useGetOneApplicationQuery,\n  useGetUserCancelMutation,\n  useGetUserConfirmMutation,\n  useNewUserApplyMutation,\n  useRenderStudentAdmissionFeesQuery,\n  useRetrieveMarkCompleteMutation,\n  useRetrieveNewClassAllotMutation,\n  useRetrievePaidRemainFeeMutation,\n  useCollectApplicantDocsMutation,\n  useAdmissionBatchListQuery,\n  useAdmissionAllottedListQuery,\n  useAdmissionCancelledListQuery,\n  useAdmissionClassMasterListQuery,\n  useAddEnquiryMutation,\n  useGetAllEnquiryListQuery,\n  useGetOneEnquiryQuery,\n  useOneEnquiryActionMutation,\n  useDirectJoinFormAdmissionMutation,\n  useSubmitAmountToFinanaceMutation,\n  useGetAccountWithNumberQuery,\n  useEditFeeStructureMutation,\n  useConfirmStudentModeByAdmissionAdminMutation,\n  useRejectStudentModeByAdmissionAdminMutation,\n  useGetReceiptByAdmissionQuery,\n  useReceiptActionByAdmissionMutation,\n  useReApplyReceiptByStudentMutation,\n  useGetFeeReceiptDetailQuery,\n  useGetDocumentByAdmissionQuery,\n  useAddDocumentByAdmissionMutation,\n  useUpdateDocumentByAdmissionMutation,\n  useDeleteDocumentByAdmissionMutation,\n  useRefundAmountByAdmissionAdminMutation,\n  useGetRefundByAdmissionQuery,\n  useUpdateRemarkByAdmissionAdminMutation,\n  useExportFilterDataByAdmissionMutation,\n  useGetAllExcelByAdmissionAdminQuery,\n  usePayAdmissionFeeByStudentMutation,\n  useUpdateExcelByAdmissionAdminMutation,\n  useDeleteExcelByAdmissionAdminMutation,\n  useUpdateDocumentByAdmissionAdminMutation,\n  useDeleteDocumentByAdmissionAdminMutation,\n  useAddModeratorByAdmissionAdminMutation,\n  useGetModeratorByAdmissionAdminQuery,\n  useUpdateModeratorByAdmissionAdminMutation,\n  useDeleteModeratorByAdmissionAdminMutation,\n  useAdmissionGetSiteInfoQuery,\n  useAdmissionUpdateSiteInfoMutation,\n  useGetScholarshipListAdmissionQuery,\n  useAddScholarshipAdmissionMutation,\n  useGetOneScholarshipAdmissionQuery,\n  useGetOneScholarshipAllCandidateAdmissionQuery,\n  useOneSchloarshipActionAdmissionMutation,\n  useAddScholarshipFundCorpusAdmissionMutation,\n  useGetScholarshipFundCorpusAdmissionQuery,\n  useAddMoreScholarshipFundCorpusAdmissionMutation,\n  useUpdateApplicationByAdmissionMutation,\n  useDeleteApplicationByAdmissionMutation,\n  useForgetPasswordProtectionMutation,\n  usePasswordProtectionToggleMutation,\n  usePasswordProtectionLoginMutation,\n  useUpdateFeeStructureByAppliationWiseMutation,\n  useGetRefundedListByAdmissionQuery,\n  useDirectJoinFormWithPayAdmissionMutation,\n  useCollectSetOffAdmissionFeesMutation,\n  useAdmissionDocsActionByStudentMutation,\n  useScholarShipExcelByAdmissionMutation,\n  useScholarShipExcelByInstituteMutation,\n  useAddScholarNumberAdmissionMutation,\n  useStudentDepartmentFeesQuery,\n  useStudentBacklogFeesQuery,\n  useInternalFeeReceiptQuery,\n  useDropAdmissionFeesCardByAdmissionMutation,\n  useAllApplicationByAdmissionQuery,\n  useAddNewFeesByAdmissionMutation,\n  useCollectNewAddFeesByAdmissionMutation,\n  useGovernmentCollectNewAddFeesByAdmissionMutation,\n  useAdmissionReminderMutation,\n  useAdmissionInstallmentEditFeesByAdmissionMutation,\n  //\n  useGetPendingCustomFilterByAdmissionQuery,\n  useGetBatchStandardWithMultipleDepartmentMutation,\n  useGetDailyCollectionByAdmissionQuery,\n  useEditStudentGrNumberMutation,\n  //\n  useAdmissionRevertBackSelectedToApplicationMutation,\n  useAdmissionRevertBackDocsToSelectedMutation,\n  useRemoveFeesInstallmentCardMutation,\n  useTransferApplicatToOtherApplicationMutation,\n  useExistStudentFeesExcelByAdmissionMutation,\n  useStudentValidaForApplicationByAdmissionMutation,\n  useStudentBankValidationByAdmissionMutation,\n  useMarkCompleteToOngoingApplicationMutation,\n  useGetReminderHistoryByAdmissionQuery,\n  useGetOsReminderStudentListMutation,\n  useStudentScholarshipNumberDublicateMutation,\n} from \"../../services/admission/admissionApiDynamic\";\n\nexport const useAssignAdmissionHead = () => {\n  const [assignAdmissionHead] = useActivateAdmissionHeadMutation();\n  return [assignAdmissionHead];\n};\n\nexport const useEditAdmission = () => {\n  const [editAdmission] = useEditAdmissionMutation();\n  return [editAdmission];\n};\n\nexport const useGetAdmissionDetail = (args) => {\n  const { data: getAdmissionDetail, refetch: getAdmissionDetailRefetch } =\n    useFetchAdmissionDetailQuery(args.data, { skip: args.skip });\n  return { getAdmissionDetail, getAdmissionDetailRefetch };\n};\n\nexport const useAllOngoingApp = (args) => {\n  const { data: allOngoingApp, refetch: allOngoingAppRefetch } =\n    useFetchAllOngoingAppQuery(args.data, { skip: args.skip });\n  return { allOngoingApp, allOngoingAppRefetch };\n};\n\nexport const useAllCompletedApp = (args) => {\n  const { data: allCompletedApp, refetch: allCompletedAppRefetch } =\n    useFetchAllCompletedAppQuery(args.data, { skip: args.skip });\n  return { allCompletedApp, allCompletedAppRefetch };\n};\n\nexport const useAllAppAtInstitute = (args) => {\n  const { data: allAppAtInstitute, refetch: allAppAtInstituteRefetch } =\n    useFetchAllAppAtInstituteQuery(args.data, { skip: args.skip });\n  return { allAppAtInstitute, allAppAtInstituteRefetch };\n};\n\nexport const useNewUserApply = () => {\n  const [newUserApply] = useNewUserApplyMutation();\n  return [newUserApply];\n};\nexport const useCreateNewApplication = () => {\n  const [createNewApplication] = useGetNewApplicationMutation();\n  return [createNewApplication];\n};\n\nexport const useGetAllRequest = (args) => {\n  const { data: getAllRequestList, refetch: getAllRequestListRefetch } =\n    useGetAllRequestQuery(args.data, { skip: args.skip });\n  return { getAllRequestList, getAllRequestListRefetch };\n};\nexport const useGetAllSelect = (args) => {\n  const { data: getAllSelectList, refetch: getAllSelectListRefetch } =\n    useGetAllSelectQuery(args.data, { skip: args.skip });\n  return { getAllSelectList, getAllSelectListRefetch };\n};\nexport const useGetAllConfirm = (args) => {\n  const { data: getAllConfirmList, refetch: getAllConfirmListRefetch } =\n    useGetAllConfirmQuery(args.data, { skip: args.skip });\n  return { getAllConfirmList, getAllConfirmListRefetch };\n};\n\nexport const useGetAllConfirmMultiselect = (args) => {\n  const {\n    data: getAllConfirmListMulitselect,\n    refetch: getAllConfirmListMulitselectRefetch,\n  } = useGetAllConfirmMultiselectQuery(args.data, { skip: args.skip });\n  return { getAllConfirmListMulitselect, getAllConfirmListMulitselectRefetch };\n};\n\nexport const useSelectAdmissionApplicant = () => {\n  const [selectAdmissionApplicant] = useFetchUserSelectAppMutation();\n  return [selectAdmissionApplicant];\n};\nexport const useCancelAdmissionApplicant = () => {\n  const [cancelAdmissionApplicant] = useFetchUserCancelAppMutation();\n  return [cancelAdmissionApplicant];\n};\nexport const useStudentPayMode = () => {\n  const [studentPayMode] = useFetchUserSelectStatusAppMutation();\n  return [studentPayMode];\n};\nexport const useApplicantAdmissionConfirm = () => {\n  const [confirmAppliacntAdmission] = useGetUserConfirmMutation();\n  return [confirmAppliacntAdmission];\n};\nexport const useApplicantAdmissionCancel = () => {\n  const [cancelAppliacntAdmission] = useGetUserCancelMutation();\n  return [cancelAppliacntAdmission];\n};\nexport const useGetAllClasses = (args) => {\n  const { data: getAllClassesList, refetch: getAllClassesListRefetch } =\n    useGetAllClassesQuery(args.data, { skip: args.skip });\n  return { getAllClassesList, getAllClassesListRefetch };\n};\n\nexport const useApplicantAdmissionAllotSeat = () => {\n  const [applicantAllotSeat] = useRetrieveNewClassAllotMutation();\n  return [applicantAllotSeat];\n};\nexport const useApplicationComplete = () => {\n  const [completeAdmissionApplication] = useRetrieveMarkCompleteMutation();\n  return [completeAdmissionApplication];\n};\n\nexport const useApplicantAdmissionRemainingFees = () => {\n  const [applicantRemainingFees] = useRetrievePaidRemainFeeMutation();\n  return [applicantRemainingFees];\n};\n\nexport const useOneApplicationDetail = (args) => {\n  const { data: oneApplicationDetail, refetch: oneApplicationDetailRefetch } =\n    useGetOneApplicationQuery(args.apid, { skip: args.skip });\n  return { oneApplicationDetail, oneApplicationDetailRefetch };\n};\n\nexport const useGetAllDepartment = (args) => {\n  const { data: allDepartmentList, refetch: allDepartmentListRefetch } =\n    useGetAllDepartmentQuery(args.aid, { skip: args.skip });\n  return { allDepartmentList, allDepartmentListRefetch };\n};\n\nexport const useCancelStudentApplicationStatus = () => {\n  const [cancelApplication] = useFetchCancelStatusModeMutation();\n  return [cancelApplication];\n};\n\nexport const useRenderStudentAdmissionFees = (args) => {\n  const {\n    data: sudentAdmissionFeesList,\n    refetch: sudentAdmissionFeesListRefetch,\n  } = useRenderStudentAdmissionFeesQuery(args.sid, { skip: args.skip });\n  return { sudentAdmissionFeesList, sudentAdmissionFeesListRefetch };\n};\n\nexport const useCollectApplicantDocs = () => {\n  const [collectDocs] = useCollectApplicantDocsMutation();\n  return [collectDocs];\n};\nexport const useAdmissionBatchList = (args) => {\n  const { data: admissionBatchList, refetch: admissionBatchListRefetch } =\n    useAdmissionBatchListQuery(args.aid, { skip: args.skip });\n  return { admissionBatchList, admissionBatchListRefetch };\n};\n\nexport const useAdmissionAllottedList = (args) => {\n  const { data: admissionAllottedList, refetch: admissionAllottedListRefetch } =\n    useAdmissionAllottedListQuery(args.data, { skip: args.skip });\n  return { admissionAllottedList, admissionAllottedListRefetch };\n};\nexport const useAdmissionCancelledList = (args) => {\n  const {\n    data: admissionCancelledList,\n    refetch: admissionCancelledListRefetch,\n  } = useAdmissionCancelledListQuery(args.data, { skip: args.skip });\n  return { admissionCancelledList, admissionCancelledListRefetch };\n};\nexport const useAdmissionClassMasterList = (args) => {\n  const {\n    data: admissionClassMasterList,\n    refetch: admissionClassMasterListRefetch,\n  } = useAdmissionClassMasterListQuery(args.did, { skip: args.skip });\n  return { admissionClassMasterList, admissionClassMasterListRefetch };\n};\n\nexport const useAddEnquiry = () => {\n  const [addEnquiry] = useAddEnquiryMutation();\n  return [addEnquiry];\n};\n\nexport const useGetAllEnquiryList = (args) => {\n  const { data: getAllEnquiryList, refetch: getAllEnquiryListRefetch } =\n    useGetAllEnquiryListQuery(args.data, { skip: args.skip });\n  return { getAllEnquiryList, getAllEnquiryListRefetch };\n};\nexport const useGetOneEnquiry = (args) => {\n  const { data: oneEnquiryDetail, refetch: oneEnquiryDetailRefetch } =\n    useGetOneEnquiryQuery(args.eid, { skip: args.skip });\n  return { oneEnquiryDetail, oneEnquiryDetailRefetch };\n};\n\nexport const useOneEnquiryAction = () => {\n  const [oneEnquiryAction] = useOneEnquiryActionMutation();\n  return [oneEnquiryAction];\n};\n\nexport const useDirectJoinFormAdmission = () => {\n  const [directJoinFormAdmission] = useDirectJoinFormAdmissionMutation();\n  return [directJoinFormAdmission];\n};\nexport const useSubmitAmountToFinanace = () => {\n  const [submitAmountToFinanace] = useSubmitAmountToFinanaceMutation();\n  return [submitAmountToFinanace];\n};\n\nexport const useGetAccountWithNumber = (args) => {\n  const { data: getAccountWithNumber, refetch: getAccountWithNumberRefetch } =\n    useGetAccountWithNumberQuery(args.phoneKey, { skip: args.skip });\n  return { getAccountWithNumber, getAccountWithNumberRefetch };\n};\nexport const useEditFeeStructure = () => {\n  const [editFeeStructure] = useEditFeeStructureMutation();\n  return [editFeeStructure];\n};\n\nexport const useConfirmStudentModeByAdmissionAdmin = () => {\n  const [confirmStudentModeByAdmission] =\n    useConfirmStudentModeByAdmissionAdminMutation();\n  return [confirmStudentModeByAdmission];\n};\nexport const useRejectStudentModeByAdmissionAdmin = () => {\n  const [rejectStudentModeByAdmission] =\n    useRejectStudentModeByAdmissionAdminMutation();\n  return [rejectStudentModeByAdmission];\n};\n\nexport const useGetReceiptByAdmission = (args) => {\n  const { data: getReceiptByAdmission, refetch: getReceiptByAdmissionRefetch } =\n    useGetReceiptByAdmissionQuery(args.data, { skip: args.skip });\n  return { getReceiptByAdmission, getReceiptByAdmissionRefetch };\n};\n\nexport const useReceiptActionByAdmission = () => {\n  const [receiptActionByAdmission] = useReceiptActionByAdmissionMutation();\n  return [receiptActionByAdmission];\n};\nexport const useReApplyReceiptByStudent = () => {\n  const [reApplyReceiptByStudent] = useReApplyReceiptByStudentMutation();\n  return [reApplyReceiptByStudent];\n};\n\nexport const useGetFeeReceiptDetail = (args) => {\n  const { data: getFeeReceiptDetail, refetch: getFeeReceiptDetailRefetch } =\n    useGetFeeReceiptDetailQuery(args.rid, { skip: args.skip });\n  return { getFeeReceiptDetail, getFeeReceiptDetailRefetch };\n};\n\nexport const useGetDocumentByAdmission = (args) => {\n  const {\n    data: getDocumentByAdmission,\n    refetch: getDocumentByAdmissionRefetch,\n  } = useGetDocumentByAdmissionQuery(args.data, { skip: args.skip });\n  return { getDocumentByAdmission, getDocumentByAdmissionRefetch };\n};\n\nexport const useAddDocumentByAdmission = () => {\n  const [addDocumentByAdmission] = useAddDocumentByAdmissionMutation();\n  return [addDocumentByAdmission];\n};\nexport const useUpdateDocumentByAdmission = () => {\n  const [updateDocumentByAdmission] = useUpdateDocumentByAdmissionMutation();\n  return [updateDocumentByAdmission];\n};\n\nexport const useDeleteDocumentByAdmission = () => {\n  const [deleteDocumentByAdmission] = useDeleteDocumentByAdmissionMutation();\n  return [deleteDocumentByAdmission];\n};\n\nexport const useRefundAmountByAdmissionAdmin = () => {\n  const [refundAmountByAdmissionAdmin] =\n    useRefundAmountByAdmissionAdminMutation();\n  return [refundAmountByAdmissionAdmin];\n};\n\nexport const useGetRefundByAdmission = (args) => {\n  const { data: getRefundByAdmission, refetch: getRefundByAdmissionRefetch } =\n    useGetRefundByAdmissionQuery(args.data, { skip: args.skip });\n  return { getRefundByAdmission, getRefundByAdmissionRefetch };\n};\n\nexport const useUpdateRemarkByAdmissionAdmin = () => {\n  const [updateRemarkByAdmissionAdmin] =\n    useUpdateRemarkByAdmissionAdminMutation();\n  return [updateRemarkByAdmissionAdmin];\n};\n\nexport const useExportFilterDataByAdmission = () => {\n  const [exportFilterDataByAdmission] =\n    useExportFilterDataByAdmissionMutation();\n  return [exportFilterDataByAdmission];\n};\n\nexport const useGetAllExcelByAdmissionAdmin = (args) => {\n  const {\n    data: getAllExcelByAdmissionAdmin,\n    refetch: getAllExcelByAdmissionAdminRefetch,\n  } = useGetAllExcelByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getAllExcelByAdmissionAdmin, getAllExcelByAdmissionAdminRefetch };\n};\n\nexport const usePayAdmissionFeeByStudent = () => {\n  const [payAdmissionFeeByStudent] = usePayAdmissionFeeByStudentMutation();\n  return [payAdmissionFeeByStudent];\n};\n\nexport const useUpdateExcelByAdmissionAdmin = () => {\n  const [updateExcelByAdmissionAdmin] =\n    useUpdateExcelByAdmissionAdminMutation();\n  return [updateExcelByAdmissionAdmin];\n};\n\nexport const useDeleteExcelByAdmissionAdmin = () => {\n  const [deleteExcelByAdmissionAdmin] =\n    useDeleteExcelByAdmissionAdminMutation();\n  return [deleteExcelByAdmissionAdmin];\n};\n\nexport const useUpdateDocumentByAdmissionAdmin = () => {\n  const [updateDocumentByAdmissionAdmin] =\n    useUpdateDocumentByAdmissionAdminMutation();\n  return [updateDocumentByAdmissionAdmin];\n};\n\nexport const useDeleteDocumentByAdmissionAdmin = () => {\n  const [deleteDocumentByAdmissionAdmin] =\n    useDeleteDocumentByAdmissionAdminMutation();\n  return [deleteDocumentByAdmissionAdmin];\n};\nexport const useGetModeratorByAdmissionAdmin = (args) => {\n  const {\n    data: getModeratorByAdmissionAdmin,\n    refetch: getModeratorByAdmissionAdminRefetch,\n  } = useGetModeratorByAdmissionAdminQuery(args.data, { skip: args.skip });\n  return { getModeratorByAdmissionAdmin, getModeratorByAdmissionAdminRefetch };\n};\n\nexport const useAddModeratorByAdmissionAdmin = () => {\n  const [addModeratorByAdmissionAdmin] =\n    useAddModeratorByAdmissionAdminMutation();\n  return [addModeratorByAdmissionAdmin];\n};\n\nexport const useUpdateModeratorByAdmissionAdmin = () => {\n  const [updateModeratorByAdmissionAdmin] =\n    useUpdateModeratorByAdmissionAdminMutation();\n  return [updateModeratorByAdmissionAdmin];\n};\n\nexport const useDeleteModeratorByAdmissionAdmin = () => {\n  const [deleteModeratorByAdmissionAdmin] =\n    useDeleteModeratorByAdmissionAdminMutation();\n  return [deleteModeratorByAdmissionAdmin];\n};\n\nexport const useAdmissionGetSiteInfo = (args) => {\n  const { data: admissionGetSiteInfo, refetch: admissionGetSiteInfoRefetch } =\n    useAdmissionGetSiteInfoQuery(args.aid, { skip: args.skip });\n  return { admissionGetSiteInfo, admissionGetSiteInfoRefetch };\n};\n\nexport const useAdmissionUpdateSiteInfo = () => {\n  const [admissionUpdateSiteInfo] = useAdmissionUpdateSiteInfoMutation();\n  return [admissionUpdateSiteInfo];\n};\n\n//////////////\nexport const useGetScholarshipListAdmission = (args) => {\n  const {\n    data: getScholarshipListAdmission,\n    refetch: getScholarshipListAdmissionRefetch,\n  } = useGetScholarshipListAdmissionQuery(args.data, { skip: args.skip });\n  return { getScholarshipListAdmission, getScholarshipListAdmissionRefetch };\n};\n\nexport const useAddScholarshipAdmission = () => {\n  const [addScholarshipAdmission] = useAddScholarshipAdmissionMutation();\n  return [addScholarshipAdmission];\n};\nexport const useGetOneScholarshipAdmission = (args) => {\n  const {\n    data: getOneScholarshipAdmission,\n    refetch: getOneScholarshipAdmissionRefetch,\n  } = useGetOneScholarshipAdmissionQuery(args.sid, { skip: args.skip });\n  return { getOneScholarshipAdmission, getOneScholarshipAdmissionRefetch };\n};\n\nexport const useGetOneScholarshipAllCandidateAdmission = (args) => {\n  const {\n    data: getOneScholarshipAllCandidateAdmission,\n    refetch: getOneScholarshipAllCandidateAdmissionRefetch,\n  } = useGetOneScholarshipAllCandidateAdmissionQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    getOneScholarshipAllCandidateAdmission,\n    getOneScholarshipAllCandidateAdmissionRefetch,\n  };\n};\n\nexport const useOneSchloarshipActionAdmission = () => {\n  const [oneSchloarshipActionAdmission] =\n    useOneSchloarshipActionAdmissionMutation();\n  return [oneSchloarshipActionAdmission];\n};\n\nexport const useAddScholarshipFundCorpusAdmission = () => {\n  const [addScholarshipFundCorpusAdmission] =\n    useAddScholarshipFundCorpusAdmissionMutation();\n  return [addScholarshipFundCorpusAdmission];\n};\nexport const useGetScholarshipFundCorpusAdmission = (args) => {\n  const {\n    data: getScholarshipFundCorpusAdmission,\n    refetch: getScholarshipFundCorpusAdmissionRefetch,\n  } = useGetScholarshipFundCorpusAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getScholarshipFundCorpusAdmission,\n    getScholarshipFundCorpusAdmissionRefetch,\n  };\n};\n\nexport const useAddMoreScholarshipFundCorpusAdmission = () => {\n  const [addMoreScholarshipFundCorpusAdmission] =\n    useAddMoreScholarshipFundCorpusAdmissionMutation();\n  return [addMoreScholarshipFundCorpusAdmission];\n};\n\nexport const useUpdateApplicationByAdmission = () => {\n  const [updateApplicationByAdmission] =\n    useUpdateApplicationByAdmissionMutation();\n  return [updateApplicationByAdmission];\n};\n\nexport const useDeleteApplicationByAdmission = () => {\n  const [deleteApplicationByAdmission] =\n    useDeleteApplicationByAdmissionMutation();\n  return [deleteApplicationByAdmission];\n};\nexport const useForgetPasswordProtection = () => {\n  const [forgetPasswordProtection] = useForgetPasswordProtectionMutation();\n  return [forgetPasswordProtection];\n};\nexport const usePasswordProtectionToggle = () => {\n  const [passwordProtectionToggle] = usePasswordProtectionToggleMutation();\n  return [passwordProtectionToggle];\n};\nexport const usePasswordProtectionLogin = () => {\n  const [passwordProtectionLogin] = usePasswordProtectionLoginMutation();\n  return [passwordProtectionLogin];\n};\n\nexport const useUpdateFeeStructureByAppliationWise = () => {\n  const [updateFeeStructureByAppliationWise] =\n    useUpdateFeeStructureByAppliationWiseMutation();\n  return [updateFeeStructureByAppliationWise];\n};\n\nexport const useGetRefundedListByAdmission = (args) => {\n  const {\n    data: getRefundedListByAdmission,\n    refetch: getRefundedListByAdmissionRefetch,\n  } = useGetRefundedListByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getRefundedListByAdmission,\n    getRefundedListByAdmissionRefetch,\n  };\n};\n\nexport const useDirectJoinWithPayAdmission = () => {\n  const [directJoinFormWithPayAdmission] =\n    useDirectJoinFormWithPayAdmissionMutation();\n  return [directJoinFormWithPayAdmission];\n};\n\nexport const useCollectSetOffAdmissionFees = () => {\n  const [collectSetOffAdmissionFees] = useCollectSetOffAdmissionFeesMutation();\n  return [collectSetOffAdmissionFees];\n};\nexport const useAdmissionDocsActionByStudent = () => {\n  const [admissionDocsActionByStudent] =\n    useAdmissionDocsActionByStudentMutation();\n  return [admissionDocsActionByStudent];\n};\n\nexport const useScholarShipExcelByAdmission = () => {\n  const [scholarShipExcelByAdmission] =\n    useScholarShipExcelByAdmissionMutation();\n  return [scholarShipExcelByAdmission];\n};\nexport const useScholarShipExcelByInstitute = () => {\n  const [scholarShipExcelByInstitute] =\n    useScholarShipExcelByInstituteMutation();\n  return [scholarShipExcelByInstitute];\n};\n\nexport const useAddScholarNumberAdmission = () => {\n  const [addScholarNumberAdmission] = useAddScholarNumberAdmissionMutation();\n  return [addScholarNumberAdmission];\n};\n\nexport const useStudentDepartmentFees = (args) => {\n  const { data: studentDepartmentFees, refetch: studentDepartmentFeesRefetch } =\n    useStudentDepartmentFeesQuery(args.data, { skip: args.skip });\n  return { studentDepartmentFees, studentDepartmentFeesRefetch };\n};\n\nexport const useStudentBacklogFees = (args) => {\n  const { data: studentBacklogFees, refetch: studentBacklogFeesRefetch } =\n    useStudentBacklogFeesQuery(args.data, { skip: args.skip });\n  return { studentBacklogFees, studentBacklogFeesRefetch };\n};\n\nexport const useInternalFeeReceipt = (args) => {\n  const { data: internalFeeReceipt, refetch: internalFeeReceiptRefetch } =\n    useInternalFeeReceiptQuery(args.rid, { skip: args.skip });\n  return { internalFeeReceipt, internalFeeReceiptRefetch };\n};\n\nexport const useDropAdmissionFeesCardByAdmission = () => {\n  const [dropAdmissionFeesCardByAdmission] =\n    useDropAdmissionFeesCardByAdmissionMutation();\n  return [dropAdmissionFeesCardByAdmission];\n};\n\nexport const useAllApplicationByAdmission = (args) => {\n  const {\n    data: allApplicationByAdmission,\n    refetch: allApplicationByAdmissionRefetch,\n  } = useAllApplicationByAdmissionQuery(args.data, { skip: args.skip });\n  return { allApplicationByAdmission, allApplicationByAdmissionRefetch };\n};\n\nexport const useAddNewFeesByAdmission = () => {\n  const [addNewFeesByAdmission] = useAddNewFeesByAdmissionMutation();\n  return [addNewFeesByAdmission];\n};\n\nexport const useCollectNewAddFeesByAdmission = () => {\n  const [collectNewAddFeesByAdmission] =\n    useCollectNewAddFeesByAdmissionMutation();\n  return [collectNewAddFeesByAdmission];\n};\n\nexport const useGovernmentCollectNewAddFeesByAdmission = () => {\n  const [governmentCollectNewAddFeesByAdmission] =\n    useGovernmentCollectNewAddFeesByAdmissionMutation();\n  return [governmentCollectNewAddFeesByAdmission];\n};\n\nexport const useAdmissionReminder = () => {\n  const [admissionReminder] = useAdmissionReminderMutation();\n  return [admissionReminder];\n};\nexport const useAdmissionInstallmentEditFeesByAdmission = () => {\n  const [admissionInstallmentEditFeesByAdmission] =\n    useAdmissionInstallmentEditFeesByAdmissionMutation();\n  return [admissionInstallmentEditFeesByAdmission];\n};\n\nexport const useGetPendingCustomFilterByAdmission = (args) => {\n  const {\n    data: getPendingCustomFilterByAdmission,\n    refetch: getPendingCustomFilterByAdmissionRefetch,\n  } = useGetPendingCustomFilterByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getPendingCustomFilterByAdmission,\n    getPendingCustomFilterByAdmissionRefetch,\n  };\n};\n\nexport const useGetBatchStandardWithMultipleDepartment = () => {\n  const [getBatchStandardWithMultipleDepartment] =\n    useGetBatchStandardWithMultipleDepartmentMutation();\n  return [getBatchStandardWithMultipleDepartment];\n};\n\n// with new filter type\nexport const useAllAdmissionRemaining = () => {\n  const [allAdmissionRemaining] = useFetchAdmissionRemainingArrayMutation();\n  return [allAdmissionRemaining];\n};\n\nexport const useAllRemaining = (args) => {\n  const { data: allRemainingList, refetch: allRemainingListRefetch } =\n    useFetchAllRemainingArrayQuery(args.data, { skip: args.skip });\n  return { allRemainingList, allRemainingListRefetch };\n};\n\nexport const useGetDailyCollectionByAdmission = (args) => {\n  const {\n    data: getDailyCollectionByAdmission,\n    refetch: getDailyCollectionByAdmissionRefetch,\n  } = useGetDailyCollectionByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getDailyCollectionByAdmission,\n    getDailyCollectionByAdmissionRefetch,\n  };\n};\n\n// student gr edit\nexport const useEditStudentGrNumber = () => {\n  const [editStudentGrNumber] = useEditStudentGrNumberMutation();\n  return [editStudentGrNumber];\n};\n//\nexport const useAdmissionRevertBackSelectedToApplication = () => {\n  const [admissionRevertBackSelectedToApplication] =\n    useAdmissionRevertBackSelectedToApplicationMutation();\n  return [admissionRevertBackSelectedToApplication];\n};\nexport const useAdmissionRevertBackDocsToSelected = () => {\n  const [admissionRevertBackDocsToSelected] =\n    useAdmissionRevertBackDocsToSelectedMutation();\n  return [admissionRevertBackDocsToSelected];\n};\n\nexport const useRemoveFeesInstallmentCard = () => {\n  const [removeFeesInstallmentCard] = useRemoveFeesInstallmentCardMutation();\n  return [removeFeesInstallmentCard];\n};\n\nexport const useTransferApplicatToOtherApplication = () => {\n  const [transferApplicatToOtherApplication] =\n    useTransferApplicatToOtherApplicationMutation();\n  return [transferApplicatToOtherApplication];\n};\n\nexport const useExistStudentFeesExcelByAdmission = () => {\n  const [existStudentFeesExcelByAdmission] =\n    useExistStudentFeesExcelByAdmissionMutation();\n  return [existStudentFeesExcelByAdmission];\n};\nexport const useStudentValidaForApplicationByAdmission = () => {\n  const [studentValidaForApplicationByAdmission] =\n    useStudentValidaForApplicationByAdmissionMutation();\n  return [studentValidaForApplicationByAdmission];\n};\nexport const useStudentBankValidationByAdmission = () => {\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmissionMutation();\n  return [studentBankValidationByAdmission];\n};\n\nexport const useMarkCompleteToOngoingApplication = () => {\n  const [markCompleteToOngoingApplication] =\n    useMarkCompleteToOngoingApplicationMutation();\n  return [markCompleteToOngoingApplication];\n};\n\nexport const useGetReminderHistoryByAdmission = (args) => {\n  const {\n    data: getReminderHistoryByAdmission,\n    refetch: getReminderHistoryByAdmissionRefetch,\n  } = useGetReminderHistoryByAdmissionQuery(args.data, { skip: args.skip });\n  return {\n    getReminderHistoryByAdmission,\n    getReminderHistoryByAdmissionRefetch,\n  };\n};\n\nexport const useGetOsReminderStudentList = () => {\n  const [getOsReminderStudentList] = useGetOsReminderStudentListMutation();\n  return [getOsReminderStudentList];\n};\nexport const useStudentScholarshipNumberDublicate = () => {\n  const [studentScholarshipNumberDublicate] =\n    useStudentScholarshipNumberDublicateMutation();\n  return [studentScholarshipNumberDublicate];\n};\n"],"names":["admissionApiDynamic","admissionNewApi","injectEndpoints","endpoints","builder","activateAdmissionHead","activateAdmission","editAdmission","editAdmissionFunction","fetchAdmissionDetail","fetchAdmission","fetchAllOngoingApp","fetchOngoing","fetchAllCompletedApp","fetchCompleted","fetchAllRemainingArray","fetchRemainingArray","fetchAdmissionRemainingArray","fetchAllAppAtInstitute","atInstituteSearchApplication","newUserApply","userApply","getNewApplication","newApplication","getAllRequest","fetchRequest","getAllSelect","fetchSelect","getAllConfirm","fetchConfirm","getAllConfirmMultiselect","fetchConfirmAll","fetchUserSelectApp","userSelect","fetchUserCancelApp","userCancelApplication","fetchUserSelectStatusApp","userSelectStatusMode","getUserConfirm","userConfirm","getUserCancel","userCancel","getAllClasses","fetchClasses","retrieveNewClassAllot","newClassAllot","retrieveMarkComplete","markComplete","getOneViewStudentFee","oneStudentFee","retrievePaidRemainFee","paidRemainFee","getOneApplication","oneApplication","getAllDepartment","allDepartment","fetchCancelStatusMode","cancelStatusMode","renderStudentAdmissionFees","studentAdmission","collectApplicantDocs","collectApplicantDocsFunction","admissionBatchList","admissionBatchListFunction","admissionAllottedList","admissionAllottedListFunction","admissionCancelledList","admissionCancelledListFunction","admissionClassMasterList","admissionClassMasterListFunction","addEnquiry","addEnquiryFunction","getAllEnquiryList","getAllEnquiryListFunction","getOneEnquiry","getOneEnquiryFunction","oneEnquiryAction","oneEnquiryActionFunction","directJoinFormAdmission","directJoinFormAdmissionFunction","submitAmountToFinanace","submitAmountToFinanaceFunction","getAccountWithNumber","getAccountWithNumberFunction","editFeeStructure","editFeeStructureFunction","confirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmissionAdminFunction","rejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmissionAdminFunction","getReceiptByAdmission","getReceiptByAdmissionFunction","receiptActionByAdmission","receiptActionByAdmissionFunction","reApplyReceiptByStudent","reApplyReceiptByStudentFunction","getFeeReceiptDetail","getFeeReceiptDetailFunction","getDocumentByAdmission","getDocumentByAdmissionFuction","addDocumentByAdmission","addDocumentByAdmissionFuction","updateDocumentByAdmission","updateDocumentByAdmissionFuction","deleteDocumentByAdmission","deleteDocumentByAdmissionFuction","refundAmountByAdmissionAdmin","refundAmountByAdmissionAdminFunction","getRefundByAdmission","getRefundByAdmissionFuction","updateRemarkByAdmissionAdmin","updateRemarkByAdmissionAdminFunction","exportFilterDataByAdmission","exportFilterDataByAdmissionFuction","getAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminFunction","payAdmissionFeeByStudent","payAdmissionFeeByStudentFunction","updateExcelByAdmissionAdmin","updateExcelByAdmissionAdminFunction","deleteExcelByAdmissionAdmin","deleteExcelByAdmissionAdminFunction","updateDocumentByAdmissionAdmin","updateDocumentByAdmissionAdminFunction","deleteDocumentByAdmissionAdmin","deleteDocumentByAdmissionAdminFunction","addModeratorByAdmissionAdmin","addModeratorByAdmissionAdminFunction","getModeratorByAdmissionAdmin","getModeratorByAdmissionAdminFunction","updateModeratorByAdmissionAdmin","updateModeratorByAdmissionAdminFunction","deleteModeratorByAdmissionAdmin","deleteModeratorByAdmissionAdminFunction","admissionGetSiteInfo","admissionGetSiteInfoFunction","admissionUpdateSiteInfo","admissionUpdateSiteInfoFunction","getScholarshipListAdmission","getScholarshipListAdmissionFunction","addScholarshipAdmission","addScholarshipAdmissionFunction","getOneScholarshipAdmission","getOneScholarshipAdmissionFunction","getOneScholarshipAllCandidateAdmission","getOneScholarshipAllCandidateAdmissionFunction","oneSchloarshipActionAdmission","oneSchloarshipActionAdmissionFunction","addScholarshipFundCorpusAdmission","addScholarshipFundCorpusAdmissionFunction","getScholarshipFundCorpusAdmission","getScholarshipFundCorpusAdmissionFunction","addMoreScholarshipFundCorpusAdmission","addMoreScholarshipFundCorpusAdmissionFunction","updateApplicationByAdmission","updateApplicationByAdmissionFunction","deleteApplicationByAdmission","deleteApplicationByAdmissionFunction","forgetPasswordProtection","forgetPasswordProtectionFunction","passwordProtectionToggle","passwordProtectionToggleFunction","passwordProtectionLogin","passwordProtectionLoginFunction","updateFeeStructureByAppliationWise","updateFeeStructureByAppliationWiseFunction","getRefundedListByAdmission","getRefundedListByAdmissionFunction","directJoinFormWithPayAdmission","directJoinFormWithPayAdmissionFunction","collectSetOffAdmissionFees","collectSetOffAdmissionFeesFunction","admissionDocsActionByStudent","admissionDocsActionByStudentFunction","scholarShipExcelByAdmission","scholarShipExcelByAdmissionFunction","scholarShipExcelByInstitute","scholarShipExcelByInstituteFunction","addScholarNumberAdmission","addScholarNumberAdmissionFunction","studentDepartmentFees","studentDepartmentFeesFunction","studentBacklogFees","studentBacklogFeesFunction","internalFeeReceipt","internalFeeReceiptFunction","dropAdmissionFeesCardByAdmission","dropAdmissionFeesCardByAdmissionFunction","allApplicationByAdmission","allApplicationByAdmissionFunction","addNewFeesByAdmission","addNewFeesByAdmissionFunction","collectNewAddFeesByAdmission","collectNewAddFeesByAdmissionFunction","governmentCollectNewAddFeesByAdmission","governmentCollectNewAddFeesByAdmissionFunction","admissionReminder","admissionReminderFunction","admissionInstallmentEditFeesByAdmission","admissionInstallmentEditFeesByAdmissionFunction","getPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionFunction","getBatchStandardWithMultipleDepartment","getBatchStandardWithMultipleDepartmentFunction","getDailyCollectionByAdmission","getDailyCollectionByAdmissionFunction","editStudentGrNumber","editStudentGrNumberFunction","admissionRevertBackSelectedToApplication","admissionRevertBackSelectedToApplicationFunction","admissionRevertBackDocsToSelected","admissionRevertBackDocsToSelectedFunction","removeFeesInstallmentCard","removeFeesInstallmentCardFunction","transferApplicatToOtherApplication","transferApplicatToOtherApplicationFunction","existStudentFeesExcelByAdmission","existStudentFeesExcelByAdmissionFunction","studentValidaForApplicationByAdmission","studentValidaForApplicationByAdmissionFunction","studentBankValidationByAdmission","studentBankValidationByAdmissionFunction","markCompleteToOngoingApplication","markCompleteToOngoingApplicationFunction","getReminderHistoryByAdmission","getReminderHistoryByAdmissionFunction","getOsReminderStudentList","getOsReminderStudentListFunction","studentScholarshipNumberDublicate","studentScholarshipNumberDublicateFunction","useActivateAdmissionHeadMutation","useEditAdmissionMutation","useFetchAdmissionDetailQuery","useFetchAllOngoingAppQuery","useFetchAllCompletedAppQuery","useFetchAllRemainingArrayQuery","useFetchAdmissionRemainingArrayMutation","useFetchAllAppAtInstituteQuery","useNewUserApplyMutation","useGetNewApplicationMutation","useGetAllRequestQuery","useGetAllSelectQuery","useGetAllConfirmQuery","useGetAllConfirmMultiselectQuery","useFetchUserSelectAppMutation","useFetchUserCancelAppMutation","useFetchUserSelectStatusAppMutation","useGetUserConfirmMutation","useGetUserCancelMutation","useGetAllClassesQuery","useRetrieveNewClassAllotMutation","useRetrieveMarkCompleteMutation","useGetOneViewStudentFeeQuery","useRetrievePaidRemainFeeMutation","useGetOneApplicationQuery","useGetAllDepartmentQuery","useFetchCancelStatusModeMutation","useRenderStudentAdmissionFeesQuery","useCollectApplicantDocsMutation","useAdmissionBatchListQuery","useAdmissionAllottedListQuery","useAdmissionCancelledListQuery","useAdmissionClassMasterListQuery","useAddEnquiryMutation","useGetAllEnquiryListQuery","useGetOneEnquiryQuery","useOneEnquiryActionMutation","useDirectJoinFormAdmissionMutation","useSubmitAmountToFinanaceMutation","useGetAccountWithNumberQuery","useEditFeeStructureMutation","useConfirmStudentModeByAdmissionAdminMutation","useRejectStudentModeByAdmissionAdminMutation","useGetReceiptByAdmissionQuery","useReceiptActionByAdmissionMutation","useReApplyReceiptByStudentMutation","useGetFeeReceiptDetailQuery","useGetDocumentByAdmissionQuery","useAddDocumentByAdmissionMutation","useUpdateDocumentByAdmissionMutation","useDeleteDocumentByAdmissionMutation","useRefundAmountByAdmissionAdminMutation","useGetRefundByAdmissionQuery","useUpdateRemarkByAdmissionAdminMutation","useExportFilterDataByAdmissionMutation","useGetAllExcelByAdmissionAdminQuery","usePayAdmissionFeeByStudentMutation","useUpdateExcelByAdmissionAdminMutation","useDeleteExcelByAdmissionAdminMutation","useUpdateDocumentByAdmissionAdminMutation","useDeleteDocumentByAdmissionAdminMutation","useAddModeratorByAdmissionAdminMutation","useGetModeratorByAdmissionAdminQuery","useUpdateModeratorByAdmissionAdminMutation","useDeleteModeratorByAdmissionAdminMutation","useAdmissionGetSiteInfoQuery","useAdmissionUpdateSiteInfoMutation","useGetScholarshipListAdmissionQuery","useAddScholarshipAdmissionMutation","useGetOneScholarshipAdmissionQuery","useGetOneScholarshipAllCandidateAdmissionQuery","useOneSchloarshipActionAdmissionMutation","useAddScholarshipFundCorpusAdmissionMutation","useGetScholarshipFundCorpusAdmissionQuery","useAddMoreScholarshipFundCorpusAdmissionMutation","useUpdateApplicationByAdmissionMutation","useDeleteApplicationByAdmissionMutation","useForgetPasswordProtectionMutation","usePasswordProtectionToggleMutation","usePasswordProtectionLoginMutation","useUpdateFeeStructureByAppliationWiseMutation","useGetRefundedListByAdmissionQuery","useDirectJoinFormWithPayAdmissionMutation","useCollectSetOffAdmissionFeesMutation","useAdmissionDocsActionByStudentMutation","useScholarShipExcelByAdmissionMutation","useScholarShipExcelByInstituteMutation","useAddScholarNumberAdmissionMutation","useStudentDepartmentFeesQuery","useStudentBacklogFeesQuery","useInternalFeeReceiptQuery","useDropAdmissionFeesCardByAdmissionMutation","useAllApplicationByAdmissionQuery","useAddNewFeesByAdmissionMutation","useCollectNewAddFeesByAdmissionMutation","useGovernmentCollectNewAddFeesByAdmissionMutation","useAdmissionReminderMutation","useAdmissionInstallmentEditFeesByAdmissionMutation","useGetPendingCustomFilterByAdmissionQuery","useGetBatchStandardWithMultipleDepartmentMutation","useGetDailyCollectionByAdmissionQuery","useEditStudentGrNumberMutation","useAdmissionRevertBackSelectedToApplicationMutation","useAdmissionRevertBackDocsToSelectedMutation","useRemoveFeesInstallmentCardMutation","useTransferApplicatToOtherApplicationMutation","useExistStudentFeesExcelByAdmissionMutation","useStudentValidaForApplicationByAdmissionMutation","useStudentBankValidationByAdmissionMutation","useMarkCompleteToOngoingApplicationMutation","useGetReminderHistoryByAdmissionQuery","useGetOsReminderStudentListMutation","useStudentScholarshipNumberDublicateMutation","useAssignAdmissionHead","assignAdmissionHead","useEditAdmission","useGetAdmissionDetail","args","data","getAdmissionDetail","refetch","getAdmissionDetailRefetch","skip","useAllOngoingApp","allOngoingApp","allOngoingAppRefetch","useAllCompletedApp","allCompletedApp","allCompletedAppRefetch","useAllAppAtInstitute","allAppAtInstitute","allAppAtInstituteRefetch","useNewUserApply","useCreateNewApplication","createNewApplication","useGetAllRequest","getAllRequestList","getAllRequestListRefetch","useGetAllSelect","getAllSelectList","getAllSelectListRefetch","useGetAllConfirm","getAllConfirmList","getAllConfirmListRefetch","useGetAllConfirmMultiselect","getAllConfirmListMulitselect","getAllConfirmListMulitselectRefetch","useSelectAdmissionApplicant","selectAdmissionApplicant","useCancelAdmissionApplicant","cancelAdmissionApplicant","useStudentPayMode","studentPayMode","useApplicantAdmissionConfirm","confirmAppliacntAdmission","useApplicantAdmissionCancel","cancelAppliacntAdmission","useGetAllClasses","getAllClassesList","getAllClassesListRefetch","useApplicantAdmissionAllotSeat","applicantAllotSeat","useApplicationComplete","completeAdmissionApplication","useApplicantAdmissionRemainingFees","applicantRemainingFees","useOneApplicationDetail","oneApplicationDetail","oneApplicationDetailRefetch","apid","useGetAllDepartment","allDepartmentList","allDepartmentListRefetch","aid","useCancelStudentApplicationStatus","cancelApplication","useRenderStudentAdmissionFees","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","sid","useCollectApplicantDocs","collectDocs","useAdmissionBatchList","admissionBatchListRefetch","useAdmissionAllottedList","admissionAllottedListRefetch","useAdmissionCancelledList","admissionCancelledListRefetch","useAdmissionClassMasterList","admissionClassMasterListRefetch","did","useAddEnquiry","useGetAllEnquiryList","getAllEnquiryListRefetch","useGetOneEnquiry","oneEnquiryDetail","oneEnquiryDetailRefetch","eid","useOneEnquiryAction","useEditFeeStructure","useConfirmStudentModeByAdmissionAdmin","confirmStudentModeByAdmission","useRejectStudentModeByAdmissionAdmin","rejectStudentModeByAdmission","useReApplyReceiptByStudent","useGetFeeReceiptDetail","getFeeReceiptDetailRefetch","rid","useGetDocumentByAdmission","getDocumentByAdmissionRefetch","useRefundAmountByAdmissionAdmin","useUpdateRemarkByAdmissionAdmin","useExportFilterDataByAdmission","useGetAllExcelByAdmissionAdmin","getAllExcelByAdmissionAdminRefetch","usePayAdmissionFeeByStudent","useUpdateExcelByAdmissionAdmin","useDeleteExcelByAdmissionAdmin","useGetModeratorByAdmissionAdmin","getModeratorByAdmissionAdminRefetch","useAddModeratorByAdmissionAdmin","useUpdateModeratorByAdmissionAdmin","useDeleteModeratorByAdmissionAdmin","useAdmissionGetSiteInfo","admissionGetSiteInfoRefetch","useAdmissionUpdateSiteInfo","useUpdateApplicationByAdmission","useDeleteApplicationByAdmission","useUpdateFeeStructureByAppliationWise","useCollectSetOffAdmissionFees","useAdmissionDocsActionByStudent","useScholarShipExcelByInstitute","useAddScholarNumberAdmission","useStudentDepartmentFees","studentDepartmentFeesRefetch","useInternalFeeReceipt","internalFeeReceiptRefetch","useDropAdmissionFeesCardByAdmission","useAllApplicationByAdmission","allApplicationByAdmissionRefetch","useAddNewFeesByAdmission","useCollectNewAddFeesByAdmission","useGovernmentCollectNewAddFeesByAdmission","useAdmissionReminder","useAdmissionInstallmentEditFeesByAdmission","useGetPendingCustomFilterByAdmission","getPendingCustomFilterByAdmissionRefetch","useGetBatchStandardWithMultipleDepartment","useAllAdmissionRemaining","allAdmissionRemaining","useAllRemaining","allRemainingList","allRemainingListRefetch","useGetDailyCollectionByAdmission","getDailyCollectionByAdmissionRefetch","useEditStudentGrNumber","useAdmissionRevertBackSelectedToApplication","useAdmissionRevertBackDocsToSelected","useRemoveFeesInstallmentCard","useTransferApplicatToOtherApplication","useExistStudentFeesExcelByAdmission","useStudentValidaForApplicationByAdmission","useStudentBankValidationByAdmission","useMarkCompleteToOngoingApplication","useGetOsReminderStudentList","useStudentScholarshipNumberDublicate"],"sourceRoot":""}