{"version":3,"file":"static/js/906.3e6e4f7b.chunk.js","mappings":"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","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/InstituteForgetVerify.jsx","optimized/Auth/Verification/OtpResendTimer.jsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport {\n  useAuthUserForget,\n  useAuthUserForgetOtp,\n} from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport OtpResendTimer from \"../Verification/OtpResendTimer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst InstituteForgetVerify = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const getQuery = useLocation();\n  const [state, setState] = useState({\n    userOtpCode: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForgetOtp] = useAuthUserForgetOtp();\n  const [authUserForget] = useAuthUserForget();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, userOtpCode: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation) && getQuery.state?.uid) {\n      setDisabled((pre) => !pre);\n      authUserForgetOtp({\n        uid: getQuery.state?.uid,\n        otp: state,\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute) {\n            navigate(\"/institute/forget/password\", {\n              state: {\n                uid: response?.institute,\n              },\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid Otp\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onOtpResend = () => {\n    if (getQuery?.state?.phoneNumber) {\n      authUserForget({\n        forgot: {\n          username: getQuery?.state?.phoneNumber,\n        },\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.institute?._id) {\n            setSnackbar({\n              open: true,\n              msg: `Code will be resent on mobile number`,\n              variant: \"success\",\n            });\n          } else {\n            setSnackbar({\n              msg: \"Invalid username\",\n              open: true,\n              variant: \"error\",\n            });\n          }\n          setDisabled((pre) => !pre);\n        })\n        .catch((err) => {\n          setSnackbar({\n            msg: `Time out of request with reason ${err}`,\n            open: true,\n            variant: \"error\",\n          });\n          setDisabled((pre) => !pre);\n        });\n    }\n  };\n\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forget_password_verification_code\"\n        subTitle={`${t(\"verification_code_note\")} mobile number`}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            placeholder={t(\"verification_code\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-otp.svg`}\n            maxLength=\"4\"\n            validate={errorField[\"userOtpCode\"]}\n            name=\"userOtpCode\"\n            value={state.userOtpCode}\n            onChange={onChangeHandler}\n          />\n          <div className={style.auth_footer_container}>\n            <p className={style.auth_otp_text}>\n              {t(\"if_you_did_not_recieve_otp\")}\n              <OtpResendTimer onOtpResend={onOtpResend} />\n            </p>\n          </div>\n\n          <ButtonWithTypeSubmit type=\"submit\" buttonText={t(\"verify\")} />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default InstituteForgetVerify;\n","import React, { memo, useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport style from \"../Auth.module.css\";\n\nconst OtpResendTimer = ({ onOtpResend }) => {\n  const { t } = useTranslation();\n  const [timer, setTimer] = useState(\"\");\n  const Ref = useRef(null);\n  const getTimeRemaining = (e) => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    return {\n      total,\n      seconds,\n    };\n  };\n\n  const startTimer = (e) => {\n    let { total, seconds } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(seconds);\n    }\n  };\n\n  const clearTimer = (e) => {\n    setTimer(\"40\");\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 40);\n    return deadline;\n  };\n\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickResetTimer = () => {\n    clearTimer(getDeadTime());\n  };\n  const ResendOtpHandler = () => {\n    if (!timer) {\n      onOtpResend();\n      onClickResetTimer();\n    }\n  };\n  return (\n    <>\n      <span className={style.auth_otp_resend} onClick={ResendOtpHandler}>\n        {\" \"}\n        {t(\"resend\")}{\" \"}\n      </span>\n      <span className={style.auth_otp_resend}>{timer}</span>\n    </>\n  );\n};\n\nexport default memo(OtpResendTimer);\n"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","navigate","useNavigate","getQuery","useLocation","_useState","useState","userOtpCode","_useState2","_slicedToArray","state","setState","_useState3","_useState4","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","_useAuthUserForgetOtp","useAuthUserForgetOtp","authUserForgetOtp","_useAuthUserForget","useAuthUserForget","authUserForget","GetStarted","concat","fontSize","onSubmit","e","_getQuery$state","preventDefault","_getQuery$state2","validation","requiredField","existingRequiredField","uid","pre","otp","then","res","_res$data","response","decryption","data","encrypt","institute","catch","err","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","maxLength","validate","name","value","onChange","prev","_objectSpread","target","auth_footer_container","auth_otp_text","OtpResendTimer","onOtpResend","_getQuery$state3","_getQuery$state4","phoneNumber","forgot","username","_res$data2","_response$institute","_id","ButtonWithTypeSubmit","type","buttonText","NotifyEvent","eventState","eventStateHandler","timer","setTimer","Ref","useRef","startTimer","_getTimeRemaining","total","Date","parse","seconds","Math","floor","getTimeRemaining","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","auth_otp_resend","onClick"],"sourceRoot":""}