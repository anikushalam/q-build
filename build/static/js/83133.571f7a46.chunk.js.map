{"version":3,"file":"static/js/83133.571f7a46.chunk.js","mappings":"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","sources":["ProfileSetting/User/MainBody/Stats/SettingBody/Account/AccountDelete.jsx","optimized/Auth/DeleteAccount/DeleteAccount.jsx","optimized/Auth/Login/LoginFormWithMobile.jsx","optimized/Auth/Login/LoginFormWithUserName.jsx","webpack://mithkal-qviple/./src/optimized/Ui/Auth/AuthFormField.module.css?9d27","optimized/Ui/Auth/AuthFormFieldWithIcon.jsx","optimized/Validation/functions/checkingRequiredField.js","webpack://mithkal-qviple/./src/ProfileSetting/User/MainBody/Stats/SettingBody/Account/DeleteAcnt.module.css?919b"],"sourcesContent":["import { useState } from \"react\";\nimport style from \"./DeleteAcnt.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router\";\nimport { Notfication } from \"../../../../../../validation/Snackbar\";\nimport { useUserDeleteAccountFromQviple } from \"../../../../../../hooks/setting-api\";\nimport QLoader from \"../../../../../../Loader/QLoader\";\n\nfunction AccountDelete({ dashboardData, userId, isApk }) {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [passwordData, setPasswordData] = useState({\n    password: \"\",\n  });\n  const [userDeleteAccountFromQviple] = useUserDeleteAccountFromQviple();\n  const [disabled, setDisabled] = useState(false);\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const onDeleteAccount = () => {\n    if (userId || dashboardData?.user?._id) {\n      setDisabled((pre) => !pre);\n      userDeleteAccountFromQviple({\n        id: userId ? userId : dashboardData?.user?._id,\n        valid_pass: passwordData.password,\n      })\n        .then((res) => {\n          console.info(\"sdlfngjkfbkjgs\", res.data);\n          if (res?.data?.dynamic) {\n            setNotificationState({\n              msg: res.data.dynamic,\n              run: true,\n            });\n            setDisabled((pre) => !pre);\n          } else {\n            setDisabled((pre) => !pre);\n            localStorage.clear();\n            window.location.replace(\"/\");\n          }\n        })\n        .catch({});\n    }\n  };\n  return (\n    <>\n      <div\n        className={style.settingBody}\n        // style={{\n        //   border: isApk ? \"none\" : \"auto\",\n        // }}\n      >\n        <h6>{t(\"deleting_your_qviple_account\")}</h6>\n        <p>{t(\"deleting_your_qviple_account_note_1\")}</p>\n        <p>{t(\"deleting_your_qviple_account_note_2\")}</p>\n\n        <div className={style.inputContainer}>\n          <label>{t(\"password\")}</label>\n          <input\n            type=\"password\"\n            value={passwordData.password}\n            minLength={8}\n            onChange={(e) =>\n              setPasswordData({ ...passwordData, password: e.target.value })\n            }\n          />\n        </div>\n\n        {passwordData.password?.length >= 8 ? (\n          <button\n            className={`${style.btn}`}\n            type=\"button\"\n            onClick={onDeleteAccount}\n          >\n            {t(\"delete\")}\n          </button>\n        ) : (\n          <button type=\"button\" className={`${style.btn1}`} disabled>\n            {t(\"delete\")}\n          </button>\n        )}\n      </div>\n      {notificationState.run && (\n        <Notfication\n          msg={notificationState.msg}\n          run={notificationState.run}\n          setRun={() => setNotificationState({ msg: \"\", run: false })}\n          postiton=\"bottom\"\n          type=\"error\"\n        />\n      )}\n      {disabled && <QLoader />}\n    </>\n  );\n}\n\nexport default AccountDelete;\n","import GetStarted from \"../GetStarted\";\nimport style from \"../Auth.module.css\";\nimport { useState } from \"react\";\nimport LoginFormWithMobile from \"../Login/LoginFormWithMobile\";\nimport LoginFormWithUserName from \"../Login/LoginFormWithUserName\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport AccountDelete from \"../../../ProfileSetting/User/MainBody/Stats/SettingBody/Account/AccountDelete\";\nconst userMobile = \"USER_MOBILE\";\nconst userName = \"USER_NAME\";\nconst DeleteAccount = () => {\n  const [searchParams] = useSearchParams();\n  const getQuery = useLocation();\n  const [state, setState] = useState(\"USER_MOBILE\");\n  const onUser = () => {\n    setState(userMobile);\n  };\n  const onUserName = () => {\n    setState(userName);\n  };\n  return (\n    <>\n      {searchParams.get(\"type\") === \"confirm\" ? (\n        <div className={style.auth_delete_container}>\n          <AccountDelete userId={getQuery.state?.id} isApk />\n        </div>\n      ) : (\n        <GetStarted>\n          <div className={style.auth_card_wrapper}>\n            <>\n              {state === userMobile ? (\n                <LoginFormWithMobile\n                  onUserName={onUserName}\n                  accessFrom=\"DELETED_ACCOUNT\"\n                />\n              ) : state === userName ? (\n                <LoginFormWithUserName\n                  isUser\n                  onUserMobile={onUser}\n                  accessFrom=\"DELETED_ACCOUNT\"\n                />\n              ) : null}\n            </>\n          </div>\n        </GetStarted>\n      )}\n    </>\n  );\n};\n\nexport default DeleteAccount;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthUserNumber } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  invalidateAuthEmailOrMobile,\n  typeOfAuth,\n} from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nconst LoginFormWithMobile = ({ onUserName, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [authUserNumber] = useAuthUserNumber();\n  const [state, setState] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n\n  const onChangeHandler = (e) => {\n    setState(e.target.value);\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (state) {\n      setDisabled((pre) => !pre);\n      authUserNumber({\n        userPhoneNumber: state,\n        status: \"Not Verified\",\n        is_qid: invalidateAuthEmailOrMobile(state),\n      })\n        .then((res) => {\n          let response = decryption(res?.data?.encrypt);\n          if (response?.userPhoneNumber) {\n            navigate(\"/verify\", {\n              state: {\n                phoneNumber: response?.ePhone,\n                type:\n                  typeOfAuth(state) === \"qviple id\"\n                    ? \"mobile number\"\n                    : typeOfAuth(state),\n                accessFrom: accessFrom,\n                landingPage: {\n                  appId: searchParams?.get(\"goaid\"),\n                  instituteId: searchParams?.get(\"goid\"),\n                  departmentId: searchParams?.get(\"godid\"),\n                  applicationName: searchParams?.get(\"gon\"),\n                  hostelId: searchParams?.get(\"gohid\"),\n                  isHostel: searchParams?.get(\"gov\"),\n                },\n              },\n            });\n            setDisabled((pre) => !pre);\n          }\n        })\n        .catch(() => {\n          setSnackbar({\n            open: true,\n            msg: \"Time out of request...\",\n            variant: \"error\",\n          });\n        });\n    } else {\n      setErrorField({\n        state: \"* required\",\n      });\n    }\n  };\n  return (\n    <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n      <AuthFormFieldWithIcon\n        label={t(\"user_email_number_qviple_id\")}\n        placeholder={t(\"user_email_number_qviple_id_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-flag.svg`}\n        validate={errorField[\"state\"]}\n        name=\"mobile_number\"\n        value={state}\n        onChange={onChangeHandler}\n      />\n      <p className={style.auth_privacy_and_policy}>\n        {t(\"mobile_login_note\")}{\" \"}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/terms/condition\">{t(\"terms_condition\")}</a>\n        </span>{\" \"}\n        {t(\"and\")}\n        <span className={style.auth_privacy_and_policy_link}>\n          <a href=\"/q/privacy/policy\">{t(\"privacy_policy\")}</a>\n        </span>\n      </p>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"send_otp\")}\n        disabled={disabled}\n      />\n      <div className={style.auth_footer_container}>\n        <p className={style.auth_forget_text} onClick={onUserName}>\n          {t(\"login_with_user_name\")}\n        </p>\n      </div>\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithMobile;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport style from \"../Auth.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport { useAuthLogin } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useLogin } from \"../hooks/use-login\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\nimport { useNavigate } from \"react-router-dom\";\nconst LoginFormWithUserName = ({ isUser, onUserMobile, accessFrom }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    insUserName: \"\",\n    insPassword: \"\",\n  });\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authLogin] = useAuthLogin();\n  const { userDispatchAction, instituteDispatchAction } = useLogin();\n  const onChangeHandler = (e) => {\n    setState((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.insUserName))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authLogin({\n          login: state,\n        })\n          .then((res) => {\n            const response = decryption(res?.data?.encrypt);\n            // console.info(\"response\", response);\n\n            if (response?.login) {\n              if (response?.user)\n                userDispatchAction({\n                  token: response?.token,\n                  user: response?.user,\n                  isUniversal: response?.user?.is_universal,\n                  phoneNumber: response?.user?.code_arr,\n                  u_name:\n                    response?.user?.userPhoneNumber ||\n                    response?.user?.userEmail,\n                  accessFrom: accessFrom,\n                });\n              else\n                instituteDispatchAction({\n                  token: response?.token,\n                  institute: response?.institute,\n                  isUniversal: response?.institute?.is_universal,\n                  main_role: response?.main_role,\n                });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Credentials\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n\n  const onForgetHandler = () => {\n    let url = \"\";\n    if (isUser) url = \"/user/forget\";\n    else url = \"/institute/forget\";\n    navigate(url);\n  };\n  const onInstituteAccount = () => {\n    navigate(\"/institute\");\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <AuthFormFieldWithIcon\n        label={t(\"username\")}\n        placeholder={t(\"username_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n        validate={errorField[\"insUserName\"]}\n        name=\"insUserName\"\n        value={state.insUserName}\n        onChange={onChangeHandler}\n      />\n      <AuthFormFieldWithIcon\n        label={t(\"password\")}\n        placeholder={t(\"password_placeholder\")}\n        fieldIconUrl={`${assestsAuthUrl}/auth-password.svg`}\n        validate={errorField[\"insPassword\"]}\n        name=\"insPassword\"\n        value={state.insPassword}\n        onChange={onChangeHandler}\n        type=\"password\"\n        isPassword\n      />\n\n      <div className={style.auth_forget_container}>\n        <p className={style.auth_forget_text} onClick={onForgetHandler}>\n          {t(\"forgot_password\")}\n        </p>\n      </div>\n      <ButtonWithTypeSubmit\n        type=\"submit\"\n        buttonText={t(\"login\")}\n        disabled={disabled}\n      />\n      {isUser ? (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onUserMobile}>\n            {t(\"continue_with_mobile_no\")}\n          </p>\n        </div>\n      ) : (\n        <div className={style.auth_footer_container}>\n          <p className={style.auth_forget_text} onClick={onInstituteAccount}>\n            {t(\"new_to_qviple\")} {t(\"signup\")}\n          </p>\n        </div>\n      )}\n      <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n    </form>\n  );\n};\n\nexport default LoginFormWithUserName;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth_input_container\":\"AuthFormField_auth_input_container__4XCiB\",\"auth_input_container_error\":\"AuthFormField_auth_input_container_error__ho7RI\",\"auth_input_container_inner\":\"AuthFormField_auth_input_container_inner__3YVnH\",\"auth_input_image_container\":\"AuthFormField_auth_input_image_container__vkGgA\",\"auth_input_label\":\"AuthFormField_auth_input_label__YhCLh\",\"auth_input_field\":\"AuthFormField_auth_input_field__6VdCa\",\"auth_label_error\":\"AuthFormField_auth_label_error__Wcuw8\",\"auth_passward_icon\":\"AuthFormField_auth_passward_icon__VDFPG\"};","import React, { useState } from \"react\";\nimport style from \"./AuthFormField.module.css\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nconst AuthFormFieldWithIcon = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  minLength,\n  maxLength,\n  validate,\n  fieldIconUrl,\n  isPassword,\n}) => {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const onToggle = () => {\n    setPasswordVisible((prev) => !prev);\n  };\n  return (\n    <>\n      {label ? (\n        <label htmlFor={name} className={style.auth_input_label}>\n          {label}\n          {validate ? <span className={style.auth_label_error}> *</span> : null}\n        </label>\n      ) : null}\n      <div\n        className={\n          validate\n            ? style.auth_input_container_error\n            : style.auth_input_container\n        }\n      >\n        <div className={style.auth_input_container_inner}>\n          <div className={style.auth_input_image_container}>\n            <img src={fieldIconUrl} alt=\"input icon\" />\n          </div>\n          {type === \"password\" ? (\n            <input\n              className={style.auth_input_field}\n              type={passwordVisible ? \"text\" : \"password\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          ) : (\n            <input\n              className={style.auth_input_field}\n              type={type ?? \"text\"}\n              name={name}\n              maxLength={maxLength}\n              minLength={minLength}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n            />\n          )}\n\n          {isPassword ? (\n            <img\n              alt=\"password icon\"\n              className={style.auth_passward_icon}\n              src={\n                passwordVisible\n                  ? `${assestsAuthUrl}/auth-close-password.svg`\n                  : `${assestsAuthUrl}/auth-open-password.svg`\n              }\n              onClick={onToggle}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AuthFormFieldWithIcon;\n","export const requiredField = (data, optional = []) => {\n  let error = {};\n  for (let obj in data) {\n    if (optional?.includes(obj)) {\n    } else {\n      if (!data[obj]) error[obj] = \"* required\";\n    }\n  }\n  return error;\n};\n\nexport const existingRequiredField = (required = {}) => {\n  for (let req in required) {\n    return false;\n  }\n  return true;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"settingBody\":\"DeleteAcnt_settingBody__5Jnjq\",\"inputContainer\":\"DeleteAcnt_inputContainer__LhkiC\",\"btn\":\"DeleteAcnt_btn__acudM\",\"btn1\":\"DeleteAcnt_btn1__bbdC0\"};"],"names":["_ref","_passwordData$passwor","dashboardData","userId","isApk","useNavigate","t","useTranslation","passwordData","setPasswordData","useState","password","userDeleteAccountFromQviple","useUserDeleteAccountFromQviple","disabled","setDisabled","notificationState","setNotificationState","msg","run","_jsxs","_Fragment","children","className","style","settingBody","_jsx","inputContainer","type","value","minLength","onChange","e","target","length","concat","btn","onClick","onDeleteAccount","_dashboardData$user","_dashboardData$user2","user","_id","pre","id","valid_pass","then","res","_res$data","console","info","data","dynamic","localStorage","clear","window","location","replace","catch","btn1","Notfication","setRun","postiton","QLoader","userMobile","userName","DeleteAccount","_getQuery$state","searchParams","useSearchParams","getQuery","useLocation","state","setState","get","auth_delete_container","AccountDelete","GetStarted","auth_card_wrapper","LoginFormWithMobile","onUserName","accessFrom","LoginFormWithUserName","isUser","onUserMobile","onUser","navigate","authUserNumber","useAuthUserNumber","errorField","setErrorField","snackbar","setSnackbar","open","variant","onSubmit","preventDefault","userPhoneNumber","status","is_qid","invalidateAuthEmailOrMobile","response","decryption","encrypt","phoneNumber","ePhone","typeOfAuth","landingPage","appId","instituteId","departmentId","applicationName","hostelId","isHostel","auth_login_form","AuthFormFieldWithIcon","label","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","auth_privacy_and_policy","auth_privacy_and_policy_link","href","ButtonWithTypeSubmit","buttonText","auth_footer_container","auth_forget_text","NotifyEvent","eventState","eventStateHandler","insUserName","insPassword","authLogin","useAuthLogin","userDispatchAction","instituteDispatchAction","useLogin","onChangeHandler","prev","validation","requiredField","existingRequiredField","invalidateAuthUsername","login","_response$user","_response$user2","_response$user3","_response$user4","_response$institute","token","isUniversal","is_universal","code_arr","u_name","userEmail","institute","main_role","err","isPassword","auth_forget_container","onForgetHandler","url","onInstituteAccount","maxLength","passwordVisible","setPasswordVisible","htmlFor","src","alt","onToggle","optional","arguments","undefined","error","obj","includes","required","req"],"sourceRoot":""}