{"version":3,"file":"static/js/43317.f6aa93eb.chunk.js","mappings":"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","sources":["optimized/Services/AdmissionManager/admission_manager_query_mutation_function.js","optimized/Services/AdmissionManager/admissionManagerApiDynamic.js","optimized/Hooks/ApiHooks/AdmissionManager/admission-manager-api.js"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { DELETE, PATCH, POST } from \"../UrlConfig/MethodType\";\n\nexport const admissionActivateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/ins/${data.instituteId}/admission/query`,\n      method: POST,\n      body: data.activateModule,\n    }),\n  });\n};\n\nexport const admissionUpdateModuleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/edit/staff/admission/staff/${data.osid}?nsid=${data.nsid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// dashboard\nexport const admissionDashboardMasterFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/dashboard/query?mod_id=${data.mod_id}`,\n    providesTags: [\"Cash_finance\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.admission;\n    },\n  });\n};\n\n// admission fund tab\nexport const admissionCashToFinanceFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/finance/${data.aid}/admission/request`,\n      method: POST,\n      body: data.submitAmount,\n    }),\n    invalidatesTags: [\"Cash_finance\"],\n  });\n};\n\n// offline payment verification\nexport const admissionPaymentVerifyListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/receipts/by?page=${data.page}&limit=${data.limit}&filter_by=${data.filterBy}&over_filter=${data.over_filter}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_requests,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_requests,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPaymentVerifyActionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/one/receipts/${data.rid}/status/decheque/query?reqId=${data.reqId}&status=${data.status}`,\n      method: PATCH,\n      body: data.receiptAction,\n    }),\n  });\n};\n\n// admission required document\nexport const admissionDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/document/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_docs,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_docs,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/document/flow`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionUpdateDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/edit/document/flow`,\n      method: PATCH,\n      body: data.editDocument,\n    }),\n  });\n};\nexport const admissionRemoveDocumentFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/document/${data.did}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission excel export\nexport const admissionExportExcelListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/export/excel/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_excel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_excel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionEditExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/edit`,\n      method: PATCH,\n      body: data.excelUpdate,\n    }),\n  });\n};\nexport const admissionRemoveExportExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/export/excel/${data.xlsxId}/destroy/query`,\n      method: DELETE,\n    }),\n  });\n};\nexport const admissionExportFilterExcelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/pending/fee/${data.aid}?gender=${data.gender}&category=${data.caste}&is_all=${data.is_all}&all_depart=${data.all_depart}&batch_status=${data.batch_status}`,\n      method: PATCH,\n      body: data.exportData,\n    }),\n  });\n};\n// admission moderator\nexport const admissionModeratorListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/role/permission/${data.aid}/all/moderator?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_mods,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_mods,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/new/app/mod?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: POST,\n      body: data.addModerator,\n    }),\n  });\n};\n\nexport const admissionUpdateModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/update/app/mod/${data.modId}?active_tab=${\n        data?.active_tab ?? \"\"\n      }`,\n      method: PATCH,\n      body: data.updateModerator,\n    }),\n  });\n};\n\nexport const admissionRemoveModeratorFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/role/permission/${data.aid}/destroy/app/mod/${data.modId}`,\n      method: DELETE,\n    }),\n  });\n};\n\n// admission pending fees\nexport const admissionPendingFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/remaining/applicable/array?page=${\n        data.page\n      }&limit=${data.limit}&search=${data.search}&flow=${\n        data.flow ?? \"Applicable_Fees_Query\"\n      }`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.remain,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.remain,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionPendingFeesReminderHistoryFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/extra/all/filtered/alarm/${data.id}/query?page=${data.page}&limit=${\n        data.limit\n      }&search=${data.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_message,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_message,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionPendingFeesOsStudentListFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/all/outstanding/query`,\n      method: PATCH,\n      body: data.pendingData,\n    }),\n  });\n};\n\nexport const admissionPendingFeesReminderFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/trigger/alarm?alarm_mode=${data.alarm_mode}`,\n      method: POST,\n      body: data.reminderData,\n    }),\n  });\n};\n\n// admission excess fees\nexport const admissionExcessFeeNotRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/refund/array?page=${data.page}&limit=${\n        data.limit\n      }&search=${data?.search ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refund_list,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refund_list,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeRefundedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/refunded/array?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_refunded,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_refunded,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionExcessFeeNotRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/excess/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionExcessFeeRefundedListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/refund/fees/export/query?aid=${data.aid}`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission tab controller\nexport const admissionTabControllerFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/manage/tab/${data?.aid}`,\n      method: PATCH,\n      body: data.tabManage,\n    }),\n  });\n};\n\n// admission completed application\nexport const admissionCompletedApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/completed/application/detail?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.completed,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.completed,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionCompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/complete`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionIncompleteApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/application/incomplete`,\n      method: PATCH,\n    }),\n  });\n};\n\n// admission ongoing admission\nexport const admissionOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (ad) =>\n      `/v2/admission/${ad.aid}/all/ongoing/application?page=${ad.page}&limit=${ad.limit}&search=${ad.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let res = decryption(response?.encrypt);\n\n      if (arg?.search)\n        return {\n          search: true,\n          list: res?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: res?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCreateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/new/application`,\n      method: POST,\n      body: data.application,\n    }),\n  });\n};\n\nexport const admissionUpdateApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/${data.appId}`,\n      method: PATCH,\n      body: data.updateApplication,\n    }),\n  });\n};\nexport const admissionRemoveApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/destroy/${data.appId}`,\n      method: DELETE,\n    }),\n  });\n};\n// admission one application\nexport const admissionOneOngoingApplicationFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/query`,\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      return dect?.oneApply;\n    },\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationRequestFunction = (builder) => {\n  return builder.query({\n    query: (req) =>\n      `/v2/admission/${req.appId}/request/application?page=${req.page}&limit=${req.limit}&search=${req.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.request,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.request,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationSelectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/select`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationRejectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/cancel/app`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/application/export/${data.appId}?flow=${data.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/selected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationDocumentCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/docs`,\n      method: POST,\n      body: data.document,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/revert/back/select/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDocumentEditStructureFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/student/${data.sid}/edit/structure`,\n      method: PATCH,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/fee/collected/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationFeesCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${\n        data.appId\n      }/pay/offline/confirm?receipt_status=${data?.receipt_status ?? \"\"}`,\n      method: POST,\n      body: data.collect,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationFeesRevertFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/collect/revert/back/docs/query`,\n      method: POST,\n      body: data.revert,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationConfirmFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllConfirmListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/confirmed/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.confirm,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationConfirmReviewFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data?.appId}/student/review/query`,\n      method: PATCH,\n      body: data.review,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.review,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.review,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationAllReviewListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/review/application/all/payload`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.review,\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewSortFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/by/review/array/${data.appId}?sort_query=${data.sort_query}`,\n      method: PATCH,\n    }),\n  });\n};\nexport const admissionOngoingApplicationReviewBatchFunction = (builder) => {\n  return builder.query({\n    query: (appId) => `/v2/admission/${appId}/application/batch`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.batch,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationReviewClassesFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/application/class/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.classes,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.classes,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionOngoingApplicationReviewAllotFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/student/${data.appId}/allot/class/${data.cid}`,\n      method: POST,\n      body: data.applicant,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationReviewCancelFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/allotted/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.allot,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.allot,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOngoingApplicationAllottmentCancelFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sid}/allotted/student/${data.appId}/pay/refund`,\n      method: POST,\n      body: data.payment,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationCancelledFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.appId}/cancelled/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionTransferApplicatToOtherApplicationFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.appId}/transfer/apps/query`,\n      method: PATCH,\n      body: data.transferApplicantData,\n    }),\n  });\n};\n\nexport const admissionOngoingApplicationDailyCollectFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/feed/filter/by/date/collection/${data?.appId}/query?valid_date=${data.valid_date}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.day_wise;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionApplicantCancelledListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/cancel/app/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.cancel,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.cancel,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionCancelledListExportFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/feed/filter/${data.aid}/cancel/export/query?all_depart=${data.all_depart}&batch_status=${data.batch_status}&timeline=${data.timeline}&timeline_content=${data.timeline_content}&from=${data.from}&to=${data.to}&bank=${data.bank}`,\n      method: \"PATCH\",\n      body: data?.pendingData,\n    }),\n  });\n};\n\n// for admission readmission related\nexport const admissionReadmissionListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/confirmed/readmission/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionReadmissionCollectFeesFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/fees/student/${data.sid}/re/admission`,\n      method: PATCH,\n      body: data.collect,\n    }),\n  });\n};\n\n//  for one application form setting///\n\nexport const admissionStudentAddSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/section/student/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentSectionAddChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/new/form/${data.formId}/checklist/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentRearrangeSectionFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/shuffle/form/${data.formId}/section/student/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentUpdateSectionChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionStudentFormDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/one/form/${data.formId}/section/query`,\n    transformResponse: (response) => response?.section,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionStudentToggleChecklistFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/edit/form/${data.formId}/section/checklist/query`,\n      method: PATCH,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// for optional subject\nexport const admissionAddOuterGorupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/add/subject/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionOuterGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// DO NOT USE\nexport const admissionSubjectGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.osid}/one/subject/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionAddSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/add/subject/group/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionSubGroupListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.sgid}/all/subject/group/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_group_select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_group_select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionOneSubGroupDetailFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/v2/admission/${data.osid}/one/subject/group/query`,\n    providesTags: [\"Nested_Criteria_Detail\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => response?.group,\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionSubGroupAddSubjectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.ssid}/add/subject/group/select/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n    invalidatesTags: [\"Nested_Criteria_Detail\"],\n  });\n};\n\nexport const admissionInstituteAllSubjectListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/subject/list/query?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.all_subjects,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.all_subjects,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const admissionRemoveOuterGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/delete/subject/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\nexport const admissionRemoveSubjectGroupFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.sgid}/delete/subject/group/query`,\n      method: DELETE,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// add to pin in single landing page\nexport const institutePinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\nexport const instituteUnPinApplicationFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/v2/admission/${data.aid}/un/pinned/application/query`,\n      method: POST,\n      body: data.bodyParameter,\n    }),\n  });\n};\n\n// all application\nexport const instituteAllApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.id}/all/ongoing/application/pinned?page=${data.page}&limit=${data.limit}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      let dect = decryption(response?.encrypt);\n      // console.info(\"sjhdfvsdfvbsd\", dect?.ongoing);\n      // let arr = [];\n      // let arr = [...dect?.depend, ...dect?.independ];\n      if (arg?.search)\n        return {\n          search: true,\n          list: dect?.ongoing,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: dect?.ongoing,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// admission merged docs and collect fees list\nexport const admissionMergedApplicationDocumentListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/docs/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.select,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.select,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationFeesListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/fees/collect/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.fees,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.fees,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const admissionMergedApplicationConfirmedListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/admission/${data.aid}/all/merged/ongoing/confirm/application?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.confirm,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.confirm,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\n// ============AFTER MOVE =================\n// this api that move, when their part is optimzed.\nexport const departmentBatchAllClassFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/v2/ins/batch-detail/${data.bid}?page=${data.page}&limit=${data.limit}&search=${data.search}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response, meta, arg) => {\n      if (arg?.search)\n        return {\n          search: true,\n          list: response?.batch?.classroom,\n        };\n      else\n        return {\n          page: arg?.page,\n          list: response?.batch?.classroom,\n        };\n    },\n    merge: (currentCache, incomingData) => {\n      if (incomingData?.search) return incomingData;\n      else if (incomingData?.page === 1) return incomingData;\n      else return void currentCache?.list?.push(...incomingData?.list);\n    },\n\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n","import { admissionManagerApi } from \"./admissionManagerApi\";\nimport {\n  admissionActivateModuleFunction,\n  admissionUpdateModuleFunction,\n  admissionAddDocumentFunction,\n  admissionAddModeratorFunction,\n  admissionCompleteApplicationFunction,\n  admissionCompletedApplicationListFunction,\n  admissionDashboardMasterFunction,\n  admissionDocumentListFunction,\n  admissionEditExportExcelFunction,\n  admissionExcessFeeNotRefundedListFunction,\n  admissionExcessFeeRefundedListFunction,\n  admissionExportExcelListFunction,\n  admissionIncompleteApplicationFunction,\n  admissionModeratorListFunction,\n  admissionPaymentVerifyActionFunction,\n  admissionPaymentVerifyListFunction,\n  admissionPendingFeesOsStudentListFunction,\n  admissionPendingFeesReminderFunction,\n  admissionPendingFeesReminderHistoryFunction,\n  admissionRemoveDocumentFunction,\n  admissionRemoveExportExcelFunction,\n  admissionRemoveModeratorFunction,\n  admissionUpdateDocumentFunction,\n  admissionUpdateModeratorFunction,\n  admissionCashToFinanceFunction,\n  admissionExcessFeeNotRefundedListExportFunction,\n  admissionExcessFeeRefundedListExportFunction,\n  admissionTabControllerFunction,\n  admissionExportFilterExcelFunction,\n  admissionOngoingApplicationFunction,\n  admissionCreateApplicationFunction,\n  admissionUpdateApplicationFunction,\n  admissionRemoveApplicationFunction,\n  admissionOneOngoingApplicationFunction,\n  admissionOngoingApplicationRequestFunction,\n  admissionOngoingApplicationSelectFunction,\n  admissionOngoingApplicationRejectFunction,\n  admissionOngoingApplicationExportFunction,\n  admissionOngoingApplicationDocumentFunction,\n  admissionOngoingApplicationDocumentCollectFunction,\n  admissionOngoingApplicationDocumentRevertFunction,\n  admissionOngoingApplicationDocumentEditStructureFunction,\n  admissionOngoingApplicationFeesFunction,\n  admissionOngoingApplicationFeesCollectFunction,\n  admissionOngoingApplicationFeesRevertFunction,\n  admissionOngoingApplicationConfirmFunction,\n  admissionOngoingApplicationAllConfirmListFunction,\n  admissionOngoingApplicationConfirmReviewFunction,\n  admissionOngoingApplicationReviewFunction,\n  admissionOngoingApplicationAllReviewListFunction,\n  admissionOngoingApplicationReviewSortFunction,\n  admissionOngoingApplicationReviewBatchFunction,\n  admissionOngoingApplicationReviewClassesFunction,\n  admissionOngoingApplicationReviewAllotFunction,\n  admissionOngoingApplicationReviewCancelFunction,\n  admissionOngoingApplicationAllottmentFunction,\n  admissionOngoingApplicationAllottmentCancelFunction,\n  admissionOngoingApplicationCancelledFunction,\n  admissionTransferApplicatToOtherApplicationFunction,\n  admissionOngoingApplicationDailyCollectFunction,\n  admissionApplicantCancelledListFunction,\n  admissionCancelledListExportFunction,\n  admissionPendingFeesFunction,\n  departmentBatchAllClassFunction,\n  admissionReadmissionListFunction,\n  admissionReadmissionConfirmedListFunction,\n  admissionReadmissionCollectFeesFunction,\n  admissionStudentAddSectionFunction,\n  admissionStudentFormDetailFunction,\n  admissionStudentRearrangeSectionFunction,\n  admissionStudentSectionAddChecklistFunction,\n  admissionStudentUpdateSectionChecklistFunction,\n  admissionStudentToggleChecklistFunction,\n  admissionAddOuterGorupFunction,\n  admissionOuterGroupListFunction,\n  admissionSubjectGroupListFunction,\n  admissionAddSubjectGroupFunction,\n  admissionSubGroupListFunction,\n  admissionOneSubGroupDetailFunction,\n  admissionSubGroupAddSubjectFunction,\n  admissionInstituteAllSubjectListFunction,\n  admissionRemoveOuterGroupFunction,\n  admissionRemoveSubjectGroupFunction,\n  institutePinApplicationFunction,\n  instituteUnPinApplicationFunction,\n  instituteAllApplicationListFunction,\n  admissionMergedApplicationDocumentListFunction,\n  admissionMergedApplicationFeesListFunction,\n  admissionMergedApplicationConfirmedListFunction,\n} from \"./admission_manager_query_mutation_function\";\n\nconst admissionManagerApiDynamic = admissionManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    admissionActivateModule: admissionActivateModuleFunction(builder),\n    admissionUpdateModule: admissionUpdateModuleFunction(builder),\n    admissionDashboardMaster: admissionDashboardMasterFunction(builder),\n    admissionCashToFinance: admissionCashToFinanceFunction(builder),\n    admissionPaymentVerifyList: admissionPaymentVerifyListFunction(builder),\n    admissionPaymentVerifyAction: admissionPaymentVerifyActionFunction(builder),\n    admissionDocumentList: admissionDocumentListFunction(builder),\n    admissionAddDocument: admissionAddDocumentFunction(builder),\n    admissionUpdateDocument: admissionUpdateDocumentFunction(builder),\n    admissionRemoveDocument: admissionRemoveDocumentFunction(builder),\n    admissionExportExcelList: admissionExportExcelListFunction(builder),\n    admissionEditExportExcel: admissionEditExportExcelFunction(builder),\n    admissionRemoveExportExcel: admissionRemoveExportExcelFunction(builder),\n    admissionModeratorList: admissionModeratorListFunction(builder),\n    admissionAddModerator: admissionAddModeratorFunction(builder),\n    admissionUpdateModerator: admissionUpdateModeratorFunction(builder),\n    admissionRemoveModerator: admissionRemoveModeratorFunction(builder),\n    admissionPendingFeesReminderHistory:\n      admissionPendingFeesReminderHistoryFunction(builder),\n    admissionPendingFeesOsStudentList:\n      admissionPendingFeesOsStudentListFunction(builder),\n    admissionPendingFeesReminder: admissionPendingFeesReminderFunction(builder),\n\n    admissionExcessFeeNotRefundedList:\n      admissionExcessFeeNotRefundedListFunction(builder),\n    admissionExcessFeeRefundedList:\n      admissionExcessFeeRefundedListFunction(builder),\n    admissionCompletedApplicationList:\n      admissionCompletedApplicationListFunction(builder),\n    admissionCompleteApplication: admissionCompleteApplicationFunction(builder),\n    admissionIncompleteApplication:\n      admissionIncompleteApplicationFunction(builder),\n\n    admissionExcessFeeNotRefundedListExport:\n      admissionExcessFeeNotRefundedListExportFunction(builder),\n    admissionExcessFeeRefundedListExport:\n      admissionExcessFeeRefundedListExportFunction(builder),\n    admissionTabController: admissionTabControllerFunction(builder),\n    admissionExportFilterExcel: admissionExportFilterExcelFunction(builder),\n    admissionOngoingApplication: admissionOngoingApplicationFunction(builder),\n    admissionCreateApplication: admissionCreateApplicationFunction(builder),\n    admissionUpdateApplication: admissionUpdateApplicationFunction(builder),\n    admissionRemoveApplication: admissionRemoveApplicationFunction(builder),\n    admissionOneOngoingApplication:\n      admissionOneOngoingApplicationFunction(builder),\n    admissionOngoingApplicationRequest:\n      admissionOngoingApplicationRequestFunction(builder),\n    admissionOngoingApplicationSelect:\n      admissionOngoingApplicationSelectFunction(builder),\n    admissionOngoingApplicationReject:\n      admissionOngoingApplicationRejectFunction(builder),\n    admissionOngoingApplicationExport:\n      admissionOngoingApplicationExportFunction(builder),\n    admissionOngoingApplicationDocument:\n      admissionOngoingApplicationDocumentFunction(builder),\n    admissionOngoingApplicationDocumentCollect:\n      admissionOngoingApplicationDocumentCollectFunction(builder),\n    admissionOngoingApplicationDocumentRevert:\n      admissionOngoingApplicationDocumentRevertFunction(builder),\n    admissionOngoingApplicationDocumentEditStructure:\n      admissionOngoingApplicationDocumentEditStructureFunction(builder),\n    admissionOngoingApplicationFees:\n      admissionOngoingApplicationFeesFunction(builder),\n    admissionOngoingApplicationFeesCollect:\n      admissionOngoingApplicationFeesCollectFunction(builder),\n    admissionOngoingApplicationFeesRevert:\n      admissionOngoingApplicationFeesRevertFunction(builder),\n    admissionOngoingApplicationConfirm:\n      admissionOngoingApplicationConfirmFunction(builder),\n    admissionOngoingApplicationAllConfirmList:\n      admissionOngoingApplicationAllConfirmListFunction(builder),\n    admissionOngoingApplicationConfirmReview:\n      admissionOngoingApplicationConfirmReviewFunction(builder),\n    admissionOngoingApplicationReview:\n      admissionOngoingApplicationReviewFunction(builder),\n    admissionOngoingApplicationAllReviewList:\n      admissionOngoingApplicationAllReviewListFunction(builder),\n    admissionOngoingApplicationReviewSort:\n      admissionOngoingApplicationReviewSortFunction(builder),\n    admissionOngoingApplicationReviewBatch:\n      admissionOngoingApplicationReviewBatchFunction(builder),\n    admissionOngoingApplicationReviewClasses:\n      admissionOngoingApplicationReviewClassesFunction(builder),\n    admissionOngoingApplicationReviewAllot:\n      admissionOngoingApplicationReviewAllotFunction(builder),\n    admissionOngoingApplicationReviewCancel:\n      admissionOngoingApplicationReviewCancelFunction(builder),\n    admissionOngoingApplicationAllottment:\n      admissionOngoingApplicationAllottmentFunction(builder),\n    admissionOngoingApplicationAllottmentCancel:\n      admissionOngoingApplicationAllottmentCancelFunction(builder),\n    admissionOngoingApplicationCancelled:\n      admissionOngoingApplicationCancelledFunction(builder),\n\n    admissionTransferApplicatToOtherApplication:\n      admissionTransferApplicatToOtherApplicationFunction(builder),\n    admissionOngoingApplicationDailyCollect:\n      admissionOngoingApplicationDailyCollectFunction(builder),\n    admissionPendingFees: admissionPendingFeesFunction(builder),\n    admissionApplicantCancelledList:\n      admissionApplicantCancelledListFunction(builder),\n    admissionCancelledListExport: admissionCancelledListExportFunction(builder),\n\n    admissionReadmissionList: admissionReadmissionListFunction(builder),\n    admissionReadmissionConfirmedList:\n      admissionReadmissionConfirmedListFunction(builder),\n    admissionReadmissionCollectFees:\n      admissionReadmissionCollectFeesFunction(builder),\n\n    admissionStudentAddSection: admissionStudentAddSectionFunction(builder),\n    admissionStudentSectionAddChecklist:\n      admissionStudentSectionAddChecklistFunction(builder),\n    admissionStudentRearrangeSection:\n      admissionStudentRearrangeSectionFunction(builder),\n    admissionStudentUpdateSectionChecklist:\n      admissionStudentUpdateSectionChecklistFunction(builder),\n    admissionStudentFormDetail: admissionStudentFormDetailFunction(builder),\n    admissionStudentToggleChecklist:\n      admissionStudentToggleChecklistFunction(builder),\n\n    admissionAddOuterGorup: admissionAddOuterGorupFunction(builder),\n    admissionOuterGroupList: admissionOuterGroupListFunction(builder),\n    admissionSubjectGroupList: admissionSubjectGroupListFunction(builder),\n    admissionAddSubjectGroup: admissionAddSubjectGroupFunction(builder),\n    admissionSubGroupList: admissionSubGroupListFunction(builder),\n    admissionOneSubGroupDetail: admissionOneSubGroupDetailFunction(builder),\n    admissionSubGroupAddSubject: admissionSubGroupAddSubjectFunction(builder),\n    admissionInstituteAllSubjectList:\n      admissionInstituteAllSubjectListFunction(builder),\n\n    admissionRemoveOuterGroup: admissionRemoveOuterGroupFunction(builder),\n    admissionRemoveSubjectGroup: admissionRemoveSubjectGroupFunction(builder),\n    institutePinApplication: institutePinApplicationFunction(builder),\n    instituteUnPinApplication: instituteUnPinApplicationFunction(builder),\n    instituteAllApplicationList: instituteAllApplicationListFunction(builder),\n    admissionMergedApplicationFeesList:\n      admissionMergedApplicationFeesListFunction(builder),\n    admissionMergedApplicationDocumentList:\n      admissionMergedApplicationDocumentListFunction(builder),\n    admissionMergedApplicationConfirmedList:\n      admissionMergedApplicationConfirmedListFunction(builder),\n\n    departmentBatchAllClass: departmentBatchAllClassFunction(builder),\n  }),\n});\n\nexport const {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  useDepartmentBatchAllClassQuery,\n} = admissionManagerApiDynamic;\n","import {\n  useAdmissionActivateModuleMutation,\n  useAdmissionUpdateModuleMutation,\n  useAdmissionDashboardMasterQuery,\n  useAdmissionCashToFinanceMutation,\n  useAdmissionPaymentVerifyListQuery,\n  useAdmissionPaymentVerifyActionMutation,\n  useAdmissionDocumentListQuery,\n  useAdmissionAddDocumentMutation,\n  useAdmissionUpdateDocumentMutation,\n  useAdmissionRemoveDocumentMutation,\n  useAdmissionExportExcelListQuery,\n  useAdmissionEditExportExcelMutation,\n  useAdmissionRemoveExportExcelMutation,\n  useAdmissionModeratorListQuery,\n  useAdmissionAddModeratorMutation,\n  useAdmissionUpdateModeratorMutation,\n  useAdmissionRemoveModeratorMutation,\n  useAdmissionPendingFeesReminderHistoryQuery,\n  useAdmissionPendingFeesOsStudentListMutation,\n  useAdmissionPendingFeesReminderMutation,\n  useAdmissionExcessFeeNotRefundedListQuery,\n  useAdmissionExcessFeeRefundedListQuery,\n  useAdmissionCompletedApplicationListQuery,\n  useAdmissionCompleteApplicationMutation,\n  useAdmissionIncompleteApplicationMutation,\n  useAdmissionExcessFeeNotRefundedListExportMutation,\n  useAdmissionExcessFeeRefundedListExportMutation,\n  useAdmissionTabControllerMutation,\n  useAdmissionExportFilterExcelMutation,\n  useAdmissionOngoingApplicationQuery,\n  useAdmissionCreateApplicationMutation,\n  useAdmissionUpdateApplicationMutation,\n  useAdmissionRemoveApplicationMutation,\n  useAdmissionOneOngoingApplicationQuery,\n  useAdmissionOngoingApplicationRequestQuery,\n  useAdmissionOngoingApplicationSelectMutation,\n  useAdmissionOngoingApplicationRejectMutation,\n  useAdmissionOngoingApplicationExportMutation,\n  useAdmissionOngoingApplicationDocumentQuery,\n  useAdmissionOngoingApplicationDocumentCollectMutation,\n  useAdmissionOngoingApplicationDocumentRevertMutation,\n  useAdmissionOngoingApplicationDocumentEditStructureMutation,\n  useAdmissionOngoingApplicationFeesQuery,\n  useAdmissionOngoingApplicationFeesCollectMutation,\n  useAdmissionOngoingApplicationFeesRevertMutation,\n  useAdmissionOngoingApplicationConfirmQuery,\n  useAdmissionOngoingApplicationAllConfirmListQuery,\n  useAdmissionOngoingApplicationConfirmReviewMutation,\n  useAdmissionOngoingApplicationReviewQuery,\n  useAdmissionOngoingApplicationAllReviewListQuery,\n  useAdmissionOngoingApplicationReviewSortMutation,\n  useAdmissionOngoingApplicationReviewBatchQuery,\n  useAdmissionOngoingApplicationReviewClassesQuery,\n  useAdmissionOngoingApplicationReviewAllotMutation,\n  useAdmissionOngoingApplicationReviewCancelMutation,\n  useAdmissionOngoingApplicationAllottmentQuery,\n  useAdmissionOngoingApplicationAllottmentCancelMutation,\n  useAdmissionOngoingApplicationCancelledQuery,\n  useAdmissionTransferApplicatToOtherApplicationMutation,\n  useAdmissionOngoingApplicationDailyCollectQuery,\n  useAdmissionPendingFeesQuery,\n  useAdmissionApplicantCancelledListQuery,\n  useAdmissionCancelledListExportMutation,\n  useAdmissionReadmissionListQuery,\n  useAdmissionReadmissionConfirmedListQuery,\n  useAdmissionReadmissionCollectFeesMutation,\n  useAdmissionStudentAddSectionMutation,\n  useAdmissionStudentSectionAddChecklistMutation,\n  useAdmissionStudentRearrangeSectionMutation,\n  useAdmissionStudentUpdateSectionChecklistMutation,\n  useAdmissionStudentFormDetailQuery,\n  useAdmissionStudentToggleChecklistMutation,\n  useAdmissionAddOuterGorupMutation,\n  useAdmissionOuterGroupListQuery,\n  useAdmissionSubjectGroupListQuery,\n  useAdmissionAddSubjectGroupMutation,\n  useAdmissionSubGroupListQuery,\n  useAdmissionOneSubGroupDetailQuery,\n  useAdmissionSubGroupAddSubjectMutation,\n  useAdmissionInstituteAllSubjectListQuery,\n  useAdmissionRemoveOuterGroupMutation,\n  useAdmissionRemoveSubjectGroupMutation,\n  useInstitutePinApplicationMutation,\n  useInstituteUnPinApplicationMutation,\n  useInstituteAllApplicationListQuery,\n  useAdmissionMergedApplicationDocumentListQuery,\n  useAdmissionMergedApplicationFeesListQuery,\n  useAdmissionMergedApplicationConfirmedListQuery,\n  //\n  useDepartmentBatchAllClassQuery,\n} from \"../../../Services/AdmissionManager/admissionManagerApiDynamic\";\n\nexport const useAdmissionActivateModule = () => {\n  const [admissionActivateModule] = useAdmissionActivateModuleMutation();\n  return [admissionActivateModule];\n};\nexport const useAdmissionUpdateModule = () => {\n  const [admissionUpdateModule] = useAdmissionUpdateModuleMutation();\n  return [admissionUpdateModule];\n};\nexport const useAdmissionDashboardMaster = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDashboardMasterQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDashboardMaster: data,\n    admissionDashboardMasterRefetch: refetch,\n    admissionDashboardMasterLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCashToFinance = () => {\n  const [admissionCashToFinance] = useAdmissionCashToFinanceMutation();\n  return [admissionCashToFinance];\n};\nexport const useAdmissionPaymentVerifyList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPaymentVerifyListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPaymentVerifyList: data,\n    admissionPaymentVerifyListRefetch: refetch,\n    admissionPaymentVerifyListLoading: isFetching,\n  };\n};\nexport const useAdmissionPaymentVerifyAction = () => {\n  const [admissionPaymentVerifyAction] =\n    useAdmissionPaymentVerifyActionMutation();\n  return [admissionPaymentVerifyAction];\n};\nexport const useAdmissionDocumentList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionDocumentListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionDocumentList: data,\n    admissionDocumentListRefetch: refetch,\n    admissionDocumentListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddDocument = () => {\n  const [admissionAddDocument] = useAdmissionAddDocumentMutation();\n  return [admissionAddDocument];\n};\nexport const useAdmissionUpdateDocument = () => {\n  const [admissionUpdateDocument] = useAdmissionUpdateDocumentMutation();\n  return [admissionUpdateDocument];\n};\nexport const useAdmissionRemoveDocument = () => {\n  const [admissionRemoveDocument] = useAdmissionRemoveDocumentMutation();\n  return [admissionRemoveDocument];\n};\nexport const useAdmissionExportExcelList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExportExcelListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExportExcelList: data,\n    admissionExportExcelListRefetch: refetch,\n    admissionExportExcelListLoading: isFetching,\n  };\n};\nexport const useAdmissionEditExportExcel = () => {\n  const [admissionEditExportExcel] = useAdmissionEditExportExcelMutation();\n  return [admissionEditExportExcel];\n};\nexport const useAdmissionRemoveExportExcel = () => {\n  const [admissionRemoveExportExcel] = useAdmissionRemoveExportExcelMutation();\n  return [admissionRemoveExportExcel];\n};\nexport const useAdmissionModeratorList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionModeratorListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionModeratorList: data,\n    admissionModeratorListRefetch: refetch,\n    admissionModeratorListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddModerator = () => {\n  const [admissionAddModerator] = useAdmissionAddModeratorMutation();\n  return [admissionAddModerator];\n};\nexport const useAdmissionUpdateModerator = () => {\n  const [admissionUpdateModerator] = useAdmissionUpdateModeratorMutation();\n  return [admissionUpdateModerator];\n};\nexport const useAdmissionRemoveModerator = () => {\n  const [admissionRemoveModerator] = useAdmissionRemoveModeratorMutation();\n  return [admissionRemoveModerator];\n};\n\nexport const useAdmissionPendingFeesReminderHistory = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionPendingFeesReminderHistoryQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionPendingFeesReminderHistory: data,\n    admissionPendingFeesReminderHistoryRefetch: refetch,\n    admissionPendingFeesReminderHistoryLoading: isFetching,\n  };\n};\nexport const useAdmissionPendingFeesOsStudentList = () => {\n  const [admissionPendingFeesOsStudentList] =\n    useAdmissionPendingFeesOsStudentListMutation();\n  return [admissionPendingFeesOsStudentList];\n};\nexport const useAdmissionPendingFeesReminder = () => {\n  const [admissionPendingFeesReminder] =\n    useAdmissionPendingFeesReminderMutation();\n  return [admissionPendingFeesReminder];\n};\n\nexport const useAdmissionExcessFeeNotRefundedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionExcessFeeNotRefundedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionExcessFeeNotRefundedList: data,\n    admissionExcessFeeNotRefundedListRefetch: refetch,\n    admissionExcessFeeNotRefundedListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionExcessFeeRefundedList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionExcessFeeRefundedListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionExcessFeeRefundedList: data,\n    admissionExcessFeeRefundedListRefetch: refetch,\n    admissionExcessFeeRefundedListLoading: isFetching,\n  };\n};\nexport const useAdmissionExcessFeeNotRefundedListExport = () => {\n  const [admissionExcessFeeNotRefundedListExport] =\n    useAdmissionExcessFeeNotRefundedListExportMutation();\n  return [admissionExcessFeeNotRefundedListExport];\n};\nexport const useAdmissionExcessFeeRefundedListExport = () => {\n  const [admissionExcessFeeRefundedListExport] =\n    useAdmissionExcessFeeRefundedListExportMutation();\n  return [admissionExcessFeeRefundedListExport];\n};\n\nexport const useAdmissionCompletedApplicationList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionCompletedApplicationListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionCompletedApplicationList: data,\n    admissionCompletedApplicationListRefetch: refetch,\n    admissionCompletedApplicationListLoading: isFetching,\n  };\n};\nexport const useAdmissionCompleteApplication = () => {\n  const [admissionCompleteApplication] =\n    useAdmissionCompleteApplicationMutation();\n  return [admissionCompleteApplication];\n};\nexport const useAdmissionIncompleteApplication = () => {\n  const [admissionIncompleteApplication] =\n    useAdmissionIncompleteApplicationMutation();\n  return [admissionIncompleteApplication];\n};\nexport const useAdmissionTabController = () => {\n  const [admissionTabController] = useAdmissionTabControllerMutation();\n  return [admissionTabController];\n};\nexport const useAdmissionExportFilterExcel = () => {\n  const [admissionExportFilterExcel] = useAdmissionExportFilterExcelMutation();\n  return [admissionExportFilterExcel];\n};\n\nexport const useAdmissionOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplication: data,\n    admissionOngoingApplicationRefetch: refetch,\n    admissionOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionCreateApplication = () => {\n  const [admissionCreateApplication] = useAdmissionCreateApplicationMutation();\n  return [admissionCreateApplication];\n};\nexport const useAdmissionUpdateApplication = () => {\n  const [admissionUpdateApplication] = useAdmissionUpdateApplicationMutation();\n  return [admissionUpdateApplication];\n};\nexport const useAdmissionRemoveApplication = () => {\n  const [admissionRemoveApplication] = useAdmissionRemoveApplicationMutation();\n  return [admissionRemoveApplication];\n};\n\nexport const useAdmissionOneOngoingApplication = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneOngoingApplicationQuery(\n    args.appId,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOneOngoingApplication: data,\n    admissionOneOngoingApplicationRefetch: refetch,\n    admissionOneOngoingApplicationLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationRequest = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationRequestQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationRequest: data,\n    admissionOngoingApplicationRequestRefetch: refetch,\n    admissionOngoingApplicationRequestLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationSelect = () => {\n  const [admissionOngoingApplicationSelect] =\n    useAdmissionOngoingApplicationSelectMutation();\n  return [admissionOngoingApplicationSelect];\n};\nexport const useAdmissionOngoingApplicationReject = () => {\n  const [admissionOngoingApplicationReject] =\n    useAdmissionOngoingApplicationRejectMutation();\n  return [admissionOngoingApplicationReject];\n};\nexport const useAdmissionOngoingApplicationExport = () => {\n  const [admissionOngoingApplicationExport] =\n    useAdmissionOngoingApplicationExportMutation();\n  return [admissionOngoingApplicationExport];\n};\n\nexport const useAdmissionOngoingApplicationDocument = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDocumentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDocument: data,\n    admissionOngoingApplicationDocumentRefetch: refetch,\n    admissionOngoingApplicationDocumentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationDocumentCollect = () => {\n  const [admissionOngoingApplicationDocumentCollect] =\n    useAdmissionOngoingApplicationDocumentCollectMutation();\n  return [admissionOngoingApplicationDocumentCollect];\n};\n\nexport const useAdmissionOngoingApplicationDocumentRevert = () => {\n  const [admissionOngoingApplicationDocumentRevert] =\n    useAdmissionOngoingApplicationDocumentRevertMutation();\n  return [admissionOngoingApplicationDocumentRevert];\n};\n\nexport const useAdmissionOngoingApplicationDocumentEditStructure = () => {\n  const [admissionOngoingApplicationDocumentEditStructure] =\n    useAdmissionOngoingApplicationDocumentEditStructureMutation();\n  return [admissionOngoingApplicationDocumentEditStructure];\n};\nexport const useAdmissionOngoingApplicationFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOngoingApplicationFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionOngoingApplicationFees: data,\n    admissionOngoingApplicationFeesRefetch: refetch,\n    admissionOngoingApplicationFeesLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationFeesCollect = () => {\n  const [admissionOngoingApplicationFeesCollect] =\n    useAdmissionOngoingApplicationFeesCollectMutation();\n  return [admissionOngoingApplicationFeesCollect];\n};\nexport const useAdmissionOngoingApplicationFeesRevert = () => {\n  const [admissionOngoingApplicationFeesRevert] =\n    useAdmissionOngoingApplicationFeesRevertMutation();\n  return [admissionOngoingApplicationFeesRevert];\n};\nexport const useAdmissionOngoingApplicationConfirm = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationConfirmQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationConfirm: data,\n    admissionOngoingApplicationConfirmRefetch: refetch,\n    admissionOngoingApplicationConfirmLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllConfirmList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllConfirmListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllConfirmList: data,\n    admissionOngoingApplicationAllConfirmListRefetch: refetch,\n    admissionOngoingApplicationAllConfirmListLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationConfirmReview = () => {\n  const [admissionOngoingApplicationConfirmReview] =\n    useAdmissionOngoingApplicationConfirmReviewMutation();\n  return [admissionOngoingApplicationConfirmReview];\n};\nexport const useAdmissionOngoingApplicationReview = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReview: data,\n    admissionOngoingApplicationReviewRefetch: refetch,\n    admissionOngoingApplicationReviewLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllReviewList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllReviewListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllReviewList: data,\n    admissionOngoingApplicationAllReviewListRefetch: refetch,\n    admissionOngoingApplicationAllReviewListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewSort = () => {\n  const [admissionOngoingApplicationReviewSort] =\n    useAdmissionOngoingApplicationReviewSortMutation();\n  return [admissionOngoingApplicationReviewSort];\n};\nexport const useAdmissionOngoingApplicationReviewBatch = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewBatchQuery(args.appId, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewBatch: data,\n    admissionOngoingApplicationReviewBatchRefetch: refetch,\n    admissionOngoingApplicationReviewBatchLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewClasses = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationReviewClassesQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationReviewClasses: data,\n    admissionOngoingApplicationReviewClassesRefetch: refetch,\n    admissionOngoingApplicationReviewClassesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionOngoingApplicationReviewAllot = () => {\n  const [admissionOngoingApplicationReviewAllot] =\n    useAdmissionOngoingApplicationReviewAllotMutation();\n  return [admissionOngoingApplicationReviewAllot];\n};\nexport const useAdmissionOngoingApplicationReviewCancel = () => {\n  const [admissionOngoingApplicationReviewCancel] =\n    useAdmissionOngoingApplicationReviewCancelMutation();\n  return [admissionOngoingApplicationReviewCancel];\n};\nexport const useAdmissionOngoingApplicationAllottment = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationAllottmentQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationAllottment: data,\n    admissionOngoingApplicationAllottmentRefetch: refetch,\n    admissionOngoingApplicationAllottmentLoading: isFetching,\n  };\n};\nexport const useAdmissionOngoingApplicationAllottmentCancel = () => {\n  const [admissionOngoingApplicationAllottmentCancel] =\n    useAdmissionOngoingApplicationAllottmentCancelMutation();\n  return [admissionOngoingApplicationAllottmentCancel];\n};\n\nexport const useAdmissionOngoingApplicationCancelled = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationCancelledQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationCancelled: data,\n    admissionOngoingApplicationCancelledRefetch: refetch,\n    admissionOngoingApplicationCancelledLoading: isFetching,\n  };\n};\n\nexport const useAdmissionTransferApplicatToOtherApplication = () => {\n  const [admissionTransferApplicatToOtherApplication] =\n    useAdmissionTransferApplicatToOtherApplicationMutation();\n  return [admissionTransferApplicatToOtherApplication];\n};\nexport const useAdmissionOngoingApplicationDailyCollect = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionOngoingApplicationDailyCollectQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionOngoingApplicationDailyCollect: data,\n    admissionOngoingApplicationDailyCollectRefetch: refetch,\n    admissionOngoingApplicationDailyCollectLoading: isFetching,\n  };\n};\n\nexport const useAdmissionPendingFees = (args) => {\n  const { data, refetch, isFetching } = useAdmissionPendingFeesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionPendingFees: data,\n    admissionPendingFeesRefetch: refetch,\n    admissionPendingFeesLoading: isFetching,\n  };\n};\n\nexport const useAdmissionApplicantCancelledList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionApplicantCancelledListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionApplicantCancelledList: data,\n    admissionApplicantCancelledListRefetch: refetch,\n    admissionApplicantCancelledListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionCancelledListExport = () => {\n  const [admissionCancelledListExport] =\n    useAdmissionCancelledListExportMutation();\n  return [admissionCancelledListExport];\n};\n\nexport const useAdmissionReadmissionList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionReadmissionListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    admissionReadmissionList: data,\n    admissionReadmissionListRefetch: refetch,\n    admissionReadmissionListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionReadmissionConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionReadmissionConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionReadmissionConfirmedList: data,\n    admissionReadmissionConfirmedListRefetch: refetch,\n    admissionReadmissionConfirmedListLoading: isFetching,\n  };\n};\nexport const useAdmissionReadmissionCollectFees = () => {\n  const [admissionReadmissionCollectFees] =\n    useAdmissionReadmissionCollectFeesMutation();\n  return [admissionReadmissionCollectFees];\n};\n\nexport const useAdmissionStudentAddSection = () => {\n  const [admissionStudentAddSection] = useAdmissionStudentAddSectionMutation();\n  return [admissionStudentAddSection];\n};\nexport const useAdmissionStudentSectionAddChecklist = () => {\n  const [admissionStudentSectionAddChecklist] =\n    useAdmissionStudentSectionAddChecklistMutation();\n  return [admissionStudentSectionAddChecklist];\n};\nexport const useAdmissionStudentRearrangeSection = () => {\n  const [admissionStudentRearrangeSection] =\n    useAdmissionStudentRearrangeSectionMutation();\n  return [admissionStudentRearrangeSection];\n};\nexport const useAdmissionStudentUpdateSectionChecklist = () => {\n  const [admissionStudentUpdateSectionChecklist] =\n    useAdmissionStudentUpdateSectionChecklistMutation();\n  return [admissionStudentUpdateSectionChecklist];\n};\n\nexport const useAdmissionStudentFormDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionStudentFormDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionStudentFormDetail: data,\n    admissionStudentFormDetailRefetch: refetch,\n    admissionStudentFormDetailLoading: isFetching,\n  };\n};\nexport const useAdmissionStudentToggleChecklist = () => {\n  const [admissionStudentToggleChecklist] =\n    useAdmissionStudentToggleChecklistMutation();\n  return [admissionStudentToggleChecklist];\n};\n\nexport const useAdmissionAddOuterGorup = () => {\n  const [admissionAddOuterGorup] = useAdmissionAddOuterGorupMutation();\n  return [admissionAddOuterGorup];\n};\nexport const useAdmissionOuterGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOuterGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOuterGroupList: data,\n    admissionOuterGroupListRefetch: refetch,\n    admissionOuterGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionSubjectGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubjectGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubjectGroupList: data,\n    admissionSubjectGroupListRefetch: refetch,\n    admissionSubjectGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionAddSubjectGroup = () => {\n  const [admissionAddSubjectGroup] = useAdmissionAddSubjectGroupMutation();\n  return [admissionAddSubjectGroup];\n};\nexport const useAdmissionSubGroupList = (args) => {\n  const { data, refetch, isFetching } = useAdmissionSubGroupListQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionSubGroupList: data,\n    admissionSubGroupListRefetch: refetch,\n    admissionSubGroupListLoading: isFetching,\n  };\n};\nexport const useAdmissionOneSubGroupDetail = (args) => {\n  const { data, refetch, isFetching } = useAdmissionOneSubGroupDetailQuery(\n    args?.data,\n    {\n      skip: args?.skip,\n    }\n  );\n  return {\n    admissionOneSubGroupDetail: data,\n    admissionOneSubGroupDetailRefetch: refetch,\n    admissionOneSubGroupDetailLoading: isFetching,\n  };\n};\n\nexport const useAdmissionSubGroupAddSubject = () => {\n  const [admissionSubGroupAddSubject] =\n    useAdmissionSubGroupAddSubjectMutation();\n  return [admissionSubGroupAddSubject];\n};\n\nexport const useAdmissionInstituteAllSubjectList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionInstituteAllSubjectListQuery(args?.data, {\n      skip: args?.skip,\n    });\n  return {\n    admissionInstituteAllSubjectList: data,\n    admissionInstituteAllSubjectListRefetch: refetch,\n    admissionInstituteAllSubjectListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionRemoveOuterGroup = () => {\n  const [admissionRemoveOuterGroup] = useAdmissionRemoveOuterGroupMutation();\n  return [admissionRemoveOuterGroup];\n};\n\nexport const useAdmissionRemoveSubjectGroup = () => {\n  const [admissionRemoveSubjectGroup] =\n    useAdmissionRemoveSubjectGroupMutation();\n  return [admissionRemoveSubjectGroup];\n};\n\nexport const useInstitutePinApplication = () => {\n  const [institutePinApplication] = useInstitutePinApplicationMutation();\n  return [institutePinApplication];\n};\nexport const useInstituteUnPinApplication = () => {\n  const [instituteUnPinApplication] = useInstituteUnPinApplicationMutation();\n  return [instituteUnPinApplication];\n};\n\nexport const useInstituteAllApplicationList = (args) => {\n  const { data, refetch, isFetching } = useInstituteAllApplicationListQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    instituteAllApplicationList: data,\n    instituteAllApplicationListRefetch: refetch,\n    instituteAllApplicationListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationDocumentList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationDocumentListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationDocumentList: data,\n    admissionMergedApplicationDocumentListRefetch: refetch,\n    admissionMergedApplicationDocumentListLoading: isFetching,\n  };\n};\n\nexport const useAdmissionMergedApplicationFeesList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationFeesListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationFeesList: data,\n    admissionMergedApplicationFeesListRefetch: refetch,\n    admissionMergedApplicationFeesListLoading: isFetching,\n  };\n};\nexport const useAdmissionMergedApplicationConfirmedList = (args) => {\n  const { data, refetch, isFetching } =\n    useAdmissionMergedApplicationConfirmedListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    admissionMergedApplicationConfirmedList: data,\n    admissionMergedApplicationConfirmedListRefetch: refetch,\n    admissionMergedApplicationConfirmedListLoading: isFetching,\n  };\n};\n\n///\nexport const useDepartmentBatchAllClass = (args) => {\n  const { data, refetch, isFetching } = useDepartmentBatchAllClassQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    departmentBatchAllClass: data,\n    departmentBatchAllClassRefetch: refetch,\n    departmentBatchAllClassLoading: isFetching,\n  };\n};\n"],"names":["admissionActivateModuleFunction","builder","mutation","query","data","url","concat","instituteId","method","POST","body","activateModule","admissionUpdateModuleFunction","osid","nsid","PATCH","invalidatesTags","admissionDashboardMasterFunction","aid","mod_id","providesTags","serializeQueryArgs","_ref","endpointName","transformResponse","response","dect","decryption","encrypt","admission","admissionCashToFinanceFunction","submitAmount","admissionPaymentVerifyListFunction","page","limit","filterBy","over_filter","search","_ref2","meta","arg","list","all_requests","merge","currentCache","incomingData","_currentCache$list","push","forceRefetch","_ref3","currentArg","previousArg","admissionPaymentVerifyActionFunction","rid","reqId","status","receiptAction","admissionDocumentListFunction","_ref4","all_docs","_currentCache$list2","_ref5","admissionAddDocumentFunction","document","admissionUpdateDocumentFunction","editDocument","admissionRemoveDocumentFunction","did","DELETE","admissionExportExcelListFunction","_ref6","all_excel","_currentCache$list3","_ref7","admissionEditExportExcelFunction","xlsxId","excelUpdate","admissionRemoveExportExcelFunction","admissionExportFilterExcelFunction","gender","caste","is_all","all_depart","batch_status","exportData","admissionModeratorListFunction","_ref8","all_mods","_currentCache$list4","_ref9","admissionAddModeratorFunction","_data$active_tab","active_tab","addModerator","admissionUpdateModeratorFunction","_data$active_tab2","modId","updateModerator","admissionRemoveModeratorFunction","admissionPendingFeesFunction","_data$flow","flow","_ref10","remain","_currentCache$list5","_ref11","admissionPendingFeesReminderHistoryFunction","_data$search","id","_ref12","all_message","_currentCache$list6","_ref13","admissionPendingFeesOsStudentListFunction","pendingData","admissionPendingFeesReminderFunction","alarm_mode","reminderData","admissionExcessFeeNotRefundedListFunction","_data$search2","_ref14","all_refund_list","_currentCache$list7","_ref15","admissionExcessFeeRefundedListFunction","_ref16","all_refunded","_currentCache$list8","_ref17","admissionExcessFeeNotRefundedListExportFunction","admissionExcessFeeRefundedListExportFunction","admissionTabControllerFunction","tabManage","admissionCompletedApplicationListFunction","_ref18","completed","_currentCache$list9","_ref19","admissionCompleteApplicationFunction","appId","admissionIncompleteApplicationFunction","admissionOngoingApplicationFunction","ad","_ref20","res","ongoing","_currentCache$list10","_ref21","admissionCreateApplicationFunction","application","admissionUpdateApplicationFunction","updateApplication","admissionRemoveApplicationFunction","admissionOneOngoingApplicationFunction","oneApply","_ref22","_ref23","admissionOngoingApplicationRequestFunction","req","_ref24","request","_currentCache$list11","_ref25","admissionOngoingApplicationSelectFunction","sid","applicant","admissionOngoingApplicationRejectFunction","bodyParameter","admissionOngoingApplicationExportFunction","admissionOngoingApplicationDocumentFunction","_ref26","select","_currentCache$list12","_ref27","admissionOngoingApplicationDocumentCollectFunction","admissionOngoingApplicationDocumentRevertFunction","revert","admissionOngoingApplicationDocumentEditStructureFunction","admissionOngoingApplicationFeesFunction","_ref28","fees","_currentCache$list13","_ref29","admissionOngoingApplicationFeesCollectFunction","_data$receipt_status","receipt_status","collect","admissionOngoingApplicationFeesRevertFunction","admissionOngoingApplicationConfirmFunction","_ref30","confirm","_currentCache$list14","_ref31","admissionOngoingApplicationAllConfirmListFunction","_ref32","_ref33","admissionOngoingApplicationConfirmReviewFunction","review","admissionOngoingApplicationReviewFunction","_ref34","_currentCache$list15","_ref35","admissionOngoingApplicationAllReviewListFunction","_ref36","_ref37","admissionOngoingApplicationReviewSortFunction","sort_query","admissionOngoingApplicationReviewBatchFunction","_ref38","batch","_ref39","admissionOngoingApplicationReviewClassesFunction","bid","_ref40","classes","_currentCache$list16","_ref41","admissionOngoingApplicationReviewAllotFunction","cid","admissionOngoingApplicationReviewCancelFunction","payment","admissionOngoingApplicationAllottmentFunction","_ref42","allot","_currentCache$list17","_ref43","admissionOngoingApplicationAllottmentCancelFunction","admissionOngoingApplicationCancelledFunction","_ref44","cancel","_currentCache$list18","_ref45","admissionTransferApplicatToOtherApplicationFunction","transferApplicantData","admissionOngoingApplicationDailyCollectFunction","valid_date","_ref46","day_wise","_ref47","admissionApplicantCancelledListFunction","_ref48","_currentCache$list19","_ref49","admissionCancelledListExportFunction","timeline","timeline_content","from","to","bank","admissionReadmissionListFunction","_ref50","_currentCache$list20","_ref51","admissionReadmissionConfirmedListFunction","_ref52","_currentCache$list21","_ref53","admissionReadmissionCollectFeesFunction","admissionStudentAddSectionFunction","formId","admissionStudentSectionAddChecklistFunction","admissionStudentRearrangeSectionFunction","admissionStudentUpdateSectionChecklistFunction","admissionStudentFormDetailFunction","section","_ref54","_ref55","admissionStudentToggleChecklistFunction","admissionAddOuterGorupFunction","admissionOuterGroupListFunction","_ref56","all_group","_currentCache$list22","_ref57","admissionSubjectGroupListFunction","_ref58","_currentCache$list23","_ref59","admissionAddSubjectGroupFunction","sgid","admissionSubGroupListFunction","_ref60","all_group_select","_currentCache$list24","_ref61","admissionOneSubGroupDetailFunction","_ref62","group","_ref63","admissionSubGroupAddSubjectFunction","ssid","admissionInstituteAllSubjectListFunction","_ref64","all_subjects","_currentCache$list25","_ref65","admissionRemoveOuterGroupFunction","admissionRemoveSubjectGroupFunction","institutePinApplicationFunction","instituteUnPinApplicationFunction","instituteAllApplicationListFunction","_ref66","_currentCache$list26","_ref67","admissionMergedApplicationDocumentListFunction","_ref68","_currentCache$list27","_ref69","admissionMergedApplicationFeesListFunction","_ref70","_currentCache$list28","_ref71","admissionMergedApplicationConfirmedListFunction","_ref72","_currentCache$list29","_ref73","departmentBatchAllClassFunction","_ref74","_response$batch","_response$batch2","classroom","_currentCache$list30","_ref75","admissionManagerApiDynamic","admissionManagerApi","injectEndpoints","endpoints","admissionActivateModule","admissionUpdateModule","admissionDashboardMaster","admissionCashToFinance","admissionPaymentVerifyList","admissionPaymentVerifyAction","admissionDocumentList","admissionAddDocument","admissionUpdateDocument","admissionRemoveDocument","admissionExportExcelList","admissionEditExportExcel","admissionRemoveExportExcel","admissionModeratorList","admissionAddModerator","admissionUpdateModerator","admissionRemoveModerator","admissionPendingFeesReminderHistory","admissionPendingFeesOsStudentList","admissionPendingFeesReminder","admissionExcessFeeNotRefundedList","admissionExcessFeeRefundedList","admissionCompletedApplicationList","admissionCompleteApplication","admissionIncompleteApplication","admissionExcessFeeNotRefundedListExport","admissionExcessFeeRefundedListExport","admissionTabController","admissionExportFilterExcel","admissionOngoingApplication","admissionCreateApplication","admissionUpdateApplication","admissionRemoveApplication","admissionOneOngoingApplication","admissionOngoingApplicationRequest","admissionOngoingApplicationSelect","admissionOngoingApplicationReject","admissionOngoingApplicationExport","admissionOngoingApplicationDocument","admissionOngoingApplicationDocumentCollect","admissionOngoingApplicationDocumentRevert","admissionOngoingApplicationDocumentEditStructure","admissionOngoingApplicationFees","admissionOngoingApplicationFeesCollect","admissionOngoingApplicationFeesRevert","admissionOngoingApplicationConfirm","admissionOngoingApplicationAllConfirmList","admissionOngoingApplicationConfirmReview","admissionOngoingApplicationReview","admissionOngoingApplicationAllReviewList","admissionOngoingApplicationReviewSort","admissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewAllot","admissionOngoingApplicationReviewCancel","admissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentCancel","admissionOngoingApplicationCancelled","admissionTransferApplicatToOtherApplication","admissionOngoingApplicationDailyCollect","admissionPendingFees","admissionApplicantCancelledList","admissionCancelledListExport","admissionReadmissionList","admissionReadmissionConfirmedList","admissionReadmissionCollectFees","admissionStudentAddSection","admissionStudentSectionAddChecklist","admissionStudentRearrangeSection","admissionStudentUpdateSectionChecklist","admissionStudentFormDetail","admissionStudentToggleChecklist","admissionAddOuterGorup","admissionOuterGroupList","admissionSubjectGroupList","admissionAddSubjectGroup","admissionSubGroupList","admissionOneSubGroupDetail","admissionSubGroupAddSubject","admissionInstituteAllSubjectList","admissionRemoveOuterGroup","admissionRemoveSubjectGroup","institutePinApplication","instituteUnPinApplication","instituteAllApplicationList","admissionMergedApplicationFeesList","admissionMergedApplicationDocumentList","admissionMergedApplicationConfirmedList","departmentBatchAllClass","useAdmissionActivateModuleMutation","useAdmissionUpdateModuleMutation","useAdmissionDashboardMasterQuery","useAdmissionCashToFinanceMutation","useAdmissionPaymentVerifyListQuery","useAdmissionPaymentVerifyActionMutation","useAdmissionDocumentListQuery","useAdmissionAddDocumentMutation","useAdmissionUpdateDocumentMutation","useAdmissionRemoveDocumentMutation","useAdmissionExportExcelListQuery","useAdmissionEditExportExcelMutation","useAdmissionRemoveExportExcelMutation","useAdmissionModeratorListQuery","useAdmissionAddModeratorMutation","useAdmissionUpdateModeratorMutation","useAdmissionRemoveModeratorMutation","useAdmissionPendingFeesReminderHistoryQuery","useAdmissionPendingFeesOsStudentListMutation","useAdmissionPendingFeesReminderMutation","useAdmissionExcessFeeNotRefundedListQuery","useAdmissionExcessFeeRefundedListQuery","useAdmissionCompletedApplicationListQuery","useAdmissionCompleteApplicationMutation","useAdmissionIncompleteApplicationMutation","useAdmissionExcessFeeNotRefundedListExportMutation","useAdmissionExcessFeeRefundedListExportMutation","useAdmissionTabControllerMutation","useAdmissionExportFilterExcelMutation","useAdmissionOngoingApplicationQuery","useAdmissionCreateApplicationMutation","useAdmissionUpdateApplicationMutation","useAdmissionRemoveApplicationMutation","useAdmissionOneOngoingApplicationQuery","useAdmissionOngoingApplicationRequestQuery","useAdmissionOngoingApplicationSelectMutation","useAdmissionOngoingApplicationRejectMutation","useAdmissionOngoingApplicationExportMutation","useAdmissionOngoingApplicationDocumentQuery","useAdmissionOngoingApplicationDocumentCollectMutation","useAdmissionOngoingApplicationDocumentRevertMutation","useAdmissionOngoingApplicationDocumentEditStructureMutation","useAdmissionOngoingApplicationFeesQuery","useAdmissionOngoingApplicationFeesCollectMutation","useAdmissionOngoingApplicationFeesRevertMutation","useAdmissionOngoingApplicationConfirmQuery","useAdmissionOngoingApplicationAllConfirmListQuery","useAdmissionOngoingApplicationConfirmReviewMutation","useAdmissionOngoingApplicationReviewQuery","useAdmissionOngoingApplicationAllReviewListQuery","useAdmissionOngoingApplicationReviewSortMutation","useAdmissionOngoingApplicationReviewBatchQuery","useAdmissionOngoingApplicationReviewClassesQuery","useAdmissionOngoingApplicationReviewAllotMutation","useAdmissionOngoingApplicationReviewCancelMutation","useAdmissionOngoingApplicationAllottmentQuery","useAdmissionOngoingApplicationAllottmentCancelMutation","useAdmissionOngoingApplicationCancelledQuery","useAdmissionTransferApplicatToOtherApplicationMutation","useAdmissionOngoingApplicationDailyCollectQuery","useAdmissionPendingFeesQuery","useAdmissionApplicantCancelledListQuery","useAdmissionCancelledListExportMutation","useAdmissionReadmissionListQuery","useAdmissionReadmissionConfirmedListQuery","useAdmissionReadmissionCollectFeesMutation","useAdmissionStudentAddSectionMutation","useAdmissionStudentSectionAddChecklistMutation","useAdmissionStudentRearrangeSectionMutation","useAdmissionStudentUpdateSectionChecklistMutation","useAdmissionStudentFormDetailQuery","useAdmissionStudentToggleChecklistMutation","useAdmissionAddOuterGorupMutation","useAdmissionOuterGroupListQuery","useAdmissionSubjectGroupListQuery","useAdmissionAddSubjectGroupMutation","useAdmissionSubGroupListQuery","useAdmissionOneSubGroupDetailQuery","useAdmissionSubGroupAddSubjectMutation","useAdmissionInstituteAllSubjectListQuery","useAdmissionRemoveOuterGroupMutation","useAdmissionRemoveSubjectGroupMutation","useInstitutePinApplicationMutation","useInstituteUnPinApplicationMutation","useInstituteAllApplicationListQuery","useAdmissionMergedApplicationDocumentListQuery","useAdmissionMergedApplicationFeesListQuery","useAdmissionMergedApplicationConfirmedListQuery","useDepartmentBatchAllClassQuery","useAdmissionActivateModule","useAdmissionDashboardMaster","args","refetch","isFetching","skip","admissionDashboardMasterRefetch","admissionDashboardMasterLoading","useAdmissionCashToFinance","useAdmissionPaymentVerifyList","admissionPaymentVerifyListRefetch","admissionPaymentVerifyListLoading","useAdmissionPaymentVerifyAction","useAdmissionDocumentList","admissionDocumentListRefetch","admissionDocumentListLoading","useAdmissionAddDocument","useAdmissionUpdateDocument","useAdmissionRemoveDocument","useAdmissionExportExcelList","admissionExportExcelListRefetch","admissionExportExcelListLoading","useAdmissionEditExportExcel","useAdmissionRemoveExportExcel","useAdmissionModeratorList","admissionModeratorListRefetch","admissionModeratorListLoading","useAdmissionAddModerator","useAdmissionUpdateModerator","useAdmissionRemoveModerator","useAdmissionPendingFeesReminderHistory","admissionPendingFeesReminderHistoryRefetch","admissionPendingFeesReminderHistoryLoading","useAdmissionPendingFeesOsStudentList","useAdmissionPendingFeesReminder","useAdmissionExcessFeeNotRefundedList","admissionExcessFeeNotRefundedListRefetch","admissionExcessFeeNotRefundedListLoading","useAdmissionExcessFeeRefundedList","admissionExcessFeeRefundedListRefetch","admissionExcessFeeRefundedListLoading","useAdmissionExcessFeeNotRefundedListExport","useAdmissionExcessFeeRefundedListExport","useAdmissionCompletedApplicationList","admissionCompletedApplicationListRefetch","admissionCompletedApplicationListLoading","useAdmissionCompleteApplication","useAdmissionIncompleteApplication","useAdmissionTabController","useAdmissionExportFilterExcel","useAdmissionOngoingApplication","admissionOngoingApplicationRefetch","admissionOngoingApplicationLoading","useAdmissionCreateApplication","useAdmissionUpdateApplication","useAdmissionRemoveApplication","useAdmissionOneOngoingApplication","admissionOneOngoingApplicationRefetch","admissionOneOngoingApplicationLoading","useAdmissionOngoingApplicationRequest","admissionOngoingApplicationRequestRefetch","admissionOngoingApplicationRequestLoading","useAdmissionOngoingApplicationSelect","useAdmissionOngoingApplicationReject","useAdmissionOngoingApplicationExport","useAdmissionOngoingApplicationDocument","admissionOngoingApplicationDocumentRefetch","admissionOngoingApplicationDocumentLoading","useAdmissionOngoingApplicationDocumentCollect","useAdmissionOngoingApplicationDocumentRevert","useAdmissionOngoingApplicationDocumentEditStructure","useAdmissionOngoingApplicationFees","admissionOngoingApplicationFeesRefetch","admissionOngoingApplicationFeesLoading","useAdmissionOngoingApplicationFeesCollect","useAdmissionOngoingApplicationFeesRevert","useAdmissionOngoingApplicationConfirm","admissionOngoingApplicationConfirmRefetch","admissionOngoingApplicationConfirmLoading","useAdmissionOngoingApplicationAllConfirmList","admissionOngoingApplicationAllConfirmListRefetch","admissionOngoingApplicationAllConfirmListLoading","useAdmissionOngoingApplicationConfirmReview","useAdmissionOngoingApplicationReview","admissionOngoingApplicationReviewRefetch","admissionOngoingApplicationReviewLoading","useAdmissionOngoingApplicationAllReviewList","admissionOngoingApplicationAllReviewListRefetch","admissionOngoingApplicationAllReviewListLoading","useAdmissionOngoingApplicationReviewSort","useAdmissionOngoingApplicationReviewBatch","admissionOngoingApplicationReviewBatchRefetch","admissionOngoingApplicationReviewBatchLoading","useAdmissionOngoingApplicationReviewClasses","admissionOngoingApplicationReviewClassesRefetch","admissionOngoingApplicationReviewClassesLoading","useAdmissionOngoingApplicationReviewAllot","useAdmissionOngoingApplicationReviewCancel","useAdmissionOngoingApplicationAllottment","admissionOngoingApplicationAllottmentRefetch","admissionOngoingApplicationAllottmentLoading","useAdmissionOngoingApplicationAllottmentCancel","useAdmissionOngoingApplicationCancelled","admissionOngoingApplicationCancelledRefetch","admissionOngoingApplicationCancelledLoading","useAdmissionTransferApplicatToOtherApplication","useAdmissionOngoingApplicationDailyCollect","admissionOngoingApplicationDailyCollectRefetch","admissionOngoingApplicationDailyCollectLoading","useAdmissionPendingFees","admissionPendingFeesRefetch","admissionPendingFeesLoading","useAdmissionApplicantCancelledList","admissionApplicantCancelledListRefetch","admissionApplicantCancelledListLoading","useAdmissionCancelledListExport","useAdmissionReadmissionList","admissionReadmissionListRefetch","admissionReadmissionListLoading","useAdmissionReadmissionConfirmedList","admissionReadmissionConfirmedListRefetch","admissionReadmissionConfirmedListLoading","useAdmissionReadmissionCollectFees","useAdmissionStudentAddSection","useAdmissionStudentSectionAddChecklist","useAdmissionStudentRearrangeSection","useAdmissionStudentUpdateSectionChecklist","useAdmissionStudentFormDetail","admissionStudentFormDetailRefetch","admissionStudentFormDetailLoading","useAdmissionStudentToggleChecklist","useAdmissionAddOuterGorup","useAdmissionOuterGroupList","admissionOuterGroupListRefetch","admissionOuterGroupListLoading","useAdmissionAddSubjectGroup","useAdmissionSubGroupList","admissionSubGroupListRefetch","admissionSubGroupListLoading","useAdmissionOneSubGroupDetail","admissionOneSubGroupDetailRefetch","admissionOneSubGroupDetailLoading","useAdmissionSubGroupAddSubject","useAdmissionInstituteAllSubjectList","admissionInstituteAllSubjectListRefetch","admissionInstituteAllSubjectListLoading","useAdmissionRemoveOuterGroup","useAdmissionRemoveSubjectGroup","useInstitutePinApplication","useInstituteUnPinApplication","useInstituteAllApplicationList","instituteAllApplicationListRefetch","instituteAllApplicationListLoading","useAdmissionMergedApplicationDocumentList","admissionMergedApplicationDocumentListRefetch","admissionMergedApplicationDocumentListLoading","useAdmissionMergedApplicationFeesList","admissionMergedApplicationFeesListRefetch","admissionMergedApplicationFeesListLoading","useAdmissionMergedApplicationConfirmedList","admissionMergedApplicationConfirmedListRefetch","admissionMergedApplicationConfirmedListLoading","useDepartmentBatchAllClass","departmentBatchAllClassRefetch","departmentBatchAllClassLoading"],"sourceRoot":""}