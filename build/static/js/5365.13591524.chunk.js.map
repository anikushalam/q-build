{"version":3,"file":"static/js/5365.13591524.chunk.js","mappings":"kLAKMA,EAAkB,SAAHC,GAQd,IAPLC,EAAKD,EAALC,MACAC,EAAQF,EAARE,SACAC,EAAUH,EAAVG,WACAC,EAAaJ,EAAbI,cACAC,EAAQL,EAARK,SACAC,EAAQN,EAARM,SACAC,EAAQP,EAARO,SAEQC,GAAMC,EAAAA,EAAAA,MAAND,EACR,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,kBAAkBN,SAAA,CACrCF,GACCK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAME,sBAAsBP,SAAA,EAC1CG,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEQ,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAAA,EAAMI,gBAAiBJ,MAAOT,EAAWI,SAC7CC,EAARP,GAAqB,YAExBc,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAAA,EAAMK,mBAAoBL,MAAOR,EAAcG,SAC3DL,GAAsBM,EAAE,2BAI7BO,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CACXC,MAAM,qBACNC,YAAa,CACXC,OAAQ,KAEVC,SAAUhB,QAIdI,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAhB,SAAA,EACEQ,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAAA,EAAMI,gBAAiBJ,MAAOT,EAAWI,SAC7CC,EAARP,GAAqB,YAExBc,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAAA,EAAMK,mBAAoBL,MAAOR,EAAcG,SAC3DL,GAAsBM,EAAE,0BAK9BD,IAGP,EAEA,KAAeiB,EAAAA,EAAAA,MAAKzB,E,6NCmFpB,UArHmB,WACjB,IAAQS,GAAMC,EAAAA,EAAAA,MAAND,EACFiB,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,SAAU,KACVC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAFKK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAItBI,GAAgCN,EAAAA,EAAAA,WAAS,GAAMO,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9BE,GAAFD,EAAA,GAAaA,EAAA,IAC5BE,GAAoCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgCb,EAAAA,EAAAA,UAAS,CACvCc,MAAM,EACNC,IAAK,GACLC,QAAS,UACTC,GAAAd,EAAAA,EAAAA,GAAAU,EAAA,GAJKK,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAK5BG,GAAyBC,EAAAA,EAAAA,MAAlBC,GAAqCnB,EAAAA,EAAAA,GAAAiB,EAAA,GAAvB,GAwDrB,OACEjC,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CAAA5C,UACTQ,EAAAA,EAAAA,KAAChB,EAAAA,EAAe,CACdE,MAAM,0BACNC,SAAUM,EAAE,wBACZJ,cAAe,CACbgD,SAAU,UAEZjD,WAAY,CACViD,SAAU,QACV7C,UAEFG,EAAAA,EAAAA,MAAA,QAAM2C,SA/DY,SAACC,GACvBA,EAAEC,iBACF,IAAIC,GAAaC,EAAAA,EAAAA,GAAczB,IAC3B0B,EAAAA,EAAAA,GAAsBF,IACxBpB,GAAY,SAACuB,GAAG,OAAMA,CAAG,KACrBC,EAAAA,EAAAA,IAA4B,OAAL5B,QAAK,IAALA,OAAK,EAALA,EAAOH,UAChCkB,EAAY,CACVJ,IAAK,6CACLD,MAAM,EACNE,QAAS,UAGXM,EAAe,CACbW,OAAQ7B,IAEP8B,MAAK,SAACC,GAAS,IAADC,EAAAC,EAEYC,EAAAC,EAAAC,EADrBC,GAAWC,EAAAA,EAAAA,IAAc,OAAHP,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKQ,YAAI,IAAAP,OAAN,EAAHA,EAAWQ,SACzB,OAARH,QAAQ,IAARA,GAAc,QAANJ,EAARI,EAAUI,YAAI,IAAAR,GAAdA,EAAgBS,IAClBjD,EAAS,sBAAuB,CAC9BO,MAAO,CACL2C,IAAa,OAARN,QAAQ,IAARA,GAAc,QAANH,EAARG,EAAUI,YAAI,IAAAP,OAAN,EAARA,EAAgBQ,IACrBE,YAAmC,QAAxBT,EAAU,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,oBAAY,IAAAV,EAAAA,EAAI,aACvCW,KAAyB,QAArBV,EAAU,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUU,iBAAS,IAAAX,EAAAA,EAAI,gBAIjCrB,EAAY,CACVJ,IAAK,mBACLD,MAAM,EACNE,QAAS,UAGbR,GAAY,SAACuB,GAAG,OAAMA,CAAG,GAC3B,IACCqB,OAAM,SAACC,GACNlC,EAAY,CACVJ,IAAI,mCAADuC,OAAqCD,GACxCvC,MAAM,EACNE,QAAS,UAEXR,GAAY,SAACuB,GAAG,OAAMA,CAAG,GAC3B,KAGJnB,EAAcgB,EAElB,EAiBuC7C,UAAWC,EAAAA,EAAMuE,gBAAgB5E,SAAA,EAChEQ,EAAAA,EAAAA,KAACqE,EAAAA,EAAqB,CACpBjE,MAAOX,EAAE,YACT6E,YAAa7E,EAAE,wBACf8E,aAAY,GAAAJ,OAAKK,EAAAA,GAAc,kBAC/BC,SAAUjD,EAAqB,SAC/BkD,KAAK,WACLC,MAAO1D,EAAMH,SACb8D,SA1Ec,SAACrC,GACvBrB,GAAS,SAAC2D,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE/D,SAAUyB,EAAEwC,OAAOJ,OAAK,GACzD,KA0EQ3E,EAAAA,EAAAA,KAAA,OACEJ,UAAWC,EAAAA,EAAMmF,sBACjBnF,MAAO,CACLoF,aAAc,KACdzF,UAEFQ,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAAA,EAAMqF,iBAAkBC,QAhCxB,WAEtBzE,EADU,IAEZ,EA6ByElB,SAC5DC,EAAE,wBAGPO,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAMmF,sBAAsBxF,UAC1CQ,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAAA,EAAMuF,qBAAqB5F,SACtCC,EAAE,6BAGPO,EAAAA,EAAAA,KAACqF,EAAAA,EAAoB,CAACtB,KAAK,SAASuB,WAAY7F,EAAE,mBAElDO,EAAAA,EAAAA,KAACuF,EAAAA,EAAW,CAACC,WAAYzD,EAAU0D,kBAAmBzD,UAKhE,C,yGCrIA,IAAM0D,EAAgB,CACpB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGW7C,EAAyB,SAAC/B,GACrC,QAAI4E,EAAcC,SAAS7E,EAE7B,EAEa8E,EAA8B,SAACpC,GAC1C,OAAQ,OAAJA,QAAI,IAAJA,IAAAA,EAAMmC,SAAS,OACO,KAAb,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,OAEjB,EAEaC,EAAa,SAACtC,GACzB,OAAQ,OAAJA,QAAI,IAAJA,GAAAA,EAAMmC,SAAS,KAAa,SACN,KAAb,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,QAAqB,YACxB,eACd,C","sources":["optimized/Auth/AuthCardWrapper.jsx","optimized/Auth/Forget/UserForget.jsx","optimized/Validation/Auth/invalidateAuthUsername.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport style from \"./Auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\nimport CreateButton from \"../Ui/Button/CreateButton\";\n\nconst AuthCardWrapper = ({\n  title,\n  subTitle,\n  titleStyle,\n  subTitleStyle,\n  isCreate,\n  onCreate,\n  children,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div className={style.auth_card_wrapper}>\n      {isCreate ? (\n        <div className={style.auth_create_container}>\n          <div>\n            <h6 className={style.auth_card_title} style={titleStyle}>\n              {title ? t(title) : t(\"hello\")}\n            </h6>\n            <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n              {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n            </h6>\n          </div>\n\n          <CreateButton\n            label=\"create_new_account\"\n            customStyle={{\n              margin: \"0\",\n            }}\n            onAction={onCreate}\n          />\n        </div>\n      ) : (\n        <>\n          <h6 className={style.auth_card_title} style={titleStyle}>\n            {title ? t(title) : t(\"hello\")}\n          </h6>\n          <h6 className={style.auth_card_subtitle} style={subTitleStyle}>\n            {subTitle ? subTitle : t(\"welcome_to_qviple\")}\n          </h6>\n        </>\n      )}\n\n      {children}\n    </div>\n  );\n};\n\nexport default memo(AuthCardWrapper);\n","import { useState } from \"react\";\nimport GetStarted from \"../GetStarted\";\nimport AuthCardWrapper from \"../AuthCardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport NotifyEvent from \"../../Utils/Snackbar/NotifyEvent\";\nimport AuthFormFieldWithIcon from \"../../Ui/Auth/AuthFormFieldWithIcon\";\nimport style from \"../Auth.module.css\";\nimport { invalidateAuthUsername } from \"../../Validation/Auth/invalidateAuthUsername\";\nimport {\n  existingRequiredField,\n  requiredField,\n} from \"../../Validation/functions/checkingRequiredField\";\nimport { useAuthUserForget } from \"../../Hooks/ApiHooks/Auth/auth-api\";\nimport { assestsAuthUrl } from \"../../Services/UrlConfig/AssestsBaseUrl\";\nimport ButtonWithTypeSubmit from \"../../Ui/Button/ButtonWithTypeSubmit\";\nimport { useNavigate } from \"react-router-dom\";\nimport { decryption } from \"../../Services/Encryption/decrypt\";\n\nconst UserForget = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const [state, setState] = useState({\n    username: \"\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n  const [errorField, setErrorField] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    msg: \"\",\n    variant: \"error\",\n  });\n  const [authUserForget] = useAuthUserForget();\n\n  const onChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, username: e.target.value }));\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    let validation = requiredField(state);\n    if (existingRequiredField(validation)) {\n      setDisabled((pre) => !pre);\n      if (invalidateAuthUsername(state?.username))\n        setSnackbar({\n          msg: \"Special Character not allowed in username.\",\n          open: true,\n          variant: \"error\",\n        });\n      else {\n        authUserForget({\n          forgot: state,\n        })\n          .then((res) => {\n            let response = decryption(res?.data?.encrypt);\n            if (response?.user?._id) {\n              navigate(\"/user/forget/verify\", {\n                state: {\n                  uid: response?.user?._id,\n                  phoneNumber: response?.sent_address ?? \"DONOT KNOW\",\n                  type: response?.sent_type ?? \"DONOT Type\",\n                },\n              });\n            } else {\n              setSnackbar({\n                msg: \"Invalid Username\",\n                open: true,\n                variant: \"error\",\n              });\n            }\n            setDisabled((pre) => !pre);\n          })\n          .catch((err) => {\n            setSnackbar({\n              msg: `Time out of request with reason ${err}`,\n              open: true,\n              variant: \"error\",\n            });\n            setDisabled((pre) => !pre);\n          });\n      }\n    } else {\n      setErrorField(validation);\n    }\n  };\n  const onForgetHandler = () => {\n    let url = \"/\";\n    navigate(url);\n  };\n  return (\n    <GetStarted>\n      <AuthCardWrapper\n        title=\"forgot_password_heading\"\n        subTitle={t(\"forgot_passowrd_note\")}\n        subTitleStyle={{\n          fontSize: \"0.7rem\",\n        }}\n        titleStyle={{\n          fontSize: \"1rem\",\n        }}\n      >\n        <form onSubmit={onSubmitHandler} className={style.auth_login_form}>\n          <AuthFormFieldWithIcon\n            label={t(\"username\")}\n            placeholder={t(\"username_placeholder\")}\n            fieldIconUrl={`${assestsAuthUrl}/auth-user.svg`}\n            validate={errorField[\"username\"]}\n            name=\"username\"\n            value={state.username}\n            onChange={onChangeHandler}\n          />\n          <div\n            className={style.auth_forget_container}\n            style={{\n              marginBottom: \"0\",\n            }}\n          >\n            <p className={style.auth_forget_text} onClick={onForgetHandler}>\n              {t(\"forgot_username\")}\n            </p>\n          </div>\n          <div className={style.auth_forget_container}>\n            <p className={style.auth_forgot_username}>\n              {t(\"forgot_username_note\")}\n            </p>\n          </div>\n          <ButtonWithTypeSubmit type=\"submit\" buttonText={t(\"find_account\")} />\n\n          <NotifyEvent eventState={snackbar} eventStateHandler={setSnackbar} />\n        </form>\n      </AuthCardWrapper>\n    </GetStarted>\n  );\n};\n\nexport default UserForget;\n","const specailSymbol = [\n  \"!\",\n  \"@\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"^\",\n  \"&\",\n  \"*\",\n  \"(\",\n  \")\",\n  \"+\",\n  \"~\",\n  \".\",\n  \",\",\n  \"/\",\n  \":\",\n  \";\",\n];\n\nexport const invalidateAuthUsername = (username) => {\n  if (specailSymbol.includes(username)) return true;\n  return false;\n};\n\nexport const invalidateAuthEmailOrMobile = (data) => {\n  if (data?.includes(\"@\")) return false;\n  else if (data?.length === 8) return true;\n  else return false;\n};\n\nexport const typeOfAuth = (data) => {\n  if (data?.includes(\"@\")) return \"e-mail\";\n  else if (data?.length === 8) return \"qviple id\";\n  else return \"mobile number\";\n};\n"],"names":["AuthCardWrapper","_ref","title","subTitle","titleStyle","subTitleStyle","isCreate","onCreate","children","t","useTranslation","_jsxs","className","style","auth_card_wrapper","auth_create_container","_jsx","auth_card_title","auth_card_subtitle","CreateButton","label","customStyle","margin","onAction","_Fragment","memo","navigate","useNavigate","_useState","useState","username","_useState2","_slicedToArray","state","setState","_useState3","_useState4","setDisabled","_useState5","_useState6","errorField","setErrorField","_useState7","open","msg","variant","_useState8","snackbar","setSnackbar","_useAuthUserForget","useAuthUserForget","authUserForget","GetStarted","fontSize","onSubmit","e","preventDefault","validation","requiredField","existingRequiredField","pre","invalidateAuthUsername","forgot","then","res","_res$data","_response$user","_response$user2","_response$sent_addres","_response$sent_type","response","decryption","data","encrypt","user","_id","uid","phoneNumber","sent_address","type","sent_type","catch","err","concat","auth_login_form","AuthFormFieldWithIcon","placeholder","fieldIconUrl","assestsAuthUrl","validate","name","value","onChange","prev","_objectSpread","target","auth_forget_container","marginBottom","auth_forget_text","onClick","auth_forgot_username","ButtonWithTypeSubmit","buttonText","NotifyEvent","eventState","eventStateHandler","specailSymbol","includes","invalidateAuthEmailOrMobile","length","typeOfAuth"],"sourceRoot":""}