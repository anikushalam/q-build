{"version":3,"file":"static/js/59757.28e3eb75.chunk.js","mappings":"0OASA,MA6EA,EA7E6BA,IAOtB,IAADC,EAAA,IAPwB,OAC5BC,EAAM,wBACNC,EAAuB,+BACvBC,EAA8B,iBAC9BC,EAAgB,mBAChBC,EAAkB,eAClBC,GACDP,EACC,MAAOQ,EAAgBC,IAAqBC,EAAAA,EAAAA,WAAS,IAC9CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,CACzDO,IAAK,GACLC,KAAK,KAEAC,IACLC,EAAAA,EAAAA,MAEIC,EAAmBC,IAAS,IAADC,EAC/BT,GAAaU,IAASA,IACtBL,EAAiC,CAC/BM,IAAQ,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKI,UACVC,IAAQ,OAAHL,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAKM,eAAO,IAAAL,OAAT,EAAHA,EAAcM,MACnBC,KAA2B,gBAAlB,OAAHR,QAAG,IAAHA,OAAG,EAAHA,EAAKS,aAA+B,gBAAkB,cAE3DC,MAAMC,IAAS,IAADC,EAONC,GANPrB,GAAaU,IAASA,IACf,OAAHS,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKG,YAAI,IAAAF,GAATA,EAAWG,QACbrB,EAAqB,CACnBC,IAAK,oFACLC,KAAK,IAGQ,YAAXhB,GAA2B,OAAHoB,QAAG,IAAHA,GAAY,QAATa,EAAHb,EAAKM,eAAO,IAAAO,GAAZA,EAAcG,WACxC7B,GAAkB,GAClBG,EAAeU,GAEnB,IAEDiB,MAAM,CAAC,EAAE,EAEd,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAMC,iCAAiCC,SAAA,CAC7B,OAAvBzC,QAAuB,IAAvBA,GAA8B,QAAPF,EAAvBE,EAAyB0C,aAAK,IAAA5C,OAAP,EAAvBA,EAAgC6C,KAAKC,IACpCC,EAAAA,EAAAA,KAACC,EAAAA,EAAqC,CACpCF,UAAWA,EACX7C,OAAQA,EACRmB,gBAAiBA,EACjB6B,uBAAwB9C,EACxB+C,aAAa,kBACbC,aAAW,MAId5C,IACCwC,EAAAA,EAAAA,KAACK,EAAAA,EAAuB,CACtB1C,YAAaA,EACbuC,uBAAwB9C,EACxBkD,cAAejD,EACfkD,UAAW9C,EACX+C,WAAYhD,EACZD,eAAgBA,IAGnBD,IAAsB0C,EAAAA,EAAAA,KAACS,EAAAA,EAAa,KACrCT,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CACVzC,IAAKF,EAAkBE,IACvBC,IAAKH,EAAkBG,IACvByC,OAAQA,IAAM3C,EAAqB,CAAEC,IAAK,GAAIC,KAAK,IACnD0C,SAAS,SACTC,KAAK,UAENhD,IAAYmC,EAAAA,EAAAA,KAACc,EAAAA,EAAO,MACjB,C,gFC/EV,MAwBA,EAxB0B9D,IAMnB,IANoB,MACzB+D,EAAK,MACLC,EAAK,aACLC,EAAY,QACZC,EAAO,qBACPC,GACDnE,EACC,MAAM,EAAEoE,IAAMC,EAAAA,EAAAA,MACd,OACE7B,EAAAA,EAAAA,MAAA,OACEC,UACEuB,IAAUC,EAAY,GAAAK,OACf5B,EAAAA,EAAM6B,2BAA0B,KAAAD,OAAI5B,EAAAA,EAAM8B,mCAC7C9B,EAAAA,EAAM6B,2BAEZL,QAASA,IAAMA,EAAQD,GACvBvB,MAAOyB,EAAqBvB,SAAA,EAE5BI,EAAAA,EAAAA,KAAA,MAAAJ,SAAKwB,EAAEL,MACPf,EAAAA,EAAAA,KAAA,OAAKyB,IAAI,iDAAiDC,IAAI,YAC1D,C","sources":["MembersTab/student/Mainbody/StudentClass/StudentAllFeesData/StudentAdmissionFees.jsx","MembersTab/student/Mainbody/StudentClass/StudentAllFeesData/StudentFeesButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport AdmissionFeesApplicationWiseUniversal from \"../../../../../StaffTab/StudentTab/MainContent/StudentAProfile/StudentFees/AdmissionFeesApplicationWiseUniversal\";\nimport StudentAdmissionPayFees from \"../../ViewProfile/FeesData/StudentAdmissionPayFees\";\nimport style from \"./StudentAllFeesData.module.css\";\nimport QvipleLoading from \"../../../../../Loader/QvipleLoading\";\nimport { useStudentBankValidationByAdmission } from \"../../../../../hooks/member_tab/admission-api\";\nimport { Notfication } from \"../../../../../validation/Snackbar\";\nimport QLoader from \"../../../../../Loader/QLoader\";\n\nconst StudentAdmissionFees = ({\n  viewAs,\n  sudentAdmissionFeesList,\n  sudentAdmissionFeesListRefetch,\n  feesQueryRefetch,\n  showingDataLoading,\n  isFeesEditable,\n}) => {\n  const [studentPayFees, setStudentPayFees] = useState(false);\n  const [installment, setInstallment] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [notificationState, setNotificationState] = useState({\n    msg: \"\",\n    run: false,\n  });\n  const [studentBankValidationByAdmission] =\n    useStudentBankValidationByAdmission();\n\n  const onAdmissionPaid = (val) => {\n    setDisabled((pre) => !pre);\n    studentBankValidationByAdmission({\n      fid: val?.financeId,\n      aid: val?.install?.appId,\n      flow: val?.collectFlow === \"Department\" ? \"BY_DEPARTMENT\" : \"BY_HOSTEL\",\n    })\n      .then((res) => {\n        setDisabled((pre) => !pre);\n        if (res?.data?.denied) {\n          setNotificationState({\n            msg: \"Before initiating payment. you must have a valid bank account to receive payment.\",\n            run: true,\n          });\n        } else {\n          if (viewAs === \"STUDENT\" && val?.install?.isEnable) {\n            setStudentPayFees(true);\n            setInstallment(val);\n          }\n        }\n      })\n      .catch({});\n  };\n  return (\n    <div className={style.student_admission_fees_container}>\n      {sudentAdmissionFeesList?.array?.map((admission) => (\n        <AdmissionFeesApplicationWiseUniversal\n          admission={admission}\n          viewAs={viewAs}\n          onAdmissionPaid={onAdmissionPaid}\n          onAdmissionFeesRefetch={sudentAdmissionFeesListRefetch}\n          renderPageAs=\"STUDENT_PROFILE\"\n          is_feesdata\n        />\n      ))}\n\n      {studentPayFees && (\n        <StudentAdmissionPayFees\n          installment={installment}\n          onAdmissionFeesRefetch={sudentAdmissionFeesListRefetch}\n          onFeesRefetch={feesQueryRefetch}\n          hideModal={setStudentPayFees}\n          addDisplay={studentPayFees}\n          isFeesEditable={isFeesEditable}\n        />\n      )}\n      {showingDataLoading && <QvipleLoading />}\n      <Notfication\n        msg={notificationState.msg}\n        run={notificationState.run}\n        setRun={() => setNotificationState({ msg: \"\", run: false })}\n        postiton=\"bottom\"\n        type=\"error\"\n      />\n      {disabled && <QLoader />}\n    </div>\n  );\n};\n\nexport default StudentAdmissionFees;\n","import React from \"react\";\nimport style from \"./StudentAllFeesData.module.css\";\nimport { useTranslation } from \"react-i18next\";\nconst StudentFeesButton = ({\n  label,\n  value,\n  currentValue,\n  onClick,\n  customStyleContainer,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <div\n      className={\n        value === currentValue\n          ? `${style.student_fees_btn_container} ${style.student_fees_btn_container_active}`\n          : style.student_fees_btn_container\n      }\n      onClick={() => onClick(currentValue)}\n      style={customStyleContainer}\n    >\n      <h6>{t(label)}</h6>\n      <img src=\"/images/studentclass/fees/fees_arrow_right.svg\" alt=\"arrow\" />\n    </div>\n  );\n};\n\nexport default StudentFeesButton;\n"],"names":["_ref","_sudentAdmissionFeesL","viewAs","sudentAdmissionFeesList","sudentAdmissionFeesListRefetch","feesQueryRefetch","showingDataLoading","isFeesEditable","studentPayFees","setStudentPayFees","useState","installment","setInstallment","disabled","setDisabled","notificationState","setNotificationState","msg","run","studentBankValidationByAdmission","useStudentBankValidationByAdmission","onAdmissionPaid","val","_val$install","pre","fid","financeId","aid","install","appId","flow","collectFlow","then","res","_res$data","_val$install2","data","denied","isEnable","catch","_jsxs","className","style","student_admission_fees_container","children","array","map","admission","_jsx","AdmissionFeesApplicationWiseUniversal","onAdmissionFeesRefetch","renderPageAs","is_feesdata","StudentAdmissionPayFees","onFeesRefetch","hideModal","addDisplay","QvipleLoading","Notfication","setRun","postiton","type","QLoader","label","value","currentValue","onClick","customStyleContainer","t","useTranslation","concat","student_fees_btn_container","student_fees_btn_container_active","src","alt"],"sourceRoot":""}