{"version":3,"file":"static/js/74289.70159c0d.chunk.js","mappings":"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","sources":["hooks/member_tab/department-api.js"],"sourcesContent":["import {\n  useGetActivatedMemberAccountQuery,\n  useDepartmentCreateFeesMutation,\n  useDepartmentAddDisplayPersonMutation,\n  useDepartmentAllChecklistQuery,\n  useDepartmentAllClassMasterQuery,\n  useDepartmentAllComplaintQuery,\n  useDepartmentAllExamQuery,\n  useDepartmentAllFeesQuery,\n  useDepartmentAllHolidayQuery,\n  useDepartmentAllStaffQuery,\n  useDepartmentAllSubjectMasterQuery,\n  useDepartmentBatchAllClassQuery,\n  useDepartmentComplaintSolveMutation,\n  useDepartmentCoverPhotoMutation,\n  useDepartmentCreatedChecklistMutation,\n  useDepartmentCreatedHolidayMutation,\n  useDepartmentCreateExamMutation,\n  useDepartmentDeleteHolidayMutation,\n  useDepartmentExamDetailQuery,\n  useDepartmentInfoUpdateMutation,\n  useDepartmentProfilePhotoMutation,\n  useDepartmentProfileQuery,\n  useDepartmentUpadateChecklistMutation,\n  useDepartmentComplaintDetailQuery,\n  useDepartmentElectionCreateMutation,\n  useDepartmentAllElectionQuery,\n  useDepartmentOneElectionQuery,\n  useDepartmentOneElectionAllCandidateQuery,\n  useDepartmentElectionActionMutation,\n  useDepartmentElectionSettingMutation,\n  useDepartmentBacklogClassMasterQuery,\n  useDepartmentBacklogSubjectMasterQuery,\n  useDepartmentBacklogSubjectAllStudentQuery,\n  useDepartmentBacklogSubjectAllStudentDropoutQuery,\n  useDepartmentBacklogOneStudentClearDropoutMutation,\n  useCreateParticipativeEventMutation,\n  useParticipateEventListQuery,\n  useParticipateEventDetailsQuery,\n  useAssignChecklistToStudentMutation,\n  useResultDeclarationMutation,\n  useParticipateEventStudentListQuery,\n  useDepartmentGetSiteInfoQuery,\n  useDepartmentUpdateSiteInfoMutation,\n  useGetInstituteDetailByPromoteQuery,\n  useGetDepartmentDetailByPromoteQuery,\n  useGetPromoteStudentByPromoteQuery,\n  useGetNotPromoteStudentByPromoteQuery,\n  useGetExaminationSectionDetailQuery,\n  ////////\n  useGetClassListExamQuery,\n  useGetSeatingListExamQuery,\n  useGetOneSeatingExamQuery,\n  useDestroyOneSeatingExamMutation,\n  useUpdateOneSeatingExamMutation,\n  useAddSeatingExamMutation,\n  useGetOneDepartmentBatchListQuery,\n  useWithoutPaymentParticipateApplyMutation,\n  useCreateAutomateSeatingArrangementMutation,\n  useGetAllExamFeeStructureQuery,\n  useUpdateExamFeeStructureMutation,\n  useExamFeeStructureDetailQuery,\n  useCreateBacklogExamMutation,\n  useGetBacklogExamListQuery,\n  useDepartmentAllClassMasterBacklogQuery,\n  useDepartmentAllSubjectMasterBacklogQuery,\n  useSendExamNotifyToSubjectQuery,\n  useCreateGradeSystemMutation,\n  useGetAllUniversalGradeQuery,\n  useGetOneGradeDetailQuery,\n  //\n  useGetMentorListQuery,\n  useAddMentorDepartmentMutation,\n  useGetOneMentorDetailQuery,\n  useGetOneMentorMenteeListQuery,\n  useAddNewMenteeMutation,\n  useRemoveMenteeMutation,\n  useGetAllQueryListQuery,\n  useGetQueryDetailQuery,\n  useMarkQueryMutation,\n  useGetAllMentorClassListQuery,\n  useGetClassStudentListQuery,\n  useAddSeatingBacklogExamMutation,\n  useCreateBacklogAutomateSeatingArrangementMutation,\n  useUpdateGradeSystemMutation,\n  useDepartmentDeleteChecklistMutation,\n  useUpdateSubjectCourseCreditMutation,\n  useAddMeetingByMentorMutation,\n  useAddMeetingByMentorScheduleMutation,\n  useAddMeetingByMentorEditMutation,\n  useGetAllMeetingByMentorQuery,\n  useGetOneMeetingDetailQuery,\n  useUndoPromoteStudentMutation,\n  useCreateSubjectExamMutation,\n  useDepartmentCopoSettingUpdateMutation,\n  useGetAllCertificateAuthorityQuery,\n  useCertificateAuthorityActionMutation,\n  useUpdateCertificateAuthorityFundMutation,\n  useUpdateMutlipleLeaveConfigMutation,\n  useUpdateOneStaffLeaveConfigMutation,\n  useRaiseLeaveRequestByStaffMutation,\n  useGetManageCOffLeaveQuery,\n  useMarkCOffLeaveMutation,\n  useGetLeaveOverviewCountQuery,\n  useGetLeaveOverviewIssueQuery,\n  useGetAllExcelByPromoteQuery,\n  useUpdateExcelByPromoteMutation,\n  useDeleteExcelByPromoteMutation,\n  useExportPromoteStudentExcelMutation,\n  useLeaveConfigAllDetailQuery,\n  useLeaveCarryAcademicConfigRuleMutation,\n  useLeaveAllottmentStaffListQuery,\n  useLeaveSetOffRuleMutation,\n  useLeaveMarkHolidayMutation,\n  useUpdateSubjectCoursePassingCreditMutation,\n  useUpdateDepartmentProgrammeMutation,\n  useLatStaffAddMutation,\n  useLatStaffRemoveMutation,\n  useLatAuthorityGetAllRequestQuery,\n  useLatAuthorityGetAllHistoryQuery,\n  useLatAuthorityGetAllStaffQuery,\n  useGetCertificateInstituteChargesQuery,\n  useCertificateAuthorityExportExcelMutation,\n  useDepartmentAllStaffMentorMutation,\n  useDepartmentAllSubjectTimetableExportMutation,\n  useCertificateUploadPdfBackendMutation,\n} from \"../../services/staff_department/departmentApi\";\n\nexport const useGetActivatedMemberAccount = (args) => {\n  const {\n    data: getActivatedMemberAccount,\n    refetch: getActivatedMemberAccountRefetch,\n  } = useGetActivatedMemberAccountQuery(args.data, { skip: args.skip });\n  return { getActivatedMemberAccount, getActivatedMemberAccountRefetch };\n};\n\nexport const useDepartmentProfile = (args) => {\n  const { data: departmentProfile, refetch: departmentProfileRefetch } =\n    useDepartmentProfileQuery(args.did, {\n      skip: args.skip,\n    });\n  return { departmentProfile, departmentProfileRefetch };\n};\n\nexport const useDepartmentProfilePhoto = () => {\n  const [departmentProfilePhoto] = useDepartmentProfilePhotoMutation();\n  return [departmentProfilePhoto];\n};\n\nexport const useDepartmentCoverPhoto = () => {\n  const [departmentCoverPhoto] = useDepartmentCoverPhotoMutation();\n  return [departmentCoverPhoto];\n};\n\nexport const useDepartmentInfoUpdate = () => {\n  const [departmentInfoUpdate] = useDepartmentInfoUpdateMutation();\n  return [departmentInfoUpdate];\n};\n\nexport const useDepartmentAddDisplayPerson = () => {\n  const [departmentAddDisplayPerson] = useDepartmentAddDisplayPersonMutation();\n  return [departmentAddDisplayPerson];\n};\n\nexport const useDepartmentAllStaff = (args) => {\n  const { data: departmentAllStaff, refetch: departmentAllStaffRefetch } =\n    useDepartmentAllStaffQuery(args.data, { skip: args.skip });\n  return { departmentAllStaff, departmentAllStaffRefetch };\n};\n\nexport const useDepartmentBatchAllClass = (id) => {\n  const {\n    data: departmentBatchAllClass,\n    refetch: departmentBatchAllClassRefetch,\n  } = useDepartmentBatchAllClassQuery(id.data, { skip: id.skip });\n  return { departmentBatchAllClass, departmentBatchAllClassRefetch };\n};\n\nexport const useDepartmentCreatedHoliday = () => {\n  const [departmentCreatedHoliday] = useDepartmentCreatedHolidayMutation();\n  return [departmentCreatedHoliday];\n};\n\nexport const useDepartmentAllHoliday = (id) => {\n  const { data: departmentAllHoliday, refetch: departmentAllHolidayRefetch } =\n    useDepartmentAllHolidayQuery(id);\n  return { departmentAllHoliday, departmentAllHolidayRefetch };\n};\n\nexport const useDepartmentDeleteHoliday = () => {\n  const [departmentDeleteHoliday] = useDepartmentDeleteHolidayMutation();\n  return [departmentDeleteHoliday];\n};\n\nexport const useDepartmentCreatedChecklist = () => {\n  const [departmentCreatedChecklist] = useDepartmentCreatedChecklistMutation();\n  return [departmentCreatedChecklist];\n};\n\nexport const useDepartmentAllChecklist = (args) => {\n  const {\n    data: departmentAllChecklist,\n    refetch: departmentAllChecklistRefetch,\n  } = useDepartmentAllChecklistQuery(args.data, { skip: args.skip });\n  return { departmentAllChecklist, departmentAllChecklistRefetch };\n};\n\nexport const useDepartmentUpadateChecklist = () => {\n  const [departmentUpadateChecklist] = useDepartmentUpadateChecklistMutation();\n  return [departmentUpadateChecklist];\n};\n\nexport const useDepartmentAllClassMaster = (id) => {\n  const {\n    data: departmentAllClassMaster,\n    refetch: departmentAllClassMasterRefetch,\n  } = useDepartmentAllClassMasterQuery(id.data, { skip: id.skip });\n  return { departmentAllClassMaster, departmentAllClassMasterRefetch };\n};\n\nexport const useDepartmentAllSubjectMaster = (id) => {\n  const {\n    data: departmentAllSubjectMaster,\n    refetch: departmentAllSubjectMasterRefetch,\n  } = useDepartmentAllSubjectMasterQuery(id.data, { skip: id.skip });\n  return { departmentAllSubjectMaster, departmentAllSubjectMasterRefetch };\n};\n\nexport const useDepartmentCreateExam = () => {\n  const [departmentCreateExam] = useDepartmentCreateExamMutation();\n  return [departmentCreateExam];\n};\n\nexport const useDepartmentAllExam = (id) => {\n  const { data: departmentAllExam, refetch: departmentAllExamRefetch } =\n    useDepartmentAllExamQuery(id.data, { skip: id.skip });\n  return { departmentAllExam, departmentAllExamRefetch };\n};\n\nexport const useDepartmentExamDetail = (args) => {\n  const { data: departmentExamDetail, refetch: departmentExamDetailRefetch } =\n    useDepartmentExamDetailQuery(args.eid, { skip: args.skip });\n  return { departmentExamDetail, departmentExamDetailRefetch };\n};\n\nexport const useDepartmentAllComplaint = (id) => {\n  const {\n    data: departmentAllComplaint,\n    refetch: departmentAllComplaintRefetch,\n  } = useDepartmentAllComplaintQuery(id.data, { skip: id.skip });\n  return { departmentAllComplaint, departmentAllComplaintRefetch };\n};\n\nexport const useDepartmentComplaintDetail = (id) => {\n  const {\n    data: departmentComplaintDetail,\n    refetch: departmentComplaintDetailRefetch,\n  } = useDepartmentComplaintDetailQuery(id.data, { skip: id.skip });\n  return { departmentComplaintDetail, departmentComplaintDetailRefetch };\n};\n\nexport const useDepartmentComplaintSolve = () => {\n  const [departmentComplaintSolve] = useDepartmentComplaintSolveMutation();\n  return [departmentComplaintSolve];\n};\n\nexport const useDepartmentAllFees = (id) => {\n  const { data: departmentAllFees, refetch: departmentAllFeesRefetch } =\n    useDepartmentAllFeesQuery(id.data, { skip: id.skip });\n  return { departmentAllFees, departmentAllFeesRefetch };\n};\n\nexport const useDepartmentCreateFees = () => {\n  const [departmentCreateFees] = useDepartmentCreateFeesMutation();\n  return [departmentCreateFees];\n};\n\nexport const useDepartmentElectionCreate = () => {\n  const [departmentElectionCreate] = useDepartmentElectionCreateMutation();\n  return [departmentElectionCreate];\n};\n\nexport const useDepartmentAllElection = (args) => {\n  const { data: departmentAllElection, refetch: departmentAllElectionRefetch } =\n    useDepartmentAllElectionQuery(args.data, { skip: args.skip });\n  return { departmentAllElection, departmentAllElectionRefetch };\n};\nexport const useDepartmentOneElection = (args) => {\n  const { data: departmentOneElection, refetch: departmentOneElectionRefetch } =\n    useDepartmentOneElectionQuery(args.id, { skip: args.skip });\n  return { departmentOneElection, departmentOneElectionRefetch };\n};\n\nexport const useDepartmentOneElectionAllCandidate = (args) => {\n  const {\n    data: departmentOneElectionAllCandidate,\n    refetch: departmentOneElectionAllCandidateRefetch,\n  } = useDepartmentOneElectionAllCandidateQuery(args.data, { skip: args.skip });\n  return {\n    departmentOneElectionAllCandidate,\n    departmentOneElectionAllCandidateRefetch,\n  };\n};\n\nexport const useDepartmentElectionAction = () => {\n  const [departmentElectionAction] = useDepartmentElectionActionMutation();\n  return [departmentElectionAction];\n};\nexport const useDepartmentElectionSetting = () => {\n  const [departmentElectionSetting] = useDepartmentElectionSettingMutation();\n  return [departmentElectionSetting];\n};\n\nexport const useDepartmentBacklogClassMaster = (args) => {\n  const { data: backlogClassMaster, refetch: backlogClassMasterRefetch } =\n    useDepartmentBacklogClassMasterQuery(args.data, { skip: args.skip });\n  return { backlogClassMaster, backlogClassMasterRefetch };\n};\n\nexport const useDepartmentBacklogSubjectMaster = (args) => {\n  const { data: backlogSubjectMaster, refetch: backlogSubjectMasterRefetch } =\n    useDepartmentBacklogSubjectMasterQuery(args.data, { skip: args.skip });\n  return { backlogSubjectMaster, backlogSubjectMasterRefetch };\n};\n\nexport const useDepartmentBacklogSubjectAllStudent = (args) => {\n  const {\n    data: backlogSubjectAllStudent,\n    refetch: backlogSubjectAllStudentRefetch,\n  } = useDepartmentBacklogSubjectAllStudentQuery(args.data, {\n    skip: args.skip,\n  });\n  return { backlogSubjectAllStudent, backlogSubjectAllStudentRefetch };\n};\n\nexport const useDepartmentBacklogSubjectAllStudentDropout = (args) => {\n  const {\n    data: backlogSubjectAllStudentDropout,\n    refetch: backlogSubjectAllStudentDropoutRefetch,\n  } = useDepartmentBacklogSubjectAllStudentDropoutQuery(args.data, {\n    skip: args.skip,\n  });\n  return {\n    backlogSubjectAllStudentDropout,\n    backlogSubjectAllStudentDropoutRefetch,\n  };\n};\n\nexport const useDepartmentBacklogOneStudentClearDropout = () => {\n  const [studentClearDropout] =\n    useDepartmentBacklogOneStudentClearDropoutMutation();\n  return [studentClearDropout];\n};\n\nexport const useCreateParticipativeEvent = () => {\n  const [createparticipativeEvent] = useCreateParticipativeEventMutation();\n  return [createparticipativeEvent];\n};\n\nexport const useParticipateEventList = (args) => {\n  const {\n    data: participativeEventList,\n    refetch: participativeEventListRefetch,\n  } = useParticipateEventListQuery(args.data, { skip: args?.skip });\n  return { participativeEventList, participativeEventListRefetch };\n};\n\nexport const useParticipateStudentEventList = (args) => {\n  const {\n    data: participativeEventStudentList,\n    refetch: participativeEventStudentListRefetch,\n  } = useParticipateEventStudentListQuery(args.data, { skip: args?.skip });\n  return {\n    participativeEventStudentList,\n    participativeEventStudentListRefetch,\n  };\n};\nexport const useParticipateEventDetails = (args) => {\n  const {\n    data: participativeEventDetails,\n    refetch: participativeEventDetailsRefetch,\n  } = useParticipateEventDetailsQuery(\n    args.pid\n    // { skip: args?.skip }\n  );\n\n  return { participativeEventDetails, participativeEventDetailsRefetch };\n};\n\nexport const useCheckListStudent = () => {\n  const [checkListToStudent] = useAssignChecklistToStudentMutation();\n  return [checkListToStudent];\n};\n\nexport const useParticipateResultDeclaration = () => {\n  const [participateResultDeclaration] = useResultDeclarationMutation();\n  return [participateResultDeclaration];\n};\n\nexport const useDepartmentGetSiteInfo = (args) => {\n  const { data: departmentGetSiteInfo, refetch: departmentGetSiteInfoRefetch } =\n    useDepartmentGetSiteInfoQuery(args.did, { skip: args.skip });\n  return { departmentGetSiteInfo, departmentGetSiteInfoRefetch };\n};\n\nexport const useDepartmentUpdateSiteInfo = () => {\n  const [departmentUpdateSiteInfo] = useDepartmentUpdateSiteInfoMutation();\n  return [departmentUpdateSiteInfo];\n};\n\nexport const useGetInstituteDetailByPromote = (args) => {\n  const {\n    data: getInstituteDetailByPromote,\n    refetch: getInstituteDetailByPromoteRefetch,\n  } = useGetInstituteDetailByPromoteQuery(args.id, { skip: args.skip });\n  return { getInstituteDetailByPromote, getInstituteDetailByPromoteRefetch };\n};\n\nexport const useGetDepartmentDetailByPromote = (args) => {\n  const {\n    data: getDepartmentDetailByPromote,\n    refetch: getDepartmentDetailByPromoteRefetch,\n  } = useGetDepartmentDetailByPromoteQuery(args.data, { skip: args.skip });\n  return { getDepartmentDetailByPromote, getDepartmentDetailByPromoteRefetch };\n};\n\nexport const useGetPromoteStudentByPromote = (args) => {\n  const {\n    data: getPromoteStudentByPromote,\n    refetch: getPromoteStudentByPromoteRefetch,\n  } = useGetPromoteStudentByPromoteQuery(args.cid, { skip: args.skip });\n  return { getPromoteStudentByPromote, getPromoteStudentByPromoteRefetch };\n};\n\nexport const useGetNotPromoteStudentByPromote = (args) => {\n  const {\n    data: getNotPromoteStudentByPromote,\n    refetch: getNotPromoteStudentByPromoteRefetch,\n  } = useGetNotPromoteStudentByPromoteQuery(args.data, { skip: args.skip });\n  return {\n    getNotPromoteStudentByPromote,\n    getNotPromoteStudentByPromoteRefetch,\n  };\n};\n\nexport const useGetExaminationSectionDetail = (args) => {\n  const {\n    data: getExaminationSectionDetail,\n    refetch: getExaminationSectionDetailRefetch,\n  } = useGetExaminationSectionDetailQuery(args.did, { skip: args.skip });\n  return {\n    getExaminationSectionDetail,\n    getExaminationSectionDetailRefetch,\n  };\n};\n\n/////////\nexport const useGetClassListExam = (args) => {\n  const { data: getClassListExam, refetch: getClassListExamRefetch } =\n    useGetClassListExamQuery(args.data, { skip: args.skip });\n  return {\n    getClassListExam,\n    getClassListExamRefetch,\n  };\n};\n\nexport const useGetSeatingListExam = (args) => {\n  const { data: getSeatingListExam, refetch: getSeatingListExamRefetch } =\n    useGetSeatingListExamQuery(args.data, { skip: args.skip });\n  return {\n    getSeatingListExam,\n    getSeatingListExamRefetch,\n  };\n};\n\nexport const useGetOneSeatingExam = (args) => {\n  const { data: getOneSeatingExam, refetch: getOneSeatingExamRefetch } =\n    useGetOneSeatingExamQuery(args.said, { skip: args.skip });\n  return {\n    getOneSeatingExam,\n    getOneSeatingExamRefetch,\n  };\n};\n\nexport const useDestroyOneSeatingExam = () => {\n  const [destroyOneSeatingExam] = useDestroyOneSeatingExamMutation();\n  return [destroyOneSeatingExam];\n};\nexport const useUpdateOneSeatingExam = () => {\n  const [updateOneSeatingExam] = useUpdateOneSeatingExamMutation();\n  return [updateOneSeatingExam];\n};\nexport const useAddSeatingExam = () => {\n  const [addSeatingExam] = useAddSeatingExamMutation();\n  return [addSeatingExam];\n};\n\nexport const useGetOneDepartmentBatchList = (args) => {\n  const {\n    data: getOneDepartmentBatchList,\n    refetch: getOneDepartmentBatchListRefetch,\n  } = useGetOneDepartmentBatchListQuery(args.did, { skip: args.skip });\n  return {\n    getOneDepartmentBatchList,\n    getOneDepartmentBatchListRefetch,\n  };\n};\nexport const useWithoutPaymentParticipateApply = () => {\n  const [withoutPaymentParticipateApply] =\n    useWithoutPaymentParticipateApplyMutation();\n  return [withoutPaymentParticipateApply];\n};\n\nexport const useCreateAutomateSeatingArrangement = () => {\n  const [createAutomateSeatingArrangement] =\n    useCreateAutomateSeatingArrangementMutation();\n  return [createAutomateSeatingArrangement];\n};\n\nexport const useGetAllExamFeeStructure = (args) => {\n  const {\n    data: getAllExamFeeStructure,\n    refetch: getAllExamFeeStructureRefetch,\n  } = useGetAllExamFeeStructureQuery(args.data, { skip: args.skip });\n  return {\n    getAllExamFeeStructure,\n    getAllExamFeeStructureRefetch,\n  };\n};\nexport const useUpdateExamFeeStructure = () => {\n  const [updateExamFeeStructure] = useUpdateExamFeeStructureMutation();\n  return [updateExamFeeStructure];\n};\n\nexport const useExamFeeStructureDetail = (args) => {\n  const {\n    data: examFeeStructureDetail,\n    refetch: examFeeStructureDetailRefetch,\n  } = useExamFeeStructureDetailQuery(args.efid, { skip: args.skip });\n  return {\n    examFeeStructureDetail,\n    examFeeStructureDetailRefetch,\n  };\n};\nexport const useCreateBacklogExam = () => {\n  const [createBacklogExam] = useCreateBacklogExamMutation();\n  return [createBacklogExam];\n};\nexport const useGetBacklogExamList = (args) => {\n  const { data: getBacklogExamList, refetch: getBacklogExamListRefetch } =\n    useGetBacklogExamListQuery(args.did, { skip: args.skip });\n  return {\n    getBacklogExamList,\n    getBacklogExamListRefetch,\n  };\n};\n\nexport const useDepartmentAllClassMasterBacklog = (id) => {\n  const {\n    data: departmentAllClassMasterBacklog,\n    refetch: departmentAllClassMasterBacklogRefetch,\n  } = useDepartmentAllClassMasterBacklogQuery(id.data, { skip: id.skip });\n  return {\n    departmentAllClassMasterBacklog,\n    departmentAllClassMasterBacklogRefetch,\n  };\n};\n\nexport const useDepartmentAllSubjectMasterBacklog = (id) => {\n  const {\n    data: departmentAllSubjectMasterBacklog,\n    refetch: departmentAllSubjectMasterBacklogRefetch,\n  } = useDepartmentAllSubjectMasterBacklogQuery(id.data, { skip: id.skip });\n  return {\n    departmentAllSubjectMasterBacklog,\n    departmentAllSubjectMasterBacklogRefetch,\n  };\n};\nexport const useSendExamNotifyToSubject = (id) => {\n  const {\n    data: sendExamNotifyToSubject,\n    refetch: sendExamNotifyToSubjectRefetch,\n  } = useSendExamNotifyToSubjectQuery(id.eid, { skip: id.skip });\n  return {\n    sendExamNotifyToSubject,\n    sendExamNotifyToSubjectRefetch,\n  };\n};\n\nexport const useCreateGradeSystem = () => {\n  const [createGradeSystem] = useCreateGradeSystemMutation();\n  return [createGradeSystem];\n};\nexport const useGetAllUniversalGrade = (id) => {\n  const { data: getAllUniversalGrade, refetch: getAllUniversalGradeRefetch } =\n    useGetAllUniversalGradeQuery({ skip: id.skip });\n  return {\n    getAllUniversalGrade,\n    getAllUniversalGradeRefetch,\n  };\n};\nexport const useGetOneGradeDetail = (id) => {\n  const { data: getOneGradeDetail, refetch: getOneGradeDetailRefetch } =\n    useGetOneGradeDetailQuery(id.did, { skip: id.skip });\n  return {\n    getOneGradeDetail,\n    getOneGradeDetailRefetch,\n  };\n};\n\n//\n\nexport const useGetMentorList = (id) => {\n  const { data: getMentorList, refetch: getMentorListRefetch } =\n    useGetMentorListQuery(id.data, { skip: id.skip });\n  return {\n    getMentorList,\n    getMentorListRefetch,\n  };\n};\n\nexport const useAddMentorDepartment = () => {\n  const [addMentorDepartment] = useAddMentorDepartmentMutation();\n  return [addMentorDepartment];\n};\n\nexport const useGetOneMentorDetail = (id) => {\n  const { data: getOneMentorDetail, refetch: getOneMentorDetailRefetch } =\n    useGetOneMentorDetailQuery(id.mid, { skip: id.skip });\n  return {\n    getOneMentorDetail,\n    getOneMentorDetailRefetch,\n  };\n};\n\nexport const useGetOneMentorMenteeList = (id) => {\n  const {\n    data: getOneMentorMenteeList,\n    refetch: getOneMentorMenteeListRefetch,\n  } = useGetOneMentorMenteeListQuery(id.data, { skip: id.skip });\n  return {\n    getOneMentorMenteeList,\n    getOneMentorMenteeListRefetch,\n  };\n};\n\nexport const useAddNewMentee = () => {\n  const [addNewMentee] = useAddNewMenteeMutation();\n  return [addNewMentee];\n};\n\nexport const useRemoveMentee = () => {\n  const [removeMentee] = useRemoveMenteeMutation();\n  return [removeMentee];\n};\n\nexport const useGetAllQueryList = (id) => {\n  const { data: getAllQueryList, refetch: getAllQueryListRefetch } =\n    useGetAllQueryListQuery(id.data, { skip: id.skip });\n  return {\n    getAllQueryList,\n    getAllQueryListRefetch,\n  };\n};\n\nexport const useGetQueryDetail = (id) => {\n  const { data: getQueryDetail, refetch: getQueryDetailRefetch } =\n    useGetQueryDetailQuery(id.qid, { skip: id.skip });\n  return {\n    getQueryDetail,\n    getQueryDetailRefetch,\n  };\n};\n\nexport const useMarkQuery = () => {\n  const [markQuery] = useMarkQueryMutation();\n  return [markQuery];\n};\n\nexport const useGetAllMentorClassList = (id) => {\n  const { data: getAllMentorClassList, refetch: getAllMentorClassListRefetch } =\n    useGetAllMentorClassListQuery(id.data, { skip: id.skip });\n  return {\n    getAllMentorClassList,\n    getAllMentorClassListRefetch,\n  };\n};\n\nexport const useGetClassStudentList = (id) => {\n  const { data: getClassStudentList, refetch: getClassStudentListRefetch } =\n    useGetClassStudentListQuery(id.cid, { skip: id.skip });\n  return {\n    getClassStudentList,\n    getClassStudentListRefetch,\n  };\n};\n\nexport const useAddSeatingBacklogExam = () => {\n  const [addSeatingBacklogExam] = useAddSeatingBacklogExamMutation();\n  return [addSeatingBacklogExam];\n};\nexport const useCreateBacklogAutomateSeatingArrangement = () => {\n  const [createBacklogAutomateSeatingArrangement] =\n    useCreateBacklogAutomateSeatingArrangementMutation();\n  return [createBacklogAutomateSeatingArrangement];\n};\n\nexport const useUpdateGradeSystem = () => {\n  const [updateGradeSystem] = useUpdateGradeSystemMutation();\n  return [updateGradeSystem];\n};\n\nexport const useDepartmentDeleteChecklist = () => {\n  const [departmentDeleteChecklist] = useDepartmentDeleteChecklistMutation();\n  return [departmentDeleteChecklist];\n};\nexport const useUpdateSubjectCourseCredit = () => {\n  const [updateSubjectCourseCredit] = useUpdateSubjectCourseCreditMutation();\n  return [updateSubjectCourseCredit];\n};\nexport const useUpdateSubjectCoursePassingCredit = () => {\n  const [udateSubjectCoursePassingCredit] =\n    useUpdateSubjectCoursePassingCreditMutation();\n  return [udateSubjectCoursePassingCredit];\n};\n\nexport const useUpdateDepartmentProgramme = () => {\n  const [updateDepartmentProgramme] = useUpdateDepartmentProgrammeMutation();\n  return [updateDepartmentProgramme];\n};\n\nexport const useAddMeetingByMentor = () => {\n  const [addMeetingByMentor] = useAddMeetingByMentorMutation();\n  return [addMeetingByMentor];\n};\nexport const useAddMeetingScheduleByMentor = () => {\n  const [addMeetingScheduleByMentor] = useAddMeetingByMentorScheduleMutation();\n  return [addMeetingScheduleByMentor];\n};\nexport const useAddMeetingByMentorEdit = () => {\n  const [addMeetingByMentorEdit] = useAddMeetingByMentorEditMutation();\n  return [addMeetingByMentorEdit];\n};\n\nexport const useGetAllMeetingByMentor = (args) => {\n  const { data: getAllMeetingByMentor, refetch: getAllMeetingByMentorRefetch } =\n    useGetAllMeetingByMentorQuery(args.data, { skip: args.skip });\n  return {\n    getAllMeetingByMentor,\n    getAllMeetingByMentorRefetch,\n  };\n};\nexport const useGetOneMeetingDetail = (args) => {\n  const { data: getOneMeetingDetail, refetch: getOneMeetingDetailRefetch } =\n    useGetOneMeetingDetailQuery(args.meid, { skip: args.skip });\n  return {\n    getOneMeetingDetail,\n    getOneMeetingDetailRefetch,\n  };\n};\n\nexport const useUndoPromoteStudent = () => {\n  const [undoPromoteStudent] = useUndoPromoteStudentMutation();\n  return [undoPromoteStudent];\n};\nexport const useCreateSubjectExam = () => {\n  const [createSubjectExam] = useCreateSubjectExamMutation();\n  return [createSubjectExam];\n};\nexport const useDepartmentCopoSettingUpdate = () => {\n  const [departmentCopoSettingUpdate] =\n    useDepartmentCopoSettingUpdateMutation();\n  return [departmentCopoSettingUpdate];\n};\n\nexport const useGetAllCertificateAuthority = (args) => {\n  const {\n    data: getAllCertificateAuthority,\n    refetch: getAllCertificateAuthorityRefetch,\n  } = useGetAllCertificateAuthorityQuery(args.data, { skip: args.skip });\n  return {\n    getAllCertificateAuthority,\n    getAllCertificateAuthorityRefetch,\n  };\n};\nexport const useCertificateAuthorityAction = () => {\n  const [certificateAuthorityAction] = useCertificateAuthorityActionMutation();\n  return [certificateAuthorityAction];\n};\nexport const useCertificateUploadPdfBackend = () => {\n  const [certificateUploadPdfBackend] =\n    useCertificateUploadPdfBackendMutation();\n  return [certificateUploadPdfBackend];\n};\n\nexport const useUpdateCertificateAuthorityFund = () => {\n  const [updateCertificateAuthorityFund] =\n    useUpdateCertificateAuthorityFundMutation();\n  return [updateCertificateAuthorityFund];\n};\n\nexport const useUpdateMutlipleLeaveConfig = () => {\n  const [updateMutlipleLeaveConfig] = useUpdateMutlipleLeaveConfigMutation();\n  return [updateMutlipleLeaveConfig];\n};\nexport const useUpdateOneStaffLeaveConfig = () => {\n  const [updateOneStaffLeaveConfig] = useUpdateOneStaffLeaveConfigMutation();\n  return [updateOneStaffLeaveConfig];\n};\n\nexport const useGetManageCOffLeave = (args) => {\n  const { data: getManageCOffLeave, refetch: getManageCOffLeaveRefetch } =\n    useGetManageCOffLeaveQuery(args.data, { skip: args.skip });\n  return {\n    getManageCOffLeave,\n    getManageCOffLeaveRefetch,\n  };\n};\n\nexport const useRaiseLeaveRequestByStaff = () => {\n  const [raiseLeaveRequestByStaff] = useRaiseLeaveRequestByStaffMutation();\n  return [raiseLeaveRequestByStaff];\n};\n\nexport const useMarkCOffLeave = () => {\n  const [markCOffLeave] = useMarkCOffLeaveMutation();\n  return [markCOffLeave];\n};\n\nexport const useGetLeaveOverviewCount = (args) => {\n  const { data: getLeaveOverviewCount, refetch: getLeaveOverviewCountRefetch } =\n    useGetLeaveOverviewCountQuery(args.data, { skip: args.skip });\n  return {\n    getLeaveOverviewCount,\n    getLeaveOverviewCountRefetch,\n  };\n};\n\nexport const useGetLeaveOverviewIssue = (args) => {\n  const { data: getLeaveOverviewIssue, refetch: getLeaveOverviewIssueRefetch } =\n    useGetLeaveOverviewIssueQuery(args.data, { skip: args.skip });\n  return {\n    getLeaveOverviewIssue,\n    getLeaveOverviewIssueRefetch,\n  };\n};\n\nexport const useGetAllExcelByPromote = (args) => {\n  const { data: getAllExcelByPromote, refetch: getAllExcelByPromoteRefetch } =\n    useGetAllExcelByPromoteQuery(args.data, { skip: args.skip });\n  return { getAllExcelByPromote, getAllExcelByPromoteRefetch };\n};\n\nexport const useUpdateExcelByPromote = () => {\n  const [updateExcelByPromote] = useUpdateExcelByPromoteMutation();\n  return [updateExcelByPromote];\n};\n\nexport const useDeleteExcelByPromote = () => {\n  const [deleteExcelByPromote] = useDeleteExcelByPromoteMutation();\n  return [deleteExcelByPromote];\n};\n\nexport const useExportPromoteStudentExcel = () => {\n  const [exportPromoteStudentExcel] = useExportPromoteStudentExcelMutation();\n  return [exportPromoteStudentExcel];\n};\n\nexport const useLeaveConfigAllDetail = (args) => {\n  const { data: leaveConfigAllDetail, refetch: leaveConfigAllDetailRefetch } =\n    useLeaveConfigAllDetailQuery(args.id, { skip: args.skip });\n  return { leaveConfigAllDetail, leaveConfigAllDetailRefetch };\n};\n\nexport const useLeaveCarryAcademicConfigRule = () => {\n  const [leaveCarryAcademicConfigRule] =\n    useLeaveCarryAcademicConfigRuleMutation();\n  return [leaveCarryAcademicConfigRule];\n};\nexport const useLeaveAllottmentStaffList = (args) => {\n  const {\n    data: leaveAllottmentStaffList,\n    refetch: leaveAllottmentStaffListRefetch,\n  } = useLeaveAllottmentStaffListQuery(args.data, { skip: args.skip });\n  return { leaveAllottmentStaffList, leaveAllottmentStaffListRefetch };\n};\n\nexport const useLeaveSetOffRule = () => {\n  const [leaveSetOffRule] = useLeaveSetOffRuleMutation();\n  return [leaveSetOffRule];\n};\nexport const useLeaveMarkHoliday = () => {\n  const [leaveMarkHoliday] = useLeaveMarkHolidayMutation();\n  return [leaveMarkHoliday];\n};\nexport const useLatStaffAdd = () => {\n  const [latStaffAdd] = useLatStaffAddMutation();\n  return [latStaffAdd];\n};\nexport const useLatStaffRemove = () => {\n  const [latStaffRemove] = useLatStaffRemoveMutation();\n  return [latStaffRemove];\n};\n\nexport const useLatAuthorityGetAllRequest = (args) => {\n  const {\n    data: latAuthorityGetAllRequest,\n    refetch: latAuthorityGetAllRequestRefetch,\n  } = useLatAuthorityGetAllRequestQuery(args.data, { skip: args.skip });\n  return { latAuthorityGetAllRequest, latAuthorityGetAllRequestRefetch };\n};\n\nexport const useLatAuthorityGetAllHistory = (args) => {\n  const {\n    data: latAuthorityGetAllHistory,\n    refetch: latAuthorityGetAllHistoryRefetch,\n  } = useLatAuthorityGetAllHistoryQuery(args.data, { skip: args.skip });\n  return { latAuthorityGetAllHistory, latAuthorityGetAllHistoryRefetch };\n};\n\nexport const useLatAuthorityGetAllStaff = (args) => {\n  const {\n    data: latAuthorityGetAllStaff,\n    refetch: latAuthorityGetAllStaffRefetch,\n  } = useLatAuthorityGetAllStaffQuery(args.data, { skip: args.skip });\n  return { latAuthorityGetAllStaff, latAuthorityGetAllStaffRefetch };\n};\n\nexport const useGetCertificateInstituteCharges = (args) => {\n  const {\n    data: getCertificateInstituteCharges,\n    refetch: getCertificateInstituteChargesRefetch,\n  } = useGetCertificateInstituteChargesQuery(args.data, { skip: args.skip });\n  return {\n    getCertificateInstituteCharges,\n    getCertificateInstituteChargesRefetch,\n  };\n};\n\nexport const useCertificateAuthorityExportExcel = () => {\n  const [certificateAuthorityExportExcel] =\n    useCertificateAuthorityExportExcelMutation();\n  return [certificateAuthorityExportExcel];\n};\n\nexport const useDepartmentAllStaffMentor = () => {\n  const [departmentAllStaffMentor] = useDepartmentAllStaffMentorMutation();\n  return [departmentAllStaffMentor];\n};\n\nexport const useDepartmentAllSubjectTimetableExport = () => {\n  const [departmentAllSubjectTimetableExport] =\n    useDepartmentAllSubjectTimetableExportMutation();\n  return [departmentAllSubjectTimetableExport];\n};\n"],"names":["useGetActivatedMemberAccount","args","data","getActivatedMemberAccount","refetch","getActivatedMemberAccountRefetch","useGetActivatedMemberAccountQuery","skip","useDepartmentProfile","departmentProfile","departmentProfileRefetch","useDepartmentProfileQuery","did","useDepartmentCoverPhoto","departmentCoverPhoto","useDepartmentCoverPhotoMutation","useDepartmentAllStaff","departmentAllStaff","departmentAllStaffRefetch","useDepartmentAllStaffQuery","useDepartmentBatchAllClass","id","departmentBatchAllClass","departmentBatchAllClassRefetch","useDepartmentBatchAllClassQuery","useDepartmentCreatedChecklist","departmentCreatedChecklist","useDepartmentCreatedChecklistMutation","useDepartmentAllChecklist","departmentAllChecklist","departmentAllChecklistRefetch","useDepartmentAllChecklistQuery","useDepartmentUpadateChecklist","departmentUpadateChecklist","useDepartmentUpadateChecklistMutation","useDepartmentAllClassMaster","departmentAllClassMaster","departmentAllClassMasterRefetch","useDepartmentAllClassMasterQuery","useDepartmentAllSubjectMaster","departmentAllSubjectMaster","departmentAllSubjectMasterRefetch","useDepartmentAllSubjectMasterQuery","useDepartmentCreateExam","departmentCreateExam","useDepartmentCreateExamMutation","useDepartmentAllExam","departmentAllExam","departmentAllExamRefetch","useDepartmentAllExamQuery","useDepartmentExamDetail","departmentExamDetail","departmentExamDetailRefetch","useDepartmentExamDetailQuery","eid","useDepartmentAllComplaint","departmentAllComplaint","departmentAllComplaintRefetch","useDepartmentAllComplaintQuery","useDepartmentComplaintDetail","departmentComplaintDetail","departmentComplaintDetailRefetch","useDepartmentComplaintDetailQuery","useDepartmentComplaintSolve","departmentComplaintSolve","useDepartmentComplaintSolveMutation","useDepartmentAllFees","departmentAllFees","departmentAllFeesRefetch","useDepartmentAllFeesQuery","useDepartmentCreateFees","departmentCreateFees","useDepartmentCreateFeesMutation","useDepartmentElectionCreate","departmentElectionCreate","useDepartmentElectionCreateMutation","useDepartmentAllElection","departmentAllElection","departmentAllElectionRefetch","useDepartmentAllElectionQuery","useDepartmentOneElection","departmentOneElection","departmentOneElectionRefetch","useDepartmentOneElectionQuery","useDepartmentOneElectionAllCandidate","departmentOneElectionAllCandidate","departmentOneElectionAllCandidateRefetch","useDepartmentOneElectionAllCandidateQuery","useDepartmentElectionAction","departmentElectionAction","useDepartmentElectionActionMutation","useDepartmentBacklogClassMaster","backlogClassMaster","backlogClassMasterRefetch","useDepartmentBacklogClassMasterQuery","useDepartmentBacklogSubjectMaster","backlogSubjectMaster","backlogSubjectMasterRefetch","useDepartmentBacklogSubjectMasterQuery","useDepartmentBacklogSubjectAllStudent","backlogSubjectAllStudent","backlogSubjectAllStudentRefetch","useDepartmentBacklogSubjectAllStudentQuery","useDepartmentBacklogSubjectAllStudentDropout","backlogSubjectAllStudentDropout","backlogSubjectAllStudentDropoutRefetch","useDepartmentBacklogSubjectAllStudentDropoutQuery","useDepartmentBacklogOneStudentClearDropout","studentClearDropout","useDepartmentBacklogOneStudentClearDropoutMutation","useCreateParticipativeEvent","createparticipativeEvent","useCreateParticipativeEventMutation","useParticipateEventList","participativeEventList","participativeEventListRefetch","useParticipateEventListQuery","useParticipateStudentEventList","participativeEventStudentList","participativeEventStudentListRefetch","useParticipateEventStudentListQuery","useParticipateEventDetails","participativeEventDetails","participativeEventDetailsRefetch","useParticipateEventDetailsQuery","pid","useCheckListStudent","checkListToStudent","useAssignChecklistToStudentMutation","useParticipateResultDeclaration","participateResultDeclaration","useResultDeclarationMutation","useDepartmentGetSiteInfo","departmentGetSiteInfo","departmentGetSiteInfoRefetch","useDepartmentGetSiteInfoQuery","useDepartmentUpdateSiteInfo","departmentUpdateSiteInfo","useDepartmentUpdateSiteInfoMutation","useGetInstituteDetailByPromote","getInstituteDetailByPromote","getInstituteDetailByPromoteRefetch","useGetInstituteDetailByPromoteQuery","useGetDepartmentDetailByPromote","getDepartmentDetailByPromote","getDepartmentDetailByPromoteRefetch","useGetDepartmentDetailByPromoteQuery","useGetPromoteStudentByPromote","getPromoteStudentByPromote","getPromoteStudentByPromoteRefetch","useGetPromoteStudentByPromoteQuery","cid","useGetNotPromoteStudentByPromote","getNotPromoteStudentByPromote","getNotPromoteStudentByPromoteRefetch","useGetNotPromoteStudentByPromoteQuery","useGetExaminationSectionDetail","getExaminationSectionDetail","getExaminationSectionDetailRefetch","useGetExaminationSectionDetailQuery","useGetClassListExam","getClassListExam","getClassListExamRefetch","useGetClassListExamQuery","useGetSeatingListExam","getSeatingListExam","getSeatingListExamRefetch","useGetSeatingListExamQuery","useDestroyOneSeatingExam","destroyOneSeatingExam","useDestroyOneSeatingExamMutation","useUpdateOneSeatingExam","updateOneSeatingExam","useUpdateOneSeatingExamMutation","useAddSeatingExam","addSeatingExam","useAddSeatingExamMutation","useGetOneDepartmentBatchList","getOneDepartmentBatchList","getOneDepartmentBatchListRefetch","useGetOneDepartmentBatchListQuery","useWithoutPaymentParticipateApply","withoutPaymentParticipateApply","useWithoutPaymentParticipateApplyMutation","useCreateAutomateSeatingArrangement","createAutomateSeatingArrangement","useCreateAutomateSeatingArrangementMutation","useGetAllExamFeeStructure","getAllExamFeeStructure","getAllExamFeeStructureRefetch","useGetAllExamFeeStructureQuery","useUpdateExamFeeStructure","updateExamFeeStructure","useUpdateExamFeeStructureMutation","useExamFeeStructureDetail","examFeeStructureDetail","examFeeStructureDetailRefetch","useExamFeeStructureDetailQuery","efid","useCreateBacklogExam","createBacklogExam","useCreateBacklogExamMutation","useGetBacklogExamList","getBacklogExamList","getBacklogExamListRefetch","useGetBacklogExamListQuery","useDepartmentAllClassMasterBacklog","departmentAllClassMasterBacklog","departmentAllClassMasterBacklogRefetch","useDepartmentAllClassMasterBacklogQuery","useDepartmentAllSubjectMasterBacklog","departmentAllSubjectMasterBacklog","departmentAllSubjectMasterBacklogRefetch","useDepartmentAllSubjectMasterBacklogQuery","useSendExamNotifyToSubject","sendExamNotifyToSubject","sendExamNotifyToSubjectRefetch","useSendExamNotifyToSubjectQuery","useCreateGradeSystem","createGradeSystem","useCreateGradeSystemMutation","useGetAllUniversalGrade","getAllUniversalGrade","getAllUniversalGradeRefetch","useGetAllUniversalGradeQuery","useGetOneGradeDetail","getOneGradeDetail","getOneGradeDetailRefetch","useGetOneGradeDetailQuery","useGetMentorList","getMentorList","getMentorListRefetch","useGetMentorListQuery","useAddMentorDepartment","addMentorDepartment","useAddMentorDepartmentMutation","useGetOneMentorDetail","getOneMentorDetail","getOneMentorDetailRefetch","useGetOneMentorDetailQuery","mid","useGetOneMentorMenteeList","getOneMentorMenteeList","getOneMentorMenteeListRefetch","useGetOneMentorMenteeListQuery","useAddNewMentee","addNewMentee","useAddNewMenteeMutation","useRemoveMentee","removeMentee","useRemoveMenteeMutation","useGetAllQueryList","getAllQueryList","getAllQueryListRefetch","useGetAllQueryListQuery","useGetQueryDetail","getQueryDetail","getQueryDetailRefetch","useGetQueryDetailQuery","qid","useMarkQuery","markQuery","useMarkQueryMutation","useGetAllMentorClassList","getAllMentorClassList","getAllMentorClassListRefetch","useGetAllMentorClassListQuery","useGetClassStudentList","getClassStudentList","getClassStudentListRefetch","useGetClassStudentListQuery","useAddSeatingBacklogExam","addSeatingBacklogExam","useAddSeatingBacklogExamMutation","useUpdateGradeSystem","updateGradeSystem","useUpdateGradeSystemMutation","useDepartmentDeleteChecklist","departmentDeleteChecklist","useDepartmentDeleteChecklistMutation","useUpdateSubjectCourseCredit","updateSubjectCourseCredit","useUpdateSubjectCourseCreditMutation","useUpdateSubjectCoursePassingCredit","udateSubjectCoursePassingCredit","useUpdateSubjectCoursePassingCreditMutation","useUpdateDepartmentProgramme","updateDepartmentProgramme","useUpdateDepartmentProgrammeMutation","useAddMeetingByMentor","addMeetingByMentor","useAddMeetingByMentorMutation","useAddMeetingScheduleByMentor","addMeetingScheduleByMentor","useAddMeetingByMentorScheduleMutation","useAddMeetingByMentorEdit","addMeetingByMentorEdit","useAddMeetingByMentorEditMutation","useGetAllMeetingByMentor","getAllMeetingByMentor","getAllMeetingByMentorRefetch","useGetAllMeetingByMentorQuery","useGetOneMeetingDetail","getOneMeetingDetail","getOneMeetingDetailRefetch","useGetOneMeetingDetailQuery","meid","useUndoPromoteStudent","undoPromoteStudent","useUndoPromoteStudentMutation","useCreateSubjectExam","createSubjectExam","useCreateSubjectExamMutation","useDepartmentCopoSettingUpdate","departmentCopoSettingUpdate","useDepartmentCopoSettingUpdateMutation","useGetAllCertificateAuthority","getAllCertificateAuthority","getAllCertificateAuthorityRefetch","useGetAllCertificateAuthorityQuery","useCertificateAuthorityAction","certificateAuthorityAction","useCertificateAuthorityActionMutation","useCertificateUploadPdfBackend","certificateUploadPdfBackend","useCertificateUploadPdfBackendMutation","useUpdateCertificateAuthorityFund","updateCertificateAuthorityFund","useUpdateCertificateAuthorityFundMutation","useMarkCOffLeave","markCOffLeave","useMarkCOffLeaveMutation","useGetAllExcelByPromote","getAllExcelByPromote","getAllExcelByPromoteRefetch","useGetAllExcelByPromoteQuery","useUpdateExcelByPromote","updateExcelByPromote","useUpdateExcelByPromoteMutation","useDeleteExcelByPromote","deleteExcelByPromote","useDeleteExcelByPromoteMutation","useExportPromoteStudentExcel","exportPromoteStudentExcel","useExportPromoteStudentExcelMutation","useGetCertificateInstituteCharges","getCertificateInstituteCharges","getCertificateInstituteChargesRefetch","useGetCertificateInstituteChargesQuery","useCertificateAuthorityExportExcel","certificateAuthorityExportExcel","useCertificateAuthorityExportExcelMutation","useDepartmentAllStaffMentor","departmentAllStaffMentor","useDepartmentAllStaffMentorMutation"],"sourceRoot":""}