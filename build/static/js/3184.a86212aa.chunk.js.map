{"version":3,"file":"static/js/3184.a86212aa.chunk.js","mappings":"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","sources":["Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/PostTypeConfiguration.jsx","Dashboard/InsDashboard/Components/Mainbody/Stats/Posts/Posts.jsx","Loader/QvipleLoaderGif.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nconst EachPost = React.lazy(() => import(\"./EachPost/EachPost\"));\nconst EachPoll = React.lazy(() => import(\"./EachPoll/EachPoll\"));\nconst EachQuestion = React.lazy(() => import(\"./EachQuestion/EachQuestion\"));\nconst PostTypeConfiguration = ({ post, profilePost, allPosts }) => {\n  const ids = useSelector((state) => state.idChange);\n  const [selectOptions, setSelectOptions] = useState(\n    !profilePost\n      ? [\"post_unfollow\"]\n      : ids?.id === post?.author\n      ? post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? [\"post_delete\", \"turn_off_comment\"]\n        : [\"post_visibility\", \"post_delete\", \"turn_off_comment\"]\n      : [\"post_unfollow\"]\n  );\n\n  useEffect(() => {\n    if (ids?.id === post?.author) {\n      post?.postType === \"Poll\" || post?.postType === \"Question\"\n        ? setSelectOptions([\"post_delete\", \"turn_off_comment\"])\n        : setSelectOptions([\n            \"post_visibility\",\n            \"post_delete\",\n            \"turn_off_comment\",\n          ]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [post?.author, ids?.id, post?.postType]);\n\n  return (\n    <React.Suspense fallback={<QvipeLoaderGif />}>\n      {post?.postType === \"Post\" && (\n        <EachPost\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Poll\" && (\n        <EachPoll\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n      {post?.postType === \"Question\" && (\n        <EachQuestion\n          post={post}\n          profilePost={profilePost}\n          allPosts={allPosts}\n          selectOptions={selectOptions}\n        />\n      )}\n    </React.Suspense>\n  );\n};\n\nexport default PostTypeConfiguration;\n","import React from \"react\";\nimport {\n  useDashAllPost,\n  useProfileAllPost,\n  useProfileAllSavedPost,\n  useProfileAllTagPost,\n} from \"../../../../../../Post/Institute/Components/post-api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useState, useEffect } from \"react\";\nimport { postChangeAction } from \"../../../../../../redux/store/post-slice\";\nimport { instituteAs } from \"../../../../../../constant/constant_value\";\nimport QvipeLoaderGif from \"../../../../../../Loader/QvipleLoaderGif\";\nimport PostTypeConfiguration from \"./PostTypeConfiguration\";\nimport { useTranslation } from \"react-i18next\";\nfunction Posts({ profilePost, profileSavedPost }) {\n  const { t } = useTranslation();\n  //for The redux storage and actions\n  const ids = useSelector((state) => state.idChange);\n  // const author = useSelector((state) => state.authChange);\n  const allPosts = useSelector((state) => state.postChange);\n  const dispatch = useDispatch();\n  // const insId = localStorage.getItem(\"user\");\n  const [load, setLoad] = useState(true);\n  //for the infinite scroll\n  const [ref, inView] = useInView();\n\n  //for the fetch more or not after seeing all post\n  const [state, setState] = useState(true);\n  const [profileState, setProfileState] = useState(true);\n  const [profileSavedState, setProfileSavedState] = useState(true);\n  const [profileTagState, setProfileTagState] = useState(true);\n\n  //for setting the next page to fetch data\n  const [page, setPage] = useState(1);\n  const [profilePage, setProfilePage] = useState(1);\n  const [profileSavedPage, setProfileSavedPage] = useState(1);\n  const [profileTagPage, setProfileTagPage] = useState(1);\n\n  //for the rtk query to call api\n  const { allDashPost, allDashPostRefetch } = useDashAllPost({\n    data: {\n      id: ids?.id,\n      page: page,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !ids?.id ? true : profilePost,\n  });\n  const { allProfilePost, allProfilePostRefetch } = useProfileAllPost({\n    data: {\n      id: ids?.searchProfile?.id ? ids?.searchProfile?.id : ids?.id,\n      page: profilePage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !profilePost,\n  });\n\n  const { allProfileSavedPost, allProfileSavedPostRefetch } =\n    useProfileAllSavedPost({\n      data: {\n        id: ids?.id,\n        page: profileSavedPage,\n        limit: 10,\n        viewAs: instituteAs,\n      },\n      skip: !(profileSavedPost === \"save\") && !profilePost,\n    });\n\n  const { allProfileTagPost, allProfileTagPostRefetch } = useProfileAllTagPost({\n    data: {\n      id: ids?.id,\n      page: profileTagPage,\n      limit: 10,\n      viewAs: instituteAs,\n    },\n    skip: !(profileSavedPost === \"tag\") && !profilePost,\n  });\n\n  //for the infinite scroll then change the page\n  useEffect(() => {\n    if (inView && state && !profilePost) setPage((page) => page + 1);\n    else if (inView && profileState && profilePost)\n      setProfilePage((profilePage) => profilePage + 1);\n    else if (inView && profileSavedState && profileSavedPost === \"save\")\n      setProfileSavedPage((profileSavedPage) => profileSavedPage + 1);\n    else if (inView && profileTagState && profileSavedPost === \"tag\") {\n      setProfileTagPage((profileTagPage) => profileTagPage + 1);\n    } else {\n    }\n  }, [\n    inView,\n    state,\n    profileState,\n    profileSavedState,\n    profileTagState,\n    profilePost,\n    profileSavedPost,\n  ]);\n\n  //for the refteching after the page is reset\n  useEffect(() => {\n    if (!profilePost) allDashPostRefetch();\n    else if (profileSavedPost === \"my\") allProfilePostRefetch();\n    else if (profileSavedPost === \"save\") allProfileSavedPostRefetch();\n    else if (profileSavedPost === \"tag\") allProfileTagPostRefetch();\n    else {\n    }\n  }, [\n    page,\n    profilePage,\n    profileSavedPage,\n    profileTagPage,\n    profilePost,\n    profileSavedPost,\n    allDashPostRefetch,\n    allProfilePostRefetch,\n    allProfileSavedPostRefetch,\n    allProfileTagPostRefetch,\n  ]);\n\n  //for the action pperform each time when the new data is comming from api\n  useEffect(() => {\n    //dispatch actions\n    dispatch(\n      postChangeAction.addPost({\n        post: !profilePost\n          ? allDashPost?.post\n          : profileSavedPost === \"my\"\n          ? allProfilePost?.post\n          : profileSavedPost === \"save\"\n          ? allProfileSavedPost?.post\n          : allProfileTagPost?.post,\n        profilePost: !profilePost\n          ? \"dash\"\n          : profileSavedPost === \"my\"\n          ? \"profile\"\n          : profileSavedPost === \"save\"\n          ? \"saved\"\n          : \"taged\",\n        id: ids?.id,\n      })\n    );\n\n    //for next api is call or not dashboard\n    if (allDashPost?.post.length === 10) setState(true);\n    else setState(false);\n\n    //for next api is call or not profile\n    if (allProfilePost?.post.length === 10) setProfileState(true);\n    else setProfileState(false);\n\n    //for next api is call or not saved profile\n    if (allProfileSavedPost?.post.length === 10) setProfileSavedState(true);\n    else setProfileSavedState(false);\n\n    //for next api is call or not tag profile\n    if (allProfileTagPost?.post.length === 10) setProfileTagState(true);\n    else setProfileTagState(false);\n  }, [\n    allDashPost?.post,\n    allProfilePost?.post,\n    allProfileSavedPost?.post,\n    allProfileTagPost?.post,\n    dispatch,\n    profilePost,\n    profileSavedPost,\n    ids?.id,\n  ]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoad(false);\n    }, 5000);\n  }, []);\n  // console.info(\"this is all posts\", allPosts?.dashboardPosts);\n  return (\n    <div>\n      {!allPosts?.dashboardPosts?.length && !profilePost && load ? (\n        <QvipeLoaderGif />\n      ) : (\n        !profilePost &&\n        allPosts?.dashboardPosts?.map((data, index) =>\n          allPosts?.dashboardPosts?.length === index + 1 ? (\n            <div ref={ref} key={index}>\n              <PostTypeConfiguration\n                post={data}\n                profilePost={profilePost}\n                allPosts={allPosts?.dashboardPosts}\n              />\n            </div>\n          ) : (\n            <PostTypeConfiguration\n              key={index}\n              post={data}\n              profilePost={profilePost}\n              allPosts={allPosts?.dashboardPosts}\n            />\n          )\n        )\n      )}\n\n      {profilePost &&\n        profileSavedPost === \"my\" &&\n        (!allPosts?.profilePosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profilePosts?.map((data, index) =>\n            allPosts?.profilePosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n\n      {profilePost &&\n        profileSavedPost === \"save\" &&\n        (!allPosts?.profileSavedPosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profileSavedPosts?.map((data, index) =>\n            allPosts?.profileSavedPosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n\n      {profilePost &&\n        profileSavedPost === \"tag\" &&\n        (!allPosts?.profileTagedPosts?.length && load ? (\n          <QvipeLoaderGif />\n        ) : (\n          allPosts?.profileTagedPosts?.map((data, index) =>\n            allPosts?.profileTagedPosts?.length === index + 1 ? (\n              <div ref={ref} key={index}>\n                <PostTypeConfiguration\n                  post={data}\n                  profilePost={profilePost}\n                  allPosts={[]}\n                />\n              </div>\n            ) : (\n              <PostTypeConfiguration\n                key={index}\n                post={data}\n                profilePost={profilePost}\n                allPosts={[]}\n              />\n            )\n          )\n        ))}\n    </div>\n  );\n}\n\nexport default Posts;\n","import React from \"react\";\nimport styles from \"./QvipleLoader.module.css\";\n\nconst QvipeLoaderGif = () => {\n  return (\n    <div className={styles.loaderGif}>\n      <img src=\"/images/loader/loader.gif\" alt=\"for load an items\" />\n    </div>\n  );\n};\n\nexport default QvipeLoaderGif;\n"],"names":["EachPost","React","EachPoll","EachQuestion","_ref","post","profilePost","allPosts","ids","useSelector","state","idChange","_useState","useState","id","author","postType","_useState2","_slicedToArray","selectOptions","setSelectOptions","useEffect","_jsxs","fallback","_jsx","QvipeLoaderGif","children","_ids$searchProfile","_ids$searchProfile2","_allPosts$dashboardPo","_allPosts$dashboardPo2","_allPosts$profilePost","_allPosts$profilePost2","_allPosts$profileSave","_allPosts$profileSave2","_allPosts$profileTage","_allPosts$profileTage2","profileSavedPost","useTranslation","t","postChange","dispatch","useDispatch","load","setLoad","_useInView","useInView","_useInView2","ref","inView","_useState3","_useState4","setState","_useState5","_useState6","profileState","setProfileState","_useState7","_useState8","profileSavedState","setProfileSavedState","_useState9","_useState10","profileTagState","setProfileTagState","_useState11","_useState12","page","setPage","_useState13","_useState14","profilePage","setProfilePage","_useState15","_useState16","profileSavedPage","setProfileSavedPage","_useState17","_useState18","profileTagPage","setProfileTagPage","_useDashAllPost","useDashAllPost","data","limit","viewAs","instituteAs","skip","allDashPost","allDashPostRefetch","_useProfileAllPost","useProfileAllPost","searchProfile","allProfilePost","allProfilePostRefetch","_useProfileAllSavedPo","useProfileAllSavedPost","allProfileSavedPost","allProfileSavedPostRefetch","_useProfileAllTagPost","useProfileAllTagPost","allProfileTagPost","allProfileTagPostRefetch","postChangeAction","addPost","length","setTimeout","dashboardPosts","map","index","_allPosts$dashboardPo3","PostTypeConfiguration","profilePosts","_allPosts$profilePost3","profileSavedPosts","_allPosts$profileSave3","profileTagedPosts","_allPosts$profileTage3","className","styles","loaderGif","src","alt"],"sourceRoot":""}