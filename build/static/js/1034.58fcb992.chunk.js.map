{"version":3,"file":"static/js/1034.58fcb992.chunk.js","mappings":"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","sources":["optimized/Services/StudentProfile/student_profile_manager_query_mutation_function.js","optimized/Services/StudentProfile/studentProfileApiDynamic.js","optimized/Hooks/ApiHooks/StudentProfile/student-manager-api.js","optimized/Services/Encryption/decrypt.js","optimized/Services/UrlConfig/MethodType.js"],"sourcesContent":["import { decryption } from \"../Encryption/decrypt\";\nimport { PATCH, POST } from \"../UrlConfig/MethodType\";\n\n// here start student admission fees\nexport const studentAdmissionFeeListFunction = (builder) => {\n  return builder.query({\n    query: (sid) => `/admission/${sid}/fees`,\n    providesTags: [\"Admission_Fees\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      let dect = decryption(response?.encrypt);\n      // console.info(\"dslkknfbsnmd\", dect);\n      return dect?.array;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\nexport const studentAdmissionFeeCountFunction = (builder) => {\n  return builder.query({\n    query: (sid) => `/fees/student/${sid}`,\n    providesTags: [\"Admission_Fees\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      // let dect = decryption(response?.encrypt);\n      // console.info(\"dslkknfbsnmd\", dect);\n      return response?.student?.admission_amount_stats;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const studentOneProfileFunction = (builder) => {\n  return builder.query({\n    query: (sid) => `/ins/student/${sid}`,\n    providesTags: [\"Student_Profile\"],\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.student;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const studentAdmissionFeeCardAddScholarshipNumberFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rcid}/add/scholar/number/query`,\n      method: PATCH,\n      body: data.scholarData,\n    }),\n  });\n};\n\nexport const studentAdmissionFeeCardValidateScholarshipNumberFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/finance/valid/scholar/query?num=${data.num}`,\n      method: PATCH,\n    }),\n  });\n};\n\nexport const studentAdmissionFeeCardAddRemarkFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rcid}/remark/query`,\n      method: PATCH,\n      body: data.remark,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\nexport const studentAdmissionFeeCardDropFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rid}/drop/fees/${data.sid}/query`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\nexport const studentAdmissionFeeCardUpdateStructureFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/retro/structure/${data.appId}/one/student/${data.sid}/query`,\n      method: PATCH,\n      body: data.updateStrucutre,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\nexport const studentAdmissionFeeCardInstallmentRemoveFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.rid}/card/removal/query?raid=${data.raid}`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\n// admission collect fees by Admission Admin\nexport const studentAdmissionFeeCardCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (paid) => ({\n      url: `/admission/${paid.aid}/paid/remaining/fee/${paid.sid}/student/${\n        paid.appId\n      }?receipt_status=${paid?.receipt_status ?? \"\"}`,\n      method: POST,\n      body: paid.payment,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\nexport const studentAdmissionFeeCardExcessRefundFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.aid}/paid/remaining/fee/${data.sid}/student/${data.appId}/refund/by`,\n      method: PATCH,\n      body: data.payment,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\n// admission scholarship collect fees by Scholarship manager\n\nexport const studentAdmissionFeeCardScholarshipCollectFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/paid/government/grant/fee/${data.sid}/student/${data.appId}`,\n      method: POST,\n      body: data.payment,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\nexport const studentAdmissionFeeCardScholarshipRevertToApplicableFunction = (\n  builder\n) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `admission/${data?.rid}/shift/government/to/applicable/query`,\n      method: PATCH,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n// when collect fees then check bank validation\nexport const studentAdmissionFeeCardBankValidateFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/finance/${data.fid}/valid/bank/query/${data.aid}?flow=${data?.flow}`,\n      method: PATCH,\n    }),\n  });\n};\n\n// for more actions\nexport const studentAdmissionFeeCardInstallEditToggleFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/extra/access/fees/editable/query?flow=${data.flow}`,\n      method: PATCH,\n      body: data.editAccess,\n    }),\n    invalidatesTags: [\"Student_Profile\"],\n  });\n};\n\nexport const studentAdmissionNewCardApplicationListFunction = (builder) => {\n  return builder.query({\n    query: (data) =>\n      `/admission/filter/by/${data.id}/three/function/query?departId=${\n        data.did\n      }&masterId=${data.cmid}&batchId=${data?.bid ?? \"\"}`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.all_apps;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const studentAdmissionAddNewCardFunction = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data.sid}/add/fees/card/query`,\n      method: POST,\n      body: data.addFees,\n    }),\n    invalidatesTags: [\"Admission_Fees\"],\n  });\n};\n\n// for collect changes from backend\nexport const studentInstituteChargesFunction = (builder) => {\n  return builder.query({\n    query: (data) => `/admission/one/institute/charges/${data.id}/query`,\n    serializeQueryArgs: ({ endpointName }) => {\n      return endpointName;\n    },\n    transformResponse: (response) => {\n      return response?.new_charges;\n    },\n    forceRefetch({ currentArg, previousArg }) {\n      return currentArg !== previousArg;\n    },\n  });\n};\n\nexport const studentReadmissionFeeFuntion = (builder) => {\n  return builder.mutation({\n    query: (data) => ({\n      url: `/admission/${data?.fid}/readmission/student/${data.sid}/query`,\n      method: PATCH,\n    }),\n  });\n};\n","import { studentProfileApi } from \"./studentProfileApi\";\nimport {\n  studentAdmissionFeeListFunction,\n  studentAdmissionFeeCountFunction,\n  studentOneProfileFunction,\n  studentAdmissionFeeCardAddScholarshipNumberFunction,\n  studentAdmissionFeeCardValidateScholarshipNumberFunction,\n  studentAdmissionFeeCardAddRemarkFunction,\n  studentAdmissionFeeCardDropFunction,\n  studentAdmissionFeeCardUpdateStructureFunction,\n  studentAdmissionFeeCardInstallmentRemoveFunction,\n  studentAdmissionFeeCardCollectFunction,\n  studentAdmissionFeeCardExcessRefundFunction,\n  studentAdmissionFeeCardScholarshipCollectFunction,\n  studentAdmissionFeeCardScholarshipRevertToApplicableFunction,\n  studentAdmissionFeeCardBankValidateFunction,\n  studentAdmissionFeeCardInstallEditToggleFunction,\n  studentAdmissionNewCardApplicationListFunction,\n  studentAdmissionAddNewCardFunction,\n  studentInstituteChargesFunction,\n  studentReadmissionFeeFuntion,\n} from \"./student_profile_manager_query_mutation_function\";\n\nconst studentProfileApiDynamic = studentProfileApi.injectEndpoints({\n  endpoints: (builder) => ({\n    studentAdmissionFeeList: studentAdmissionFeeListFunction(builder),\n    studentAdmissionFeeCount: studentAdmissionFeeCountFunction(builder),\n    studentOneProfile: studentOneProfileFunction(builder),\n    studentAdmissionFeeCardAddScholarshipNumber:\n      studentAdmissionFeeCardAddScholarshipNumberFunction(builder),\n    studentAdmissionFeeCardValidateScholarshipNumber:\n      studentAdmissionFeeCardValidateScholarshipNumberFunction(builder),\n    studentAdmissionFeeCardAddRemark:\n      studentAdmissionFeeCardAddRemarkFunction(builder),\n    studentAdmissionFeeCardDrop: studentAdmissionFeeCardDropFunction(builder),\n    studentAdmissionFeeCardUpdateStructure:\n      studentAdmissionFeeCardUpdateStructureFunction(builder),\n    studentAdmissionFeeCardInstallmentRemove:\n      studentAdmissionFeeCardInstallmentRemoveFunction(builder),\n    studentAdmissionFeeCardCollect:\n      studentAdmissionFeeCardCollectFunction(builder),\n    studentAdmissionFeeCardExcessRefund:\n      studentAdmissionFeeCardExcessRefundFunction(builder),\n    studentAdmissionFeeCardScholarshipCollect:\n      studentAdmissionFeeCardScholarshipCollectFunction(builder),\n    studentAdmissionFeeCardScholarshipRevertToApplicable:\n      studentAdmissionFeeCardScholarshipRevertToApplicableFunction(builder),\n\n    studentAdmissionFeeCardBankValidate:\n      studentAdmissionFeeCardBankValidateFunction(builder),\n    studentAdmissionFeeCardInstallEditToggle:\n      studentAdmissionFeeCardInstallEditToggleFunction(builder),\n    studentAdmissionNewCardApplicationList:\n      studentAdmissionNewCardApplicationListFunction(builder),\n    studentAdmissionAddNewCard: studentAdmissionAddNewCardFunction(builder),\n    studentInstituteCharges: studentInstituteChargesFunction(builder),\n    studentReadmissionFee: studentReadmissionFeeFuntion(builder),\n  }),\n});\n\nexport const {\n  useStudentAdmissionFeeListQuery,\n  useStudentAdmissionFeeCountQuery,\n  useStudentOneProfileQuery,\n  useStudentAdmissionFeeCardAddScholarshipNumberMutation,\n  useStudentAdmissionFeeCardValidateScholarshipNumberMutation,\n  useStudentAdmissionFeeCardAddRemarkMutation,\n  useStudentAdmissionFeeCardDropMutation,\n  useStudentAdmissionFeeCardUpdateStructureMutation,\n  useStudentAdmissionFeeCardInstallmentRemoveMutation,\n  useStudentAdmissionFeeCardCollectMutation,\n  useStudentAdmissionFeeCardExcessRefundMutation,\n  useStudentAdmissionFeeCardScholarshipCollectMutation,\n  useStudentAdmissionFeeCardScholarshipRevertToApplicableMutation,\n  useStudentAdmissionFeeCardBankValidateMutation,\n  useStudentAdmissionFeeCardInstallEditToggleMutation,\n  useStudentAdmissionNewCardApplicationListQuery,\n  useStudentAdmissionAddNewCardMutation,\n  useStudentInstituteChargesQuery,\n  useStudentReadmissionFeeMutation,\n} = studentProfileApiDynamic;\n","import {\n  useStudentAdmissionFeeListQuery,\n  useStudentAdmissionFeeCountQuery,\n  useStudentOneProfileQuery,\n  useStudentAdmissionFeeCardAddScholarshipNumberMutation,\n  useStudentAdmissionFeeCardValidateScholarshipNumberMutation,\n  useStudentAdmissionFeeCardAddRemarkMutation,\n  useStudentAdmissionFeeCardDropMutation,\n  useStudentAdmissionFeeCardUpdateStructureMutation,\n  useStudentAdmissionFeeCardInstallmentRemoveMutation,\n  useStudentAdmissionFeeCardCollectMutation,\n  useStudentAdmissionFeeCardExcessRefundMutation,\n  useStudentAdmissionFeeCardScholarshipCollectMutation,\n  useStudentAdmissionFeeCardScholarshipRevertToApplicableMutation,\n  useStudentAdmissionFeeCardBankValidateMutation,\n  useStudentAdmissionFeeCardInstallEditToggleMutation,\n  useStudentAdmissionNewCardApplicationListQuery,\n  useStudentAdmissionAddNewCardMutation,\n  useStudentInstituteChargesQuery,\n  useStudentReadmissionFeeMutation,\n} from \"../../../Services/StudentProfile/studentProfileApiDynamic\";\n\nexport const useStudentAdmissionFeeList = (args) => {\n  const { data, refetch, isFetching } = useStudentAdmissionFeeListQuery(\n    args.sid,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    studentAdmissionFeeList: data,\n    studentAdmissionFeeListRefetch: refetch,\n    studentAdmissionFeeListLoading: isFetching,\n  };\n};\n\nexport const useStudentAdmissionFeeCount = (args) => {\n  const { data, refetch, isFetching } = useStudentAdmissionFeeCountQuery(\n    args.sid,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    studentAdmissionFeeCount: data,\n    studentAdmissionFeeCountRefetch: refetch,\n    studentAdmissionFeeCountLoading: isFetching,\n  };\n};\n\nexport const useStudentOneProfile = (args) => {\n  const { data, refetch, isFetching } = useStudentOneProfileQuery(args.sid, {\n    skip: args.skip,\n  });\n  return {\n    studentOneProfile: data,\n    studentOneProfileRefetch: refetch,\n    studentOneProfileLoading: isFetching,\n  };\n};\n\nexport const useStudentAdmissionFeeCardAddScholarshipNumber = () => {\n  const [studentAdmissionFeeCardAddScholarshipNumber] =\n    useStudentAdmissionFeeCardAddScholarshipNumberMutation();\n  return [studentAdmissionFeeCardAddScholarshipNumber];\n};\nexport const useStudentAdmissionFeeCardValidateScholarshipNumber = () => {\n  const [studentAdmissionFeeCardValidateScholarshipNumber] =\n    useStudentAdmissionFeeCardValidateScholarshipNumberMutation();\n  return [studentAdmissionFeeCardValidateScholarshipNumber];\n};\nexport const useStudentAdmissionFeeCardAddRemark = () => {\n  const [studentAdmissionFeeCardAddRemark] =\n    useStudentAdmissionFeeCardAddRemarkMutation();\n  return [studentAdmissionFeeCardAddRemark];\n};\n\nexport const useStudentAdmissionFeeCardDrop = () => {\n  const [studentAdmissionFeeCardDrop] =\n    useStudentAdmissionFeeCardDropMutation();\n  return [studentAdmissionFeeCardDrop];\n};\nexport const useStudentAdmissionFeeCardUpdateStructure = () => {\n  const [studentAdmissionFeeCardUpdateStructure] =\n    useStudentAdmissionFeeCardUpdateStructureMutation();\n  return [studentAdmissionFeeCardUpdateStructure];\n};\n\nexport const useStudentAdmissionFeeCardInstallmentRemove = () => {\n  const [studentAdmissionFeeCardInstallmentRemove] =\n    useStudentAdmissionFeeCardInstallmentRemoveMutation();\n  return [studentAdmissionFeeCardInstallmentRemove];\n};\n\nexport const useStudentAdmissionFeeCardCollect = () => {\n  const [studentAdmissionFeeCardCollect] =\n    useStudentAdmissionFeeCardCollectMutation();\n  return [studentAdmissionFeeCardCollect];\n};\nexport const useStudentAdmissionFeeCardExcessRefund = () => {\n  const [studentAdmissionFeeCardExcessRefund] =\n    useStudentAdmissionFeeCardExcessRefundMutation();\n  return [studentAdmissionFeeCardExcessRefund];\n};\n\nexport const useStudentAdmissionFeeCardScholarshipCollect = () => {\n  const [studentAdmissionFeeCardScholarshipCollect] =\n    useStudentAdmissionFeeCardScholarshipCollectMutation();\n  return [studentAdmissionFeeCardScholarshipCollect];\n};\n\nexport const useStudentAdmissionFeeCardScholarshipRevertToApplicable = () => {\n  const [studentAdmissionFeeCardScholarshipRevertToApplicable] =\n    useStudentAdmissionFeeCardScholarshipRevertToApplicableMutation();\n  return [studentAdmissionFeeCardScholarshipRevertToApplicable];\n};\nexport const useStudentAdmissionFeeCardBankValidate = () => {\n  const [studentAdmissionFeeCardBankValidate] =\n    useStudentAdmissionFeeCardBankValidateMutation();\n  return [studentAdmissionFeeCardBankValidate];\n};\n\nexport const useStudentAdmissionFeeCardInstallEditToggle = () => {\n  const [studentAdmissionFeeCardInstallEditToggle] =\n    useStudentAdmissionFeeCardInstallEditToggleMutation();\n  return [studentAdmissionFeeCardInstallEditToggle];\n};\n\nexport const useStudentAdmissionNewCardApplicationList = (args) => {\n  const { data, refetch, isFetching } =\n    useStudentAdmissionNewCardApplicationListQuery(args.data, {\n      skip: args.skip,\n    });\n  return {\n    studentAdmissionNewCardApplicationList: data,\n    studentAdmissionNewCardApplicationListRefetch: refetch,\n    studentAdmissionNewCardApplicationListLoading: isFetching,\n  };\n};\nexport const useStudentAdmissionAddNewCard = () => {\n  const [studentAdmissionAddNewCard] = useStudentAdmissionAddNewCardMutation();\n  return [studentAdmissionAddNewCard];\n};\n\nexport const useStudentInstituteCharges = (args) => {\n  const { data, refetch, isFetching } = useStudentInstituteChargesQuery(\n    args.data,\n    {\n      skip: args.skip,\n    }\n  );\n  return {\n    studentInstituteCharges: data,\n    studentInstituteChargesRefetch: refetch,\n    studentInstituteChargesLoading: isFetching,\n  };\n};\nexport const useStudentReadmissionFee = () => {\n  const [studentReadmissionFee] = useStudentReadmissionFeeMutation();\n  return [studentReadmissionFee];\n};\n","import * as CryptoJS from \"crypto-js\";\n// export const dercypt=\nexport const decryption = (data) => {\n  var bytes = CryptoJS.AES.decrypt(data, \"QVIPLESAASPLATFORM\");\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  return decryptedData;\n};\n\nexport const encryptLocalStorage = (message) => {\n  return CryptoJS.AES.encrypt(\n    JSON.stringify(message),\n    \"QVIPLESAASPLATFORM\"\n  ).toString();\n};\n\nexport const decryptLocalStorage = (data) => {\n  var bytes = CryptoJS.AES.decrypt(data, \"QVIPLESAASPLATFORM\");\n  return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n};\n","export const POST = \"POST\";\nexport const PATCH = \"PATCH\";\nexport const PUT = \"PUT\";\nexport const DELETE = \"DELETE\";\n"],"names":["studentAdmissionFeeListFunction","builder","query","sid","concat","providesTags","serializeQueryArgs","_ref","endpointName","transformResponse","response","dect","decryption","encrypt","array","forceRefetch","_ref2","currentArg","previousArg","studentAdmissionFeeCountFunction","_ref3","_response$student","student","admission_amount_stats","_ref4","studentOneProfileFunction","_ref5","_ref6","studentAdmissionFeeCardAddScholarshipNumberFunction","mutation","data","url","rcid","method","PATCH","body","scholarData","studentAdmissionFeeCardValidateScholarshipNumberFunction","num","studentAdmissionFeeCardAddRemarkFunction","remark","invalidatesTags","studentAdmissionFeeCardDropFunction","rid","studentAdmissionFeeCardUpdateStructureFunction","aid","appId","updateStrucutre","studentAdmissionFeeCardInstallmentRemoveFunction","raid","studentAdmissionFeeCardCollectFunction","paid","_paid$receipt_status","receipt_status","POST","payment","studentAdmissionFeeCardExcessRefundFunction","studentAdmissionFeeCardScholarshipCollectFunction","studentAdmissionFeeCardScholarshipRevertToApplicableFunction","studentAdmissionFeeCardBankValidateFunction","fid","flow","studentAdmissionFeeCardInstallEditToggleFunction","editAccess","studentAdmissionNewCardApplicationListFunction","_data$bid","id","did","cmid","bid","_ref7","all_apps","_ref8","studentAdmissionAddNewCardFunction","addFees","studentInstituteChargesFunction","_ref9","new_charges","_ref10","studentReadmissionFeeFuntion","studentProfileApiDynamic","studentProfileApi","injectEndpoints","endpoints","studentAdmissionFeeList","studentAdmissionFeeCount","studentOneProfile","studentAdmissionFeeCardAddScholarshipNumber","studentAdmissionFeeCardValidateScholarshipNumber","studentAdmissionFeeCardAddRemark","studentAdmissionFeeCardDrop","studentAdmissionFeeCardUpdateStructure","studentAdmissionFeeCardInstallmentRemove","studentAdmissionFeeCardCollect","studentAdmissionFeeCardExcessRefund","studentAdmissionFeeCardScholarshipCollect","studentAdmissionFeeCardScholarshipRevertToApplicable","studentAdmissionFeeCardBankValidate","studentAdmissionFeeCardInstallEditToggle","studentAdmissionNewCardApplicationList","studentAdmissionAddNewCard","studentInstituteCharges","studentReadmissionFee","useStudentAdmissionFeeListQuery","useStudentAdmissionFeeCountQuery","useStudentOneProfileQuery","useStudentAdmissionFeeCardAddScholarshipNumberMutation","useStudentAdmissionFeeCardValidateScholarshipNumberMutation","useStudentAdmissionFeeCardAddRemarkMutation","useStudentAdmissionFeeCardDropMutation","useStudentAdmissionFeeCardUpdateStructureMutation","useStudentAdmissionFeeCardInstallmentRemoveMutation","useStudentAdmissionFeeCardCollectMutation","useStudentAdmissionFeeCardExcessRefundMutation","useStudentAdmissionFeeCardScholarshipCollectMutation","useStudentAdmissionFeeCardScholarshipRevertToApplicableMutation","useStudentAdmissionFeeCardBankValidateMutation","useStudentAdmissionFeeCardInstallEditToggleMutation","useStudentAdmissionNewCardApplicationListQuery","useStudentAdmissionAddNewCardMutation","useStudentInstituteChargesQuery","useStudentReadmissionFeeMutation","useStudentAdmissionFeeList","args","_useStudentAdmissionF","skip","studentAdmissionFeeListRefetch","refetch","studentAdmissionFeeListLoading","isFetching","useStudentAdmissionFeeCount","_useStudentAdmissionF2","studentAdmissionFeeCountRefetch","studentAdmissionFeeCountLoading","useStudentOneProfile","_useStudentOneProfile","studentOneProfileRefetch","studentOneProfileLoading","useStudentAdmissionFeeCardAddScholarshipNumber","_useStudentAdmissionF3","_slicedToArray","useStudentAdmissionFeeCardValidateScholarshipNumber","_useStudentAdmissionF5","useStudentAdmissionFeeCardAddRemark","_useStudentAdmissionF7","useStudentAdmissionFeeCardDrop","_useStudentAdmissionF9","useStudentAdmissionFeeCardUpdateStructure","_useStudentAdmissionF11","useStudentAdmissionFeeCardInstallmentRemove","_useStudentAdmissionF13","useStudentAdmissionFeeCardCollect","_useStudentAdmissionF15","useStudentAdmissionFeeCardExcessRefund","_useStudentAdmissionF17","useStudentAdmissionFeeCardScholarshipCollect","_useStudentAdmissionF19","useStudentAdmissionFeeCardScholarshipRevertToApplicable","_useStudentAdmissionF21","useStudentAdmissionFeeCardBankValidate","_useStudentAdmissionF23","useStudentAdmissionFeeCardInstallEditToggle","_useStudentAdmissionF25","useStudentAdmissionNewCardApplicationList","_useStudentAdmissionN","studentAdmissionNewCardApplicationListRefetch","studentAdmissionNewCardApplicationListLoading","useStudentAdmissionAddNewCard","_useStudentAdmissionA","useStudentInstituteCharges","_useStudentInstituteC","studentInstituteChargesRefetch","studentInstituteChargesLoading","useStudentReadmissionFee","_useStudentReadmissio","bytes","CryptoJS","decrypt","JSON","parse","toString","Utf8","DELETE"],"sourceRoot":""}