import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import {
  baseUrl,
  deleteMethod,
  patchMethod,
  postMethod,
  session,
} from "../BaseUrl";
import {
  subjectAllAssignmentFunction,
  getAllStudentOneSubjectFunction,
  subjectAllExamFunction,
  subjectAssignmentSubmitAllStudentFunction,
  subjectAssignmentSubmitOneStudentDetailFunction,
  subjectCompleteFunction,
  subjectSettingFunction,
  subjectUpdateFunction,
  subjectCreateAssignmentFunction,
  subjectAssignmentSubmitCountFunction,
  subjectAssignmentSubmitOneStudentActionFunction,
  subjectOneExamAllStudentFunction,
  subjectOneExamMarksFunction,
  subjectProfileFunction,
  mcqProfileFunction,
  mcqProfileUpdateFunction,
  mcqUniversalDepartmentFunction,
  mcqUniversalClassFunction,
  mcqUniversalSubjectFunction,
  mcqQuestionFunction,
  mcqOneQuestionFunction,
  mcqCreateQuestionFunction,
  mcqQuestionCountFunction,
  mcqTestsetFunction,
  mcqCreateTestsetFunction,
  mcqUpdateTestsetFunction,
  mcqTestsetDetailFunction,
  mcqTestsetTakenFunction,
  mcqTestsetTakenListFunction,
  mcqTestsetAllotedFunction,

  //attendance
  subjectAllStudentFunction,
  subjectStudentCurrentAttendanceFunction,
  subjectStudentAttendanceFunction,
  subjectStudentAttendanceUpdateFunction,
  backlogExamAllStudentFunction,
  backlogExamMarksFunction,
  getOneSubjectProfileFunction,
  getAllChapterOneSubjectFunction,
  getAllTopicOneChapterFunction,
  getDetailOneTopicFunction,
  oneSubjectExcelUploadFunction,
  updateOneTopicChapterFunction,
  deleteOneTopicChapterFunction,
  updateOneTopicStatusFunction,
  addDailyUpdateWithRecordingFunction,
  updateDailyUpdateWithRecordingFunction,
  getAllDailySubjectFunction,
  subjectEditAcademicFunction,
  subjectOneAssignmentFunction,
  subjectUpdateAssignmentFunction,
  subjectDeleteAssignmentFunction,
  getAllCopoAttainmentFunction,
  addCopoAttainmentFunction,
  updateCopoAttainmentFunction,
  removeCopoAttainmentFunction,
  getCopoAttainmentTableFunction,
  getCopoMappingAttainmentTableFunction,
  updateCopoMappingAttainmentFunction,
  addChapterSubjectFunction,
  addChapterTopicSubjectFunction,
  subjectExtraLectureFunction,
  getExtraLectureOneAttendaceFunction,
} from "./subject_teacher_query_mutation_function";

export const subjectApi = createApi({
  reducerPath: "subjectApi",
  baseQuery: fetchBaseQuery({
    baseUrl: baseUrl,
    prepareHeaders: (headers) => {
      if (session()) {
        headers.set("authorization", session());
      }
      return headers;
    },
  }),
  endpoints: (builder) => ({
    subjectProfile: subjectProfileFunction(builder),
    getAllStudentOneSubject: getAllStudentOneSubjectFunction(builder),
    subjectAllExam: subjectAllExamFunction(builder),
    subjectOneExamStudents: subjectOneExamAllStudentFunction(builder),
    subjectOneExamMarks: subjectOneExamMarksFunction(builder, postMethod),
    subjectUpdate: subjectUpdateFunction(builder, patchMethod),
    subjectSetting: subjectSettingFunction(builder),
    subjectComplete: subjectCompleteFunction(builder, patchMethod),
    subjectAllAssignment: subjectAllAssignmentFunction(builder),
    subjectCreateAssignment: subjectCreateAssignmentFunction(
      builder,
      postMethod
    ),
    subjectAssignmentSubmitCount: subjectAssignmentSubmitCountFunction(builder),
    subjectAssignmentSubmitAllStudent:
      subjectAssignmentSubmitAllStudentFunction(builder),
    subjectAssignmentSubmitOneStudentDetail:
      subjectAssignmentSubmitOneStudentDetailFunction(builder),
    subjectAssignmentSubmitOneStudentAction:
      subjectAssignmentSubmitOneStudentActionFunction(builder, patchMethod),
    mcqProfile: mcqProfileFunction(builder),
    mcqProfileUpdate: mcqProfileUpdateFunction(builder, patchMethod),
    mcqUniversalDepartment: mcqUniversalDepartmentFunction(builder),
    mcqUniversalClass: mcqUniversalClassFunction(builder),
    mcqUniversalSubject: mcqUniversalSubjectFunction(builder),
    mcqQuestion: mcqQuestionFunction(builder),
    mcqOneQuestion: mcqOneQuestionFunction(builder),
    mcqCreateQuestion: mcqCreateQuestionFunction(builder, postMethod),
    mcqQuestionCount: mcqQuestionCountFunction(builder),
    mcqTestset: mcqTestsetFunction(builder),
    mcqCreateTestset: mcqCreateTestsetFunction(builder, postMethod),
    mcqUpdateTestset: mcqUpdateTestsetFunction(builder, patchMethod),
    mcqTestsetDetail: mcqTestsetDetailFunction(builder),
    mcqTestsetTaken: mcqTestsetTakenFunction(builder, postMethod),
    mcqTestsetTakenList: mcqTestsetTakenListFunction(builder),
    mcqTestsetAlloted: mcqTestsetAllotedFunction(builder),

    subjectAllStudent: subjectAllStudentFunction(builder),
    subjectStudentCurrentAttendance:
      subjectStudentCurrentAttendanceFunction(builder),
    subjectStudentAttendance: subjectStudentAttendanceFunction(
      builder,
      postMethod
    ),
    subjectStudentAttendanceUpdate: subjectStudentAttendanceUpdateFunction(
      builder,
      patchMethod
    ),

    backlogExamAllStudent: backlogExamAllStudentFunction(builder),
    backlogExamMarks: backlogExamMarksFunction(builder, postMethod),

    getOneSubjectProfile: getOneSubjectProfileFunction(builder),
    getAllChapterOneSubject: getAllChapterOneSubjectFunction(builder),
    getAllTopicOneChapter: getAllTopicOneChapterFunction(builder),
    getDetailOneTopic: getDetailOneTopicFunction(builder),
    oneSubjectExcelUpload: oneSubjectExcelUploadFunction(builder, patchMethod),
    updateOneTopicChapter: updateOneTopicChapterFunction(builder, patchMethod),
    deleteOneTopicChapter: deleteOneTopicChapterFunction(builder, deleteMethod),
    updateOneTopicStatus: updateOneTopicStatusFunction(builder, patchMethod),
    addDailyUpdateWithRecording: addDailyUpdateWithRecordingFunction(
      builder,
      postMethod
    ),
    updateDailyUpdateWithRecording: updateDailyUpdateWithRecordingFunction(
      builder,
      postMethod
    ),
    getAllDailySubject: getAllDailySubjectFunction(builder),
    subjectEditAcademic: subjectEditAcademicFunction(builder, patchMethod),
    subjectOneAssignment: subjectOneAssignmentFunction(builder),
    subjectUpdateAssignment: subjectUpdateAssignmentFunction(builder),
    subjectDeleteAssignment: subjectDeleteAssignmentFunction(builder),

    getAllCopoAttainment: getAllCopoAttainmentFunction(builder),
    addCopoAttainment: addCopoAttainmentFunction(builder),
    updateCopoAttainment: updateCopoAttainmentFunction(builder),
    removeCopoAttainment: removeCopoAttainmentFunction(builder),
    getCopoAttainmentTable: getCopoAttainmentTableFunction(builder),
    getCopoMappingAttainmentTable:
      getCopoMappingAttainmentTableFunction(builder),
    updateCopoMappingAttainment: updateCopoMappingAttainmentFunction(builder),
    addChapterSubject: addChapterSubjectFunction(builder),
    addChapterTopicSubject: addChapterTopicSubjectFunction(builder),
    subjectExtraLecture: subjectExtraLectureFunction(builder),
    getExtraLectureOneAttendace: getExtraLectureOneAttendaceFunction(builder),
  }),
});

export const {
  useSubjectprofileQuery,
  useGetAllStudentOneSubjectQuery,
  useSubjectAllExamQuery,
  useSubjectOneExamStudentsQuery,
  useSubjectOneExamMarksMutation,
  useSubjectUpdateMutation,
  useSubjectSettingQuery,
  useSubjectCompleteMutation,
  useSubjectAllAssignmentQuery,
  useSubjectCreateAssignmentMutation,
  useSubjectAssignmentSubmitCountQuery,
  useSubjectAssignmentSubmitAllStudentQuery,
  useSubjectAssignmentSubmitOneStudentDetailQuery,
  useSubjectAssignmentSubmitOneStudentActionMutation,
  useMcqProfileQuery,
  useMcqProfileUpdateMutation,
  useMcqUniversalDepartmentQuery,
  useMcqUniversalClassQuery,
  useMcqUniversalSubjectQuery,
  useMcqQuestionQuery,
  useMcqOneQuestionQuery,
  useMcqCreateQuestionMutation,
  useMcqQuestionCountQuery,
  useMcqTestsetQuery,
  useMcqCreateTestsetMutation,
  useMcqUpdateTestsetMutation,
  useMcqTestsetDetailQuery,
  useMcqTestsetTakenMutation,
  useMcqTestsetTakenListQuery,
  useMcqTestsetAllotedQuery,

  //attendance
  useSubjectAllStudentQuery,
  useSubjectStudentCurrentAttendanceQuery,
  useSubjectStudentAttendanceMutation,
  useSubjectStudentAttendanceUpdateMutation,

  useBacklogExamAllStudentQuery,
  useBacklogExamMarksMutation,

  //
  useGetOneSubjectProfileQuery,
  useGetAllChapterOneSubjectQuery,
  useGetAllTopicOneChapterQuery,
  useGetDetailOneTopicQuery,
  useOneSubjectExcelUploadMutation,
  useUpdateOneTopicChapterMutation,
  useDeleteOneTopicChapterMutation,
  useUpdateOneTopicStatusMutation,
  useAddDailyUpdateWithRecordingMutation,
  useUpdateDailyUpdateWithRecordingMutation,
  useGetAllDailySubjectQuery,
  //
  useSubjectEditAcademicMutation,
  useSubjectOneAssignmentQuery,
  useSubjectUpdateAssignmentMutation,
  useSubjectDeleteAssignmentMutation,
  useGetAllCopoAttainmentQuery,
  useAddCopoAttainmentMutation,
  useUpdateCopoAttainmentMutation,
  useRemoveCopoAttainmentMutation,
  useGetCopoAttainmentTableQuery,
  useGetCopoMappingAttainmentTableQuery,
  useUpdateCopoMappingAttainmentMutation,
  useAddChapterSubjectMutation,
  useAddChapterTopicSubjectMutation,
  useSubjectExtraLectureMutation,
  useGetExtraLectureOneAttendaceQuery,
} = subjectApi;
